var textClassification=function(e,t){"use strict";function n(e,t){return t.forEach((function(t){t&&"string"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(n){if("default"!==n&&!(n in e)){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}}))})),Object.freeze(e)}function r(){}function a(e){return e()}function i(){return Object.create(null)}function s(e){e.forEach(a)}function o(e){return"function"==typeof e}function u(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function l(e,t){e.appendChild(t)}function c(e,t,n){e.insertBefore(t,n||null)}function h(e){e.parentNode&&e.parentNode.removeChild(e)}function d(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function p(e){return document.createElement(e)}function f(e){return document.createTextNode(e)}function m(){return f(" ")}function g(){return f("")}function v(e,t,n,r){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n,r)}function y(e,t){t=""+t,e.data!==t&&(e.data=t)}let b;function x(e){b=e}const w=[],k=[];let I=[];const C=[],S=Promise.resolve();let N=!1;function T(e){I.push(e)}const E=new Set;let R=0;function A(){if(0!==R)return;const e=b;do{try{for(;R<w.length;){const e=w[R];R++,x(e),D(e.$$)}}catch(e){throw w.length=0,R=0,e}for(x(null),w.length=0,R=0;k.length;)k.pop()();for(let e=0;e<I.length;e+=1){const t=I[e];E.has(t)||(E.add(t),t())}I.length=0}while(w.length);for(;C.length;)C.pop()();N=!1,E.clear(),x(e)}function D(e){if(null!==e.fragment){e.update(),s(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(T)}}const F=new Set;let _;function $(e,t){e&&e.i&&(F.delete(e),e.i(t))}function O(e,t,n,r){if(e&&e.o){if(F.has(e))return;F.add(e),_.c.push((()=>{F.delete(e),r&&(n&&e.d(1),r())})),e.o(t)}else r&&r()}function M(e){return void 0!==e?.length?e:Array.from(e)}function L(e,t,n){const{fragment:r,after_update:i}=e.$$;r&&r.m(t,n),T((()=>{const t=e.$$.on_mount.map(a).filter(o);e.$$.on_destroy?e.$$.on_destroy.push(...t):s(t),e.$$.on_mount=[]})),i.forEach(T)}function P(e,t){const n=e.$$;null!==n.fragment&&(!function(e){const t=[],n=[];I.forEach((r=>-1===e.indexOf(r)?t.push(r):n.push(r))),n.forEach((e=>e())),I=t}(n.after_update),s(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function B(e,t){-1===e.$$.dirty[0]&&(w.push(e),N||(N=!0,S.then(A)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function z(e,t,n,a,o,u,l=null,c=[-1]){const d=b;x(e);const p=e.$$={fragment:null,ctx:[],props:u,update:r,not_equal:o,bound:i(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(d?d.$$.context:[])),callbacks:i(),dirty:c,skip_bound:!1,root:t.target||d.$$.root};l&&l(p.root);let f=!1;if(p.ctx=n?n(e,t.props||{},((t,n,...r)=>{const a=r.length?r[0]:n;return p.ctx&&o(p.ctx[t],p.ctx[t]=a)&&(!p.skip_bound&&p.bound[t]&&p.bound[t](a),f&&B(e,t)),n})):[],p.update(),f=!0,s(p.before_update),p.fragment=!!a&&a(p.ctx),t.target){if(t.hydrate){const e=function(e){return Array.from(e.childNodes)}(t.target);p.fragment&&p.fragment.l(e),e.forEach(h)}else p.fragment&&p.fragment.c();t.intro&&$(e.$$.fragment),L(e,t.target,t.anchor),A()}x(d)}class W{$$=void 0;$$set=void 0;$destroy(){P(this,1),this.$destroy=r}$on(e,t){if(!o(t))return r;const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){var t;this.$$set&&(t=e,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function V(e,t,n){const r=e.slice();return r[4]=t[n],r}function U(e){let t,n=M(e[2]),r=[];for(let t=0;t<n.length;t+=1)r[t]=H(V(e,n,t));return{c(){for(let e=0;e<r.length;e+=1)r[e].c();t=g()},m(e,n){for(let t=0;t<r.length;t+=1)r[t]&&r[t].m(e,n);c(e,t,n)},p(e,a){if(4&a){let i;for(n=M(e[2]),i=0;i<n.length;i+=1){const s=V(e,n,i);r[i]?r[i].p(s,a):(r[i]=H(s),r[i].c(),r[i].m(t.parentNode,t))}for(;i<r.length;i+=1)r[i].d(1);r.length=n.length}},d(e){e&&h(t),d(r,e)}}}function G(e){let t,n,r,a,i,s,u,d,g,b,x,w,k,I=e[2].length+"",C=1===e[2].length?"s":"";return{c(){t=p("span"),n=f(e[1]),r=m(),a=p("span"),i=f("("),s=f(I),u=f(" example"),d=f(C),g=f(")"),b=m(),x=p("button"),x.textContent="Edit Label"},m(h,p){c(h,t,p),l(t,n),c(h,r,p),c(h,a,p),l(a,i),l(a,s),l(a,u),l(a,d),l(a,g),c(h,b,p),c(h,x,p),w||(k=v(x,"click",(function(){o(e[3])&&e[3].apply(this,arguments)})),w=!0)},p(t,r){e=t,2&r&&y(n,e[1]),4&r&&I!==(I=e[2].length+"")&&y(s,I),4&r&&C!==(C=1===e[2].length?"s":"")&&y(d,C)},d(e){e&&(h(t),h(r),h(a),h(b),h(x)),w=!1,k()}}}function H(e){let t,n,r=e[4]+"";return{c(){t=p("div"),n=f(r)},m(e,r){c(e,t,r),l(t,n)},p(e,t){4&t&&r!==(r=e[4]+"")&&y(n,r)},d(e){e&&h(t)}}}function j(e){let t;function n(e,t){return e[0]?G:U}let a=n(e),i=a(e);return{c(){i.c(),t=g()},m(e,n){i.m(e,n),c(e,t,n)},p(e,[r]){a===(a=n(e))&&i?i.p(e,r):(i.d(1),i=a(e),i&&(i.c(),i.m(t.parentNode,t)))},i:r,o:r,d(e){e&&h(t),i.d(e)}}}function q(e,t,n){let{isActive:r}=t,{label:a}=t,{examples:i}=t,{setActive:s}=t;return e.$$set=e=>{"isActive"in e&&n(0,r=e.isActive),"label"in e&&n(1,a=e.label),"examples"in e&&n(2,i=e.examples),"setActive"in e&&n(3,s=e.setActive)},[r,a,i,s]}"undefined"!=typeof window&&(window.__svelte||(window.__svelte={v:new Set})).v.add("4");class K extends W{constructor(e){super(),z(this,e,q,j,u,{isActive:0,label:1,examples:2,setActive:3})}}function X(e,t,n){const r=e.slice();return r[6]=t[n],r[8]=n,r}function Y(e){let t,n;function r(){return e[4](e[8])}return t=new K({props:{label:e[6],setActive:r,isActive:e[1]===e[8],examples:e[0].modelData.get(e[6])}}),{c(){!function(e){e&&e.c()}(t.$$.fragment)},m(e,r){L(t,e,r),n=!0},p(n,a){e=n;const i={};1&a&&(i.label=e[6]),2&a&&(i.setActive=r),2&a&&(i.isActive=e[1]===e[8]),1&a&&(i.examples=e[0].modelData.get(e[6])),t.$set(i)},i(e){n||($(t.$$.fragment,e),n=!0)},o(e){O(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function Q(e){let t,n,r,a,i,o,u,l=M(e[0].labels),f=[];for(let t=0;t<l.length;t+=1)f[t]=Y(X(e,l,t));const g=e=>O(f[e],1,1,(()=>{f[e]=null}));return{c(){for(let e=0;e<f.length;e+=1)f[e].c();t=m(),n=p("button"),n.textContent="Add Label",r=m(),a=p("button"),a.textContent="Clear all"},m(s,l){for(let e=0;e<f.length;e+=1)f[e]&&f[e].m(s,l);c(s,t,l),c(s,n,l),c(s,r,l),c(s,a,l),i=!0,o||(u=v(n,"click",e[5]),o=!0)},p(e,[n]){if(3&n){let r;for(l=M(e[0].labels),r=0;r<l.length;r+=1){const a=X(e,l,r);f[r]?(f[r].p(a,n),$(f[r],1)):(f[r]=Y(a),f[r].c(),$(f[r],1),f[r].m(t.parentNode,t))}for(_={r:0,c:[],p:_},r=l.length;r<f.length;r+=1)g(r);_.r||s(_.c),_=_.p}},i(e){if(!i){for(let e=0;e<l.length;e+=1)$(f[e]);i=!0}},o(e){f=f.filter(Boolean);for(let e=0;e<f.length;e+=1)O(f[e]);i=!1},d(e){e&&(h(t),h(n),h(r),h(a)),d(f,e),o=!1,u()}}}function J(e,n,r){let{extension:a}=n,{close:i}=n;const s=(e,...n)=>t.reactiveInvoke(r(0,a),e,n);let o=0;return e.$$set=e=>{"extension"in e&&r(0,a=e.extension),"close"in e&&r(3,i=e.close)},[a,o,s,i,e=>r(1,o=e),()=>s("addLabel",`Class ${a.labels.length+1}`)]}function Z(e,t,n,r,a,i){function s(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var o,u=r.kind,l="getter"===u?"get":"setter"===u?"set":"value",c=!t&&e?r.static?e:e.prototype:null,h=t||(c?Object.getOwnPropertyDescriptor(c,r.name):{}),d=!1,p=n.length-1;p>=0;p--){var f={};for(var m in r)f[m]="access"===m?{}:r[m];for(var m in r.access)f.access[m]=r.access[m];f.addInitializer=function(e){if(d)throw new TypeError("Cannot add initializers after decoration has completed");i.push(s(e||null))};var g=(0,n[p])("accessor"===u?{get:h.get,set:h.set}:h[l],f);if("accessor"===u){if(void 0===g)continue;if(null===g||"object"!=typeof g)throw new TypeError("Object expected");(o=s(g.get))&&(h.get=o),(o=s(g.set))&&(h.set=o),(o=s(g.init))&&a.unshift(o)}else(o=s(g))&&("field"===u?a.unshift(o):h[l]=o)}c&&Object.defineProperty(c,r.name,h),d=!0}function ee(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}u((r=r.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const te={id:"textClassification",name:"Text Classification",blocks:[{opcode:"ifTextMatchesClass",text:"[TEXT] matches [CLASS_NAME] ?",blockType:"Boolean",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"},CLASS_NAME:{type:"string",menu:"model_classes",defaultValue:""}}},{opcode:"getModelPrediction",text:"predict class for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"}}},{opcode:"getModelConfidence",text:"Confidence of predict class for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"}}},{opcode:"confidenceTrue",text:"probability that [TEXT] is [LABEL]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"TEXT"},LABEL:{type:"string",defaultValue:"toxicity",menu:"toxicitylabels"}}},{opcode:"sentimentScore",text:"Sentiment Score for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"TEXT"}}},{opcode:"speakText",text:"speak [TEXT]",blockType:"command",arguments:{TEXT:{type:"string",defaultValue:"Hello"}}},{opcode:"askSpeechRecognition",text:"speak [PROMPT] then listen for response",blockType:"command",arguments:{PROMPT:{type:"string",defaultValue:"How are you?"}}},{opcode:"getRecognizedSpeech",text:"response",blockType:"reporter"},{opcode:"setVoice",text:"set voice to [VOICE]",blockType:"command",arguments:{VOICE:{type:"string",menu:"voices",defaultValue:"SQUEAK"}}},{opcode:"onHeardSound",text:"when heard sound > [THRESHOLD]",blockType:"hat",arguments:{THRESHOLD:{type:"number",defaultValue:10}}}],menus:{voices:{acceptReporters:!0,items:[{text:"squeak",value:"SQUEAK"},{text:"tenor",value:"TENOR"},{text:"alto",value:"ALTO"},{text:"giant",value:"GIANT"}]},model_classes:{acceptReporters:!1,items:"getLabels"},toxicitylabels:{items:[{value:"toxicity",text:"toxic"},{value:"severe_toxicity",text:"severely toxic"},{value:"identity_attack",text:"an identity-based attack"},{value:"insult",text:"insulting"},{value:"threat",text:"threatening"},{value:"obscene",text:"profanity"}],acceptReporters:!0}}},ne=t.legacy(te);t.legacy(te,{incrementalDevelopment:!0});const re="Scratch.text2speech",ae=e=>{let t=e.getCustomState(re);return t||(t={currentVoice:"SQUEAK"},e.setCustomState(re,t),t)},ie=(e,t)=>{t&&Boolean(t.getCustomState(re))&&((e,t)=>{e.setCustomState(re,t)})(e,{currentVoice:ae(t).currentVoice})},se=new URL("https://synthesis-service.scratch.mit.edu/synth");var oe="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function ue(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){if(this instanceof e){var n=[null];return n.push.apply(n,arguments),new(Function.bind.apply(t,n))}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var le={},ce={get exports(){return le},set exports(e){le=e}},he={};!function(e,t){var n="{",r="}",a=",",i="#",s="<",o=">",u="</",l="/>",c="'",h="offset:",d=["number","date","time","ordinal","duration","spellout"],p=["plural","select","selectordinal"];function f(e,t){var n=e.pattern,a=n.length,i=[],s=e.index,o=m(e,t);for(o&&i.push(o),o&&e.tokens&&e.tokens.push(["text",n.slice(s,e.index)]);e.index<a;){if(n[e.index]===r){if(!t)throw C(e);break}if(t&&e.tagsType&&n.slice(e.index,e.index+u.length)===u)break;i.push(y(e)),s=e.index,(o=m(e,t))&&i.push(o),o&&e.tokens&&e.tokens.push(["text",n.slice(s,e.index)])}return i}function m(e,t){for(var a=e.pattern,o=a.length,u="plural"===t||"selectordinal"===t,l=!!e.tagsType,h="{style}"===t,d="";e.index<o;){var p=a[e.index];if(p===n||p===r||u&&p===i||l&&p===s||h&&g(p.charCodeAt(0)))break;if(p===c)if((p=a[++e.index])===c)d+=p,++e.index;else if(p===n||p===r||u&&p===i||l&&p===s||h)for(d+=p;++e.index<o;)if((p=a[e.index])===c&&a[e.index+1]===c)d+=c,++e.index;else{if(p===c){++e.index;break}d+=p}else d+=c;else d+=p,++e.index}return d}function g(e){return e>=9&&e<=13||32===e||133===e||160===e||6158===e||e>=8192&&e<=8205||8232===e||8233===e||8239===e||8287===e||8288===e||12288===e||65279===e}function v(e){for(var t=e.pattern,n=t.length,r=e.index;e.index<n&&g(t.charCodeAt(e.index));)++e.index;r<e.index&&e.tokens&&e.tokens.push(["space",e.pattern.slice(r,e.index)])}function y(e){var t=e.pattern;if(t[e.index]===i)return e.tokens&&e.tokens.push(["syntax",i]),++e.index,[i];var c=function(e){var t=e.tagsType;if(!t||e.pattern[e.index]!==s)return;if(e.pattern.slice(e.index,e.index+u.length)===u)throw C(e,null,"closing tag without matching opening tag");e.tokens&&e.tokens.push(["syntax",s]);++e.index;var n=b(e,!0);if(!n)throw C(e,"placeholder id");e.tokens&&e.tokens.push(["id",n]);if(v(e),e.pattern.slice(e.index,e.index+l.length)===l)return e.tokens&&e.tokens.push(["syntax",l]),e.index+=l.length,[n,t];if(e.pattern[e.index]!==o)throw C(e,o);e.tokens&&e.tokens.push(["syntax",o]);++e.index;var r=f(e,t),a=e.index;if(e.pattern.slice(e.index,e.index+u.length)!==u)throw C(e,u+n+o);e.tokens&&e.tokens.push(["syntax",u]);e.index+=u.length;var i=b(e,!0);i&&e.tokens&&e.tokens.push(["id",i]);if(n!==i)throw e.index=a,C(e,u+n+o,u+i+o);if(v(e),e.pattern[e.index]!==o)throw C(e,o);e.tokens&&e.tokens.push(["syntax",o]);return++e.index,[n,t,{children:r}]}(e);if(c)return c;if(t[e.index]!==n)throw C(e,n);e.tokens&&e.tokens.push(["syntax",n]),++e.index,v(e);var p=b(e);if(!p)throw C(e,"placeholder id");e.tokens&&e.tokens.push(["id",p]),v(e);var m=t[e.index];if(m===r)return e.tokens&&e.tokens.push(["syntax",r]),++e.index,[p];if(m!==a)throw C(e,a+" or "+r);e.tokens&&e.tokens.push(["syntax",a]),++e.index,v(e);var g,y=b(e);if(!y)throw C(e,"placeholder type");if(e.tokens&&e.tokens.push(["type",y]),v(e),(m=t[e.index])===r){if(e.tokens&&e.tokens.push(["syntax",r]),"plural"===y||"selectordinal"===y||"select"===y)throw C(e,y+" sub-messages");return++e.index,[p,y]}if(m!==a)throw C(e,a+" or "+r);if(e.tokens&&e.tokens.push(["syntax",a]),++e.index,v(e),"plural"===y||"selectordinal"===y){var I=function(e){var t=e.pattern,n=t.length,r=0;if(t.slice(e.index,e.index+h.length)===h){e.tokens&&e.tokens.push(["offset","offset"],["syntax",":"]),e.index+=h.length,v(e);for(var a=e.index;e.index<n&&w(t.charCodeAt(e.index));)++e.index;if(a===e.index)throw C(e,"offset number");e.tokens&&e.tokens.push(["number",t.slice(a,e.index)]),r=+t.slice(a,e.index)}return r}(e);v(e),g=[p,y,I,k(e,y)]}else if("select"===y)g=[p,y,k(e,y)];else if(d.indexOf(y)>=0)g=[p,y,x(e)];else{var S=e.index,N=x(e);v(e),t[e.index]===n&&(e.index=S,N=k(e,y)),g=[p,y,N]}if(v(e),t[e.index]!==r)throw C(e,r);return e.tokens&&e.tokens.push(["syntax",r]),++e.index,g}function b(e,t){for(var u=e.pattern,l=u.length,h="";e.index<l;){var d=u[e.index];if(d===n||d===r||d===a||d===i||d===c||g(d.charCodeAt(0))||t&&(d===s||d===o||"/"===d))break;h+=d,++e.index}return h}function x(e){var t=e.index,n=m(e,"{style}");if(!n)throw C(e,"placeholder style name");return e.tokens&&e.tokens.push(["style",e.pattern.slice(t,e.index)]),n}function w(e){return e>=48&&e<=57}function k(e,t){for(var n=e.pattern,a=n.length,i={};e.index<a&&n[e.index]!==r;){var s=b(e);if(!s)throw C(e,"sub-message selector");e.tokens&&e.tokens.push(["selector",s]),v(e),i[s]=I(e,t),v(e)}if(!i.other&&p.indexOf(t)>=0)throw C(e,null,null,'"other" sub-message must be specified in '+t);return i}function I(e,t){if(e.pattern[e.index]!==n)throw C(e,n+" to start sub-message");e.tokens&&e.tokens.push(["syntax",n]),++e.index;var a=f(e,t);if(e.pattern[e.index]!==r)throw C(e,r+" to end sub-message");return e.tokens&&e.tokens.push(["syntax",r]),++e.index,a}function C(e,t,n,r){var a=e.pattern,i=a.slice(0,e.index).split(/\r?\n/),s=e.index,o=i.length,u=i.slice(-1)[0].length;return n=n||(e.index>=a.length?"end of message pattern":b(e)||a[e.index]),r||(r=function(e,t){return e?"Expected "+e+" but found "+t:"Unexpected "+t+" found"}(t,n)),new S(r+=" in "+a.replace(/\r?\n/g,"\n"),t,n,s,o,u)}function S(e,t,n,r,a,i){Error.call(this,e),this.name="SyntaxError",this.message=e,this.expected=t,this.found=n,this.offset=r,this.line=a,this.column=i}t=e.exports=function(e,t){return f({pattern:String(e),index:0,tagsType:t&&t.tagsType||null,tokens:t&&t.tokens||null},"")},S.prototype=Object.create(Error.prototype),t.SyntaxError=S}({get exports(){return he},set exports(e){he=e}},he);var de={},pe="long",fe="short",me="narrow",ge="numeric",ve="2-digit",ye={number:{decimal:{style:"decimal"},integer:{style:"decimal",maximumFractionDigits:0},currency:{style:"currency",currency:"USD"},percent:{style:"percent"},default:{style:"decimal"}},date:{short:{month:ge,day:ge,year:ve},medium:{month:fe,day:ge,year:ge},long:{month:pe,day:ge,year:ge},full:{month:pe,day:ge,year:ge,weekday:pe},default:{month:fe,day:ge,year:ge}},time:{short:{hour:ge,minute:ge},medium:{hour:ge,minute:ge,second:ge},long:{hour:ge,minute:ge,second:ge,timeZoneName:fe},full:{hour:ge,minute:ge,second:ge,timeZoneName:fe},default:{hour:ge,minute:ge,second:ge}},duration:{default:{hours:{minimumIntegerDigits:1,maximumFractionDigits:0},minutes:{minimumIntegerDigits:2,maximumFractionDigits:0},seconds:{minimumIntegerDigits:2,maximumFractionDigits:3}}},parseNumberPattern:function(e){if(e){var t={},n=e.match(/\b[A-Z]{3}\b/i),r=e.replace(/[^¤]/g,"").length;if(!r&&n&&(r=1),r?(t.style="currency",t.currencyDisplay=1===r?"symbol":2===r?"code":"name",t.currency=n?n[0].toUpperCase():"USD"):e.indexOf("%")>=0&&(t.style="percent"),!/[@#0]/.test(e))return t.style?t:void 0;if(t.useGrouping=e.indexOf(",")>=0,/E\+?[@#0]+/i.test(e)||e.indexOf("@")>=0){var a=e.replace(/E\+?[@#0]+|[^@#0]/gi,"");t.minimumSignificantDigits=Math.min(Math.max(a.replace(/[^@0]/g,"").length,1),21),t.maximumSignificantDigits=Math.min(Math.max(a.length,1),21)}else{for(var i=e.replace(/[^#0.]/g,"").split("."),s=i[0],o=s.length-1;"0"===s[o];)--o;t.minimumIntegerDigits=Math.min(Math.max(s.length-1-o,1),21);var u=i[1]||"";for(o=0;"0"===u[o];)++o;for(t.minimumFractionDigits=Math.min(Math.max(o,0),20);"#"===u[o];)++o;t.maximumFractionDigits=Math.min(Math.max(o,0),20)}return t}},parseDatePattern:function(e){if(e){for(var t={},n=0;n<e.length;){for(var r=e[n],a=1;e[++n]===r;)++a;switch(r){case"G":t.era=5===a?me:4===a?pe:fe;break;case"y":case"Y":t.year=2===a?ve:ge;break;case"M":case"L":a=Math.min(Math.max(a-1,0),4),t.month=[ge,ve,fe,pe,me][a];break;case"E":case"e":case"c":t.weekday=5===a?me:4===a?pe:fe;break;case"d":case"D":t.day=2===a?ve:ge;break;case"h":case"K":t.hour12=!0,t.hour=2===a?ve:ge;break;case"H":case"k":t.hour12=!1,t.hour=2===a?ve:ge;break;case"m":t.minute=2===a?ve:ge;break;case"s":case"S":t.second=2===a?ve:ge;break;case"z":case"Z":case"v":case"V":t.timeZoneName=1===a?fe:pe}}return Object.keys(t).length?t:void 0}}},be=function(e,t){if("string"==typeof e&&t[e])return e;for(var n=[].concat(e||[]),r=0,a=n.length;r<a;++r)for(var i=n[r].split("-");i.length;){var s=i.join("-");if(t[s])return s;i.pop()}},xe="zero",we="one",ke="two",Ie="few",Ce="many",Se="other",Ne=[function(e){return 1===+e?we:Se},function(e){var t=+e;return 0<=t&&t<=1?we:Se},function(e){return 0===Math.floor(Math.abs(+e))||1===+e?we:Se},function(e){var t=+e;return 0===t?xe:1===t?we:2===t?ke:3<=t%100&&t%100<=10?Ie:11<=t%100&&t%100<=99?Ce:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?we:Se},function(e){var t=+e;return t%10==1&&t%100!=11?we:2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?Ie:t%10==0||5<=t%10&&t%10<=9||11<=t%100&&t%100<=14?Ce:Se},function(e){var t=+e;return t%10==1&&t%100!=11&&t%100!=71&&t%100!=91?we:t%10==2&&t%100!=12&&t%100!=72&&t%100!=92?ke:(3<=t%10&&t%10<=4||t%10==9)&&(t%100<10||19<t%100)&&(t%100<70||79<t%100)&&(t%100<90||99<t%100)?Ie:0!==t&&t%1e6==0?Ce:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%10==1&&t%100!=11||r%10==1&&r%100!=11?we:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)||2<=r%10&&r%10<=4&&(r%100<12||14<r%100)?Ie:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?we:2<=t&&t<=4&&0===n?Ie:0!==n?Ce:Se},function(e){var t=+e;return 0===t?xe:1===t?we:2===t?ke:3===t?Ie:6===t?Ce:Se},function(e){var t=Math.floor(Math.abs(+e)),n=+(""+e).replace(/^[^.]*.?|0+$/g,"");return 1===+e||0!==n&&(0===t||1===t)?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%100==1||r%100==1?we:0===n&&t%100==2||r%100==2?ke:0===n&&3<=t%100&&t%100<=4||3<=r%100&&r%100<=4?Ie:Se},function(e){var t=Math.floor(Math.abs(+e));return 0===t||1===t?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&(1===t||2===t||3===t)||0===n&&t%10!=4&&t%10!=6&&t%10!=9||0!==n&&r%10!=4&&r%10!=6&&r%10!=9?we:Se},function(e){var t=+e;return 1===t?we:2===t?ke:3<=t&&t<=6?Ie:7<=t&&t<=10?Ce:Se},function(e){var t=+e;return 1===t||11===t?we:2===t||12===t?ke:3<=t&&t<=10||13<=t&&t<=19?Ie:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%10==1?we:0===n&&t%10==2?ke:0!==n||t%100!=0&&t%100!=20&&t%100!=40&&t%100!=60&&t%100!=80?0!==n?Ce:Se:Ie},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+e;return 1===t&&0===n?we:2===t&&0===n?ke:0===n&&(r<0||10<r)&&r%10==0?Ce:Se},function(e){var t=Math.floor(Math.abs(+e)),n=+(""+e).replace(/^[^.]*.?|0+$/g,"");return 0===n&&t%10==1&&t%100!=11||0!==n?we:Se},function(e){var t=+e;return 1===t?we:2===t?ke:Se},function(e){var t=+e;return 0===t?xe:1===t?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=+e;return 0===n?xe:0!==t&&1!==t||0===n?Se:we},function(e){var t=+(e+".").split(".")[1],n=+e;return n%10==1&&(n%100<11||19<n%100)?we:2<=n%10&&n%10<=9&&(n%100<11||19<n%100)?Ie:0!==t?Ce:Se},function(e){var t=(e+".").split(".")[1].length,n=+(e+".").split(".")[1],r=+e;return r%10==0||11<=r%100&&r%100<=19||2===t&&11<=n%100&&n%100<=19?xe:r%10==1&&r%100!=11||2===t&&n%10==1&&n%100!=11||2!==t&&n%10==1?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%10==1&&t%100!=11||r%10==1&&r%100!=11?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+e;return 1===t&&0===n?we:0!==n||0===r||1!==r&&1<=r%100&&r%100<=19?Ie:Se},function(e){var t=+e;return 1===t?we:0===t||2<=t%100&&t%100<=10?Ie:11<=t%100&&t%100<=19?Ce:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?we:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?Ie:0===n&&1!==t&&0<=t%10&&t%10<=1||0===n&&5<=t%10&&t%10<=9||0===n&&12<=t%100&&t%100<=14?Ce:Se},function(e){var t=Math.floor(Math.abs(+e));return 0<=t&&t<=1?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%10==1&&t%100!=11?we:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?Ie:0===n&&t%10==0||0===n&&5<=t%10&&t%10<=9||0===n&&11<=t%100&&t%100<=14?Ce:Se},function(e){var t=+e;return 0===Math.floor(Math.abs(+e))||1===t?we:2<=t&&t<=10?Ie:Se},function(e){var t=Math.floor(Math.abs(+e)),n=+(e+".").split(".")[1],r=+e;return 0===r||1===r||0===t&&1===n?we:Se},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%100==1?we:0===n&&t%100==2?ke:0===n&&3<=t%100&&t%100<=4||0!==n?Ie:Se},function(e){var t=+e;return 0<=t&&t<=1||11<=t&&t<=99?we:Se},function(e){var t=+e;return 1===t||5===t||7===t||8===t||9===t||10===t?we:2===t||3===t?ke:4===t?Ie:6===t?Ce:Se},function(e){var t=Math.floor(Math.abs(+e));return t%10==1||t%10==2||t%10==5||t%10==7||t%10==8||t%100==20||t%100==50||t%100==70||t%100==80?we:t%10==3||t%10==4||t%1e3==100||t%1e3==200||t%1e3==300||t%1e3==400||t%1e3==500||t%1e3==600||t%1e3==700||t%1e3==800||t%1e3==900?Ie:0===t||t%10==6||t%100==40||t%100==60||t%100==90?Ce:Se},function(e){var t=+e;return t%10!=2&&t%10!=3||t%100==12||t%100==13?Se:Ie},function(e){var t=+e;return 1===t||3===t?we:2===t?ke:4===t?Ie:Se},function(e){var t=+e;return 0===t||7===t||8===t||9===t?xe:1===t?we:2===t?ke:3===t||4===t?Ie:5===t||6===t?Ce:Se},function(e){var t=+e;return t%10==1&&t%100!=11?we:t%10==2&&t%100!=12?ke:t%10==3&&t%100!=13?Ie:Se},function(e){var t=+e;return 1===t||11===t?we:2===t||12===t?ke:3===t||13===t?Ie:Se},function(e){var t=+e;return 1===t?we:2===t||3===t?ke:4===t?Ie:6===t?Ce:Se},function(e){var t=+e;return 1===t||5===t?we:Se},function(e){var t=+e;return 11===t||8===t||80===t||800===t?Ce:Se},function(e){var t=Math.floor(Math.abs(+e));return 1===t?we:0===t||2<=t%100&&t%100<=20||t%100==40||t%100==60||t%100==80?Ce:Se},function(e){var t=+e;return t%10==6||t%10==9||t%10==0&&0!==t?Ce:Se},function(e){var t=Math.floor(Math.abs(+e));return t%10==1&&t%100!=11?we:t%10==2&&t%100!=12?ke:t%10!=7&&t%10!=8||t%100==17||t%100==18?Se:Ce},function(e){var t=+e;return 1===t?we:2===t||3===t?ke:4===t?Ie:Se},function(e){var t=+e;return 1<=t&&t<=4?we:Se},function(e){var t=+e;return 1===t||5===t||7<=t&&t<=9?we:2===t||3===t?ke:4===t?Ie:6===t?Ce:Se},function(e){var t=+e;return 1===t?we:t%10==4&&t%100!=14?Ce:Se},function(e){var t=+e;return t%10!=1&&t%10!=2||t%100==11||t%100==12?Se:we},function(e){var t=+e;return t%10==6||t%10==9||10===t?Ie:Se},function(e){var t=+e;return t%10==3&&t%100!=13?Ie:Se}],Te={af:{cardinal:Ne[0]},ak:{cardinal:Ne[1]},am:{cardinal:Ne[2]},ar:{cardinal:Ne[3]},ars:{cardinal:Ne[3]},as:{cardinal:Ne[2],ordinal:Ne[34]},asa:{cardinal:Ne[0]},ast:{cardinal:Ne[4]},az:{cardinal:Ne[0],ordinal:Ne[35]},be:{cardinal:Ne[5],ordinal:Ne[36]},bem:{cardinal:Ne[0]},bez:{cardinal:Ne[0]},bg:{cardinal:Ne[0]},bh:{cardinal:Ne[1]},bn:{cardinal:Ne[2],ordinal:Ne[34]},br:{cardinal:Ne[6]},brx:{cardinal:Ne[0]},bs:{cardinal:Ne[7]},ca:{cardinal:Ne[4],ordinal:Ne[37]},ce:{cardinal:Ne[0]},cgg:{cardinal:Ne[0]},chr:{cardinal:Ne[0]},ckb:{cardinal:Ne[0]},cs:{cardinal:Ne[8]},cy:{cardinal:Ne[9],ordinal:Ne[38]},da:{cardinal:Ne[10]},de:{cardinal:Ne[4]},dsb:{cardinal:Ne[11]},dv:{cardinal:Ne[0]},ee:{cardinal:Ne[0]},el:{cardinal:Ne[0]},en:{cardinal:Ne[4],ordinal:Ne[39]},eo:{cardinal:Ne[0]},es:{cardinal:Ne[0]},et:{cardinal:Ne[4]},eu:{cardinal:Ne[0]},fa:{cardinal:Ne[2]},ff:{cardinal:Ne[12]},fi:{cardinal:Ne[4]},fil:{cardinal:Ne[13],ordinal:Ne[0]},fo:{cardinal:Ne[0]},fr:{cardinal:Ne[12],ordinal:Ne[0]},fur:{cardinal:Ne[0]},fy:{cardinal:Ne[4]},ga:{cardinal:Ne[14],ordinal:Ne[0]},gd:{cardinal:Ne[15],ordinal:Ne[40]},gl:{cardinal:Ne[4]},gsw:{cardinal:Ne[0]},gu:{cardinal:Ne[2],ordinal:Ne[41]},guw:{cardinal:Ne[1]},gv:{cardinal:Ne[16]},ha:{cardinal:Ne[0]},haw:{cardinal:Ne[0]},he:{cardinal:Ne[17]},hi:{cardinal:Ne[2],ordinal:Ne[41]},hr:{cardinal:Ne[7]},hsb:{cardinal:Ne[11]},hu:{cardinal:Ne[0],ordinal:Ne[42]},hy:{cardinal:Ne[12],ordinal:Ne[0]},ia:{cardinal:Ne[4]},io:{cardinal:Ne[4]},is:{cardinal:Ne[18]},it:{cardinal:Ne[4],ordinal:Ne[43]},iu:{cardinal:Ne[19]},iw:{cardinal:Ne[17]},jgo:{cardinal:Ne[0]},ji:{cardinal:Ne[4]},jmc:{cardinal:Ne[0]},ka:{cardinal:Ne[0],ordinal:Ne[44]},kab:{cardinal:Ne[12]},kaj:{cardinal:Ne[0]},kcg:{cardinal:Ne[0]},kk:{cardinal:Ne[0],ordinal:Ne[45]},kkj:{cardinal:Ne[0]},kl:{cardinal:Ne[0]},kn:{cardinal:Ne[2]},ks:{cardinal:Ne[0]},ksb:{cardinal:Ne[0]},ksh:{cardinal:Ne[20]},ku:{cardinal:Ne[0]},kw:{cardinal:Ne[19]},ky:{cardinal:Ne[0]},lag:{cardinal:Ne[21]},lb:{cardinal:Ne[0]},lg:{cardinal:Ne[0]},ln:{cardinal:Ne[1]},lt:{cardinal:Ne[22]},lv:{cardinal:Ne[23]},mas:{cardinal:Ne[0]},mg:{cardinal:Ne[1]},mgo:{cardinal:Ne[0]},mk:{cardinal:Ne[24],ordinal:Ne[46]},ml:{cardinal:Ne[0]},mn:{cardinal:Ne[0]},mo:{cardinal:Ne[25],ordinal:Ne[0]},mr:{cardinal:Ne[2],ordinal:Ne[47]},mt:{cardinal:Ne[26]},nah:{cardinal:Ne[0]},naq:{cardinal:Ne[19]},nb:{cardinal:Ne[0]},nd:{cardinal:Ne[0]},ne:{cardinal:Ne[0],ordinal:Ne[48]},nl:{cardinal:Ne[4]},nn:{cardinal:Ne[0]},nnh:{cardinal:Ne[0]},no:{cardinal:Ne[0]},nr:{cardinal:Ne[0]},nso:{cardinal:Ne[1]},ny:{cardinal:Ne[0]},nyn:{cardinal:Ne[0]},om:{cardinal:Ne[0]},or:{cardinal:Ne[0],ordinal:Ne[49]},os:{cardinal:Ne[0]},pa:{cardinal:Ne[1]},pap:{cardinal:Ne[0]},pl:{cardinal:Ne[27]},prg:{cardinal:Ne[23]},ps:{cardinal:Ne[0]},pt:{cardinal:Ne[28]},"pt-PT":{cardinal:Ne[4]},rm:{cardinal:Ne[0]},ro:{cardinal:Ne[25],ordinal:Ne[0]},rof:{cardinal:Ne[0]},ru:{cardinal:Ne[29]},rwk:{cardinal:Ne[0]},saq:{cardinal:Ne[0]},sc:{cardinal:Ne[4],ordinal:Ne[43]},scn:{cardinal:Ne[4],ordinal:Ne[43]},sd:{cardinal:Ne[0]},sdh:{cardinal:Ne[0]},se:{cardinal:Ne[19]},seh:{cardinal:Ne[0]},sh:{cardinal:Ne[7]},shi:{cardinal:Ne[30]},si:{cardinal:Ne[31]},sk:{cardinal:Ne[8]},sl:{cardinal:Ne[32]},sma:{cardinal:Ne[19]},smi:{cardinal:Ne[19]},smj:{cardinal:Ne[19]},smn:{cardinal:Ne[19]},sms:{cardinal:Ne[19]},sn:{cardinal:Ne[0]},so:{cardinal:Ne[0]},sq:{cardinal:Ne[0],ordinal:Ne[50]},sr:{cardinal:Ne[7]},ss:{cardinal:Ne[0]},ssy:{cardinal:Ne[0]},st:{cardinal:Ne[0]},sv:{cardinal:Ne[4],ordinal:Ne[51]},sw:{cardinal:Ne[4]},syr:{cardinal:Ne[0]},ta:{cardinal:Ne[0]},te:{cardinal:Ne[0]},teo:{cardinal:Ne[0]},ti:{cardinal:Ne[1]},tig:{cardinal:Ne[0]},tk:{cardinal:Ne[0],ordinal:Ne[52]},tl:{cardinal:Ne[13],ordinal:Ne[0]},tn:{cardinal:Ne[0]},tr:{cardinal:Ne[0]},ts:{cardinal:Ne[0]},tzm:{cardinal:Ne[33]},ug:{cardinal:Ne[0]},uk:{cardinal:Ne[29],ordinal:Ne[53]},ur:{cardinal:Ne[4]},uz:{cardinal:Ne[0]},ve:{cardinal:Ne[0]},vo:{cardinal:Ne[0]},vun:{cardinal:Ne[0]},wa:{cardinal:Ne[1]},wae:{cardinal:Ne[0]},xh:{cardinal:Ne[0]},xog:{cardinal:Ne[0]},yi:{cardinal:Ne[4]},zu:{cardinal:Ne[2]},lo:{ordinal:Ne[0]},ms:{ordinal:Ne[0]},vi:{ordinal:Ne[0]}};!function(e,t){var n=ye,r=be,a=Te;function i(e,t,n,r,a){var o=e.map((function(e){return function(e,t,n,r,a){if("string"==typeof e){var o=e;return function(){return o}}var u,l=e[0],c=e[1];if(t&&"#"===e[0]){l=t[0];var d=t[2],p=(r.number||h.number)([l,"number"],n);return function(e){return p(s(l,e)-d,e)}}"plural"===c||"selectordinal"===c?(u={},Object.keys(e[3]).forEach((function(t){u[t]=i(e[3][t],e,n,r,a)})),e=[e[0],e[1],e[2],u]):e[2]&&"object"==typeof e[2]&&(u={},Object.keys(e[2]).forEach((function(t){u[t]=i(e[2][t],e,n,r,a)})),e=[e[0],e[1],u]);var f=c&&(r[c]||h[c]);if(f){var m=f(e,n);return function(e){return m(s(l,e),e)}}return a?function(e){return String(s(l,e))}:function(e){return s(l,e)}}(e,t,n,r,a)}));return a?1===o.length?o[0]:function(e){for(var t="",n=0;n<o.length;++n)t+=o[n](e);return t}:function(e){return o.reduce((function(t,n){return t.concat(n(e))}),[])}}function s(e,t){if(t&&e in t)return t[e];for(var n=e.split("."),r=t,a=0,i=n.length;r&&a<i;++a)r=r[n[a]];return r}function o(e,t){var r=e[2],a=n.number[r]||n.parseNumberPattern(r)||n.number.default;return new Intl.NumberFormat(t,a).format}function u(e,t){var r=e[1],a=e[2],i=n[r][a]||n.parseDatePattern(a)||n[r].default;return new Intl.DateTimeFormat(t,i).format}function l(e,t){var n,i="selectordinal"===e[1]?"ordinal":"cardinal",s=e[2],o=e[3];if(Intl.PluralRules&&Intl.PluralRules.supportedLocalesOf(t).length>0)n=new Intl.PluralRules(t,{type:i});else{var u=r(t,a),l=u&&a[u][i]||c;n={select:l}}return function(e,t){return(o["="+ +e]||o[n.select(e-s)]||o.other)(t)}}function c(){return"other"}(t=e.exports=function(e,t,n){return i(e,null,t||"en",n||{},!0)}).toParts=function(e,t,n){return i(e,null,t||"en",n||{},!1)};var h={number:o,ordinal:o,spellout:o,duration:function(e,t){var r=e[2],a=n.duration[r]||n.duration.default,i=new Intl.NumberFormat(t,a.seconds).format,s=new Intl.NumberFormat(t,a.minutes).format,o=new Intl.NumberFormat(t,a.hours).format,u=/^fi$|^fi-|^da/.test(String(t))?".":":";return function(e,t){if(e=+e,!isFinite(e))return i(e);var n=~~(e/60/60),r=~~(e/60%60),a=(n?o(Math.abs(n))+u:"")+s(Math.abs(r))+u+i(Math.abs(e%60));return e<0?o(-1).replace(o(1),a):a}},date:u,time:u,plural:l,selectordinal:l,select:function(e,t){var n=e[2];return function(e,t){return(n[e]||n.other)(t)}}};t.types=h}({get exports(){return de},set exports(e){de=e}},de),function(e,t){var n=he,r=de,a=Te,i=be,s=ye;function o(e,t){return Object.keys(t).forEach((function(n){e[n]=t[n]})),e}e.exports=function e(){var t=o({},s),u="en",l={},c=function(e){return e},h=null,d="warning",p={};function f(e,t,a){var i="string"==typeof e?e:e.default,s=v(i,"object"==typeof e&&e.id||c(i),a||u);return(s.format||(s.format=r(n(s.message),a||u,p)))(t)}f.rich=function(e,t,a){var i="string"==typeof e?e:e.default,s=v(i,"object"==typeof e&&e.id||c(i),a||u);return(s.toParts||(s.toParts=r.toParts(n(s.message,{tagsType:m}),a||u,p)))(t)};var m="<>";function g(e,t){var n=e[2];return function(e,t){var r="object"==typeof n?function(e,t){return Object.keys(e).reduce((function(n,r){return n[r]=e[r](t),n}),{})}(n,t):n;return"function"==typeof e?e(r):e}}function v(e,t,n){var r=i(n,l)||"en",a=l[r]||(l[r]={}),s=a[t];if("string"==typeof s&&(s=a[t]={message:s}),!s){var o='Translation for "'+t+'" in "'+r+'" is missing';if("warning"===d)"undefined"!=typeof console&&console.warn(o);else if("ignore"!==d)throw new Error(o);var u="function"==typeof h?h(e,t,r)||e:h||e;s=a[t]={message:u}}return s}function y(e,t,n,r,s){"object"==typeof n&&"object"!=typeof r&&(s=r,r=n,n=0);var o=i(s||u,a),l=o&&a[o][e]||b;return r["="+ +t]||r[l(t-n)]||r.other}function b(){return"other"}return p[m]=g,f.setup=function(e){return(e=e||{}).locale&&(u=e.locale),"translations"in e&&(l=e.translations||{}),e.generateId&&(c=e.generateId),"missingReplacement"in e&&(h=e.missingReplacement),e.missingTranslation&&(d=e.missingTranslation),e.formats&&(e.formats.number&&o(t.number,e.formats.number),e.formats.date&&o(t.date,e.formats.date),e.formats.time&&o(t.time,e.formats.time)),e.types&&((p=e.types)[m]=g),{locale:u,translations:l,generateId:c,missingReplacement:h,missingTranslation:d,formats:t,types:p}},f.number=function(e,n,r){var a=n&&t.number[n]||t.parseNumberPattern(n)||t.number.default;return new Intl.NumberFormat(r||u,a).format(e)},f.date=function(e,n,r){var a=n&&t.date[n]||t.parseDatePattern(n)||t.date.default;return new Intl.DateTimeFormat(r||u,a).format(e)},f.time=function(e,n,r){var a=n&&t.time[n]||t.parseDatePattern(n)||t.time.default;return new Intl.DateTimeFormat(r||u,a).format(e)},f.select=function(e,t){return t[e]||t.other},f.custom=function(e,t,n,r){return e[1]in p?p[e[1]](e,t)(n,r):n},f.plural=y.bind(null,"cardinal"),f.selectordinal=y.bind(null,"ordinal"),f.namespace=e,f}()}(ce);var Ee=le;const Re=(e,t)=>Ee({id:`text2speech.${e.toLocaleLowerCase()}`,default:e.toLocaleLowerCase(),description:`Name for a funny voice with ${t}.`}),Ae=e=>Math.pow(2,e/12);var De={SQUEAK:{name:Re("SQUEAK","a high pitch"),gender:"female",playbackRate:Ae(3)},TENOR:{name:Re("TENOR","ambiguous gender"),gender:"male",playbackRate:1},ALTO:{name:Re("ALTO","ambiguous gender"),gender:"female",playbackRate:1},GIANT:{name:Re("GIANT","a low pitch."),gender:"male",playbackRate:Ae(-3)}};var Fe={cant:1,"can't":1,dont:1,"don't":1,doesnt:1,"doesn't":1,not:1,non:1,wont:1,"won't":1,isnt:1,"isn't":1},_e={"😂":1,"❤":3,"♥":3,"😍":3,"😭":-1,"😘":3,"😊":3,"👌":2,"💕":3,"👏":2,"😁":2,"☺":3,"♡":3,"👍":2,"😩":-2,"🙏":2,"✌":2,"😏":1,"😉":2,"🙌":2,"🙈":2,"💪":2,"😄":2,"😒":-2,"💃":3,"💖":3,"😃":2,"😔":-1,"🎉":3,"😜":2,"🌸":3,"💜":3,"💙":3,"✨":1,"💗":3,"★":1,"█":-1,"☀":2,"😡":-1,"😎":2,"💋":3,"😋":3,"🙊":2,"😴":-1,"🎶":2,"💞":3,"😌":2,"🔫":-1,"💛":3,"💁":1,"💚":3,"♫":1,"😞":-1,"😆":2,"😝":2,"😪":-1,"😫":-1,"👊":1,"💀":-2,"😀":2,"😚":3,"😻":3,"💘":3,"☕":1,"👋":2,"🎊":3,"🍕":2,"❄":2,"😕":-2,"💔":-1,"😤":-2,"😈":1,"✈":2,"🔝":2,"😰":-1,"⚽":3,"😑":-2,"👑":3,"👉":1,"🍃":1,"🎁":3,"😠":-2,"🐧":2,"☆":2,"🍀":1,"🎈":3,"🎅":1,"😓":-1,"😣":-2,"😐":-2,"✊":2,"😨":-1,"😖":-1,"💤":1,"💓":3,"👎":-1,"💦":2,"✔":1,"😷":-1,"🙋":2,"🎄":2,"💩":-1,"🎵":2,"😛":3,"👯":2,"💎":2,"🌿":1,"🎂":3,"🌟":1,"🔮":1,"👫":1,"🏆":3,"✖":1,"☝":1,"😙":3,"⛄":2,"👅":2,"♪":2,"🍂":2,"💏":1,"🌴":2,"👈":2,"🌹":3,"🙆":2,"👻":1,"💰":1,"🍻":2,"🙅":-2,"🌞":2,"🍁":2,"⭐":2,"▪":1,"🎀":3,"🐷":1,"🙉":1,"🌺":2,"💅":1,"🐶":2,"🌚":2,"👽":1,"🎤":2,"👭":2,"🎧":2,"👆":1,"🍸":2,"🍷":2,"®":1,"🍉":3,"😇":3,"🏃":2,"😿":-2,"│":1,"🍺":2,"▶":1,"😲":-1,"🎸":2,"🍹":3,"💫":2,"📚":1,"😶":-1,"🌷":2,"💝":3,"💨":1,"🏈":2,"💍":2,"☔":1,"👸":3,"🇪":3,"░":-1,"🍩":1,"👾":1,"☁":1,"🌻":2,"↿":3,"🐯":2,"👼":1,"🍔":1,"😸":2,"👶":2,"↾":3,"💐":3,"🌊":2,"🍦":2,"🍓":3,"👇":1,"💆":1,"🍴":2,"😧":-1,"🇸":2,"😮":1,"🚫":-3,"😽":2,"🌈":2,"🙀":1,"⚠":-1,"🎮":2,"╯":-1,"🍆":2,"🍰":2,"✓":1,"👐":-1,"🍟":1,"🍌":2,"💑":3,"👬":-1,"🐣":2,"🎃":3,"▬":2,"￼":-3,"🐾":3,"🎓":2,"🏊":2,"📷":2,"👄":2,"🌼":4,"🚶":-1,"🐱":2,"🐸":-1,"🇺":2,"👿":-3,"🚬":2,"✿":1,"🐒":2,"🌍":3,"┊":5,"🐥":3,"🐼":1,"🎥":1,"💄":2,"⛔":2,"🏀":1,"💉":1,"💟":3,"🚗":1,"📝":1,"♦":2,"💭":1,"🌙":3,"🐟":3,"👣":1,"✂":-3,"🗿":2,"👪":-1,"🍭":1,"🌃":2,"❌":1,"🐰":3,"💊":2,"🚨":3,"😦":-2,"🍪":1,"🍣":-2,"✧":1,"🎆":3,"🎎":4,"🇩":3,"✅":2,"📱":1,"🙍":-2,"🍑":1,"🎼":1,"🔊":2,"🌌":2,"🍎":1,"🐻":2,"╰":-1,"💇":1,"♬":1,"🔴":2,"🍱":-2,"🍊":2,"🍒":1,"🐭":3,"👟":2,"🌎":1,"🍍":2,"🐮":3,"📲":1,"☼":1,"🌅":1,"🇷":3,"👠":1,"🌽":2,"💧":-1,"🍬":1,"😺":2,"🚀":2,"¦":3,"💢":1,"🎬":1,"🍧":1,"🍜":2,"🐏":3,"🏄":2,"➤":1,"⬆":1,"🍋":1,"🆗":2,"⚪":2,"📺":2,"🍅":1,"⛅":2,"🐢":1,"👙":2,"🏡":2,"🌾":2,"◉":1,"✏":1,"🐬":2,"🇹":3,"♣":1,"🐝":1,"🌝":1,"🇮":3,"🔋":-3,"🐍":1,"♔":2,"🔵":1,"😾":-2,"🌕":3,"🐨":2,"🔐":1,"💿":3,"🌳":2,"👰":2,"❀":2,"⚓":3,"🚴":3,"▀":-1,"👗":1,"➕":2,"💬":2,"▒":-1,"🔜":1,"🍨":1,"💲":1,"🍙":1,"🍥":-4,"▸":1,"♛":1,"😼":1,"🐙":2,"👨":2,"🍚":2,"♨":4,"🎹":1,"♕":2,"▃":5,"🇬":1,"🇧":1,"☠":-1,"🐠":2,"🚹":3,"💵":2,"✰":4,"╠":1,"👛":2,"🌱":3,"💻":1,"🌏":1,"▄":-1,"👓":1,"◄":1,"⚾":-1,"🌲":2,"👴":1,"🏠":2,"🍇":1,"🍘":2,"🐇":1,"🔞":-1,"👵":2,"◀":1,"🔙":1,"🌵":1,"🍮":-1,"🎇":3,"🐎":2,"➔":-1,"🐤":2,"╩":1,"🌑":2,"🚲":2,"🐑":-1,"🏁":2,"🎾":3,"╚":1,"🈹":1,"👮":-2,"☹":-3,"🐵":2,"✪":1,"◕":2,"🗼":3,"▐":-1,"♠":1,"┳":-2,"👺":-2,"🐚":1,"👂":-1,"🗽":1,"🍵":2,"🆒":2,"🐺":1,"⇨":2,"🌓":3,"🔒":1,"╬":-1,"👳":3,"🌂":1,"🚌":1,"♩":3,"🍡":-1,"❥":1,"🎡":1,"💌":2,"🐩":2,"🌜":2,"⌚":1,"🚿":3,"🔆":3,"🌛":3,"💂":-1,"🐔":1,"🙎":-1,"🏩":2,"🇫":2,"🔨":-1,"📢":2,"🐦":2,"🐲":-1,"♻":2,"🌘":3,"🌔":3,"👖":2,"😗":3,"🐄":1,"◟":-1,"🍢":-1,"🎨":1,"⬇":2,"🚼":3,"🇴":2,"🌗":3,"🌖":3,"🔅":5,"👜":1,"🐌":3,"💼":3,"🐹":1,"🌠":3,"🐈":1,"🌁":1,"⚫":1,"♧":2,"🏰":1,"🚵":2,"🎢":2,"🎷":3,"🎐":1,"┈":-4,"╗":2,"🌇":3,"⏰":2,"🚂":1,"◠":2,"🎿":2,"🆔":4,"🌒":3,"🐪":3,"╔":1,"╝":2,"👔":2,"🆓":1,"🐋":1,"▽":2,"🐛":1,"👕":2,"💳":2,"🏧":5,"💡":3,"⬅":2,"🐫":2,"🇱":2,"📹":2,"👞":2,"👚":3,"□":-2,"🚣":3,"🏉":3,"🗻":3,"╦":2,"⛺":3,"🐕":1,"🏂":2,"👡":2,"📻":2,"✒":1,"🌰":3,"🏢":1,"🎒":3,"⌒":3,"🏫":-2,"📴":4,"🚢":1,"🚚":-1,"🐉":1,"❒":1,"🔔":5,"◢":4,"🏥":1,"🚖":-1,"▌":-2,"☛":2,"💒":3,"🚤":2,"🐐":2,"■":-2,"🔚":2,"🎻":2,"🔷":1,"🎽":2,"📅":1,"🎺":3,"🍈":-3,"✉":1,"◤":5,"○":3,"🍼":3,"🚛":-2,"📓":1,"☉":1,"💴":-2,"➰":-1,"🔌":-1,"📕":1,"📣":2,"🚓":1,"🐗":3,"⛳":4,"┻":-3,"┛":3,"┃":2,"💺":1,"🏇":-1,"☻":1,"📞":2,"Ⓐ":-1,"🌉":3,"🚩":-2,"✎":3,"📃":2,"🏨":1,"📌":-3,"♎":-1,"💷":2,"🚄":3,"▲":3,"⛵":3,"🔸":1,"🚜":5,"🐆":2,"👒":1,"❕":1,"🔛":2,"♢":2,"🇲":2,"❅":4,"👝":2,"✞":2,"◡":1,"🎋":3,"👥":1,"🐡":1,"◆":4,"🔭":2,"🎪":1,"🐜":3,"♌":4,"☐":-5,"👷":1,"🔈":1,"📄":5,"🚐":4,"🌋":3,"📡":1,"🚳":5,"✘":4,"🅰":1,"🇼":2,"┓":3,"┣":3,"Ⓛ":2,"Ⓔ":2,"👤":4,"🚁":1,"🎠":3,"🐁":-2,"📗":1,"┐":-1,"♂":1,"📯":-1,"🔩":1,"👢":4,"◂":2,"📰":1,"📶":2,"🌄":1,"🗾":2,"🔶":2,"🏤":2,"🎩":2,"Ⓜ":1,"🔧":-4,"🐅":1,"♮":1,"🅾":-1,"📦":1,"🚊":1,"🔲":3,"△":1,"📆":5,"❛":2,"📉":2,"▵":2,"🔎":3,"☜":1,"🇯":2,"🇵":2,"📘":1,"ⓔ":3,"🔑":1,"⭕":2,"🔘":1,"🚭":5,"🚉":3,"🚪":3,"➳":2,"🚃":3,"┯":-3,"🆙":2,"🆖":1,"┗":5,"Ⓞ":2,"❇":3,"✴":3,"☊":5,"🔕":-2,"⬛":-2,"🚞":3,"🍶":3,"🌐":3,"♀":1,"🚅":3,"🚒":-2,"♋":1,"♍":3,"🕝":-2,"ⓐ":5,"📙":1,"Ⓢ":1,"📋":3,"🎱":1,"🐞":1,"🔺":1,"ⓡ":5,"♤":3,"🎯":3,"🔉":3,"↩":5,"🚾":1,"🎣":-4,"🔣":1,"❎":-5,"➥":1,"🎌":5,"◣":1,"⏬":5,"♭":1,"ⓞ":5,"🔳":2,"🏭":2,"🎳":-3,"☚":5,"➽":2,"➫":2,"➖":-5,"꒰":2,"꒱":2,"◝":-3,"📑":5,"ⓧ":5,"🔟":5,"〓":5,"ⓜ":2,"➠":5,"🚆":2,"℅":-5,"☃":2,"🚽":5,"ⓝ":5,"⇦":5,"👲":2,"🚡":-3,"🔬":5,"➗":-3,"📈":2,"⏪":2,"◎":5,"꒦":-5,"📎":5,"⑅":5,"✭":5,"♓":2,"┏":5,"☇":5,"࿎":-5,"👘":5,"↙":5,"Ⓕ":2,"Ⓦ":2,"Ⓟ":2,"🕑":2,"🕛":5,"♈":-5,"↬":5,"✍":5,"🏦":5,"🔻":5,"ⓟ":5,"ⓕ":5,"ⓘ":5,"♿":5,"⇗":5,"⇘":5,"ⓨ":5,"ⓙ":5,"▫":5,"🔇":5,"⌃":-5,"🔖":5,"📜":5,"🚝":5,"┘":-5,"✝":-5,"⍣":-5,"📮":-5,"🕕":-5,"🔯":5,"➸":5,"꒵":5,"🕥":-5,"✽":5,"📼":5,"🕐":-5,"🀄":5,"✬":5,"✫":5,"🕔":-5,"❣":5,"📫":5,"🉐":5,"🈂":-5,"🎰":-5,"҂":-5,"╤":-5,"📔":5},$e={labels:{abandon:-2,abandoned:-2,abandons:-2,abducted:-2,abduction:-2,abductions:-2,abhor:-3,abhorred:-3,abhorrent:-3,abhors:-3,abilities:2,ability:2,aboard:1,aborted:-1,aborts:-1,absentee:-1,absentees:-1,absolve:2,absolved:2,absolves:2,absolving:2,absorbed:1,abuse:-3,abused:-3,abuses:-3,abusing:-3,abusive:-3,accept:1,acceptable:1,acceptance:1,accepted:1,accepting:1,accepts:1,accessible:1,accident:-2,accidental:-2,accidentally:-2,accidents:-2,acclaim:2,acclaimed:2,accolade:2,accomplish:2,accomplished:2,accomplishes:2,accomplishment:2,accomplishments:2,accusation:-2,accusations:-2,accuse:-2,accused:-2,accuses:-2,accusing:-2,ache:-2,achievable:1,aching:-2,acquit:2,acquits:2,acquitted:2,acquitting:2,acrimonious:-3,active:1,adequate:1,admire:3,admired:3,admires:3,admiring:3,admit:-1,admits:-1,admitted:-1,admonish:-2,admonished:-2,adopt:1,adopts:1,adorable:3,adoration:3,adore:3,adored:3,adores:3,adoring:3,adoringly:3,advanced:1,advantage:2,advantageous:2,advantageously:2,advantages:2,adventure:2,adventures:2,adventurous:2,adversary:-1,advisable:1,affected:-1,affection:3,affectionate:3,affectionateness:3,afflicted:-1,affordable:2,affronted:-1,aficionados:2,afraid:-2,aggravate:-2,aggravated:-2,aggravates:-2,aggravating:-2,aggression:-2,aggressions:-2,aggressive:-2,aggressiveness:-2,aghast:-2,agog:2,agonise:-3,agonised:-3,agonises:-3,agonising:-3,agonize:-3,agonized:-3,agonizes:-3,agonizing:-3,agree:1,agreeable:2,agreed:1,agreement:1,agrees:1,alarm:-2,alarmed:-2,alarmist:-2,alarmists:-2,alas:-1,alert:-1,alienation:-2,alive:1,allegation:-2,allegations:-2,allergic:-2,allow:1,ally:2,alone:-2,altruistic:2,amaze:2,amazed:2,amazes:2,amazing:4,ambitious:2,ambivalent:-1,amicable:2,amuse:3,amused:3,amusement:3,amusements:3,anger:-3,angered:-3,angers:-3,angry:-3,anguish:-3,anguished:-3,animosity:-2,annoy:-2,annoyance:-2,annoyed:-2,annoying:-2,annoys:-2,antagonistic:-2,anti:-1,anticipation:1,anxiety:-2,anxious:-2,apathetic:-3,apathy:-3,apeshit:-3,apocalyptic:-2,apologise:-1,apologised:-1,apologises:-1,apologising:-1,apologize:-1,apologized:-1,apologizes:-1,apologizing:-1,apology:-1,appalled:-2,appalling:-2,appealing:2,appease:2,appeased:2,appeases:2,appeasing:2,applaud:2,applauded:2,applauding:2,applauds:2,applause:2,appreciate:2,appreciated:2,appreciates:2,appreciating:2,appreciation:2,apprehensive:-2,appropriate:2,appropriately:2,approval:2,approved:2,approves:2,ardent:1,arrest:-2,arrested:-3,arrests:-2,arrogant:-2,arsehole:-4,ashame:-2,ashamed:-2,ass:-4,assassination:-3,assassinations:-3,assault:-2,assaults:-2,asset:2,assets:2,assfucking:-4,asshole:-4,astonished:2,astound:3,astounded:3,astounding:3,astoundingly:3,astounds:3,atrocious:-3,atrocity:-3,attack:-1,attacked:-1,attacking:-1,attacks:-1,attract:1,attracted:1,attracting:2,attraction:2,attractions:2,attractive:2,attractively:2,attractiveness:2,attracts:1,audacious:3,aura:1,authority:1,avenge:-2,avenged:-2,avenger:-2,avengers:-2,avenges:-2,avenging:-2,avert:-1,averted:-1,averts:-1,avid:2,avoid:-1,avoided:-1,avoids:-1,await:-1,awaited:-1,awaits:-1,award:3,awarded:3,awards:3,awesome:4,awful:-3,awkward:-2,axe:-1,axed:-1,backed:1,backing:2,backs:1,bad:-3,"bad luck":-2,badass:-3,badly:-3,badness:-3,bailout:-2,balanced:1,bamboozle:-2,bamboozled:-2,bamboozles:-2,ban:-2,banish:-1,bankrupt:-3,bankruptcy:-3,bankster:-3,banned:-2,barbarian:-2,barbaric:-2,barbarous:-2,bargain:2,barrier:-2,bastard:-5,bastards:-5,battle:-1,battled:-1,battles:-1,battling:-2,beaten:-2,beatific:3,beating:-1,beauties:3,beautiful:3,beautifully:3,beautify:3,beauty:3,befit:2,befitting:2,belittle:-2,belittled:-2,beloved:3,benefactor:2,benefactors:2,benefit:2,benefits:2,benefitted:2,benefitting:2,benevolent:3,bereave:-2,bereaved:-2,bereaves:-2,bereaving:-2,best:3,"best damn":4,betray:-3,betrayal:-3,betrayed:-3,betraying:-3,betrays:-3,better:2,bias:-1,biased:-2,big:1,bitch:-5,bitches:-5,bitter:-2,bitterest:-2,bitterly:-2,bizarre:-2,blackmail:-3,blackmailed:-3,blackmailing:-3,blackmails:-3,blah:-2,blame:-2,blamed:-2,blames:-2,blaming:-2,bless:2,blesses:2,blessing:3,blessings:3,blind:-1,bliss:3,blissful:3,blithe:2,bloated:-1,block:-1,blockade:-2,blockbuster:3,blocked:-1,blocking:-1,blocks:-1,bloody:-3,blurry:-2,boastful:-2,bold:2,boldly:2,bomb:-1,boost:1,boosted:1,boosting:1,boosts:1,bore:-2,bored:-2,boring:-3,bother:-2,bothered:-2,bothers:-2,bothersome:-2,boycott:-2,boycotted:-2,boycotting:-2,boycotts:-2,brainwashing:-3,brave:2,braveness:2,bravery:2,bravura:3,breach:-2,breached:-2,breaches:-2,breaching:-2,breakthrough:3,breathtaking:5,bribe:-3,bribed:-3,bribes:-3,bribing:-3,bright:1,brightest:2,brightness:1,brilliant:4,brilliance:3,brilliances:3,brisk:2,broke:-1,broken:-1,brooding:-2,brutal:-3,brutally:-3,bullied:-2,bullshit:-4,bully:-2,bullying:-2,bummer:-2,buoyant:2,burden:-2,burdened:-2,burdening:-2,burdens:-2,burglar:-2,burglary:-2,calm:2,calmed:2,calming:2,calms:2,"can't stand":-3,cancel:-1,cancelled:-1,cancelling:-1,cancels:-1,cancer:-1,capabilities:1,capability:1,capable:1,captivated:3,care:2,carefree:1,careful:2,carefully:2,carefulness:2,careless:-2,cares:2,caring:2,"cashing in":-2,casualty:-2,catastrophe:-3,catastrophic:-4,cautious:-1,celebrate:3,celebrated:3,celebrates:3,celebrating:3,celebration:3,celebrations:3,censor:-2,censored:-2,censors:-2,certain:1,chagrin:-2,chagrined:-2,challenge:-1,champion:2,championed:2,champions:2,chance:2,chances:2,chaos:-2,chaotic:-2,charged:-3,charges:-2,charisma:2,charitable:2,charm:3,charming:3,charmingly:3,charmless:-3,chastise:-3,chastised:-3,chastises:-3,chastising:-3,cheat:-3,cheated:-3,cheater:-3,cheaters:-3,cheating:-3,cheats:-3,cheer:2,cheered:2,cheerful:2,cheerfully:2,cheering:2,cheerless:-2,cheers:2,cheery:3,cherish:2,cherished:2,cherishes:2,cherishing:2,chic:2,chide:-3,chided:-3,chides:-3,chiding:-3,childish:-2,chilling:-1,choke:-2,choked:-2,chokes:-2,choking:-2,clarifies:2,clarity:2,clash:-2,classy:3,clean:2,cleaner:2,clear:1,cleared:1,clearly:1,clears:1,clever:2,clouded:-1,clueless:-2,cock:-5,cocksucker:-5,cocksuckers:-5,cocky:-2,coerced:-2,coercion:-2,collapse:-2,collapsed:-2,collapses:-2,collapsing:-2,collide:-1,collides:-1,colliding:-1,collision:-2,collisions:-2,colluding:-3,combat:-1,combats:-1,comedy:1,comfort:2,comfortable:2,comfortably:2,comforting:2,comforts:2,comic:1,commend:2,commended:2,commit:1,commitment:2,commits:1,committed:1,committing:1,compassion:2,compassionate:2,compelled:1,competencies:1,competent:2,competitive:2,complacent:-2,complain:-2,complained:-2,complaining:-2,complains:-2,complaint:-2,complaints:-2,complicating:-2,compliment:2,complimented:2,compliments:2,comprehensive:2,concerned:-2,conciliate:2,conciliated:2,conciliates:2,conciliating:2,condemn:-2,condemnation:-2,condemned:-2,condemns:-2,confidence:2,confident:2,confidently:2,conflict:-2,conflicting:-2,conflictive:-2,conflicts:-2,confuse:-2,confused:-2,confusing:-2,congrats:2,congratulate:2,congratulation:2,congratulations:2,consent:2,consents:2,consolable:2,conspiracy:-3,constipation:-2,constrained:-2,contagion:-2,contagions:-2,contagious:-1,contaminant:-2,contaminants:-2,contaminate:-2,contaminated:-2,contaminates:-2,contaminating:-2,contamination:-2,contaminations:-2,contempt:-2,contemptible:-2,contemptuous:-2,contemptuously:-2,contend:-1,contender:-1,contending:-1,contentious:-2,contestable:-2,controversial:-2,controversially:-2,controversies:-2,controversy:-2,convicted:-2,convince:1,convinced:1,convinces:1,convivial:2,cool:1,"cool stuff":3,cornered:-2,corpse:-1,corrupt:-3,corrupted:-3,corrupting:-3,corruption:-3,corrupts:-3,costly:-2,courage:2,courageous:2,courageously:2,courageousness:2,courteous:2,courtesy:2,"cover-up":-3,coward:-2,cowardly:-2,coziness:2,cramp:-1,crap:-3,crappy:-3,crash:-2,crazier:-2,craziest:-2,crazy:-2,creative:2,crestfallen:-2,cried:-2,cries:-2,crime:-3,crimes:-3,criminal:-3,criminals:-3,criminate:-3,criminated:-3,criminates:-3,crisis:-3,critic:-2,criticise:-2,criticised:-2,criticises:-2,criticising:-2,criticism:-2,criticize:-2,criticized:-2,criticizes:-2,criticizing:-2,critics:-2,critique:-2,crowding:-1,crude:-1,cruel:-3,cruelty:-3,crush:-1,crushed:-2,crushes:-1,crushing:-1,cry:-1,crying:-2,cunning:2,cunt:-5,curious:1,curse:-1,cut:-1,cutback:-2,cutbacks:-2,cute:2,cuts:-1,cutting:-1,cynic:-2,cynical:-2,cynicism:-2,damage:-3,damaged:-3,damages:-3,damaging:-3,damn:-2,"damn cute":3,"damn good":4,damned:-4,damnit:-4,danger:-2,dangerous:-2,dangerously:-2,daredevil:2,daring:2,darkest:-2,darkness:-1,dauntless:2,dazzling:3,dead:-3,deadening:-2,deadlock:-2,deadly:-3,deafening:-1,dear:2,dearly:3,death:-2,deaths:-2,debonair:2,debt:-2,deceit:-3,deceitful:-3,deceive:-3,deceived:-3,deceives:-3,deceiving:-3,deception:-3,deceptive:-3,decisive:1,dedicated:2,dedication:2,defeat:-2,defeated:-2,defect:-3,defective:-3,defects:-3,defender:2,defenders:2,defenseless:-2,defer:-1,deferring:-1,defiant:-1,deficient:-2,deficiency:-2,deficiencies:-2,deficit:-2,deformed:-2,deformities:-2,deformity:-2,defraud:-3,defrauds:-3,deft:2,defunct:-2,degrade:-2,degraded:-2,degrades:-2,dehumanize:-2,dehumanized:-2,dehumanizes:-2,dehumanizing:-2,deject:-2,dejected:-2,dejecting:-2,dejects:-2,delay:-1,delayed:-1,delectable:3,delicious:3,delight:3,delighted:3,delightful:3,delightfully:3,delighting:3,delights:3,demand:-1,demanded:-1,demanding:-1,demands:-1,demonstration:-1,demoralize:-2,demoralized:-2,demoralizes:-2,demoralizing:-2,denial:-2,denials:-2,denied:-2,denier:-2,deniers:-2,denies:-2,denounce:-2,denounces:-2,dent:-2,deny:-2,denying:-2,deplore:-3,deplored:-3,deplores:-3,deploring:-3,deport:-2,deported:-2,deporting:-2,deports:-2,deportation:-2,deportations:-2,depressed:-2,depressing:-2,deprivation:-3,derail:-2,derailed:-2,derails:-2,derelict:-2,deride:-2,derided:-2,derides:-2,deriding:-2,derision:-2,desirable:2,desire:1,desired:2,desirous:2,despair:-3,despairing:-3,despairs:-3,desperate:-3,desperately:-3,despondent:-3,destroy:-3,destroyed:-3,destroying:-3,destroys:-3,destruction:-3,destructive:-3,detached:-1,detain:-2,detained:-2,detention:-2,deteriorate:-2,deteriorated:-2,deteriorates:-2,deteriorating:-2,determined:2,deterrent:-2,detract:-1,detracted:-1,detracts:-1,devastate:-2,devastated:-2,devastating:-2,devastation:-2,devastations:-2,devoted:3,devotion:2,devotional:2,diamond:1,dick:-4,dickhead:-4,die:-3,died:-3,difficult:-1,diffident:-2,dignity:2,dilemma:-1,dilligence:2,dipshit:-3,dire:-3,direful:-3,dirt:-2,dirtier:-2,dirtiest:-2,dirty:-2,disabilities:-2,disability:-2,disabling:-1,disadvantage:-2,disadvantaged:-2,disagree:-2,disagreeable:-2,disagreement:-2,disappear:-1,disappeared:-1,disappears:-1,disappoint:-2,disappointed:-2,disappointing:-2,disappointment:-2,disappointments:-2,disappoints:-2,disapproval:-2,disapprovals:-2,disapprove:-2,disapproved:-2,disapproves:-2,disapproving:-2,disaster:-2,disasters:-2,disastrous:-3,disbelieve:-2,discard:-1,discarded:-1,discarding:-1,discards:-1,discernment:2,discomfort:-2,disconsolate:-2,disconsolation:-2,discontented:-2,discord:-2,discounted:-1,discouraged:-2,discredited:-2,discriminate:-2,discriminated:-2,discriminates:-2,discriminating:-2,discriminatory:-2,disdain:-2,disease:-1,diseases:-1,disgrace:-2,disgraced:-2,disguise:-1,disguised:-1,disguises:-1,disguising:-1,disgust:-3,disgusted:-3,disgustful:-3,disgusting:-3,disheartened:-2,dishonest:-2,disillusioned:-2,disinclined:-2,disjointed:-2,dislike:-2,disliked:-2,dislikes:-2,dismal:-2,dismayed:-2,dismissed:-2,disorder:-2,disorders:-2,disorganized:-2,disoriented:-2,disparage:-2,disparaged:-2,disparages:-2,disparaging:-2,displeased:-2,displeasure:-2,disproportionate:-2,dispute:-2,disputed:-2,disputes:-2,disputing:-2,disqualified:-2,disquiet:-2,disregard:-2,disregarded:-2,disregarding:-2,disregards:-2,disrespect:-2,disrespected:-2,disrupt:-2,disrupted:-2,disrupting:-2,disruption:-2,disruptions:-2,disruptive:-2,disrupts:-2,dissatisfied:-2,distasteful:-2,distinguished:2,distort:-2,distorted:-2,distorting:-2,distorts:-2,distract:-2,distracted:-2,distraction:-2,distracts:-2,distress:-2,distressed:-2,distresses:-2,distressing:-2,distrust:-3,distrustful:-3,disturb:-2,disturbed:-2,disturbing:-2,disturbs:-2,dithering:-2,diverting:-1,dizzy:-1,dodging:-2,dodgy:-2,"does not work":-3,dolorous:-2,donate:2,donated:2,donates:2,donating:2,donation:2,"dont like":-2,doom:-2,doomed:-2,doubt:-1,doubted:-1,doubtful:-1,doubting:-1,doubts:-1,douche:-3,douchebag:-3,dour:-2,downcast:-2,downer:-2,downhearted:-2,downside:-2,drag:-1,dragged:-1,drags:-1,drained:-2,dread:-2,dreaded:-2,dreadful:-3,dreading:-2,dream:1,dreams:1,dreary:-2,droopy:-2,drop:-1,dropped:-1,drown:-2,drowned:-2,drowns:-2,drudgery:-2,drunk:-2,dubious:-2,dud:-2,dull:-2,dumb:-3,dumbass:-3,dump:-1,dumped:-2,dumps:-1,dupe:-2,duped:-2,dupery:-2,durable:2,dying:-3,dysfunction:-2,eager:2,earnest:2,ease:2,easy:1,ecstatic:4,eerie:-2,eery:-2,effective:2,effectively:2,effectiveness:2,effortlessly:2,elated:3,elation:3,elegant:2,elegantly:2,embarrass:-2,embarrassed:-2,embarrasses:-2,embarrassing:-2,embarrassment:-2,embezzlement:-3,embittered:-2,embrace:1,emergency:-2,empathetic:2,empower:2,empowerment:2,emptiness:-1,empty:-1,enchanted:2,encourage:2,encouraged:2,encouragement:2,encourages:2,encouraging:2,endorse:2,endorsed:2,endorsement:2,endorses:2,enemies:-2,enemy:-2,energetic:2,engage:1,engages:1,engrossed:1,engrossing:3,enjoy:2,enjoyable:2,enjoyed:2,enjoying:2,enjoys:2,enlighten:2,enlightened:2,enlightening:2,enlightens:2,ennui:-2,enrage:-2,enraged:-2,enrages:-2,enraging:-2,enrapture:3,enslave:-2,enslaved:-2,enslaves:-2,ensure:1,ensuring:1,enterprising:1,entertaining:2,enthral:3,enthusiastic:3,entitled:1,entrusted:2,envies:-1,envious:-2,"environment-friendly":2,envy:-1,envying:-1,erroneous:-2,error:-2,errors:-2,escape:-1,escapes:-1,escaping:-1,esteem:2,esteemed:2,ethical:2,euphoria:3,euphoric:4,evacuate:-1,evacuated:-1,evacuates:-1,evacuating:-1,evacuation:-1,evergreen:2,evergreens:2,evergreening:-3,eviction:-1,evil:-3,exacerbate:-2,exacerbated:-2,exacerbates:-2,exacerbating:-2,exaggerate:-2,exaggerated:-2,exaggerates:-2,exaggerating:-2,exasparate:-2,exasperated:-2,exasperates:-2,exasperating:-2,excellence:3,excellent:3,excite:3,excited:3,excitement:3,exciting:3,exclude:-1,excluded:-2,exclusion:-1,exclusive:2,excruciatingly:-1,excuse:-1,exempt:-1,exhausted:-2,exhilarated:3,exhilarates:3,exhilarating:3,exonerate:2,exonerated:2,exonerates:2,exonerating:2,expand:1,expands:1,expel:-2,expelled:-2,expelling:-2,expels:-2,expertly:2,exploit:-2,exploited:-2,exploiting:-2,exploits:-2,exploration:1,explorations:1,expose:-1,exposed:-1,exposes:-1,exposing:-1,exquisite:3,extend:1,extends:1,extremist:-2,extremists:-2,exuberant:4,exultant:3,exultantly:3,fabulous:4,fabulously:4,fad:-2,fag:-3,faggot:-3,faggots:-3,fail:-2,failed:-2,failing:-2,fails:-2,failure:-2,failures:-2,fainthearted:-2,fair:2,fairness:2,faith:1,faithful:3,fake:-3,faker:-3,fakes:-3,faking:-3,fallen:-2,falling:-1,false:-1,falsely:-2,falsified:-3,falsify:-3,fame:1,famine:-2,famous:2,fan:3,fantastic:4,farce:-1,fascinate:3,fascinated:3,fascinates:3,fascinating:3,fascination:3,fascist:-2,fascists:-2,fatal:-3,fatalities:-3,fatality:-3,fatigue:-2,fatigued:-2,fatigues:-2,fatiguing:-2,favor:2,favorable:2,favorably:2,favored:2,favorite:2,favorited:2,favorites:2,favors:2,favour:2,favourable:2,favourably:2,favoured:2,favourite:2,favourited:2,favourites:2,favours:2,fear:-2,fearful:-2,fearfully:-2,fearing:-2,fearless:2,fearlessness:2,fearsome:-2,"fed up":-3,feeble:-2,feeling:1,felonies:-3,felony:-3,fertile:2,fervent:2,fervid:2,festive:2,fever:-2,fiasco:-3,fidgety:-2,fight:-1,fighting:-2,fine:2,fines:-2,finest:3,fire:-2,fired:-2,firing:-2,fit:1,fitness:1,filth:-2,filthy:-2,flagship:2,flaw:-2,flawed:-3,flawless:2,flawlessly:2,flaws:-2,flees:-1,flop:-2,flops:-2,flu:-2,flustered:-2,focused:2,fond:2,fondness:2,fool:-2,foolish:-2,fools:-2,forbid:-1,forbidden:-2,forbidding:-2,forced:-1,foreclosure:-2,foreclosures:-2,forefront:1,forget:-1,forgetful:-2,forgettable:-1,forgive:1,forgiving:1,forgot:-1,forgotten:-1,fortune:2,fortunate:2,fortunately:2,foul:-3,frantic:-1,fraud:-4,frauds:-4,fraudster:-4,fraudsters:-4,fraudulence:-4,fraudulent:-4,freak:-2,free:1,freedom:2,freedoms:2,frenzy:-3,fresh:1,friend:1,friendliness:2,friendly:2,friendship:2,fright:-2,frightened:-2,frightening:-3,frikin:-2,frisky:2,frowning:-1,fruitless:-2,frustrate:-2,frustrated:-2,frustrates:-2,frustrating:-2,frustration:-2,ftw:3,fuck:-4,fucked:-4,fucker:-4,fuckers:-4,fuckface:-4,fuckhead:-4,fuckin:-4,fucking:-4,"fucking amazing":4,"fucking beautiful":4,"fucking cute":4,"fucking fantastic":4,"fucking good":4,"fucking great":4,"fucking hot":2,"fucking love":4,"fucking loves":4,"fucking perfect":4,fucktard:-4,fud:-3,fuked:-4,fuking:-4,fulfill:2,fulfilled:2,fulfillment:2,fulfills:2,fuming:-2,fun:4,funeral:-1,funerals:-1,funky:2,funnier:4,funny:4,furious:-3,futile:-2,gag:-2,gagged:-2,gain:2,gained:2,gaining:2,gains:2,gallant:3,gallantly:3,gallantry:3,"game-changing":3,garbage:-1,gem:3,generous:2,generously:2,genial:3,ghastly:-2,ghost:-1,giddy:-2,gift:2,glad:3,glamorous:3,glamourous:3,glee:3,gleeful:3,gloom:-1,gloomy:-2,glorious:2,glory:2,glum:-2,god:1,goddamn:-3,godsend:4,gold:2,good:3,goodlooking:3,goodmorning:1,goodness:3,goodwill:3,goofiness:-2,goofy:-2,grace:1,graceful:2,gracious:3,grand:3,grant:1,granted:1,granting:1,grants:1,grateful:3,gratification:2,grave:-2,gray:-1,grisly:-2,gr8:3,great:3,greater:3,greatest:3,greed:-3,greedy:-2,"green wash":-3,"green washing":-3,greenwash:-3,greenwasher:-3,greenwashers:-3,greenwashing:-3,greet:1,greeted:1,greeting:1,greetings:2,greets:1,grey:-1,grief:-2,grieved:-2,grim:-2,gripping:2,groan:-2,groaned:-2,groaning:-2,groans:-2,gross:-2,growing:1,growth:2,growths:2,gruesome:-3,guarantee:1,guilt:-3,guilty:-3,gullibility:-2,gullible:-2,gun:-1,ha:2,hacked:-1,haha:3,hahaha:3,hahahah:3,hail:2,hailed:2,hallelujah:3,handpicked:1,handsome:3,hapless:-2,haplessness:-2,happiest:3,happiness:3,happy:3,harass:-3,harassed:-3,harasses:-3,harassing:-3,harassment:-3,hard:-1,hardier:2,hardship:-2,hardy:2,harm:-2,harmed:-2,harmful:-2,harming:-2,harmony:2,harmonious:2,harmoniously:2,harms:-2,harried:-2,harsh:-2,harsher:-2,harshest:-2,harshly:-2,hate:-3,hated:-3,hater:-3,haters:-3,hates:-3,hating:-3,hatred:-3,haunt:-1,haunted:-2,haunting:1,haunts:-1,havoc:-2,hazardous:-3,headache:-2,healthy:2,heartbreaking:-3,heartbroken:-3,heartfelt:3,heartless:-2,heartwarming:3,heaven:2,heavenly:4,heavyhearted:-2,hehe:2,hell:-4,hellish:-2,help:2,helpful:2,helping:2,helpless:-2,helps:2,hero:2,heroes:2,heroic:3,hesitant:-2,hesitate:-2,hid:-1,hide:-1,hideous:-3,hides:-1,hiding:-1,highlight:2,hilarious:2,hinder:-2,hindrance:-2,hoax:-2,hollow:-1,homeless:-2,homesick:-2,homicide:-2,homicides:-2,honest:2,honor:2,honored:2,honoring:2,honour:2,honoured:2,honouring:2,hooligan:-2,hooliganism:-2,hooligans:-2,hope:2,hopeful:2,hopefully:2,hopeless:-2,hopelessness:-2,hopes:2,hoping:2,horrendous:-3,horrid:-3,horrible:-3,horrific:-3,horrified:-3,hospitalized:-2,hostile:-2,huckster:-2,hug:2,huge:1,hugs:2,humane:2,humble:1,humbug:-2,humerous:3,humiliated:-3,humiliation:-3,humor:2,humorous:2,humour:2,humourous:2,hunger:-2,hurrah:5,hurt:-2,hurting:-2,hurts:-2,hypocritical:-2,hysteria:-3,hysterical:-3,hysterics:-3,icky:-3,idiocy:-3,idiot:-3,idiotic:-3,ignorance:-2,ignorant:-2,ignore:-1,ignored:-2,ignores:-1,ill:-2,"ill-fated":-2,illegal:-3,illegally:-3,illegitimate:-3,illiteracy:-2,illness:-2,illnesses:-2,illogical:-2,imaginative:2,imbecile:-3,immobilized:-1,immortal:2,immune:1,impair:-2,impaired:-2,impairing:-2,impairment:-2,impairs:-2,impatient:-2,impeachment:-3,impeachments:-3,impede:-2,impeded:-2,impedes:-2,impeding:-2,impedingly:-2,imperfect:-2,importance:2,important:2,impose:-1,imposed:-1,imposes:-1,imposing:-1,imposter:-2,impotent:-2,impress:3,impressed:3,impresses:3,impressive:3,imprisoned:-2,imprisonment:-2,improper:-2,improperly:-2,improve:2,improved:2,improvement:2,improves:2,improving:2,inability:-2,inaction:-2,inadequate:-2,inadvertently:-2,inappropriate:-2,incapable:-2,incapacitated:-2,incapacitates:-2,incapacitating:-2,incense:-2,incensed:-2,incenses:-2,incensing:-2,incoherent:-2,incompetence:-2,incompetent:-2,incomplete:-1,incomprehensible:-2,inconsiderate:-2,inconvenience:-2,inconvenient:-2,increase:1,increased:1,indecisive:-2,indestructible:2,indicted:-2,indifference:-2,indifferent:-2,indignant:-2,indignation:-2,indoctrinate:-2,indoctrinated:-2,indoctrinates:-2,indoctrinating:-2,inediable:-2,inexorable:-3,inexcusable:-3,ineffective:-2,ineffectively:-2,ineffectual:-2,inefficiency:-2,inefficient:-2,inefficiently:-2,inept:-2,ineptitude:-2,infantile:-2,infantilized:-2,infatuated:2,infatuation:2,infect:-2,infected:-2,infecting:-2,infection:-2,infections:-2,infectious:-2,infects:-2,inferior:-2,infest:-2,infested:-2,infesting:-2,infests:-2,inflamed:-2,inflict:-2,inflicted:-2,inflicting:-2,inflicts:-2,influential:2,infract:-2,infracted:-2,infracting:-2,infracts:-2,infringement:-2,infuriate:-2,infuriated:-2,infuriates:-2,infuriating:-2,inhibit:-1,inhuman:-2,injured:-2,injuries:-2,injury:-2,injustice:-2,innovate:1,innovates:1,innovation:1,innovative:2,inoperative:-2,inquisition:-2,inquisitive:2,insane:-2,insanity:-2,insecure:-2,insensitive:-2,insensitivity:-2,insignificant:-2,insipid:-2,insolvent:-2,insomnia:-2,inspiration:2,inspirational:2,inspire:2,inspired:2,inspires:2,inspiring:3,insufficiency:-2,insufficient:-2,insufficiently:-2,insult:-2,insulted:-2,insulting:-2,insults:-2,intact:2,integrity:2,intelligent:2,intense:1,interest:1,interested:2,interesting:2,interests:1,interrogated:-2,interrupt:-2,interrupted:-2,interrupting:-2,interruption:-2,interrupts:-2,intimacy:2,intimidate:-2,intimidated:-2,intimidates:-2,intimidating:-2,intimidation:-2,intransigence:-2,intransigency:-2,intricate:2,intrigues:1,invasion:-1,invincible:2,invite:1,inviting:1,invulnerable:2,irate:-3,ironic:-1,irony:-1,irrational:-1,irreparable:-2,irreproducible:-2,irresistible:2,irresistibly:2,irresolute:-2,irresponsible:-2,irresponsibly:-2,irreversible:-1,irreversibly:-1,irritate:-3,irritated:-3,irritates:-3,irritating:-3,isolated:-1,itchy:-2,jackass:-4,jackasses:-4,jailed:-2,jaunty:2,jealous:-2,jealousy:-2,jeopardy:-2,jerk:-3,jesus:1,jewel:1,jewels:1,jocular:2,join:1,joke:2,jokes:2,jolly:2,jovial:2,joy:3,joyful:3,joyfully:3,joyless:-2,joyous:3,jubilant:3,jumpy:-1,justice:2,justifiably:2,justified:2,keen:1,kickback:-3,kickbacks:-3,kidnap:-2,kidnapped:-2,kidnapping:-2,kidnappings:-2,kidnaps:-2,kill:-3,killed:-3,killing:-3,kills:-3,kind:2,"kind of":0,kinder:2,kindness:2,kiss:2,kudos:3,lack:-2,lackadaisical:-2,lag:-1,lagged:-2,lagging:-2,lags:-2,lame:-2,landmark:2,lapse:-1,lapsed:-1,laugh:1,laughed:1,laughing:1,laughs:1,laughting:1,launched:1,lawl:3,lawsuit:-2,lawsuits:-2,lazy:-1,leadership:1,leading:2,leak:-1,leaked:-1,leave:-1,legal:1,legally:1,lenient:1,lethal:-2,lethality:-2,lethargic:-2,lethargy:-2,liar:-3,liars:-3,libelous:-2,lied:-2,lifeless:-1,lifesaver:4,lighthearted:1,likable:2,like:2,likeable:2,liked:2,likers:2,likes:2,liking:2,limitation:-1,limited:-1,limits:-1,litigation:-1,litigious:-2,lively:2,livid:-2,lmao:4,lmfao:4,loathe:-3,loathed:-3,loathes:-3,loathing:-3,loathsome:-3,lobbied:-2,lobby:-2,lobbying:-2,lobbyist:-2,lobbyists:-2,lol:3,lolol:4,lololol:4,lolololol:4,lonely:-2,lonesome:-2,longing:-1,lool:3,loom:-1,loomed:-1,looming:-1,looms:-1,loool:3,looool:3,loose:-3,looses:-3,loser:-3,losing:-3,loss:-3,losses:-3,lost:-3,lousy:-2,lovable:3,love:3,loved:3,lovelies:3,lovely:3,loves:3,loving:2,"loving-kindness":3,lowest:-1,loyal:3,loyalty:3,luck:3,luckily:3,lucky:3,lucrative:3,ludicrous:-3,lugubrious:-2,lunatic:-3,lunatics:-3,lurk:-1,lurking:-1,lurks:-1,luxury:2,macabre:-2,mad:-3,maddening:-3,"made-up":-1,madly:-3,madness:-3,magnificent:3,maladaption:-2,maldevelopment:-2,maltreatment:-2,mandatory:-1,manipulated:-1,manipulating:-1,manipulation:-1,manslaughter:-3,marvel:3,marvelous:3,marvels:3,masterpiece:4,masterpieces:4,matter:1,matters:1,mature:2,meaningful:2,meaningless:-2,medal:3,mediocrity:-3,meditative:1,melancholy:-2,memorable:1,memoriam:-2,menace:-2,menaced:-2,menaces:-2,mercy:2,merry:3,mesmerizing:3,mess:-2,messed:-2,"messing up":-2,methodical:2,methodically:2,mindless:-2,miracle:4,mirth:3,mirthful:3,mirthfully:3,misbehave:-2,misbehaved:-2,misbehaves:-2,misbehaving:-2,misbranding:-3,miscast:-2,mischief:-1,mischiefs:-1,misclassified:-2,misclassifies:-2,misclassify:-2,misconduct:-2,misconducted:-2,misconducting:-2,misconducts:-2,miserable:-3,miserably:-3,misery:-2,misfire:-2,misfortune:-2,misgiving:-2,misinformation:-2,misinformed:-2,misinterpreted:-2,mislead:-3,misleaded:-3,misleading:-3,misleads:-3,misplace:-2,misplaced:-2,misplaces:-2,misplacing:-2,mispricing:-3,misread:-1,misreport:-2,misreported:-2,misreporting:-2,misreports:-2,misrepresent:-2,misrepresentation:-2,misrepresentations:-2,misrepresented:-2,misrepresenting:-2,misrepresents:-2,miss:-2,missed:-2,missing:-2,mistake:-2,mistaken:-2,mistakes:-2,mistaking:-2,misunderstand:-2,misunderstanding:-2,misunderstands:-2,misunderstood:-2,misuse:-2,misused:-2,misuses:-2,misusing:-2,moan:-2,moaned:-2,moaning:-2,moans:-2,mock:-2,mocked:-2,mocking:-2,mocks:-2,modernize:2,modernized:2,modernizes:2,modernizing:2,mongering:-2,monopolize:-2,monopolized:-2,monopolizes:-2,monopolizing:-2,monotone:-1,moody:-1,mope:-1,moping:-1,moron:-3,motherfucker:-5,motherfucking:-5,motivate:1,motivated:2,motivating:2,motivation:1,mourn:-2,mourned:-2,mournful:-2,mourning:-2,mourns:-2,muddy:-2,mumpish:-2,murder:-2,murderer:-2,murdering:-3,murderous:-3,murders:-2,murky:-2,myth:-1,n00b:-2,naive:-2,narcissism:-2,nasty:-3,natural:1,"naïve":-2,needy:-2,negative:-2,negativity:-2,neglect:-2,neglected:-2,neglecting:-2,neglects:-2,nerves:-1,nervous:-2,nervously:-2,nice:3,nifty:2,niggas:-5,nigger:-5,no:-1,"no fun":-3,noble:2,noblest:2,noisy:-1,"non-approved":-2,nonsense:-2,noob:-2,nosey:-2,"not good":-2,"not working":-3,notable:2,noticeable:2,notorious:-2,novel:2,numb:-1,nurturing:2,nuts:-3,obliterate:-2,obliterated:-2,obnoxious:-3,obscene:-2,obscenity:-2,obsessed:2,obsolete:-2,obstacle:-2,obstacles:-2,obstinate:-2,obstruct:-2,obstructed:-2,obstructing:-2,obstruction:-2,obstructs:-2,odd:-2,offence:-2,offences:-2,offend:-2,offended:-2,offender:-2,offending:-2,offends:-2,offense:-2,offenses:-2,offensive:-2,offensively:-2,offline:-1,oks:2,ominous:3,"once-in-a-lifetime":3,oops:-2,opportunities:2,opportunity:2,oppressed:-2,oppression:-2,oppressions:-2,oppressive:-2,optimism:2,optimistic:2,optionless:-2,ostracize:-2,ostracized:-2,ostracizes:-2,ouch:-2,outage:-2,outages:-2,outbreak:-2,outbreaks:-2,outcry:-2,outmaneuvered:-2,outnumbered:-2,outrage:-3,outraged:-3,outrageous:-3,outreach:2,outstanding:5,overjoyed:4,overload:-1,overlooked:-1,overprotective:-2,overran:-2,overreact:-2,overreacted:-2,overreacting:-2,overreaction:-2,overreacts:-2,oversell:-2,overselling:-2,oversells:-2,oversight:-1,oversimplification:-2,oversimplified:-2,oversimplifies:-2,oversimplify:-2,oversold:-2,overstatement:-2,overstatements:-2,overweight:-1,overwrought:-3,oxymoron:-1,pain:-2,pained:-2,painful:-2,panic:-3,panicked:-3,panics:-3,paradise:3,paradox:-1,pardon:2,pardoned:2,pardoning:2,pardons:2,parley:-1,passion:1,passionate:2,passive:-1,passively:-1,pathetic:-2,pay:-1,peace:2,peaceful:2,peacefully:2,penalize:-2,penalized:-2,penalizes:-2,penalizing:-2,penalty:-2,pensive:-1,perfect:3,perfected:2,perfection:3,perfectly:3,perfects:2,peril:-2,perjury:-3,perpetrated:-2,perpetrator:-2,perpetrators:-2,perplexed:-2,persecute:-2,persecuted:-2,persecutes:-2,persecuting:-2,perturbed:-2,pervert:-3,pesky:-2,pessimism:-2,pessimistic:-2,petrified:-2,philanthropy:2,phobic:-2,picturesque:2,pileup:-1,pillage:-2,pique:-2,piqued:-2,piss:-4,pissed:-4,pissing:-3,piteous:-2,pitied:-1,pity:-2,plague:-3,plagued:-3,plagues:-3,plaguing:-3,playful:2,pleasant:3,please:1,pleased:3,pleasurable:3,pleasure:3,plodding:-2,poignant:2,pointless:-2,poised:-2,poison:-2,poisoned:-2,poisons:-2,polished:2,polite:2,politeness:2,pollutant:-2,pollute:-2,polluted:-2,polluter:-2,polluters:-2,pollutes:-2,pollution:-2,poor:-2,poorer:-2,poorest:-2,poorly:-2,popular:3,popularity:3,positive:2,positively:2,possessive:-2,"post-traumatic":-2,postpone:-1,postponed:-1,postpones:-1,postponing:-1,poverty:-1,powerful:2,powerless:-2,praise:3,praised:3,praises:3,praising:3,pray:1,praying:1,prays:1,prblm:-2,prblms:-2,predatory:-2,prepared:1,pressure:-1,pressured:-2,pretend:-1,pretending:-1,pretends:-1,pretty:1,prevent:-1,prevented:-1,preventing:-1,prevents:-1,prick:-5,prison:-2,prisoner:-2,prisoners:-2,privileged:2,proactive:2,problem:-2,problems:-2,profit:2,profitable:2,profiteer:-2,profits:2,progress:2,prohibit:-1,prohibits:-1,prominent:2,promise:1,promised:1,promises:1,promote:1,promoted:1,promotes:1,promoting:1,promptly:1,propaganda:-2,prosecute:-1,prosecuted:-2,prosecutes:-1,prosecution:-1,prospect:1,prospects:1,prosperity:3,prosperous:3,protect:1,protected:1,protects:1,protest:-2,protesters:-2,protesting:-2,protests:-2,proud:2,proudly:2,provoke:-1,provoked:-1,provokes:-1,provoking:-1,prudence:2,pseudoscience:-3,psychopathic:-2,punish:-2,punished:-2,punishes:-2,punishing:-2,punitive:-2,pure:1,purest:1,purposeful:2,pushy:-1,puzzled:-2,quaking:-2,qualities:2,quality:2,questionable:-2,questioned:-1,questioning:-1,racism:-3,racist:-3,racists:-3,rage:-2,rageful:-2,rainy:-1,rant:-3,ranter:-3,ranters:-3,rants:-3,rape:-4,raped:-4,rapist:-4,rapture:2,raptured:2,raptures:2,rapturous:4,rash:-2,ratified:2,reach:1,reached:1,reaches:1,reaching:1,reassure:1,reassured:1,reassures:1,reassuring:2,rebel:-2,rebellion:-2,rebels:-2,recession:-2,reckless:-2,recognition:2,recommend:2,recommended:2,recommends:2,redeemed:2,refine:1,refined:1,refines:1,refreshingly:2,refuse:-2,refused:-2,refuses:-2,refusing:-2,regret:-2,regretful:-2,regrets:-2,regretted:-2,regretting:-2,reigning:1,reject:-1,rejected:-1,rejecting:-1,rejection:-2,rejects:-1,rejoice:4,rejoiced:4,rejoices:4,rejoicing:4,relaxed:2,relentless:-1,reliability:2,reliable:2,reliably:2,reliant:2,relieve:1,relieved:2,relieves:1,relieving:2,relishing:2,remarkable:2,remorse:-2,repellent:-2,repercussion:-2,repercussions:-2,reprimand:-2,reprimanded:-2,reprimanding:-2,reprimands:-2,repulse:-1,repulsed:-2,repulsive:-2,rescue:2,rescued:2,rescues:2,resentful:-2,resign:-1,resigned:-1,resigning:-1,resigns:-1,resolute:2,resolution:2,resolve:2,resolved:2,resolves:2,resolving:2,respect:2,respected:2,respects:2,responsibility:1,responsible:2,responsive:2,restful:2,restless:-2,restore:1,restored:1,restores:1,restoring:1,restrict:-2,restricted:-2,restricting:-2,restriction:-2,restrictive:-1,restricts:-2,retained:-1,retard:-2,retarded:-2,retreat:-1,revenge:-2,revengeful:-2,revered:2,revive:2,revives:2,revolting:-2,reward:2,rewarded:2,rewarding:2,rewards:2,rich:2,richly:2,ridiculous:-3,rig:-1,rigged:-1,"right direction":3,righteousness:2,rightful:2,rightfully:2,rigorous:3,rigorously:3,riot:-2,riots:-2,rise:1,rises:1,risk:-2,risks:-2,risky:-2,riveting:3,rob:-2,robber:-2,robed:-2,robing:-2,robs:-2,robust:2,rofl:4,roflcopter:4,roflmao:4,romance:2,romantical:2,romantically:2,rose:1,rotfl:4,rotflmfao:4,rotflol:4,rotten:-3,rude:-2,ruin:-2,ruined:-2,ruining:-2,ruins:-2,sabotage:-2,sad:-2,sadden:-2,saddened:-2,sadly:-2,safe:1,safely:1,safer:2,safety:1,salient:1,salute:2,saluted:2,salutes:2,saluting:2,salvation:2,sappy:-1,sarcastic:-2,satisfied:2,savange:-2,savanges:-2,save:2,saved:2,savings:1,scam:-2,scams:-2,scandal:-3,scandalous:-3,scandals:-3,scapegoat:-2,scapegoats:-2,scare:-2,scared:-2,scar:-2,scars:-2,scary:-2,sceptical:-2,scold:-2,scoop:3,scorn:-2,scornful:-2,scream:-2,screamed:-2,screaming:-2,screams:-2,screwed:-2,"screwed up":-3,scum:-3,scumbag:-4,seamless:2,seamlessly:2,secure:2,secured:2,secures:2,sedition:-2,seditious:-2,seduced:-1,"self-abuse":-2,"self-confident":2,"self-contradictory":-2,"self-deluded":-2,selfish:-3,selfishness:-3,sentence:-2,sentenced:-2,sentences:-2,sentencing:-2,serene:2,settlement:1,settlements:1,severe:-2,severely:-2,sexist:-2,sexistic:-2,sexy:3,shaky:-2,shame:-2,shamed:-2,shameful:-2,share:1,shared:1,shares:1,shattered:-2,shit:-4,shithead:-4,shitty:-3,shock:-2,shocked:-2,shocking:-2,shocks:-2,shoody:-2,shoot:-1,"short-sighted":-2,"short-sightedness":-2,shortage:-2,shortages:-2,shrew:-4,shy:-1,sick:-2,sickness:-2,"side-effect":-2,"side-effects":-2,sigh:-2,significance:1,significant:1,silencing:-1,silly:-1,simplicity:1,sin:-2,sincere:2,sincerely:2,sincerest:2,sincerity:2,sinful:-3,singleminded:-2,sinister:-2,sins:-2,skeptic:-2,skeptical:-2,skepticism:-2,skeptics:-2,slam:-2,slash:-2,slashed:-2,slashes:-2,slashing:-2,slave:-3,slavery:-3,slaves:-3,sleeplessness:-2,slick:2,slicker:2,slickest:2,slip:-1,sloppy:-2,sluggish:-2,slumping:-1,slut:-5,smart:1,smarter:2,smartest:2,smear:-2,smile:2,smiled:2,smiles:2,smiling:2,smog:-2,smuggle:-2,smuggled:-2,smuggling:-2,smuggles:-2,sneaky:-1,sneeze:-2,sneezed:-2,sneezes:-2,sneezing:-2,snub:-2,snubbed:-2,snubbing:-2,snubs:-2,sobering:1,solemn:-1,solid:2,solidarity:2,solidified:2,solidifies:2,solidify:2,solidifying:2,solution:1,solutions:1,solve:1,solved:1,solves:1,solving:1,somber:-2,"some kind":0,"son-of-a-bitch":-5,soothe:3,soothed:3,soothing:3,sophisticated:2,sore:-1,sorrow:-2,sorrowful:-2,sorry:-1,spacious:1,spam:-2,spammer:-3,spammers:-3,spamming:-2,spark:1,sparkle:3,sparkles:3,sparkling:3,spearhead:2,speculative:-2,spirit:1,spirited:2,spiritless:-2,spiteful:-2,splendid:3,spoiled:-2,spoilt:-2,spotless:2,sprightly:2,squander:-2,squandered:-2,squandering:-2,squanders:-2,squelched:-1,stab:-2,stabbed:-2,stable:2,stabs:-2,stall:-2,stalled:-2,stalling:-2,stamina:2,stampede:-2,stank:-2,startled:-2,startling:3,starve:-2,starved:-2,starves:-2,starving:-2,steadfast:2,steal:-2,stealing:-2,steals:-2,stereotype:-2,stereotyped:-2,stifled:-1,stimulate:1,stimulated:1,stimulates:1,stimulating:2,stingy:-2,stink:-2,stinked:-2,stinker:-2,stinking:-2,stinks:-2,stinky:-2,stole:-2,stolen:-2,stop:-1,stopped:-1,stopping:-1,stops:-1,stout:2,straight:1,strange:-1,strangely:-1,strangled:-2,strength:2,strengthen:2,strengthened:2,strengthening:2,strengthens:2,strengths:2,stress:-1,stressed:-2,stressor:-2,stressors:-2,stricken:-2,strike:-1,strikers:-2,strikes:-1,strong:2,stronger:2,strongest:2,struck:-1,struggle:-2,struggled:-2,struggles:-2,struggling:-2,stubborn:-2,stuck:-2,stunned:-2,stunning:4,stupid:-2,stupidity:-3,stupidly:-2,suave:2,subpoena:-2,substantial:1,substantially:1,subversive:-2,succeed:3,succeeded:3,succeeding:3,succeeds:3,success:2,successful:3,successfully:3,suck:-3,sucks:-3,sue:-2,sued:-2,sueing:-2,sues:-2,suffer:-2,suffered:-2,sufferer:-2,sufferers:-2,suffering:-2,suffers:-2,suicidal:-2,suicide:-2,suicides:-2,suing:-2,suitable:2,suited:2,sulking:-2,sulky:-2,sullen:-2,sunshine:2,super:3,superb:5,superior:2,support:2,supported:2,supporter:1,supporters:1,supporting:1,supportive:2,supports:2,supreme:4,survived:2,surviving:2,survivor:2,suspect:-1,suspected:-1,suspecting:-1,suspects:-1,suspend:-1,suspended:-1,suspicious:-2,sustainability:1,sustainable:2,sustainably:2,swear:-2,swearing:-2,swears:-2,sweet:2,sweeter:3,sweetest:3,swift:2,swiftly:2,swindle:-3,swindles:-3,swindling:-3,sympathetic:2,sympathy:2,taint:-2,tainted:-2,talent:2,tard:-2,tarnish:-2,tarnished:-2,tarnishes:-2,tears:-2,tender:2,tenderness:2,tense:-2,tension:-1,terrible:-3,terribly:-3,terrific:4,terrifically:4,terrified:-3,terror:-3,terrorist:-2,terrorists:-2,terrorize:-3,terrorized:-3,terrorizes:-3,thank:2,thankful:2,thanks:2,thorny:-2,thoughtful:2,thoughtless:-2,threat:-2,threaten:-2,threatened:-2,threatening:-2,threatens:-2,threats:-2,thrilled:5,thwart:-2,thwarted:-2,thwarting:-2,thwarts:-2,timid:-2,timorous:-2,tired:-2,tits:-2,tolerance:2,tolerant:2,toothless:-2,top:2,tops:2,torn:-2,torture:-4,tortured:-4,tortures:-4,torturing:-4,totalitarian:-2,totalitarianism:-2,tout:-2,touted:-2,touting:-2,touts:-2,toxic:-3,tragedies:-2,tragedy:-2,tragic:-2,tranquil:2,transgress:-2,transgressed:-2,transgresses:-2,transgressing:-2,trap:-1,trapped:-2,traps:-1,trauma:-3,traumatic:-3,travesty:-2,treason:-3,treasonous:-3,treasure:2,treasures:2,trembling:-2,tremor:-2,tremors:-2,tremulous:-2,tribulation:-2,tribute:2,tricked:-2,trickery:-2,triumph:4,triumphant:4,troll:-2,trouble:-2,troubled:-2,troubles:-2,troubling:-2,true:2,trust:1,trusted:2,trusts:1,tumor:-2,twat:-5,tyran:-3,tyrannic:-3,tyrannical:-3,tyrannically:-3,tyrans:-3,ubiquitous:2,ugh:-2,ugliness:-3,ugly:-3,unable:-2,unacceptable:-2,unappeasable:-2,unappreciated:-2,unapproved:-2,unattractive:-2,unavailable:-1,unavailing:-2,unaware:-2,unbearable:-2,unbelievable:-1,unbelieving:-1,unbiased:2,uncertain:-1,unclear:-1,uncomfortable:-2,unconcerned:-2,unconfirmed:-1,unconvinced:-1,uncredited:-1,undecided:-1,undercooked:-2,underestimate:-1,underestimated:-1,underestimates:-1,underestimating:-1,undermine:-2,undermined:-2,undermines:-2,undermining:-2,underperform:-2,underperformed:-2,underperforming:-2,underperforms:-2,undeserving:-2,undesirable:-2,uneasy:-2,unemployed:-1,unemployment:-2,unequal:-1,unequaled:2,unethical:-2,uneventful:-2,unfair:-2,unfavorable:-2,unfit:-2,unfitted:-2,unfocused:-2,unforgivable:-3,unforgiving:-2,unfulfilled:-2,unfunny:-2,ungenerous:-2,ungrateful:-3,unhappy:-2,unhappiness:-2,unhealthy:-2,unhygienic:-2,unified:1,unimaginative:-2,unimpressed:-2,uninspired:-2,unintelligent:-2,unintentional:-2,uninvolving:-2,united:1,unjust:-2,unlikely:-1,unlovable:-2,unloved:-2,unmatched:1,unmotivated:-2,unoriginal:-2,unparliamentary:-2,unpleasant:-2,unpleasantness:-2,unprofessional:-2,unravel:1,unreleting:-2,unresearched:-2,unsafe:-2,unsatisfied:-2,unscientific:-2,unsecured:-2,unselfish:2,unsettled:-1,unsold:-1,unsophisticated:-2,unsound:-2,unstable:-2,unstoppable:2,unsuccessful:-2,unsuccessfully:-2,unsupported:-2,unsure:-1,untarnished:2,untrue:-2,unwanted:-2,unworthy:-2,uplifting:2,uproar:-3,upset:-2,upsets:-2,upsetting:-2,uptight:-2,urgent:-1,useful:2,usefulness:2,useless:-2,uselessness:-2,vague:-2,validate:1,validated:1,validates:1,validating:1,vapid:-2,verdict:-1,verdicts:-1,vested:1,vexation:-2,vexing:-2,vibrant:3,vicious:-2,victim:-3,victimization:-3,victimize:-3,victimized:-3,victimizes:-3,victimizing:-3,victims:-3,victor:3,victors:3,victory:3,victories:3,vigilant:3,vigor:3,vile:-3,vindicate:2,vindicated:2,vindicates:2,vindicating:2,violate:-2,violated:-2,violates:-2,violating:-2,violation:-2,violations:-2,violence:-3,"violence-related":-3,violent:-3,violently:-3,virtuous:2,virulent:-2,vision:1,visionary:3,visioning:1,visions:1,vitality:3,vitamin:1,vitriolic:-3,vivacious:3,vividly:2,vociferous:-1,vomit:-3,vomited:-3,vomiting:-3,vomits:-3,vulnerability:-2,vulnerable:-2,walkout:-2,walkouts:-2,wanker:-3,want:1,war:-2,warfare:-2,warm:1,warmhearted:2,warmness:2,warmth:2,warn:-2,warned:-2,warning:-3,warnings:-3,warns:-2,waste:-1,wasted:-2,wasting:-2,wavering:-1,weak:-2,weakened:-2,weakness:-2,weaknesses:-2,wealth:3,wealthier:2,wealthy:2,weary:-2,weep:-2,weeping:-2,weird:-2,welcome:2,welcomed:2,welcomes:2,"well-being":2,"well-championed":3,"well-developed":2,"well-established":2,"well-focused":2,"well-groomed":2,"well-proportioned":2,whimsical:1,whitewash:-3,whore:-4,wicked:-2,widowed:-1,willingness:2,win:4,winner:4,winning:4,wins:4,winwin:3,wisdom:1,wish:1,wishes:1,wishing:1,withdrawal:-3,wits:2,woebegone:-2,woeful:-3,won:3,wonderful:4,wonderfully:4,woo:3,woohoo:3,wooo:4,woow:4,worn:-1,worried:-3,worries:-3,worry:-3,worrying:-3,worse:-3,worsen:-3,worsened:-3,worsening:-3,worsens:-3,worshiped:3,worst:-3,worth:2,worthless:-2,worthy:2,wow:4,wowow:4,wowww:4,wrathful:-3,wreck:-2,wrenching:-2,wrong:-2,wrongdoing:-2,wrongdoings:-2,wronged:-2,wrongful:-2,wrongfully:-2,wrongly:-2,wtf:-4,wtff:-4,wtfff:-4,xo:3,xoxo:3,xoxoxo:4,xoxoxoxo:4,yeah:1,yearning:1,yeees:2,yes:1,youthful:2,yucky:-2,yummy:3,zealot:-2,zealots:-2,zealous:2},scoringStrategy:{apply:function(e,t,n){if(t>0){var r=e[t-1];Fe[r]&&(n=-n)}return n}}};Object.assign($e.labels,_e);var Oe={en:$e},Me={addLanguage:function(e,t){if(!t.labels)throw new Error("language.labels must be defined!");Object.assign(t.labels,_e),Oe[e]=t},getLanguage:function(e){if(!e)return Oe.en;if(!Oe[e])try{var t=function(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}("../languages/"+e+"/index");this.addLanguage(e,t)}catch(t){throw new Error("No language found: "+e)}return Oe[e]},getLabels:function(e){return this.getLanguage(e).labels},applyScoringStrategy:function(e,t,n,r){return(this.getLanguage(e).scoringStrategy||Le).apply(t,n,r)}},Le={apply:function(e,t,n){return n}},Pe=function(e){return e.toLowerCase().replace(/\n/g," ").replace(/[.,\/#!?$%\^&\*;:{}=_`\"~()]/g," ").replace(/\s\s+/g," ").trim().split(" ")},Be=Me,ze=function(e){this.options=e};ze.prototype.registerLanguage=function(e,t){Be.addLanguage(e,t)},ze.prototype.analyze=function(e,t,n){void 0===e&&(e=""),"function"==typeof t&&(n=t,t={});var r=(t=t||{}).language||"en",a=Be.getLabels(r);"object"==typeof t.extras&&(a=Object.assign(a,t.extras));for(var i=Pe(e),s=0,o=[],u=[],l=[],c=[],h=i.length;h--;){var d=i[h];if(a.hasOwnProperty(d)){o.push(d);var p=a[d];(p=Be.applyScoringStrategy(r,i,h,p))>0&&u.push(d),p<0&&l.push(d),s+=p;var f={};f[d]=p,c.push(f)}}var m={score:s,comparative:i.length>0?s/i.length:0,calculation:c,tokens:i,words:o,positive:u,negative:l};if("function"!=typeof n)return m;process.nextTick((function(){n(null,m)}))};var We=ze,Ve=function(e,t){return(Ve=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(e,t){function n(){this.constructor=e}Ve(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function Ge(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function He(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var je=function(){function e(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return e.prototype.setPlatform=function(e,t){null!=this.platform&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+t+"."),this.platformName=e,this.platform=t},e.prototype.registerFlag=function(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){var r=this.urlFlags[e];console.warn("Setting feature override from URL "+e+": "+r+"."),this.set(e,r)}},e.prototype.get=function(e){return e in this.flags||(this.flags[e]=this.evaluateFlag(e)),this.flags[e]},e.prototype.getNumber=function(e){return this.get(e)},e.prototype.getBool=function(e){return this.get(e)},e.prototype.getFlags=function(){return this.flags},Object.defineProperty(e.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),e.prototype.set=function(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag "+e+" as it has not been registered.");this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)},e.prototype.evaluateFlag=function(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '"+e+"': no evaluation function found.");return this.flagRegistry[e].evaluationFn()},e.prototype.setFlags=function(e){this.flags=Object.assign({},e)},e.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},e.prototype.populateURLFlags=function(){var e=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var t,n,r=(t=this.global.location.search,n={},t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(n,t[0],t[1]),t.join("=")})),n);"tfjsflags"in r&&r.tfjsflags.split(",").forEach((function(t){var n=t.split(":"),r=n[0],a=n[1];e.urlFlags[r]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error("Could not parse value flag value "+t+" for flag "+e+".")}(r,a)}))}},e}();function qe(){return Ke}var Ke=null,Xe=new Map,Ye=new Map;function Qe(e,t){var n=nt(e,t);return Xe.get(n)}function Je(e){return Ye.get(e)}function Ze(e){for(var t=Xe.entries(),n=[];;){var r=t.next(),a=r.done,i=r.value;if(a)break;var s=i[0],o=i[1];s.split("_")[0]===e&&n.push(o)}return n}function et(e){var t=e.kernelName,n=e.backendName,r=nt(t,n);if(Xe.has(r))throw new Error("The kernel '"+t+"' for backend '"+n+"' is already registered");Xe.set(r,e)}function tt(e){var t=e.kernelName;Ye.has(t)&&console.warn("Overriding the gradient for '"+t+"'"),Ye.set(t,e)}function nt(e,t){return t+"_"+e}function rt(e){for(var t=e.length,n=0,r=0;t>0;)r=Math.random()*t|0,n=e[--t],e[t]=e[r],e[r]=n}function at(e,t,n){return Math.max(e,Math.min(t,n))}function it(e){return e%2==0?e:e+1}function st(e){for(var t=0,n=0;n<e.length;n++)t+=e[n];return t}function ot(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ut(e,t,n){void 0===n&&(n=""),ot(dt(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))}function lt(e){ot(null!=e,(function(){return"The input to the tensor constructor must be a non-null value."}))}function ct(e,t,n){if(void 0===t&&(t=[]),void 0===n&&(n=!1),null==t&&(t=[]),Array.isArray(e)||Nt(e)&&!n)for(var r=0;r<e.length;++r)ct(e[r],t,n);else t.push(e);return t}function ht(e){if(0===e.length)return 1;for(var t=e[0],n=1;n<e.length;n++)t*=e[n];return t}function dt(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function pt(e){return e%1==0}function ft(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)}function mt(e){var t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function gt(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function vt(e,t,n){return void 0===t&&(t=function(e){return 0}),new Promise((function(r,a){var i=0,s=function(){if(e())r();else{i++;var o=t(i);null!=n&&i>=n?a():setTimeout(s,o)}};s()}))}function yt(e,t){for(var n=1,r=-1,a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+a);r=a}else if(e[a]<0)throw Error("Shapes can not be < 0. Found "+e[a]+" at dim "+a);if(-1===r){if(t>0&&t!==n)throw Error("Size("+t+") must match the product of shape "+e);return e}if(0===n)throw Error("Cannot infer the missing size in ["+e+"] when there are 0 elements");if(t%n!=0)throw Error("The implicit shape can't be a fractional number. Got "+t+" / "+n);var i=e.slice();return i[r]=t/n,i}function bt(e,t){var n=t.length;return ot((e=null==e?t.map((function(e,t){return t})):[].concat(e)).every((function(e){return e>=-n&&e<n})),(function(){return"All values in axis param must be in range [-"+n+", "+n+") but got axis "+e})),ot(e.every((function(e){return pt(e)})),(function(){return"All values in axis param must be integers but got axis "+e})),e.map((function(e){return e<0?n+e:e}))}function xt(e,t){for(var n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:bt(t,e).sort(),s=0,o=0;o<e.length;++o){if(null!=i){if(i[s]===o&&1!==e[o])throw new Error("Can't squeeze axis "+o+" since its dim '"+e[o]+"' is not 1");(null==i[s]||i[s]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),i[s]<=o&&s++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function wt(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function kt(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function It(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+t+" being uploaded contains "+r+".")}}function Ct(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function St(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Nt(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Tt(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Et(e){if(null==e)return 0;var t=0;return e.forEach((function(e){return t+=e.length})),t}function Rt(e){return"string"==typeof e||e instanceof String}function At(e){return"boolean"==typeof e}function Dt(e){return"number"==typeof e}function Ft(e){return Array.isArray(e)?Ft(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Dt(e)?"float32":Rt(e)?"string":At(e)?"bool":"float32"}function _t(e){return!!(e&&e.constructor&&e.call&&e.apply)}function $t(e,t){for(var n=t;n<e;++n)if(e%n==0)return n;return e}function Ot(e){var t=e.length;if(t<2)return[];var n=new Array(t-1);n[t-2]=e[t-1];for(var r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Mt(e,t,n){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ct(e)),n&&It(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){for(var r=new Uint8Array(e.length),a=0;a<r.length;++a)0!==Math.round(e[a])&&(r[a]=1);return r}throw new Error("Unknown data type "+t)}function Lt(e,t){if(0===e.length)return t[0];var n=e.reduce((function(e,t){return e*t}));if(0===n)return[];if(n!==t.length)throw new Error("["+e+"] does not match the input size.");return function e(t,n,r){var a=new Array;if(1===n.length)for(var i=n[0],s=0;s<i;s++)a[s]=r[t+s];else{i=n[0];var o=n.slice(1),u=o.reduce((function(e,t){return e*t}));for(s=0;s<i;s++)a[s]=e(t+s*u,o,r)}return a}(0,e,t)}function Pt(e,t){for(var n=Bt(e,t),r=0;r<n.length;r++)n[r]=1;return n}function Bt(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function zt(){return qe().platform.now()}function Wt(e){e.forEach((function(t){ot(Number.isInteger(t)&&t>=0,(function(){return"Tensor must have a shape comprised of positive integers but got shape ["+e+"]."}))}))}function Vt(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",qe().platform.encode(e,t)}function Ut(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",qe().platform.decode(e,t)}function Gt(e,t,n){if(0===t)return 0;if(1===t)return e[0];for(var r=e[e.length-1],a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Ht(e,t,n){if(0===t)return[];if(1===t)return[e];for(var r=new Array(t),a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}var jt=Object.freeze({shuffle:rt,clamp:at,nearestLargerEven:it,sum:st,randUniform:function(e,t){var n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){for(var n=0,r=0;r<e.length;r++){var a=Number(e[r])-Number(t[r]);n+=a*a}return n},assert:ot,assertShapesMatch:ut,assertNonNull:lt,flatten:ct,sizeFromShape:ht,isScalarShape:function(e){return 0===e.length},arraysEqual:dt,isInt:pt,tanh:ft,sizeToSquarishShape:mt,createShuffledIndices:function(e){for(var t=new Uint32Array(e),n=0;n<e;++n)t[n]=n;return rt(t),t},rightPad:gt,repeatedTry:vt,inferFromImplicitShape:yt,parseAxisParam:bt,squeezeShape:xt,getTypedArrayFromDType:wt,getArrayFromDType:kt,checkConversionForErrors:It,isValidDtype:Ct,hasEncodingLoss:St,isTypedArray:Nt,bytesPerElement:Tt,bytesFromStringArray:Et,isString:Rt,isBoolean:At,isNumber:Dt,inferDtype:Ft,isFunction:_t,nearestDivisor:$t,computeStrides:Ot,toTypedArray:Mt,toNestedArray:Lt,makeOnesTypedArray:Pt,makeZerosTypedArray:Bt,now:zt,assertNonNegativeIntegerDimensions:Wt,fetch:function(e,t){return qe().platform.fetch(e,t)},encodeString:Vt,decodeString:Ut,locToIndex:Gt,indexToLoc:Ht}),qt=function(){function e(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Kt)}return e.prototype.profileKernel=function(e,t,n){var r,a=this,i=this.backendTimer.time((function(){r=n()}));return r.forEach((function(n){n.data().then((function(r){!function(e,t,n){if("float32"!==t)return!1;for(var r=0;r<e.length;r++){var a=e[r];if(isNaN(a)||!isFinite(a))return console.warn("Found "+a+" in the result of '"+n+"'"),!0}}(r,n.dtype,e),i.then((function(i){var s="";null!=i.getExtraProfileInfo&&(s=i.getExtraProfileInfo()),a.logger.logKernelProfile(e,n,r,i.kernelMs,t,s)}))}))})),r},e}(),Kt=function(){function e(){}return e.prototype.logKernelProfile=function(e,t,n,r,a,i){var s="number"==typeof r?gt(r+"ms",9):r.error,o=gt(e,25),u=t.rank,l=t.size,c=gt(t.shape.toString(),14),h="";for(var d in a){var p=a[d].shape||t.shape,f=p.length;h+=d+": "+f+"D "+(f>0?p:"")+" "}console.log("%c"+o+"\t%c"+s+"\t%c"+u+"D "+c+"\t%c"+l+"\t%c"+h+"\t%c"+i,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},e}(),Xt=7;function Yt(e,t,n){return gt(Array.isArray(e)?parseFloat(e[0].toFixed(Xt))+" + "+parseFloat(e[1].toFixed(Xt))+"j":Rt(e)?"'"+e+"'":"bool"===n?Qt(e):parseFloat(e.toFixed(Xt)).toString(),t)}function Qt(e){return 0===e?"false":"true"}function Jt(e){for(var t=[],n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Zt=function(){function e(e,t,n){var r=this;if(this.dtype=t,this.shape=e.slice(),this.size=ht(e),null!=n){var a=n.length;ot(a===this.size,(function(){return"Length of values '"+a+"' does not match the size inferred by the shape '"+r.size+"'."}))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||kt(t,this.size),this.strides=Ot(e)}return e.prototype.set=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),ot(n.length===this.rank,(function(){return"The number of provided coordinates ("+n.length+") must match the rank ("+t.rank+")"}));var a=this.locToIndex(n);this.values[a]=e},e.prototype.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];0===e.length&&(e=[0]);for(var n=0,r=0,a=e;r<a.length;r++){var i=a[r];if(i<0||i>=this.shape[n]){var s="Requested out of range element at "+e+".   Buffer shape="+this.shape;throw new Error(s)}n++}for(var o=e[e.length-1],u=0;u<e.length-1;++u)o+=this.strides[u]*e[u];return this.values[o]},e.prototype.locToIndex=function(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];for(var t=e[e.length-1],n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t},e.prototype.indexToLoc=function(e){if(0===this.rank)return[];if(1===this.rank)return[e];for(var t=new Array(this.shape.length),n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.toTensor=function(){return en().makeTensor(this.values,this.shape,this.dtype)},e}(),en=null,tn=null,nn=null,rn=function(){function e(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ht(e),this.strides=Ot(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}return e.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},e.prototype.asScalar=function(){return this.throwIfDisposed(),ot(1===this.size,(function(){return"The array must have only 1 element."})),this.reshape([])},e.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},e.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},e.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),this.reshape([e,t,n])},e.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),this.reshape([e,t,n,r])},e.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),this.reshape([e,t,n,r,a])},e.prototype.asType=function(e){return this.throwIfDisposed(),tn.cast(this,e)},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.buffer=function(){return Ge(this,void 0,void 0,(function(){var e;return He(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,tn.buffer(this.shape,this.dtype,e)]}}))}))},e.prototype.bufferSync=function(){return tn.buffer(this.shape,this.dtype,this.dataSync())},e.prototype.array=function(){return Ge(this,void 0,void 0,(function(){var e;return He(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,Lt(this.shape,e)]}}))}))},e.prototype.arraySync=function(){return Lt(this.shape,this.dataSync())},e.prototype.data=function(){return Ge(this,void 0,void 0,(function(){var e,t;return He(this,(function(n){switch(n.label){case 0:return this.throwIfDisposed(),e=en().read(this.dataId),"string"!==this.dtype?[3,2]:[4,e];case 1:t=n.sent();try{return[2,t.map((function(e){return Ut(e)}))]}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}n.label=2;case 2:return[2,e]}}))}))},e.prototype.dataSync=function(){this.throwIfDisposed();var e=en().readSync(this.dataId);if("string"===this.dtype)try{return e.map((function(e){return Ut(e)}))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e},e.prototype.bytes=function(){return Ge(this,void 0,void 0,(function(){var e;return He(this,(function(t){switch(t.label){case 0:return this.throwIfDisposed(),[4,en().read(this.dataId)];case 1:return e=t.sent(),"string"===this.dtype?[2,e]:[2,new Uint8Array(e.buffer)]}}))}))},e.prototype.dispose=function(){this.isDisposed||(en().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(e.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),e.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},e.prototype.toFloat=function(){return this.asType("float32")},e.prototype.toInt=function(){return this.asType("int32")},e.prototype.toBool=function(){return this.asType("bool")},e.prototype.print=function(e){return void 0===e&&(e=!1),tn.print(this,e)},e.prototype.reshape=function(e){return this.throwIfDisposed(),tn.reshape(this,e)},e.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},e.prototype.expandDims=function(e){return void 0===e&&(e=0),tn.expandDims(this,e)},e.prototype.cumsum=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=!1),void 0===n&&(n=!1),tn.cumsum(this,e,t,n)},e.prototype.squeeze=function(e){return this.throwIfDisposed(),tn.squeeze(this,e)},e.prototype.clone=function(){return this.throwIfDisposed(),tn.clone(this)},e.prototype.toString=function(e){return void 0===e&&(e=!1),function(e,t,n,r){var a=Ot(t),i=function(e,t,n,r){var a=ht(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?Jt(e):e;if(o>1)for(var l=0;l<a/i;l++)for(var c=l*i,h=0;h<i;h++)s[h]=Math.max(s[h],Yt(u[c+h],0,n).length);return s}(e,t,n,a),s=t.length,o=function e(t,n,r,a,i,s){void 0===s&&(s=!0);var o="complex64"===r?2:1,u=n[0],l=n.length;if(0===l)return"complex64"===r?[Yt(Jt(t)[0],0,r)]:"bool"===r?[Qt(t[0])]:[t[0].toString()];if(1===l){if(u>20){var c=3*o,h=Array.from(t.slice(0,c)),d=Array.from(t.slice((u-3)*o,u*o));return"complex64"===r&&(h=Jt(h),d=Jt(d)),["["+h.map((function(e,t){return Yt(e,i[t],r)})).join(", ")+", ..., "+d.map((function(e,t){return Yt(e,i[u-3+t],r)})).join(", ")+"]"]}return["["+("complex64"===r?Jt(t):Array.from(t)).map((function(e,t){return Yt(e,i[t],r)})).join(", ")+"]"]}var p=n.slice(1),f=a.slice(1),m=a[0]*o,g=[];if(u>20){for(var v=0;v<3;v++){var y=(b=v*m)+m;g.push.apply(g,e(t.slice(b,y),p,r,f,i,!1))}for(g.push("..."),v=u-3;v<u;v++)y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),p,r,f,i,v===u-1))}else for(v=0;v<u;v++){var b;y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),p,r,f,i,v===u-1))}var x=2===l?",":"";for(g[0]="["+g[0]+x,v=1;v<g.length-1;v++)g[v]=" "+g[v]+x;var w=",\n";for(v=2;v<l;v++)w+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":w),g}(e,t,n,a,i),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+s),u.push("  shape: ["+t+"]"),u.push("  values:")),u.push(o.map((function(e){return"    "+e})).join("\n")),u.join("\n")}(this.dataSync(),this.shape,this.dtype,e)},e.prototype.gather=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),tn.gather(this,e,t)},e.prototype.matMul=function(e,t,n){return void 0===t&&(t=!1),void 0===n&&(n=!1),this.throwIfDisposed(),tn.matMul(this,e,t,n)},e.prototype.dot=function(e){return this.throwIfDisposed(),tn.dot(this,e)},e.prototype.norm=function(e,t,n){return void 0===e&&(e="euclidean"),void 0===t&&(t=null),void 0===n&&(n=!1),this.throwIfDisposed(),tn.norm(this,e,t,n)},e.prototype.slice=function(e,t){return this.throwIfDisposed(),tn.slice(this,e,t)},e.prototype.reverse=function(e){return this.throwIfDisposed(),tn.reverse(this,e)},e.prototype.concat=function(t,n){return void 0===n&&(n=0),this.throwIfDisposed(),t instanceof e&&(t=[t]),tn.concat([this].concat(t),n)},e.prototype.split=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),tn.split(this,e,t)},e.prototype.stack=function(e,t){return void 0===t&&(t=0),tn.stack([this,e],t)},e.prototype.unstack=function(e){return void 0===e&&(e=0),tn.unstack(this,e)},e.prototype.batchNormalization=function(e,t,n,r,a){return void 0===n&&(n=.001),nn("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(e,t,a,r,n)},e.prototype.all=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.all(this,e,t)},e.prototype.any=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.any(this,e,t)},e.prototype.logSumExp=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.logSumExp(this,e,t)},e.prototype.sum=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.sum(this,e,t)},e.prototype.prod=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.prod(this,e,t)},e.prototype.mean=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.mean(this,e,t)},e.prototype.min=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.min(this,e,t)},e.prototype.max=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),tn.max(this,e,t)},e.prototype.argMin=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),tn.argMin(this,e)},e.prototype.argMax=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),tn.argMax(this,e)},e.prototype.cast=function(e){return this.throwIfDisposed(),tn.cast(this,e)},e.prototype.addStrict=function(e){return this.throwIfDisposed(),tn.addStrict(this,e)},e.prototype.atan2=function(e){return this.throwIfDisposed(),tn.atan2(this,e)},e.prototype.sub=function(e){return this.throwIfDisposed(),tn.sub(this,e)},e.prototype.subStrict=function(e){return this.throwIfDisposed(),tn.subStrict(this,e)},e.prototype.pow=function(e){return this.throwIfDisposed(),tn.pow(this,e)},e.prototype.powStrict=function(e){return this.throwIfDisposed(),tn.powStrict(this,e)},e.prototype.mul=function(e){return this.throwIfDisposed(),tn.mul(this,e)},e.prototype.mulStrict=function(e){return this.throwIfDisposed(),tn.mulStrict(this,e)},e.prototype.floorDiv=function(e){return this.throwIfDisposed(),tn.floorDiv(this,e)},e.prototype.divStrict=function(e){return this.throwIfDisposed(),tn.divStrict(this,e)},e.prototype.minimum=function(e){return this.throwIfDisposed(),tn.minimum(this,e)},e.prototype.minimumStrict=function(e){return this.throwIfDisposed(),tn.minimumStrict(this,e)},e.prototype.maximum=function(e){return this.throwIfDisposed(),tn.maximum(this,e)},e.prototype.maximumStrict=function(e){return this.throwIfDisposed(),tn.maximumStrict(this,e)},e.prototype.mod=function(e){return this.throwIfDisposed(),tn.mod(this,e)},e.prototype.modStrict=function(e){return this.throwIfDisposed(),tn.modStrict(this,e)},e.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),tn.squaredDifferenceStrict(this,e)},e.prototype.notEqual=function(e){return this.throwIfDisposed(),tn.notEqual(this,e)},e.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),tn.notEqualStrict(this,e)},e.prototype.less=function(e){return this.throwIfDisposed(),tn.less(this,e)},e.prototype.lessStrict=function(e){return this.throwIfDisposed(),tn.lessStrict(this,e)},e.prototype.equal=function(e){return this.throwIfDisposed(),tn.equal(this,e)},e.prototype.equalStrict=function(e){return this.throwIfDisposed(),tn.equalStrict(this,e)},e.prototype.lessEqual=function(e){return this.throwIfDisposed(),tn.lessEqual(this,e)},e.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),tn.lessEqualStrict(this,e)},e.prototype.greater=function(e){return this.throwIfDisposed(),tn.greater(this,e)},e.prototype.greaterStrict=function(e){return this.throwIfDisposed(),tn.greaterStrict(this,e)},e.prototype.greaterEqual=function(e){return this.throwIfDisposed(),tn.greaterEqual(this,e)},e.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),tn.greaterEqualStrict(this,e)},e.prototype.logicalAnd=function(e){return this.throwIfDisposed(),tn.logicalAnd(this,e)},e.prototype.logicalOr=function(e){return this.throwIfDisposed(),tn.logicalOr(this,e)},e.prototype.logicalNot=function(){return this.throwIfDisposed(),tn.logicalNot(this)},e.prototype.logicalXor=function(e){return this.throwIfDisposed(),tn.logicalXor(this,e)},e.prototype.where=function(e,t){return this.throwIfDisposed(),tn.where(e,this,t)},e.prototype.neg=function(){return this.throwIfDisposed(),tn.neg(this)},e.prototype.ceil=function(){return this.throwIfDisposed(),tn.ceil(this)},e.prototype.floor=function(){return this.throwIfDisposed(),tn.floor(this)},e.prototype.sign=function(){return this.throwIfDisposed(),tn.sign(this)},e.prototype.isNaN=function(){return this.throwIfDisposed(),tn.isNaN(this)},e.prototype.isInf=function(){return this.throwIfDisposed(),tn.isInf(this)},e.prototype.isFinite=function(){return this.throwIfDisposed(),tn.isFinite(this)},e.prototype.exp=function(){return this.throwIfDisposed(),tn.exp(this)},e.prototype.expm1=function(){return this.throwIfDisposed(),tn.expm1(this)},e.prototype.log=function(){return this.throwIfDisposed(),tn.log(this)},e.prototype.log1p=function(){return this.throwIfDisposed(),tn.log1p(this)},e.prototype.sqrt=function(){return this.throwIfDisposed(),tn.sqrt(this)},e.prototype.rsqrt=function(){return this.throwIfDisposed(),tn.rsqrt(this)},e.prototype.square=function(){return this.throwIfDisposed(),tn.square(this)},e.prototype.reciprocal=function(){return this.throwIfDisposed(),tn.reciprocal(this)},e.prototype.abs=function(){return this.throwIfDisposed(),tn.abs(this)},e.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),tn.clipByValue(this,e,t)},e.prototype.relu=function(){return this.throwIfDisposed(),tn.relu(this)},e.prototype.relu6=function(){return this.throwIfDisposed(),tn.relu6(this)},e.prototype.elu=function(){return this.throwIfDisposed(),tn.elu(this)},e.prototype.selu=function(){return this.throwIfDisposed(),tn.selu(this)},e.prototype.leakyRelu=function(e){return void 0===e&&(e=.2),this.throwIfDisposed(),tn.leakyRelu(this,e)},e.prototype.prelu=function(e){return this.throwIfDisposed(),tn.prelu(this,e)},e.prototype.sigmoid=function(){return this.throwIfDisposed(),tn.sigmoid(this)},e.prototype.logSigmoid=function(){return this.throwIfDisposed(),tn.logSigmoid(this)},e.prototype.softplus=function(){return this.throwIfDisposed(),tn.softplus(this)},e.prototype.zerosLike=function(){return this.throwIfDisposed(),tn.zerosLike(this)},e.prototype.onesLike=function(){return this.throwIfDisposed(),tn.onesLike(this)},e.prototype.sin=function(){return this.throwIfDisposed(),tn.sin(this)},e.prototype.cos=function(){return this.throwIfDisposed(),tn.cos(this)},e.prototype.tan=function(){return this.throwIfDisposed(),tn.tan(this)},e.prototype.asin=function(){return this.throwIfDisposed(),tn.asin(this)},e.prototype.acos=function(){return this.throwIfDisposed(),tn.acos(this)},e.prototype.atan=function(){return this.throwIfDisposed(),tn.atan(this)},e.prototype.sinh=function(){return this.throwIfDisposed(),tn.sinh(this)},e.prototype.cosh=function(){return this.throwIfDisposed(),tn.cosh(this)},e.prototype.tanh=function(){return this.throwIfDisposed(),tn.tanh(this)},e.prototype.asinh=function(){return this.throwIfDisposed(),tn.asinh(this)},e.prototype.acosh=function(){return this.throwIfDisposed(),tn.acosh(this)},e.prototype.atanh=function(){return this.throwIfDisposed(),tn.atanh(this)},e.prototype.erf=function(){return this.throwIfDisposed(),tn.erf(this)},e.prototype.round=function(){return this.throwIfDisposed(),tn.round(this)},e.prototype.step=function(e){return void 0===e&&(e=0),this.throwIfDisposed(),tn.step(this,e)},e.prototype.softmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),tn.softmax(this,e)},e.prototype.logSoftmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),tn.logSoftmax(this,e)},e.prototype.resizeBilinear=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),tn.image.resizeBilinear(this,e,t)},e.prototype.resizeNearestNeighbor=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),tn.image.resizeNearestNeighbor(this,e,t)},e.prototype.conv1d=function(e,t,n,r,a,i){return void 0===r&&(r="NWC"),void 0===a&&(a=1),this.throwIfDisposed(),tn.conv1d(this,e,t,n,r,a,i)},e.prototype.conv2d=function(e,t,n,r,a,i){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),tn.conv2d(this,e,t,n,r,a,i)},e.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),tn.conv2dTranspose(this,e,t,n,r,a)},e.prototype.depthwiseConv2D=function(e,t,n,r,a,i){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),tn.depthwiseConv2d(this,e,t,n,r,a,i)},e.prototype.separableConv2d=function(e,t,n,r,a,i){return void 0===a&&(a=[1,1]),void 0===i&&(i="NHWC"),this.throwIfDisposed(),tn.separableConv2d(this,e,t,n,r,a,i)},e.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),tn.avgPool(this,e,t,n,r)},e.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),tn.maxPool(this,e,t,n,r)},e.prototype.localResponseNormalization=function(e,t,n,r){return void 0===e&&(e=5),void 0===t&&(t=1),void 0===n&&(n=1),void 0===r&&(r=.5),tn.localResponseNormalization(this,e,t,n,r)},e.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),tn.pool(this,e,t,n,r,a)},e.prototype.variable=function(e,t,n){return void 0===e&&(e=!0),this.throwIfDisposed(),en().makeVariable(this,e,t,n)},e.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),tn.unsortedSegmentSum(this,e,t)},e.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),tn.batchToSpaceND(this,e,t)},e.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),tn.spaceToBatchND(this,e,t)},e.prototype.topk=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),this.throwIfDisposed(),tn.topk(this,e,t)},e.prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return void 0===r&&(r=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===o&&(o=0),this.throwIfDisposed(),tn.stridedSlice(this,e,t,n,r,a,i,s,o)},e.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),tn.depthToSpace(this,e,t)},e.prototype.fft=function(){return this.throwIfDisposed(),tn.spectral.fft(this)},e.prototype.ifft=function(){return this.throwIfDisposed(),tn.spectral.ifft(this)},e.prototype.rfft=function(){return this.throwIfDisposed(),tn.spectral.rfft(this)},e.prototype.irfft=function(){return this.throwIfDisposed(),tn.spectral.irfft(this)},e}();Object.defineProperty(rn,Symbol.hasInstance,{value:function(e){return!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype}});var an,sn,on,un,ln,cn=function(e){function t(t,n,r,a){var i=e.call(this,t.shape,t.dtype,t.dataId,a)||this;return i.trainable=n,i.name=r,i}return Ue(t,e),t.prototype.assign=function(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value ("+e.dtype+") and previous value ("+this.dtype+") must match");if(!dt(e.shape,this.shape))throw new Error("shape of the new value ("+e.shape+") and previous value ("+this.shape+") must match");en().disposeTensor(this),this.dataId=e.dataId,en().incRef(this,null)},t.prototype.dispose=function(){en().disposeVariable(this),this.isDisposedInternal=!0},t}(rn);Object.defineProperty(cn,Symbol.hasInstance,{value:function(e){return e instanceof rn&&null!=e.assign&&e.assign instanceof Function}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(an||(an={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(sn||(sn={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(on||(on={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(un||(un={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ln||(ln={}));var hn,dn={float32:un,int32:sn,bool:on,complex64:ln};function pn(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast "+e+" with "+t)}return dn[e][t]}function fn(e){return pn(e,"int32")}function mn(e,t){if(e.dtype===t.dtype)return[e,t];var n=pn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function gn(e,t){ot(e.dtype===t.dtype,(function(){return"The dtypes of the first("+e.dtype+") and second("+t.dtype+") input must match"}))}function vn(e){var t=[];return function e(t,n,r){if(null!=t)if(t instanceof rn)n.push(t);else if(a=t,Array.isArray(a)||"object"==typeof a){var a,i=t;for(var s in i){var o=i[s];r.has(o)||(r.add(o),e(o,n,r))}}}(e,t,new Set),t}Object.freeze({makeTypesMatch:mn,assertTypesMatch:gn,isTensorInList:function(e,t){return t.some((function(t){return t.id===e.id}))},getTensorsInContainer:vn});var yn=function(){function e(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return e.prototype.dispose=function(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()},e}(),bn=function(){function e(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new yn}return e.prototype.ready=function(){return Ge(this,void 0,void 0,(function(){var e,t,n;return He(this,(function(r){switch(r.label){case 0:if(null!=this.pendingBackendInit)return[2,this.pendingBackendInit.then((function(){}))];if(null!=this.backendInstance)return[2];e=this.getSortedBackends(),t=0,r.label=1;case 1:return t<e.length?(n=e[t],[4,this.initializeBackend(n).success]):[3,5];case 2:return r.sent()?[4,this.setBackend(n)]:[3,4];case 3:return r.sent(),[2];case 4:return t++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}}))}))},Object.defineProperty(e.prototype,"backend",{get:function(){if(null!=this.pendingBackendInit)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){var e=this.initializeBackendsAndReturnBest(),t=e.name;if(e.asyncInit)throw new Error("The highest priority backend '"+t+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance},enumerable:!0,configurable:!0}),e.prototype.backendNames=function(){return Object.keys(this.registryFactory)},e.prototype.findBackend=function(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;if(this.initializeBackend(e).asyncInit)return null}return this.registry[e]},e.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e].factory:null},e.prototype.registerBackend=function(e,t,n){return void 0===n&&(n=1),e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)},e.prototype.setBackend=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r;return He(this,(function(a){switch(a.label){case 0:if(null==this.registryFactory[e])throw new Error("Backend name '"+e+"' not found in registry");return this.backendName=e,null!=this.registry[e]?[3,4]:(this.backendInstance=null,t=this.initializeBackend(e),n=t.success,t.asyncInit?[4,n]:[3,2]);case 1:return r=a.sent(),[3,3];case 2:r=n,a.label=3;case 3:if(!r)return[2,!1];a.label=4;case 4:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new qt(this.backendInstance),[2,!0]}}))}))},e.prototype.setupRegisteredKernels=function(){var e=this;Ze(this.backendName).forEach((function(t){null!=t.setupFunc&&t.setupFunc(e.backendInstance)}))},e.prototype.disposeRegisteredKernels=function(e){var t=this;Ze(e).forEach((function(n){null!=n.disposeFunc&&n.disposeFunc(t.registry[e])}))},e.prototype.initializeBackend=function(e){var t=this,n=this.registryFactory[e];if(null==n)throw new Error("Cannot initialize backend "+e+", no registration found.");try{var r=n.factory();if(Promise.resolve(r)===r){var a=++this.pendingBackendInitId,i=r.then((function(n){return!(a<t.pendingBackendInitId||(t.registry[e]=n,t.pendingBackendInit=null,0))})).catch((function(n){return!(a<t.pendingBackendInitId||(t.pendingBackendInit=null,console.warn("Initialization of backend "+e+" failed"),console.warn(n.stack||n.message),1))}));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(t){return console.warn("Initialization of backend "+e+" failed"),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}},e.prototype.removeBackend=function(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},e.prototype.getSortedBackends=function(){var e=this;if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((function(t,n){return e.registryFactory[n].priority-e.registryFactory[t].priority}))},e.prototype.initializeBackendsAndReturnBest=function(){for(var e=this.getSortedBackends(),t=0;t<e.length;t++){var n=e[t],r=this.initializeBackend(n),a=r.success,i=r.asyncInit;if(i||a)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")},e.prototype.moveData=function(e,t){var n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},e.prototype.tidy=function(e,t){var n,r=this,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((function(){return r.startScope(a)}),(function(){return r.endScope(n)}),(function(){return(n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n}))},e.prototype.scopedRun=function(e,t,n){e();try{var r=n();return t(),r}catch(e){throw t(),e}},e.prototype.nextTensorId=function(){return e.nextTensorId++},e.prototype.nextVariableId=function(){return e.nextVariableId++},e.prototype.clone=function(e){var t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(function(e){return{x:function(){return e.toFloat()}}}),[],{}),t},e.prototype.runKernel=function(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)},e.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},e.prototype.checkKernelForMemLeak=function(e,t,n){var r=this.backend.numDataIds(),a=0;n.forEach((function(e){a+="complex64"===e.dtype?3:1}));var i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+s+" data ids) after running '"+e+"'")},e.prototype.runKernelFunc=function(e,t,n,r,a,i,s){var o,u=this,l=[],c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");var h,d=this.state.numBytes,p=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var f,m=Qe(r,this.backendName);if(null!=m)h=function(){var e=u.backend.numDataIds();f=m.kernelFunc({inputs:t,attrs:a,backend:u.backend});var n=Array.isArray(f)?f:[f];u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,e,n);var o=n.map((function(e){var t=e.dataId,n=e.shape,r=e.dtype;return u.makeTensorFromDataId(t,n,r)}));if(c){var h=u.getTensorsForGradient(r,t,o);if(null==h){null==s&&(s=[]);var d=o.filter((function(e,t){return s[t]}));h=(i||[]).slice().concat(d)}l=u.saveTensorsForBackwardMode(h)}return o};else{var g=function(e){c&&(l=e.map((function(e){return u.keep(u.clone(e))})))};h=function(){var t=u.backend.numDataIds();f=u.tidy((function(){return e(u.backend,g)}));var n=Array.isArray(f)?f:[f];return u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,t,n),n}}return this.scopedRun((function(){return u.state.kernelDepth++}),(function(){return u.state.kernelDepth--}),(function(){o=u.ENV.getBool("DEBUG")?u.profiler.profileKernel(r,t,(function(){return h()})):h()})),c&&this.addTapeNode(r,t,o,n,l,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((function(e){return t[e].shape})),outputShapes:o.map((function(e){return e.shape}))}),Array.isArray(f)?o:o[0]},e.prototype.saveTensorsForBackwardMode=function(e){var t=this;return e.map((function(e){return t.keep(t.clone(e))}))},e.prototype.getTensorsForGradient=function(e,t,n){var r=Je(e);if(null!=r){var a=r.inputsToSave||[],i=r.outputsToSave||[],s=void 0;r.saveAllInputs?(ot(Array.isArray(t),(function(){return"saveAllInputs is true, expected inputs to be an array."})),s=Object.keys(t).map((function(e){return t[e]}))):s=a.map((function(e){return t[e]}));var o=n.filter((function(e,t){return i[t]}));return s.concat(o)}return null},e.prototype.makeTensor=function(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;var a=e;"string"===n&&Rt(e[0])&&(a=e.map((function(e){return Vt(e)})));var i=r.write(a,t,n),s=new rn(t,n,i,this.nextTensorId());if(this.incRef(s,r),"string"===n){var o=this.state.tensorInfo.get(i),u=Et(a);this.state.numBytes+=u-o.bytes,o.bytes=u}return s},e.prototype.makeTensorFromDataId=function(e,t,n,r){var a=new rn(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a},e.prototype.makeVariable=function(e,t,n,r){void 0===t&&(t=!0),n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.asType(r));var a=new cn(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name "+a.name+" was already registered");return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a},e.prototype.incRef=function(e,t){var n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;var r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*Tt(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.state.numBytes+=r}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof cn||this.track(e)},e.prototype.disposeTensor=function(e){if(this.state.tensorInfo.has(e.dataId)){this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;var t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}},e.prototype.disposeVariables=function(){for(var e in this.state.registeredVariables){var t=this.state.registeredVariables[e];this.disposeVariable(t)}},e.prototype.disposeVariable=function(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]},e.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e},e.prototype.profile=function(e){return Ge(this,void 0,void 0,(function(){var t,n;return He(this,(function(r){return this.state.profiling=!0,t=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map((function(e){return e.totalBytesSnapshot}))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,[2,this.state.activeProfile]}))}))},e.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth},e.prototype.addTapeNode=function(e,t,n,r,a,i){var s=this,o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Je(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=function(e){return e=e.map((function(e,t){if(null==e){var r=n[t],a=Bt(r.size,r.dtype);return s.makeTensor(a,r.shape,r.dtype)}return e})),r(e.length>1?e:e[0],a,i)}),this.state.activeTape.push(o)},e.prototype.keep=function(e){return e.kept=!0,e},e.prototype.startTape=function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++},e.prototype.endTape=function(){this.state.gradientDepth--},e.prototype.startScope=function(e){var t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t},e.prototype.endScope=function(e){for(var t=this,n=vn(e),r=new Set(n.map((function(e){return e.id}))),a=0;a<this.state.activeScope.track.length;a++){var i=this.state.activeScope.track[a];i.kept||r.has(i.id)||i.dispose()}var s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach((function(e){e.kept||e.scopeId!==s.id||t.track(e)}))},e.prototype.gradients=function(e,t,n,r){var a=this;if(void 0===r&&(r=!1),ot(t.length>0,(function(){return"gradients() received an empty list of xs."})),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '"+n.dtype+"'");var i=this.scopedRun((function(){return a.startTape()}),(function(){return a.endTape()}),(function(){return a.tidy("forward",e)}));ot(i instanceof rn,(function(){return"The result y returned by f() must be a tensor."}));var s=function(e,t,n){for(var r={},a={},i=0;i<t.length;i++)r[t[i].id]=!0;for(i=0;i<e.length;i++){var s=(f=e[i]).inputs;for(var o in s){for(var u=s[o],l=!1,c=0;c<t.length;c++)if(r[u.id]){f.outputs.forEach((function(e){return r[e.id]=!0})),l=!0,a[f.id]=!0;break}if(l)break}}var h={};h[n.id]=!0;var d={};for(i=e.length-1;i>=0;i--)for(s=(f=e[i]).inputs,c=0;c<f.outputs.length;c++)if(h[f.outputs[c].id]){for(var o in s)h[s[o].id]=!0,d[f.id]=!0;break}var p=[];for(i=0;i<e.length;i++){var f;if(a[(f=e[i]).id]&&d[f.id]){var m={};for(var o in f.inputs){var g=f.inputs[o];r[g.id]&&(m[o]=g)}var v=Object.assign({},f);v.inputs=m,v.outputs=f.outputs,p.push(v)}}return p}(this.state.activeTape,t,i);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(function(){var e,r,o={};o[i.id]=null==n?(r=Pt(ht(e=i.shape),"float32"),xn.makeTensor(r,e,"float32")):n,function(e,t,n){for(var r=function(r){var a=t[r],i=[];if(a.outputs.forEach((function(t){var n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error("Cannot compute gradient: gradient function not found for "+a.kernelName+".");var s=a.gradient(i),o=function(t){if(!(t in s))throw new Error("Cannot backprop through input "+t+". Available gradients found: "+Object.keys(s)+".");var r=n((function(){return s[t]()}));if("float32"!==r.dtype)throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input "+t+" must have 'float32' dtype, but has '"+r.dtype+"'");var i=a.inputs[t];if(!dt(r.shape,i.shape))throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input '"+t+"' has shape '"+r.shape+"', which does not match the shape of the input '"+i.shape+"'");if(null==e[i.id])e[i.id]=r;else{var o=e[i.id];e[i.id]=o.add(r),o.dispose()}};for(var u in a.inputs)o(u)},a=t.length-1;a>=0;a--)r(a)}(o,s,(function(e){return a.tidy(e)}));var u=t.map((function(e){return o[e.id]}));return 0===a.state.gradientDepth&&(a.state.activeTape.forEach((function(e){for(var t=0,n=e.saved;t<n.length;t++)n[t].dispose()})),a.state.activeTape=null),{value:i,grads:u}}))},e.prototype.customGrad=function(e){var t=this;return ot(_t(e),(function(){return"The f passed in customGrad(f) must be a function."})),function(){for(var n,r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];ot(r.every((function(e){return e instanceof rn})),(function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"}));var i={};return r.forEach((function(e,t){i[t]=e})),t.runKernelFunc((function(t,a){return ot((n=e.apply(void 0,r.concat([a]))).value instanceof rn,(function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"})),ot(_t(n.gradFunc),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."})),n.value}),i,(function(e,t){var a=n.gradFunc(e,t),i=Array.isArray(a)?a:[a];ot(i.length===r.length,(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."})),ot(i.every((function(e){return e instanceof rn})),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."}));var s={};return i.forEach((function(e,t){s[t]=function(){return e}})),s}))}},e.prototype.readSync=function(e){return this.state.tensorInfo.get(e).backend.readSync(e)},e.prototype.read=function(e){return this.state.tensorInfo.get(e).backend.read(e)},e.prototype.time=function(e){return Ge(this,void 0,void 0,(function(){var t,n;return He(this,(function(r){switch(r.label){case 0:return t=zt(),[4,this.backend.time(e)];case 1:return(n=r.sent()).wallMs=zt()-t,[2,n]}}))}))},e.prototype.track=function(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e},Object.defineProperty(e.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),e.prototype.reset=function(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new yn,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},e.nextTensorId=0,e.nextVariableId=0,e}(),xn=function(){var e=function(){if(null==hn){var e=void 0;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}hn=e}return hn}();if(null==e._tfengine){var t=new je(e);e._tfengine=new bn(t)}return function(e){Ke=e}(e._tfengine.ENV),en=function(){return e._tfengine},e._tfengine}();function wn(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var kn=qe();kn.registerFlag("DEBUG",(function(){return!1}),(function(e){e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),kn.registerFlag("IS_BROWSER",(function(){return wn()})),kn.registerFlag("IS_NODE",(function(){return"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node})),kn.registerFlag("IS_CHROME",(function(){return"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)})),kn.registerFlag("PROD",(function(){return!1})),kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(function(){return kn.getBool("DEBUG")})),kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(function(){return!0})),kn.registerFlag("IS_TEST",(function(){return!1}));var In,Cn,Sn,Nn={},Tn={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function En(e,t){Nn[e]=t}function Rn(e){e in Nn||(Nn[e]=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(function(t){t.preventDefault(),delete Nn[e]}),!1),1===e?t.getContext("webgl",Tn)||t.getContext("experimental-webgl",Tn):t.getContext("webgl2",Tn)}(e));var t=Nn[e];return t.isContextLost()?(delete Nn[e],Rn(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Nn[e])}function An(e,t){return[t,e]}function Dn(e){var t=ht(e);return mt(Math.ceil(t/4))}function Fn(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function _n(e,t){var n,r,a,i,s,o,u,l,c,h=e;return 2===qe().getNumber("WEBGL_VERSION")?(n=h.R32F,r=h.R16F,a=h.RGBA16F,i=h.RGBA32F,s=h.RED,o=4,u=1,l=h.HALF_FLOAT,c=h.FLOAT):(n=e.RGBA,r=e.RGBA,a=e.RGBA,i=h.RGBA,s=e.RGBA,o=4,u=4,l=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:e.RGBA,downloadUnpackNumChannels:o,defaultNumChannels:u,textureTypeHalfFloat:l,textureTypeFloat:c}}function $n(e,t,n){var r=n();return t&&function(e){var t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Mn(e,t))}(e),r}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(In||(In={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Cn||(Cn={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Sn||(Sn={}));function On(e){return!!(qe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Mn(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function Ln(e,t,n){return sr(e,t,(function(){return e.getExtension(n)}),'Extension "'+n+'" not supported on this browser.')}function Pn(e,t,n){var r=sr(e,t,(function(){return e.createShader(e.VERTEX_SHADER)}),"Unable to create vertex WebGLShader.");if($n(e,t,(function(){return e.shaderSource(r,n)})),$n(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function Bn(e,t,n){var r=sr(e,t,(function(){return e.createShader(e.FRAGMENT_SHADER)}),"Unable to create fragment WebGLShader.");if($n(e,t,(function(){return e.shaderSource(r,n)})),$n(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw function(e,t){var n=Vn.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);for(var r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map((function(e,t){return gt((t+1).toString(),i)+e})),o=0,u=0;u<s.length;u++)o=Math.max(s[u].length,o);var l=s.slice(0,r-1),c=s.slice(r-1,r),h=s.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+gt(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(n,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var zn,Wn,Vn=/ERROR: [0-9]+:([0-9]+):/g;function Un(e,t){return sr(e,t,(function(){return e.createProgram()}),"Unable to create WebGLProgram.")}function Gn(e,t,n){if($n(e,t,(function(){return e.linkProgram(n)})),!1===e.getProgramParameter(n,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}function Hn(e,t,n){if($n(e,t,(function(){return e.validateProgram(n)})),!1===e.getProgramParameter(n,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function jn(e,t,n){var r=sr(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return $n(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),$n(e,t,(function(){return e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function qn(e,t,n){var r=sr(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return $n(e,t,(function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)})),$n(e,t,(function(){return e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function Kn(e,t){return sr(e,t,(function(){return e.createTexture()}),"Unable to create WebGLTexture.")}function Xn(e,t){var n=qe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){var r="["+e+"x"+t+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n)throw r="["+e+"x"+t+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU ["+n+"x"+n+"].")}function Yn(e,t){return sr(e,t,(function(){return e.createFramebuffer()}),"Unable to create WebGLFramebuffer.")}function Qn(e,t,n,r,a,i,s,o){var u=e.getAttribLocation(n,r);return-1!==u&&($n(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,a)})),$n(e,t,(function(){return e.vertexAttribPointer(u,i,e.FLOAT,!1,s,o)})),$n(e,t,(function(){return e.enableVertexAttribArray(u)})),!0)}function Jn(e,t,n,r){or(e,r),$n(e,t,(function(){return e.activeTexture(e.TEXTURE0+r)})),$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)}))}function Zn(e,t,n,r){return sr(e,t,(function(){return e.getUniformLocation(n,r)}),'uniform "'+r+'" not present in program.')}function er(e,t,n){return e.getUniformLocation(t,n)}function tr(e,t,n,r,a,i){$n(e,t,(function(){return Jn(e,t,r,i)})),$n(e,t,(function(){return e.uniform1i(a,i)}))}function nr(e,t,n,r){$n(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,r)})),$n(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}))}function rr(e,t,n){$n(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,n)})),$n(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)}))}function ar(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ir(e,t))}function ir(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function sr(e,t,n,r){var a=$n(e,t,(function(){return n()}));if(null==a)throw new Error(r);return a}function or(e,t){var n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error("textureUnit must be in [gl.TEXTURE0, gl.TEXTURE"+n+"].")}function ur(e,t){return void 0===t&&(t=2),ht(e.slice(0,e.length-t))}function lr(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cr(e){var t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ur(e)].concat(lr(e))),t}function hr(e,t){var n;void 0===t&&(t=!1);var r=qe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(r*=2,1===(e=e.map((function(t,n){return n>=e.length-2?it(e[n]):e[n]}))).length&&(e=[2,e[0]])),2!==e.length){var a=xt(e);e=a.newShape}var i=ht(e);if(e.length<=1&&i<=r)return[1,i];if(2===e.length&&e[0]<=r&&e[1]<=r)return e;if(3===e.length&&e[0]*e[1]<=r&&e[2]<=r)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=r&&e[1]*e[2]<=r)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r)return[e[0],e[1]*e[2]*e[3]];if(t){var s=ur(e),o=2,u=2;return e.length&&(o=(n=lr(e))[0],u=n[1]),mt(i=s*(o/2)*(u/2)).map((function(e){return 2*e}))}return mt(i)}function dr(e){return e%2==0}function pr(e,t){if(dt(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(dr(n)&&dr(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&dr(e[0])&&dr(t[0])}function fr(e){if(null==zn){var t=Rn(e);zn=t.getParameter(t.MAX_TEXTURE_SIZE)}return zn}function mr(e){if(null==Wn){var t=Rn(e);Wn=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Wn)}function gr(e){if(0===e)return 0;var t=Rn(e);return vr(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:vr(t,"EXT_disjoint_timer_query")?1:0}function vr(e,t){return null!=e.getExtension(t)}function yr(e){try{if(null!=Rn(e))return!0}catch(e){return!1}return!1}function br(e){if(0===e)return!1;var t=Rn(e);if(1===e){if(!vr(t,"OES_texture_float"))return!1}else if(!vr(t,"EXT_color_buffer_float"))return!1;return wr(t)}function xr(e){if(0===e)return!1;var t=Rn(e);if(1!==e){if(vr(t,"EXT_color_buffer_float"))return wr(t);if(vr(t,"EXT_color_buffer_half_float")){var n=t.getExtension("EXT_color_buffer_half_float");return function(e,t){var n=_n(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);var a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);var i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),i}(t,n)}return!1}return!!vr(t,"OES_texture_float")&&!!vr(t,"WEBGL_color_buffer_float")&&wr(t)}function wr(e){var t=_n(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);var r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function kr(e){return 2===e&&null!=Rn(e).fenceSync}var Ir=Object.freeze({callAndCheck:$n,canBeRepresented:On,getWebGLErrorMessage:Mn,getExtensionOrThrow:Ln,createVertexShader:Pn,createFragmentShader:Bn,createProgram:Un,linkProgram:Gn,validateProgram:Hn,createStaticVertexBuffer:jn,createStaticIndexBuffer:qn,getNumChannels:function(){return 2===qe().getNumber("WEBGL_VERSION")?1:4},createTexture:Kn,validateTextureSize:Xn,createFramebuffer:Yn,bindVertexBufferToProgramAttribute:Qn,bindTextureUnit:Jn,unbindTextureUnit:function(e,t,n){or(e,n),$n(e,t,(function(){return e.activeTexture(e.TEXTURE0+n)})),$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))},getProgramUniformLocationOrThrow:Zn,getProgramUniformLocation:er,bindTextureToProgramUniformSampler:tr,bindCanvasToFramebuffer:function(e,t){$n(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)})),$n(e,t,(function(){return e.viewport(0,0,e.canvas.width,e.canvas.height)})),$n(e,t,(function(){return e.scissor(0,0,e.canvas.width,e.canvas.height)}))},bindColorTextureToFramebuffer:nr,unbindColorTextureFromFramebuffer:rr,validateFramebuffer:ar,getFramebufferErrorMessage:ir,getBatchDim:ur,getRowsCols:lr,getShapeAs3D:cr,getTextureShapeFromLogicalShape:hr,isReshapeFree:pr,getWebGLMaxTextureSize:fr,resetMaxTextureSize:function(){zn=null},resetMaxTexturesInShader:function(){Wn=null},getMaxTexturesInShader:mr,getWebGLDisjointQueryTimerVersion:gr,hasExtension:vr,isWebGLVersionEnabled:yr,isCapableOfRenderingToFloatTexture:br,isDownloadFloatTextureEnabled:xr,isWebGLFenceEnabled:kr}),Cr=qe();function Sr(e){qe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Nr(e,t){return xn.tidy(e,t)}function Tr(e){vn(e).forEach((function(e){return e.dispose()}))}function Er(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];qe().getBool("IS_TEST")||console.warn.apply(console,e)}function Rr(e,t){var n=e;if(Nt(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];for(var r=[];Array.isArray(n)||Nt(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&qe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],Array.isArray(t)||Nt(t)){ot(n.length>0,(function(){return"Element arr["+r.join("][")+"] should be a primitive, but is an array of "+t.length+" elements"})),ot(t.length===n[0],(function(){return"Element arr["+r.join("][")+"] should have "+n[0]+" elements, but has "+t.length+" elements"}));for(var a=n.slice(1),i=0;i<t.length;++i)e(t[i],a,r.concat(i))}else ot(0===n.length,(function(){return"Element arr["+r.join("][")+"] is a primitive, but should be an array/TypedArray of "+n[0]+" elements"}))}(e,r,[]),r}function Ar(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error("Argument '"+n+"' passed to '"+r+"' must be "+e+" tensor, but got "+t+" tensor")}function Dr(e,t,n,r){if(void 0===r&&(r="numeric"),e instanceof rn)return Ar(r,e.dtype,t,n),e;var a=Ft(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Ar(r,a,t,n),null==e||!Nt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){var i=null==e?"null":e.constructor.name;throw new Error("Argument '"+t+"' passed to '"+n+"' must be a Tensor or TensorLike, but got '"+i+"'")}var s=Rr(e,a);Nt(e)||Array.isArray(e)||(e=[e]);var o="string"!==a?Mt(e,a,qe().getBool("DEBUG")):ct(e,[],!0);return xn.makeTensor(o,s,a)}function Fr(e,t,n,r){if(void 0===r&&(r="numeric"),!Array.isArray(e))throw new Error("Argument "+t+" passed to "+n+" must be a `Tensor[]` or `TensorLike[]`");return e.map((function(e,r){return Dr(e,t+"["+r+"]",n)}),r)}function _r(e,t){for(var n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function $r(e,t,n){for(var r=e.length+t.length,a=[],i=0,s=0,o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function Or(e,t){for(var n=[],r=e.length,a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((function(t){return e[t]}))]}function Mr(e,t){return $r(e,t.map((function(e){return 1})),t)}function Lr(e,t,n){ot(_r(t,n),(function(){return e+" supports only inner-most axes for now. Got axes "+t+" and rank-"+n+" input."}))}function Pr(e,t){if(_r(e,t))return null;for(var n=[],r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((function(e){return n.push(e)})),n}function Br(e){return e.map((function(e,t){return[t,e]})).sort((function(e,t){return e[1]-t[1]})).map((function(e){return e[0]}))}function zr(e,t){for(var n=[],r=t-e;r<t;++r)n.push(r);return n}function Wr(e,t){var n=e[0].length;e.forEach((function(e,t){ot(e.length===n,(function(){return"Error in concat"+n+"D: rank of tensors["+t+"] must be the same as the rank of the rest ("+n+")"}))})),ot(t>=0&&t<n,(function(){return"Error in concat"+n+"D: axis must be between 0 and "+(n-1)+"."}));var r=e[0];e.forEach((function(e,a){for(var i=0;i<n;i++)ot(i===t||e[i]===r[i],(function(){return"Error in concat"+n+"D: Shape of tensors["+a+"] ("+e+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+a+"."}))}))}function Vr(e,t){for(var n=e[0].slice(),r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Ur(e){var t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");var n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));var a=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];xn.startScope(n);try{var a=r.apply(void 0,e);return a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),xn.endScope(a),a}catch(e){throw xn.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}Cr.registerFlag("HAS_WEBGL",(function(){return Cr.getNumber("WEBGL_VERSION")>0})),Cr.registerFlag("WEBGL_VERSION",(function(){return yr(2)?2:yr(1)?1:0})),Cr.registerFlag("WEBGL_BUFFER_SUPPORTED",(function(){return 2===Cr.get("WEBGL_VERSION")})),Cr.registerFlag("WEBGL_CPU_FORWARD",(function(){return!0})),Cr.registerFlag("WEBGL_FORCE_F16_TEXTURES",(function(){return!1})),Cr.registerFlag("WEBGL_PACK",(function(){return Cr.getBool("HAS_WEBGL")})),Cr.registerFlag("WEBGL_PACK_NORMALIZATION",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_PACK_CLIP",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_PACK_DEPTHWISECONV",(function(){return!1})),Cr.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_PACK_REDUCE",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_LAZILY_UNPACK",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_CONV_IM2COL",(function(){return Cr.getBool("WEBGL_PACK")})),Cr.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(function(){return fr(Cr.getNumber("WEBGL_VERSION"))})),Cr.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(function(){return mr(Cr.getNumber("WEBGL_VERSION"))})),Cr.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(function(){var e=Cr.getNumber("WEBGL_VERSION");return 0===e?0:gr(e)})),Cr.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(function(){return Cr.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(e=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))));var e})),Cr.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(function(){return br(Cr.getNumber("WEBGL_VERSION"))})),Cr.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(function(){return!Cr.getBool("WEBGL_FORCE_F16_TEXTURES")&&Cr.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")})),Cr.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(function(){return xr(Cr.getNumber("WEBGL_VERSION"))})),Cr.registerFlag("WEBGL_FENCE_API_ENABLED",(function(){return kr(Cr.getNumber("WEBGL_VERSION"))})),Cr.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(function(){return Cr.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0})),nn=Sr;var Gr=Ur({complex_:function(e,t){var n=Dr(e,"real","complex"),r=Dr(t,"imag","complex");return ut(n.shape,r.shape,"real and imag shapes, "+n.shape+" and "+r.shape+", must match in call to tf.complex()."),xn.runKernelFunc((function(e){return e.complex(n,r)}),{$real:n,$imag:r})}}),Hr=Ur({real_:function(e){var t=Dr(e,"input","real");return xn.runKernelFunc((function(e){return e.real(t)}),{$input:t})}}),jr=Ur({imag_:function(e){var t=Dr(e,"input","imag");return xn.runKernelFunc((function(e){return e.imag(t)}),{$input:t})}});function qr(e,t,n){return Kr(e,t,Rr(e,n),n)}function Kr(e,t,n,r){if(null==r&&(r=Ft(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Nt(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Wt(t);var a=ht(t),i=ht(n);ot(a===i,(function(){return"Based on the provided shape, ["+t+"], the tensor should have "+a+" values but has "+i}));for(var s=0;s<n.length;++s){var o=n[s],u=s!==n.length-1||o!==ht(t.slice(s));ot(n[s]===t[s]||!u,(function(){return"Error creating a new Tensor. Inferred shape ("+n+") does not match the provided shape ("+t+"). "}))}}return Nt(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Mt(e,r,qe().getBool("DEBUG")):ct(e,[],!0),xn.makeTensor(e,t,r)}function Xr(e,t){if((Nt(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Nt(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Kr(e,[],[],t)}function Yr(e,t){lt(e);var n=Rr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Kr(e,null,n,t)}function Qr(e,t,n){if(lt(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");var r=Rr(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Kr(e,t,r,n)}function Jr(e,t,n){if(lt(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");var r=Rr(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Kr(e,t,r,n)}function Zr(e,t,n){if(lt(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");var r=Rr(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Kr(e,t,r,n)}function ea(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=ea(e,"float32"),r=ta(e,"float32");return Gr(n,r)}var a=Pt(ht(e),t);return xn.makeTensor(a,e,t)}function ta(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=ta(e,"float32"),r=ta(e,"float32");return Gr(n,r)}var a=Bt(ht(e),t);return xn.makeTensor(a,e,t)}function na(e,t,n){return xn.runKernelFunc((function(r){return r.fill(e,t,n)}),{})}function ra(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return xn.runKernelFunc((function(r){return r.linspace(e,t,n)}),{})}function aa(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r="float32"),0===n)throw new Error("Cannot have a step of zero");if(e===t||e<t&&n<0||t<e&&n>1)return ta([0],r);var a=Bt(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(var i=1;i<a.length;i++)a[i]=a[i-1]+n;return Yr(a,r)}var ia=Ur({onesLike_:function(e){var t=Dr(e,"x","onesLike");if("complex64"===t.dtype){var n=ia(Hr(t)),r=sa(jr(t));return Gr(n,r)}return xn.runKernelFunc((function(e){return e.onesLike(t)}),{x:t},(function(e,t){return{x:function(){return sa(e)}}}),"OnesLike")}}),sa=Ur({zerosLike_:function(e){var t=Dr(e,"x","zerosLike");return xn.runKernelFunc((function(e){return e.zerosLike(t)}),{x:t},(function(e,t){return{x:function(){return sa(e)}}}),"ZerosLike")}}),oa=Ur({concat_:function(e,t){void 0===t&&(t=0),ot(e.length>=1,(function(){return"Pass at least one tensor to concat"}));var n=Fr(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((function(e){if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype "+e.dtype+". ")})),t=bt(t,n[0].shape)[0];var r=Vr(n.map((function(e){return e.shape})),t);if(0===ht(r))return qr([],r);if(1===(n=n.filter((function(e){return e.size>0}))).length)return n[0];var a=n.map((function(e){return e.shape}));Wr(a,t);var i=n,s={axis:t};return xn.runKernelFunc((function(e){return e.concat(n,t)}),i,(function(e){var n=a.map((function(e){return e[t]}));return da(e,n,t).map((function(e){return function(){return e}}))}),"Concat",s)}}),ua=Ur({concat1d_:function(e){return oa(e,0)}}),la=Ur({concat2d_:function(e,t){return oa(e,t)}}),ca=Ur({concat3d_:function(e,t){return oa(e,t)}}),ha=Ur({concat4d_:function(e,t){return oa(e,t)}}),da=Ur({split_:function(e,t,n){void 0===n&&(n=0);var r,a=Dr(e,"x","split");return n=bt(n,a.shape)[0],"number"==typeof t?(ot(a.shape[n]%t==0,(function(){return"Number of splits must evenly divide the axis."})),r=new Array(t).fill(a.shape[n]/t)):(ot(a.shape[n]===t.reduce((function(e,t){return e+t})),(function(){return"The sum of sizes must match the size of the axis dimension."})),r=t),xn.runKernelFunc((function(e){return e.split(a,r,n)}),{$x:a},(function(e){return{$x:function(){return oa(e,n)}}}))}});function pa(e,t,n){return void 0===t&&(t="float32"),t=t||"float32",Wt(e),new Zt(e,t,n)}var fa=Ur({batchToSpaceND_:function(e,t,n){var r=Dr(e,"x","batchToSpaceND"),a=t.reduce((function(e,t){return e*t}));return ot(r.rank>=1+t.length,(function(){return"input rank is "+r.rank+" but should be > than blockShape.length "+t.length})),ot(n.length===t.length,(function(){return"crops.length is "+n.length+" but should be equal to blockShape.length  "+t.length})),ot(r.shape[0]%a==0,(function(){return"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+t.join(" * ")+" === "+a})),xn.runKernelFunc((function(e){return e.batchToSpaceND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.spaceToBatchND(t,n)}}}))}}),ma=Ur({cast_:function(e,t){var n=Dr(e,"x","cast");if(!Ct(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");var r={dtype:t};return xn.runKernelFunc((function(e){return e.cast(n,t)}),{x:n},(function(e){return{x:function(){return e.clone()}}}),"Cast",r)}}),ga=Ur({cumsum_:function(e,t,n,r){void 0===t&&(t=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var a=Dr(e,"x","cumsum"),i=Pr([t|=0],a.rank),s=a;null!=i&&(s=a.transpose(i));var o=zr(1,a.rank)[0],u=xn.runKernelFunc((function(e){return e.cumsum(s,o,n,r)}),{permutedX:s},(function(e){return{permutedX:function(){return e.cumsum(t,n,!r)}}}));return null!=i&&(u=u.transpose(i)),u}}),va=Ur({depthToSpace_:function(e,t,n){void 0===n&&(n="NHWC");var r=Dr(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];return ot(a*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+a+" and "+t+"  for depthToSpace with input shape\n      "+r.shape})),ot(i*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+i+" and "+t+" for depthToSpace with input shape\n          "+r.shape})),ot(s%(t*t)==0,(function(){return"Dimension size must be evenly divisible by "+t*t+" but is "+s+" for depthToSpace with input shape "+r.shape})),xn.runKernelFunc((function(e){return e.depthToSpace(r,t,n)}),{$x:r})}}),ya=Ur({expandDims_:function(e,t){void 0===t&&(t=0);var n=Dr(e,"x","expandDims",null);ot(t<=n.rank,(function(){return"Axis must be <= rank of the tensor"}));var r=n.shape.slice();return t<0&&(ot(-(n.rank+1)<=t,(function(){return"Axis must be in the interval ["+-(n.rank+1)+", "+n.rank+"]"})),t=n.rank+t+1),r.splice(t,0,1),ba(n,r)}}),ba=Ur({reshape_:function(e,t){var n=Dr(e,"x","reshape",null);t=yt(t,n.size),ot(n.size===ht(t),(function(){return"new shape and old shape must have the same number of elements."}));var r={shape:t};return xn.runKernelFunc((function(e){return e.reshape(n,t)}),{x:n},(function(e){return{x:function(){return e.reshape(n.shape)}}}),"Reshape",r)}}),xa=Ur({spaceToBatchND_:function(e,t,n){var r=Dr(e,"x","spaceToBatchND");return ot(r.rank>=1+t.length,(function(){return"input rank "+r.rank+" should be > than [blockShape] "+t.length})),ot(n.length===t.length,(function(){return"paddings.shape[0] "+n.length+" must be equal to [blockShape] "+t.length})),ot(r.shape.reduce((function(e,r,a){return a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e}),!0),(function(){return"input spatial dimensions "+r.shape.slice(1)+" with paddings "+n.toString()+" must be divisible by blockShapes "+t.toString()})),xn.runKernelFunc((function(e){return e.spaceToBatchND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.batchToSpaceND(t,n)}}}))}}),wa=Ur({squeeze_:function(e,t){var n=Dr(e,"x","squeeze");return ba(n,xt(n.shape,t).newShape)}}),ka=Ur({stack_:function(e,t){void 0===t&&(t=0);var n=Fr(e,"tensors","stack");if(ot(n.length>=1,(function(){return"Pass at least one tensor to tf.stack"})),1===n.length)return n[0].expandDims(t);var r=n[0].rank,a=n[0].shape,i=n[0].dtype;ot(t<=r,(function(){return"Axis must be <= rank of the tensor"})),n.forEach((function(e){ut(a,e.shape,"All tensors passed to stack must have matching shapes")})),n.forEach((function(e){ot(i===e.dtype,(function(){return"All tensors passed to stack must have matching dtypes"}))}));var s=n.map((function(e){return e.expandDims(t)}));return oa(s,t)}}),Ia=Ur({unstack_:function(e,t){void 0===t&&(t=0),t=t||0;var n=Dr(e,"x","unstack");ot(t>=-n.shape.length&&t<n.shape.length,(function(){return"Axis = "+t+" is not in [-"+n.shape.length+", "+n.shape.length+")"})),t<0&&(t+=n.shape.length);var r={axis:t};return xn.runKernelFunc((function(e){return e.unstack(n,t)}),{x:n},(function(e){return{x:function(){return ka(e,t)}}}),"Unpack",r)}}),Ca=function(e,t){return Ge(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c,h;return He(this,(function(d){switch(d.label){case 0:return n=Dr(e,"x","setdiff1d"),r=Dr(t,"y","setdiff1d"),ot(n.dtype===r.dtype,(function(){return"x and y should have the same dtype, but got x ("+n.dtype+") and y ("+r.dtype+")."})),ot(1===n.rank,(function(){return"x should be 1D tensor, but got x ("+n.shape+")."})),ot(1===r.rank,(function(){return"y should be 1D tensor, but got y ("+r.shape+")."})),[4,n.data()];case 1:return a=d.sent(),[4,r.data()];case 2:for(i=d.sent(),s=new Set(i),o=0,c=0;c<a.length;c++)s.has(a[c])||o++;for(u=new Zt([o],n.dtype),l=new Zt([o],"int32"),c=0,h=0;c<a.length;c++)s.has(a[c])||(u.values[h]=a[c],l.values[h]=c,h++);return[2,[u.toTensor(),l.toTensor()]]}}))}))};function Sa(e,t,n,r){void 0===r&&(r=!0);var a=[];if(r)(a=a.concat(t.slice(0))).push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);for(var i=t.length,s=0;s<i;++s)a=a.concat([e[s+1]/t[s],t[s]]);a=a.concat(e.slice(i+1))}return a}function Na(e,t,n){void 0===n&&(n=!0);var r=[];if(n){r.push(t);for(var a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{var i=[],s=[];for(a=1;a<e;++a)a>=2*t+1||a%2==1?s.push(a):i.push(a);r.push.apply(r,i),r.push(0),r.push.apply(r,s)}return r}function Ta(e,t,n,r){void 0===r&&(r=!0);var a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(var i=1;i<e.length;++i)i<=t.length?r?a.push(t[i-1]*e[i]):a.push(e[i]/t[i-1]):a.push(e[i]);return a}function Ea(e,t){for(var n=[0],r=0;r<t;++r)n.push(e[r][0]);return n}function Ra(e,t,n){for(var r=e.slice(0,1),a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Aa="Div",Da="SquaredDifference",Fa="BroadcastTo",_a="OneHot",$a="Identity",Oa="Tile",Ma="PadV2",La=Ur({add_:function(e,t){var n,r=Dr(e,"a","add"),a=Dr(t,"b","add");n=mn(r,a),r=n[0],a=n[1];var i={a:r,b:a};return xn.runKernelFunc((function(e,t){var n=e.add(r,a);return t([r,a]),n}),i,null,"Add")}});function Pa(e,t){for(var n=e.length,r=[],a=0;a<n;a++){var i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function Ba(e,t){for(var n=[],r=0;r<t.length;r++){var a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function za(e,t){for(var n=[],r=Math.max(e.length,t.length),a=0;a<r;a++){var i=e[e.length-a-1];null==i&&(i=1);var s=t[t.length-a-1];if(null==s&&(s=1),1===i)n.unshift(s);else if(1===s)n.unshift(i);else{if(i!==s)throw Error("Operands could not be broadcast together with shapes "+e+" and "+t+".");n.unshift(i)}}return n}var Wa=Ur({abs_:function(e){var t=Dr(e,"x","abs");return"complex64"===t.dtype?xn.runKernelFunc((function(e){return e.complexAbs(t)}),{$x:t}):xn.runKernelFunc((function(e,n){var r=e.abs(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().step(-1))}}}),"Abs")}}),Va=Ur({acos_:function(e){var t=Dr(e,"x","acos");return xn.runKernelFunc((function(e,n){var r=e.acos(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Xr(1).sub(n.toFloat().square()).sqrt()).neg()}}}))}}),Ua=Ur({acosh_:function(e){var t=Dr(e,"x","acosh");return xn.runKernelFunc((function(e,n){var r=e.acosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(n.toFloat().square().sub(1).sqrt())}}}))}}),Ga=Ur({asin_:function(e){var t=Dr(e,"x","asin");return xn.runKernelFunc((function(e,n){var r=e.asin(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Xr(1).sub(n.toFloat().square()).sqrt())}}}))}}),Ha=Ur({asinh_:function(e){var t=Dr(e,"x","asinh");return xn.runKernelFunc((function(e,n){var r=e.asinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Xr(1).add(n.toFloat().square()).sqrt())}}}))}}),ja=Ur({atan_:function(e){var t=Dr(e,"x","atan");return xn.runKernelFunc((function(e,n){var r=e.atan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().square().add(1))}}}))}}),qa=Ur({atanh_:function(e){var t=Dr(e,"x","atanh");return xn.runKernelFunc((function(e,n){var r=e.atanh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(Xr(1).sub(n.toFloat().square()))}}}))}}),Ka=Ur({ceil_:function(e){var t=Dr(e,"x","ceil");return xn.runKernelFunc((function(e){return e.ceil(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),Xa=Ur({clipByValue_:function(e,t,n){var r=Dr(e,"x","clipByValue");ot(t<=n,(function(){return"Error in clip: min ("+t+") must be less than or equal to max ("+n+")."}));var a=[r],i={min:t,max:n};return xn.runKernelFunc((function(e,a){var i=e.clip(r,t,n);return a([r]),i}),{x:r},(function(e,r){var a=r[0];return{x:function(){return e.where(a.greaterEqual(t).logicalAnd(a.lessEqual(n)),sa(e))}}}),"ClipByValue",i,a)}}),Ya=Ur({cos_:function(e){var t=Dr(e,"x","cos"),n=[t];return xn.runKernelFunc((function(e,n){var r=e.cos(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().sin().neg().mul(e)}}}),"Cos",{},n)}}),Qa=Ur({cosh_:function(e){var t=Dr(e,"x","cosh");return xn.runKernelFunc((function(e,n){var r=e.cosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().sinh().mulStrict(e)}}}))}}),Ja=Ur({erf_:function(e){var t=Dr(e,"x","erf");return ot("int32"===t.dtype||"float32"===t.dtype,(function(){return"Input dtype must be `int32` or `float32`."})),"int32"===t.dtype&&(t=t.toFloat()),xn.runKernelFunc((function(e,n){var r=e.erf(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}}))}}),Za=Ur({exp_:function(e){var t=Dr(e,"x","exp");return xn.runKernelFunc((function(e,n){var r=e.exp(t);return n([r]),r}),{x:t},(function(e,t){return{x:function(){return e.mulStrict(t[0])}}}),"Exp",{},[],[!0])}}),ei=Ur({expm1_:function(e){var t=Dr(e,"x","expm1");return xn.runKernelFunc((function(e,n){var r=e.expm1(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.exp())}}}))}}),ti=Ur({floor_:function(e){var t=Dr(e,"x","floor");return xn.runKernelFunc((function(e){return e.floor(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),ni=Ur({log_:function(e){var t=Dr(e,"x","log"),n=[t];return xn.runKernelFunc((function(e,n){var r=e.log(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.toFloat())}}}),"Log",{},n)}}),ri=Ur({log1p_:function(e){var t=Dr(e,"x","log1p");return xn.runKernelFunc((function(e,n){var r=e.log1p(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.add(1))}}}))}}),ai=Ur({logSigmoid_:function(e){var t=Dr(e,"x","logSigmoid");return xn.runKernelFunc((function(e,n){var r=e.softplus(t.neg()).neg();return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.neg().sigmoid())}}}))}}),ii=Ur({neg_:function(e){var t=Dr(e,"x","neg"),n=[t];return xn.runKernelFunc((function(e){return e.neg(t)}),{x:t},(function(e){return{x:function(){return e.neg()}}}),"Neg",{},n)}}),si=Ur({reciprocal_:function(e){var t=Dr(e,"x","reciprocal");return xn.runKernelFunc((function(e,n){var r=e.reciprocal(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.square().neg())}}}))}}),oi=Ur({round_:function(e){var t=Dr(e,"x","round");return xn.runKernelFunc((function(e){return e.round(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),ui=Ur({rsqrt_:function(e){var t=Dr(e,"x","rsqrt"),n=[t];return xn.runKernelFunc((function(e,n){var r=e.rsqrt(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.pow(1.5).mul(2)).neg()}}}),"Rsqrt",{},n)}}),li=Ur({sigmoid_:function(e){var t=Dr(e,"x","sigmoid");return xn.runKernelFunc((function(e,n){var r=e.sigmoid(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.mul(Xr(1).sub(n)))}}}),"Sigmoid")}}),ci=Ur({sign_:function(e){var t=Dr(e,"x","sign");return xn.runKernelFunc((function(e){return e.sign(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),hi=Ur({isNaN_:function(e){var t=Dr(e,"x","isNaN");return xn.runKernelFunc((function(e){return e.isNaN(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),di=Ur({isInf_:function(e){var t=Dr(e,"x","isInf");return xn.runKernelFunc((function(e){return e.isInf(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),pi=Ur({isFinite_:function(e){var t=Dr(e,"x","isFinite");return xn.runKernelFunc((function(e){return e.isFinite(t)}),{$x:t},(function(e){return{$x:function(){return sa(e)}}}))}}),fi=Ur({sin_:function(e){var t=Dr(e,"x","sin"),n=[t];return xn.runKernelFunc((function(e,n){var r=e.sin(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().cos().mul(e)}}}),"Sin",{},n)}}),mi=Ur({sinh_:function(e){var t=Dr(e,"x","sinh");return xn.runKernelFunc((function(e,n){var r=e.sinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().cosh().mulStrict(e)}}}))}}),gi=Ur({softplus_:function(e){var t=Dr(e,"x","softplus");return xn.runKernelFunc((function(e,n){var r=e.softplus(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.sigmoid())}}}))}}),vi=Ur({sqrt_:function(e){var t=Dr(e,"x","sqrt");return xn.runKernelFunc((function(e,n){var r=e.sqrt(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().sqrt().mul(2))}}}))}}),yi=Ur({step_:function(e,t){void 0===t&&(t=0);var n=Dr(e,"x","step");return xn.runKernelFunc((function(e){return e.step(n,t)}),{$x:n},(function(e){return{$x:function(){return sa(e)}}}))}}),bi=Ur({tan_:function(e){var t=Dr(e,"x","tan");return xn.runKernelFunc((function(e,n){var r=e.tan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.cos().square())}}}))}}),xi=Ur({tanh_:function(e){var t=Dr(e,"x","tanh");return xn.runKernelFunc((function(e,n){var r=e.tanh(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return Xr(1).sub(n.square()).mulStrict(e)}}}),"Tanh",{},null,[!0])}}),wi=Ur({addStrict_:function(e,t){var n=Dr(e,"a","addStrict"),r=Dr(t,"b","addStrict");return ut(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),ki=Ur({atan2_:function(e,t){var n,r=Dr(e,"a","atan2"),a=Dr(t,"b","atan2");n=mn(r,a),r=n[0],a=n[1];var i=za(r.shape,a.shape);return xn.runKernelFunc((function(e,t){var n=e.atan2(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=La(n.square(),r.square()),a=e.mul(r.div(t)),s=Ba(n.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(n.shape)},$b:function(){var t=La(n.square(),r.square()),a=ii(e.mul(n.div(t))),s=Ba(r.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(r.shape)}}}))}}),Ii=Ur({divStrict_:function(e,t){var n=Dr(e,"a","div"),r=Dr(t,"b","div");return ut(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),Ci=Ur({floorDiv_:function(e,t){var n,r=Dr(e,"a","floorDiv"),a=Dr(t,"b","floorDiv");n=mn(r,a),r=n[0],a=n[1];var i=za(r.shape,a.shape);return xn.runKernelFunc((function(e,t){var n=e.floorDiv(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.div(r.toFloat()),a=Ba(n.shape,i);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=Ba(r.shape,i);a.length>0&&(t=t.sum(a).reshape(r.shape));var s=r.square();return t.div(s.toFloat()).neg()}}}),"FloorDiv")}}),Si=Ur({maximum_:function(e,t){var n,r=Dr(e,"a","maximum"),a=Dr(t,"b","maximum");return n=mn(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),za(r.shape,a.shape),xn.runKernelFunc((function(e,t){var n=e.maximum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.greaterEqual(r).toFloat())},b:function(){return e.mul(n.less(r).toFloat())}}}),"Maximum")}}),Ni=Ur({maximumStrict_:function(e,t){var n=Dr(e,"a","maximumStrict"),r=Dr(t,"b","maximumStrict");return ut(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),Ti=Ur({minimum_:function(e,t){var n,r=Dr(e,"a","minimum"),a=Dr(t,"b","minimum");return n=mn(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),za(r.shape,a.shape),xn.runKernelFunc((function(e,t){var n=e.minimum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.lessEqual(r).toFloat())},b:function(){return e.mul(n.greater(r).toFloat())}}}),"Minimum")}}),Ei=Ur({minimumStrict_:function(e,t){var n=Dr(e,"a","minimumStrict"),r=Dr(t,"b","minimumStrict");return ut(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),Ri=Ur({mod_:function(e,t){var n,r=Dr(e,"a","mod"),a=Dr(t,"b","mod");n=mn(r,a),r=n[0],a=n[1];var i=za(r.shape,a.shape);return xn.runKernelFunc((function(e,t){var n=e.mod(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=Ba(n.shape,i);return t.length>0?e.sum(t).reshape(n.shape):e},$b:function(){var t=e.mul(n.div(r).floor().neg()),a=Ba(r.shape,i);return a.length>0?t.sum(a).reshape(r.shape):t}}}))}}),Ai=Ur({modStrict_:function(e,t){var n=Dr(e,"a","modStrict"),r=Dr(t,"b","modStrict");return ut(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),Di=Ur({mul_:function(e,t){var n,r=Dr(e,"a","mul"),a=Dr(t,"b","mul");n=mn(r,a),r=n[0],a=n[1];var i=za(r.shape,a.shape);return xn.runKernelFunc((function(e,t){var n=e.multiply(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.mul(r.toFloat()),a=Ba(n.shape,i);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=Ba(r.shape,i);return a.length>0?t.sum(a).reshape(r.shape):t}}}),"Mul")}}),Fi=Ur({mulStrict_:function(e,t){var n=Dr(e,"a","mul"),r=Dr(t,"b","mul");return ut(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),_i=Ur({pow_:function(e,t){var n,r=Dr(e,"base","pow"),a=Dr(t,"exp","pow");n=mn(r,a),r=n[0],a=n[1];var i=za(r.shape,a.shape),s=[r,a];return xn.runKernelFunc((function(e,t){var n=e.pow(r,a);return t([r,a,n]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1],a=t[2];return{a:function(){var t=r.toFloat(),a=e.mul(t.mul(n.pow(t.sub(Xr(1))))),s=Ba(n.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(n.shape)},b:function(){var t=n.greater(0),s=n.log().where(t,sa(n)),o=e.mul(a.mul(s)),u=Ba(r.shape,i);return u.length>0&&(o=o.sum(u)),o.reshape(r.shape)}}}),"Pow",{},s,[!0])}}),$i=Ur({powStrict_:function(e,t){return ut(e.shape,t.shape,"Error in powStrict: "),e.pow(t)}}),Oi=Ur({squaredDifferenceStrict_:function(e,t){var n=Dr(e,"a","squaredDifferenceStrict"),r=Dr(t,"b","squaredDifferenceStrict");return ut(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),Mi=Ur({sub_:function(e,t){var n,r=Dr(e,"a","sub"),a=Dr(t,"b","sub");n=mn(r,a),r=n[0],a=n[1];var i=za(r.shape,a.shape);return xn.runKernelFunc((function(e){return e.subtract(r,a)}),{a:r,b:a},(function(e){return{a:function(){var t=e,n=Ba(r.shape,i);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)},b:function(){var t=e,n=Ba(a.shape,i);return n.length>0&&(t=t.sum(n)),t.neg().reshape(a.shape)}}}),"Sub")}}),Li=Ur({subStrict_:function(e,t){var n=Dr(e,"a","subStrict"),r=Dr(t,"b","subStrict");return ut(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}}),Pi=Ur({div_:function(e,t){var n,r=Dr(e,"a","div"),a=Dr(t,"b","div");if(n=mn(r,a),r=n[0],a=n[1],"int32"===r.dtype&&"int32"===a.dtype)return Ci(r,a);var i={a:r,b:a};return xn.runKernelFunc((function(e,t){var n=e.realDivide(r,a);return t([r,a]),n}),i,null,Aa,{})}});function Bi(e,t){if(e.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+e.rank+".");if(t.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+t.dtype+".");if(t.shape[t.rank-1]>e.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+t.shape[t.rank-1]+" vs. "+e.rank);if(0===e.size)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+e.shape+".");for(var n=t.shape,r=n[n.length-1],a=1,i=0;i<n.length-1;++i)a*=n[i];var s=e.shape,o=n.slice();o.pop();var u=1;for(i=r;i<e.rank;++i)u*=s[i],o.push(s[i]);var l=Ot(e.shape).map((function(e){return e/u})).concat([1]).slice(0,r);return[o,a,u,l]}Object.freeze({prepareAndValidate:Bi});function zi(e){return e<=30?e:$t(e,Math.floor(Math.sqrt(e)))}function Wi(e,t,n){var r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+", indices.shape: "+t.shape+", shape: "+e+", sliceDim: "+r+", and batchDim: "+a+".";if(n.rank<a)throw new Error(i+" update.rank < "+a+". ");if(e.length<r+(n.rank-a))throw new Error(i+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(var s=0;s<a;++s)if(n.shape[s]!==t.shape[s])throw new Error(i+" updates.shape["+s+"] ("+n.shape[s]+") != indices.shape["+s+"] ("+t.shape[s]+").");for(s=0;s<n.rank-a;++s)if(n.shape[s+a]!==e[s+r])throw new Error(i+" updates.shape["+(s+a)+"] ("+n.shape[s+a]+") != shape["+(s+a)+"] ("+e[s+a]+")")}function Vi(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+e.rank+".");if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Wi(n,t,e)}function Ui(e,t,n){for(var r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length,s=1,o=a;o<i;++o)s*=n[o];var u=a<1?1:a;return{sliceRank:a,numUpdates:ht(t.shape)/u,sliceSize:s,strides:Ot(n.slice(0,a)).concat([1]),outputSize:ht(n)}}function Gi(e,t,n){ot(e.rank===t.length,(function(){return"Error in slice"+e.rank+"D: Length of begin "+t+" must match the rank of the array ("+e.rank+")."})),ot(e.rank===n.length,(function(){return"Error in slice"+e.rank+"D: Length of size "+n+" must match the rank of the array ("+e.rank+")."}));for(var r=function(r){ot(t[r]+n[r]<=e.shape[r],(function(){return"Error in slice"+e.rank+"D: begin["+r+"] + size["+r+"] ("+(t[r]+n[r])+") would overflow input.shape["+r+"] ("+e.shape[r]+")"}))},a=0;a<e.rank;++a)r(a)}function Hi(e){for(var t=[],n=0;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ji(e,t,n){for(var r=[],a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function qi(e,t,n,r,a){var i=t[a],s=n[a]||1;(e&1<<a||null==i)&&(i=s>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var o=r[a];return i<0&&(i+=o),at(0,i,o-1)}function Ki(e,t,n,r,a){var i=t[a],s=n[a]||1;(e&1<<a||null==i)&&(i=s>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var o=r[a];return i<0&&(i+=o),s>0?at(0,i,o):at(-1,i,o-1)}function Xi(e,t,n){for(var r=n.length,a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Yi(e,t){for(var n=e.length>0?e[e.length-1]:1,r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Qi(e){return xn.customGrad(e)}Object.freeze({validateUpdateShape:Wi,validateInput:Vi,calculateShapes:Ui}),Object.freeze({assertParamsValid:Gi,maskToAxes:Hi,computeOutShape:ji,startForAxis:qi,stopForAxis:Ki,isSliceContinous:Xi,computeFlatOffset:Yi});var Ji=Ur({softmax_:function(e,t){void 0===t&&(t=-1);var n=Dr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and dim was "+t);return xn.runKernelFunc((function(e,r){var a=e.softmax(n,t);return r([a]),a}),{logits:n},(function(e,n){var r=n[0],a=e.mul(r);return{logits:function(){return a.sub(a.sum([t],!0).mul(r))}}}),"Softmax",{dim:t},[],[!0])}}),Zi=Ur({logSoftmax_:function(e,t){void 0===t&&(t=-1);var n=Dr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and axis was "+t);return Qi((function(e,n){var r=e.max(t,!0),a=e.sub(r),i=a.toFloat().sub(a.exp().sum(t,!0).log());return n([i]),{value:i,gradFunc:function(e,n){var r=n[0].exp();return e.sub(e.sum(t,!0).mul(r))}}}))(n)}}),es=Ur({transpose_:function(e,t){var n=Dr(e,"x","transpose");if(null==t&&(t=n.shape.map((function(e,t){return t})).reverse()),ot(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of perm "+t+"."})),t.forEach((function(e){ot(e>=0&&e<n.rank,(function(){return"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t}))})),n.rank<=1)return n.clone();var r={perm:t};return xn.runKernelFunc((function(e){return e.transpose(n,t)}),{x:n},null,"Transpose",r)}}),ts=function(){function e(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}return e.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)},e.prototype.set=function(e,t){this.dataIdsCount++,this.data.set(e,t)},e.prototype.has=function(e){return this.data.has(e)},e.prototype.delete=function(e){return this.dataIdsCount--,this.data.delete(e)},e.prototype.numDataIds=function(){return this.dataIdsCount},e}(),ns=function(){function e(){}return e.prototype.time=function(e){return rs("time")},e.prototype.read=function(e){return rs("read")},e.prototype.readSync=function(e){return rs("readSync")},e.prototype.numDataIds=function(){return rs("numDataIds")},e.prototype.disposeData=function(e){return rs("disposeData")},e.prototype.write=function(e,t,n){return rs("write")},e.prototype.move=function(e,t,n,r){return rs("move")},e.prototype.memory=function(){return rs("memory")},e.prototype.floatPrecision=function(){return rs("floatPrecision")},e.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},e.prototype.batchMatMul=function(e,t,n,r){return rs("batchMatMul")},e.prototype.fusedBatchMatMul=function(e){return e.a,e.b,e.transposeA,e.transposeB,e.bias,e.activation,e.preluActivationWeights,rs("fusedBatchMatMul")},e.prototype.slice=function(e,t,n){return rs("slice")},e.prototype.stridedSlice=function(e,t,n,r){return rs("stridedSlice")},e.prototype.unstack=function(e,t){return rs("unstack")},e.prototype.reverse=function(e,t){return rs("reverse")},e.prototype.concat=function(e,t){return rs("concat")},e.prototype.neg=function(e){return rs("neg")},e.prototype.add=function(e,t){return rs("add")},e.prototype.addN=function(e){return rs("addN")},e.prototype.subtract=function(e,t){return rs("subtract")},e.prototype.multiply=function(e,t){return rs("multiply")},e.prototype.realDivide=function(e,t){return rs("realDivide")},e.prototype.floorDiv=function(e,t){return rs("floorDiv")},e.prototype.sum=function(e,t){return rs("sum")},e.prototype.prod=function(e,t){return rs("prod")},e.prototype.unsortedSegmentSum=function(e,t,n){return rs("unsortedSegmentSum")},e.prototype.argMin=function(e,t){return rs("argMin")},e.prototype.argMax=function(e,t){return rs("argMax")},e.prototype.equal=function(e,t){return rs("equal")},e.prototype.notEqual=function(e,t){return rs("notEqual")},e.prototype.less=function(e,t){return rs("less")},e.prototype.lessEqual=function(e,t){return rs("lessEqual")},e.prototype.greater=function(e,t){return rs("greater")},e.prototype.greaterEqual=function(e,t){return rs("greaterEqual")},e.prototype.logicalNot=function(e){return rs("logicalNot")},e.prototype.logicalAnd=function(e,t){return rs("logicalAnd")},e.prototype.logicalOr=function(e,t){return rs("logicalOr")},e.prototype.where=function(e){return rs("where")},e.prototype.select=function(e,t,n){return rs("select")},e.prototype.topk=function(e,t,n){return rs("topk")},e.prototype.min=function(e,t){return rs("min")},e.prototype.minimum=function(e,t){return rs("minimum")},e.prototype.mod=function(e,t){return rs("mod")},e.prototype.max=function(e,t){return rs("max")},e.prototype.maximum=function(e,t){return rs("maximum")},e.prototype.all=function(e,t){return rs("all")},e.prototype.any=function(e,t){return rs("any")},e.prototype.squaredDifference=function(e,t){return rs("squaredDifference")},e.prototype.ceil=function(e){return rs("ceil")},e.prototype.floor=function(e){return rs("floor")},e.prototype.round=function(e){return rs("round")},e.prototype.sign=function(e){return rs("sign")},e.prototype.isNaN=function(e){return rs("isNaN")},e.prototype.isInf=function(e){return rs("isInf")},e.prototype.isFinite=function(e){return rs("isFinite")},e.prototype.pow=function(e,t){return rs("pow")},e.prototype.exp=function(e){return rs("exp")},e.prototype.expm1=function(e){return rs("expm1")},e.prototype.softmax=function(e,t){return rs("softmax")},e.prototype.log=function(e){return rs("log")},e.prototype.log1p=function(e){return rs("log1p")},e.prototype.sqrt=function(e){return rs("sqrt")},e.prototype.rsqrt=function(e){return rs("rsqrt")},e.prototype.square=function(e){return rs("square")},e.prototype.reciprocal=function(e){return rs("reciprocal")},e.prototype.relu=function(e){return rs("relu")},e.prototype.relu6=function(e){return rs("relu6")},e.prototype.prelu=function(e,t){return rs("prelu")},e.prototype.elu=function(e){return rs("elu")},e.prototype.eluDer=function(e,t){return rs("eluDer")},e.prototype.selu=function(e){return rs("selu")},e.prototype.int=function(e){return rs("int")},e.prototype.clip=function(e,t,n){return rs("clip")},e.prototype.abs=function(e){return rs("abs")},e.prototype.complexAbs=function(e){return rs("complexAbs")},e.prototype.sigmoid=function(e){return rs("sigmoid")},e.prototype.softplus=function(e){return rs("softplus")},e.prototype.sin=function(e){return rs("sin")},e.prototype.cos=function(e){return rs("cos")},e.prototype.tan=function(e){return rs("tan")},e.prototype.asin=function(e){return rs("asin")},e.prototype.acos=function(e){return rs("acos")},e.prototype.atan=function(e){return rs("atan")},e.prototype.atan2=function(e,t){return rs("atan2")},e.prototype.sinh=function(e){return rs("sinh")},e.prototype.cosh=function(e){return rs("cosh")},e.prototype.tanh=function(e){return rs("tanh")},e.prototype.asinh=function(e){return rs("asinh")},e.prototype.acosh=function(e){return rs("acosh")},e.prototype.atanh=function(e){return rs("atanh")},e.prototype.erf=function(e){return rs("erf")},e.prototype.step=function(e,t){return rs("step")},e.prototype.fusedConv2d=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,rs("fusedConv2d")},e.prototype.conv2d=function(e,t,n){return rs("conv2d")},e.prototype.conv2dDerInput=function(e,t,n){return rs("conv2dDerInput")},e.prototype.conv2dDerFilter=function(e,t,n){return rs("conv2dDerFilter")},e.prototype.fusedDepthwiseConv2D=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,rs("fusedDepthwiseConv2D")},e.prototype.depthwiseConv2D=function(e,t,n){return rs("depthwiseConv2D")},e.prototype.depthwiseConv2DDerInput=function(e,t,n){return rs("depthwiseConv2DDerInput")},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){return rs("depthwiseConv2DDerFilter")},e.prototype.conv3d=function(e,t,n){return rs("conv3d")},e.prototype.conv3dDerInput=function(e,t,n){return rs("conv3dDerInput")},e.prototype.conv3dDerFilter=function(e,t,n){return rs("conv3dDerFilter")},e.prototype.maxPool=function(e,t){return rs("maxPool")},e.prototype.maxPoolBackprop=function(e,t,n,r){return rs("maxPoolBackprop")},e.prototype.avgPool=function(e,t){return rs("avgPool")},e.prototype.avgPoolBackprop=function(e,t,n){return rs("avgPoolBackprop")},e.prototype.avgPool3d=function(e,t){return rs("avgPool3d")},e.prototype.avgPool3dBackprop=function(e,t,n){return rs("avgPool3dBackprop")},e.prototype.maxPool3d=function(e,t){return rs("maxPool3d")},e.prototype.maxPool3dBackprop=function(e,t,n,r){return rs("maxPool3dBackprop")},e.prototype.reshape=function(e,t){return rs("reshape")},e.prototype.cast=function(e,t){return rs("cast")},e.prototype.tile=function(e,t){return rs("tile")},e.prototype.pad=function(e,t,n){return rs("pad")},e.prototype.transpose=function(e,t){return rs("transpose")},e.prototype.gather=function(e,t,n){return rs("gather")},e.prototype.gatherND=function(e,t){return rs("gatherND")},e.prototype.scatterND=function(e,t,n){return rs("scatterND")},e.prototype.batchToSpaceND=function(e,t,n){return rs("batchToSpaceND")},e.prototype.spaceToBatchND=function(e,t,n){return rs("spaceToBatchND")},e.prototype.resizeBilinear=function(e,t,n,r){return rs("resizeBilinear")},e.prototype.resizeBilinearBackprop=function(e,t,n){return rs("resizeBilinearBackprop")},e.prototype.resizeNearestNeighbor=function(e,t,n,r){return rs("resizeNearestNeighbor")},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){return rs("resizeNearestNeighborBackprop")},e.prototype.batchNormalization=function(e,t,n,r,a,i){return rs("batchNormalization")},e.prototype.localResponseNormalization4D=function(e,t,n,r,a){return rs("localResponseNormalization4D")},e.prototype.LRNGrad=function(e,t,n,r,a,i,s){return rs("LRNGrad")},e.prototype.multinomial=function(e,t,n,r){return rs("multinomial")},e.prototype.oneHot=function(e,t,n,r){return rs("oneHot")},e.prototype.cumsum=function(e,t,n,r){return rs("cumsum")},e.prototype.nonMaxSuppression=function(e,t,n,r,a){return rs("nonMaxSuppression")},e.prototype.fft=function(e){return rs("fft")},e.prototype.ifft=function(e){return rs("ifft")},e.prototype.complex=function(e,t){return rs("complex")},e.prototype.real=function(e){return rs("real")},e.prototype.imag=function(e){return rs("imag")},e.prototype.cropAndResize=function(e,t,n,r,a,i){return rs("cropAndResize")},e.prototype.depthToSpace=function(e,t,n){return rs("depthToSpace")},e.prototype.split=function(e,t,n){return rs("split")},e.prototype.sparseToDense=function(e,t,n,r){return rs("sparseToDense")},e.prototype.diag=function(e){return rs("diag")},e.prototype.fill=function(e,t,n){return rs("fill")},e.prototype.onesLike=function(e){return rs("onesLike")},e.prototype.zerosLike=function(e){return rs("zerosLike")},e.prototype.linspace=function(e,t,n){return rs("linspace")},e.prototype.dispose=function(){return rs("dispose")},e}();function rs(e){throw new Error("'"+e+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function as(e,t,n,r,a,i,s){void 0===s&&(s="channelsLast");var o,u=ls(t),l=u[0],c=u[1];if("channelsLast"===s)o=[l,c,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);o=[l,c,e[1],e[1]]}return ss(e,o,n,r,a,i,!1,s)}function is(e,t,n,r,a,i,s){void 0===s&&(s="NDHWC");var o,u,l=cs(t),c=l[0],h=l[1],d=l[2];if("NDHWC"===s)u="channelsLast",o=[c,h,d,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat "+s);u="channelsFirst",o=[c,h,d,e[1],e[1]]}return os(e,o,n,r,a,!1,u,i)}function ss(e,t,n,r,a,i,s,o){void 0===s&&(s=!1),void 0===o&&(o="channelsLast");var u=[-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],d=u[3];if("channelsLast"===o)l=e[0],c=e[1],h=e[2],d=e[3];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=e[0],d=e[1],c=e[2],h=e[3]}var p,f=t[0],m=t[1],g=t[3],v=ls(n),y=v[0],b=v[1],x=ls(r),w=x[0],k=x[1],I=hs(f,w),C=hs(m,k),S=function(e,t,n,r,a,i,s,o){var u,l,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};var h=function(e,t,n,r,a){null==r&&(r=us(e,t,n));var i=e[1],s=ds((e[0]-t+2*r)/n+1,a);ot(pt(s),(function(){return"The output # of rows ("+s+") must be an integer. Change the stride and/or zero pad parameters"}));var o=ds((i-t+2*r)/n+1,a);return ot(pt(o),(function(){return"The output # of columns ("+o+") must be an integer. Change the stride and/or zero pad parameters"})),[s,o]}([t,n],i,r,e,o);l=h[0],c=h[1]}else if("same"===e){l=Math.ceil(t/r),c=Math.ceil(n/a);var d=Math.max(0,(l-1)*r+i-t),p=Math.max(0,(c-1)*a+s-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2);u={top:f,bottom:m,left:g,right:p-g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-i+1)/r),c=Math.ceil((n-s+1)/a)}return{padInfo:u,outHeight:l,outWidth:c}}(a,c,h,y,b,I,C,i),N=S.padInfo,T=S.outHeight,E=S.outWidth,R=s?g*d:g;return"channelsFirst"===o?p=[l,R,T,E]:"channelsLast"===o&&(p=[l,T,E,R]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:h,inChannels:d,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationHeight:w,dilationWidth:k,inShape:e,outShape:p,filterShape:t}}function os(e,t,n,r,a,i,s,o){void 0===i&&(i=!1),void 0===s&&(s="channelsLast");var u=[-1,-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],d=u[3],p=u[4];if("channelsLast"===s)l=e[0],c=e[1],h=e[2],d=e[3],p=e[4];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);l=e[0],p=e[1],c=e[2],h=e[3],d=e[4]}var f,m=t[0],g=t[1],v=t[2],y=t[4],b=cs(n),x=b[0],w=b[1],k=b[2],I=cs(r),C=I[0],S=I[1],N=I[2],T=hs(m,C),E=hs(g,S),R=hs(v,N),A=function(e,t,n,r,a,i,s,o,u,l,c){var h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};var m=function(e,t,n,r,a,i){null==a&&(a=us(e,t,r));var s=e[1],o=e[2],u=ds((e[0]-t+2*a)/r+1,i);ot(pt(u),(function(){return"The output # of depths ("+u+") must be an integer. Change the stride and/or zero pad parameters"}));var l=ds((s-t+2*a)/r+1,i);ot(pt(l),(function(){return"The output # of rows ("+l+") must be an integer. Change the stride and/or zero pad parameters"}));var c=ds((o-t+2*a)/r+1,i);return ot(pt(c),(function(){return"The output # of columns ("+c+") must be an integer. Change the stride and/or zero pad parameters"})),[u,l,c,1]}([t,n,r,1],o,0,a,e,c);d=m[0],p=m[1],f=m[2]}else if("same"===e){var g=((d=Math.ceil(t/a))-1)*a+o-t,v=((p=Math.ceil(n/i))-1)*i+u-n,y=((f=Math.ceil(r/s))-1)*s+l-r,b=Math.floor(g/2),x=g-b,w=Math.floor(v/2),k=v-w,I=Math.floor(y/2);h={top:w,bottom:k,left:I,right:y-I,front:b,back:x,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/i),f=Math.ceil((r-l+1)/s)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,c,h,d,x,w,k,T,E,R,o),D=A.padInfo,F=A.outDepth,_=A.outHeight,$=A.outWidth,O=i?y*p:y;return"channelsFirst"===s?f=[l,O,F,_,$]:"channelsLast"===s&&(f=[l,F,_,$,O]),{batchSize:l,dataFormat:s,inDepth:c,inHeight:h,inWidth:d,inChannels:p,outDepth:F,outHeight:_,outWidth:$,outChannels:O,padInfo:D,strideDepth:x,strideHeight:w,strideWidth:k,filterDepth:m,filterHeight:g,filterWidth:v,effectiveFilterDepth:T,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:C,dilationHeight:S,dilationWidth:N,inShape:e,outShape:f,filterShape:t}}function us(e,t,n,r){void 0===r&&(r=1);var a=hs(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ls(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function cs(e){return"number"==typeof e?[e,e,e]:e}function hs(e,t){return t<=1?e:e+(e-1)*(t-1)}function ds(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function ps(e){var t=ls(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function fs(e,t){return ps(e)||ps(t)}function ms(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function gs(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();var r=ta(e.shape),a=e.toFloat(),i=n.complex(a,r);return r.dispose(),a.dispose(),i}if(!St(e.dtype,t))return xn.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){var s=n.real(e);return i=s.cast(t),s.dispose(),i}if("int32"===t)return n.int(e);if("bool"===t){var o=Xr(0,e.dtype);return i=n.notEqual(e,o),o.dispose(),i}throw new Error("Error in Cast: failed to cast "+e.dtype+" to "+t)}function vs(e,t){return xn.makeTensorFromDataId(e.dataId,t,e.dtype)}function ys(e,t,n){var r=(t-e)/(n-1),a=Bt(n,"float32");a[0]=e;for(var i=1;i<a.length;i++)a[i]=a[i-1]+r;return Yr(a,"float32")}function bs(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+e.length+", imag: "+t.length+".");for(var n=new Float32Array(2*e.length),r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function xs(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ws(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ks(e,t,n){var r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Is(e,t,n){var r=function(e,t,n){return function(e,t,n){for(var r=0,a=e.length,i=0,s=!1;r<a;){var o=n(t,e[i=r+(a-r>>>1)]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}(e,t,n||Cs)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Cs(e,t){return e>t?1:e<t?-1:0}function Ss(e,t,n,r,a){return Ts(e,t,n,r,a,0).selectedIndices}function Ns(e,t,n,r,a,i){var s=Ts(e,t,n,r,a,i);return s.numValidOutputs.dispose(),{selectedIndices:s.selectedIndices,selectedScores:s.selectedScores}}function Ts(e,t,n,r,a,i,s,o){void 0===o&&(o=!1);for(var u=Array.from(t).map((function(e,t){return{score:e,boxIndex:t,suppressBeginIndex:0}})).filter((function(e){return e.score>a})).sort(As),l=i>0?-.5/i:0,c=[],h=[];c.length<n&&u.length>0;){var d=u.pop(),p=d.score,f=d.boxIndex,m=d.suppressBeginIndex;if(p<a)break;for(var g=!1,v=c.length-1;v>=m;--v){var y=Es(e,f,c[v]);if(y>=r){g=!0;break}if(d.score=d.score*Rs(r,l,y),d.score<=a)break}d.suppressBeginIndex=c.length,g||(d.score===p?(c.push(f),h.push(d.score)):d.score>a&&Is(u,d,As))}var b=c.length;return o&&(c.fill(0,b),h.fill(0,b)),{selectedIndices:Yr(c,"int32"),selectedScores:Yr(h,"float32"),numValidOutputs:Xr(b,"int32")}}function Es(e,t,n){var r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(u-s),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;var m=Math.max(i,l),g=Math.max(s,c),v=Math.min(o,h),y=Math.min(u,d),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(p+f-b)}function Rs(e,t,n){var r=Math.exp(t*n*n);return n<=e?r:0}function As(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Ds(e,t,n){var r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((function(t){a[n]=t;var i=e.slice(r,a);return r[n]+=t,i}))}function Fs(e,t){for(var n=new Array(e.rank),r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];var a=pa(n,e.dtype);for(r=0;r<a.values.length;++r){for(var i=a.indexToLoc(r),s=new Array(e.rank),o=0;o<s.length;o++)s[o]=i[o]%e.shape[o];var u=e.locToIndex(s);a.values[r]=e.values[u]}return a.toTensor()}function _s(e,t,n,r,a){for(var i=t[t.length-1],s=[e.length/i,i],o=s[0],u=s[1],l=wt(n,o*r),c=wt("int32",o*r),h=0;h<o;h++){for(var d=h*u,p=e.subarray(d,d+u),f=[],m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((function(e,t){return t.value-e.value}));var g=h*r,v=l.subarray(g,g+r),y=c.subarray(g,g+r);for(m=0;m<r;m++)v[m]=f[m].value,y[m]=f[m].index}var b=t.slice();return b[b.length-1]=r,[qr(l,b,n),qr(c,b,"int32")]}function $s(e,t){for(var n=[],r=0;r<t.length;r++)t[r]&&n.push(r);var a=pa(e,"int32"),i=pa([n.length,e.length],"int32");for(r=0;r<n.length;r++){var s=a.indexToLoc(n[r]),o=r*e.length;i.values.set(s,o)}return i.toTensor()}Object.freeze({castTensor:gs,reshapeTensor:vs,linspaceImpl:ys,upcastType:pn,axesAreInnerMostDims:_r,combineLocations:$r,computeOutAndReduceShapes:Or,expandShapeToKeepDim:Mr,assertAxesAreInnerMostDims:Lr,getAxesPermutation:Pr,getUndoAxesPermutation:Br,getInnerMostAxes:zr,getBroadcastDims:Pa,getReductionAxes:Ba,assertAndGetBroadcastShape:za,assertParamsConsistent:Wr,computeOutShape:Vr,computePool2DInfo:as,computePool3DInfo:is,computeConv2DInfo:ss,computeConv3DInfo:os,computeDefaultPad:us,tupleValuesAreOne:ps,eitherStridesOrDilationsAreOne:fs,convertConv2DDataFormat:ms,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:zi});var Os=function(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("float v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        float result = "+r+";\n        setOutput(result);\n      }\n    "},Ms=function(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("vec4 v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        vec4 result = "+r+";\n        setOutput(result);\n      }\n    "},Ls=function(e,t,n){this.variableNames=["A"];var r=e.windowSize,a=e.batchSize,i=e.inSize,s=Math.ceil(i/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];var o="max"===t?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < "+r+"; i++) {\n          int inIdx = "+u+";\n          float candidate = getA(batch, inIdx);\n          if (candidate "+o+" bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    "};function Ps(e,t){return["x","y","z","w","u","v"].slice(0,t).map((function(t){return e+"."+t}))}function Bs(e,t){return 1===t?[e]:Ps(e,t)}function zs(){var e,t,n,r,a,i,s,o,u,l;return 2===qe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function Ws(e,t,n){void 0===n&&(n="index");var r=Ot(t);return r.map((function(t,a){return"int "+e[a]+" = "+n+" / "+t+"; "+(a===r.length-1?"int "+e[a+1]+" = "+n+" - "+e[a]+" * "+t:"index -= "+e[a]+" * "+t)+";"})).join("")}function Vs(e){var t=Ot(e).map((function(e){return e.toString()}));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * "+t[0]+" + coords.y * "+t[1]+" + coords.z;\n  }\n"}var Us="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function Gs(e,t,n,r){var a=[];e.forEach((function(e){var t=ht(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push("uniform float "+e.name+(t>1?"["+t+"]":"")+";"):(a.push("uniform sampler2D "+e.name+";"),a.push("uniform int offset"+e.name+";"))}));var i,s,o=a.join("\n"),u=e.map((function(e){return function(e,t,n){void 0===n&&(n=!1);var r="";r+=n?js(e):Hs(e);var a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){var n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=Pa(e.shapeInfo.logicalShape,t.logicalShape),l=Zs(o),c=o-s,h=["x","y","z","w","u","v"];n=0===s?"":o<2&&u.length>=1?"coords = 0;":u.map((function(e){return"coords."+h[e+c]+" = 0;"})).join("\n");var d;d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+h[t+c]})).join(", ");var p="return outputValue;",f=1===ht(e.shapeInfo.logicalShape),m=1===ht(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){var g=s-2,v=s-1;u.indexOf(g)>-1&&u.indexOf(v)>-1?p="return vec4(outputValue.x);":u.indexOf(g)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 "+i+"() {\n      "+l+" coords = getOutputCoords();\n      "+n+"\n      vec4 outputValue = get"+a+"("+d+");\n      "+p+"\n    }\n  "}(e,t):function(e,t){var n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&dt(s,i))return"\n      float "+a+"() {\n        return sampleTexture("+n+", resultUV);\n      }\n    ";var l,c=Zs(u),h=Pa(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,p=["x","y","z","w","u","v"];l=0===o?"":u<2&&h.length>=1?"coords = 0;":h.map((function(e){return"coords."+p[e+d]+" = 0;"})).join("\n");var f;return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+p[t+d]})).join(", "),"\n    float "+a+"() {\n      "+c+" coords = getOutputCoords();\n      "+l+"\n      return get"+r+"("+f+");\n    }\n  "}(e,t)),r}(e,t,r)})).join("\n"),l=t.texShape,c=zs(),h=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return "+e.texture2D+"(textureSampler, uv).r;\n    }\n  "}(c),d=function(e){return e.version+"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    "+e.varyingFs+" vec2 resultUV;\n    "+e.defineOutput+"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    "+e.defineSpecialNaN+"\n    "+e.defineSpecialInf+"\n    "+e.defineRound+"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    "+qs+"\n    "+Ks+"\n    "+Xs+"\n  "}(c);return t.isPacked?(i=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * "+n[1]+".0);\n      }\n    ":1===n[1]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * "+n[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      return 2 * (resTexRC.x * "+n[1]+" + resTexRC.y);\n    }\n  "}(0,t);case 2:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(dt(e,t))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2("+n[0]+", "+n[1]+"));\n      }\n    ";var r=Math.ceil(e[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=e,r=t,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=(i=Math.ceil(n[2]/2))*Math.ceil(n[1]/2),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+a[0]+", "+a[1]+"));\n      int index = resTexRC.x * "+a[1]+" + resTexRC.y;\n\n      int b = index / "+s+";\n      index -= b * "+s+";\n\n      int r = 2 * (index / "+i+");\n      int c = imod(index, "+i+") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";default:return function(e,t){for(var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,s="",o="b, r, c",u=2;u<e.length-1;u++)s="\n      int b"+u+" = index / "+(i*=e[e.length-u-1])+";\n      index -= b"+u+" * "+i+";\n    "+s,o="b"+u+", "+o;return"\n    ivec"+e.length+" getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      "+s+"\n\n      int b = index / "+a+";\n      index -= b * "+a+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec"+e.length+"("+o+");\n    }\n  "}(e,t)}var n,r,a,i,s}(t.logicalShape,l),s=function(e){return"\n    void setOutput(vec4 val) {\n      "+e.output+" = val;\n    }\n  "}(c)):(i=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){return 1===t[0]?"\n      int getOutputCoords() {\n        return int(resultUV.x * "+t[1]+".0);\n      }\n    ":1===t[1]?"\n      int getOutputCoords() {\n        return int(resultUV.y * "+t[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      return resTexRC.x * "+t[1]+" + resTexRC.y;\n    }\n  "}(0,t);case 2:return function(e,t){return dt(e,t)?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2("+t[0]+", "+t[1]+"));\n      }\n    ":1===e[1]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":1===e[0]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      int r = index / "+e[1]+";\n      int c = index - r * "+e[1]+";\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=t,r=Ws(["r","c","d"],e),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      "+r+"\n      return ivec3(r, c, d);\n    }\n  ";case 4:return function(e,t){var n=Ws(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      "+n+"\n      return ivec4(r, c, d, d2);\n    }\n  "}(e,t);case 5:return function(e,t){var n=Ws(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2("+t[0]+",\n                             "+t[1]+"));\n\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "}(e,t);case 6:return function(e,t){var n=Ws(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n,r}(t.logicalShape,l),s=function(e){return"\n    void setOutput(float val) {\n      "+e.output+" = vec4(val, 0, 0, 0);\n    }\n  "}(c)),r&&(d+=Ys),[d,h,s,o,i,u,n].join("\n")}function Hs(e){var t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"float "+n+"() {return "+t+";}";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===a&&1===i)return"\n      float "+n+"() {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var s=e.shapeInfo.texShape;return"\n    float "+n+"() {\n      vec2 uv = uvFromFlat("+s[0]+", "+s[1]+", "+Qs(t)+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"\n      float "+n+"(int index) {\n        "+Js(e)+"\n      }\n    ";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return"\n      float "+n+"(int index) {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var s=Qs(t);return 1===i?"\n      float "+n+"(int index) {\n        vec2 uv = vec2(0.5, (float(index + "+s+") + 0.5) / "+a+".0);\n        return sampleTexture("+t+", uv);\n      }\n    ":1===a?"\n      float "+n+"(int index) {\n        vec2 uv = vec2((float(index + "+s+") + 0.5) / "+i+".0, 0.5);\n        return sampleTexture("+t+", uv);\n      }\n    ":"\n    float "+n+"(int index) {\n      vec2 uv = uvFromFlat("+a+", "+i+", index + "+s+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&dt(t,a)){var i=a[0];return"\n    float "+r+"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2("+a[1]+".0, "+i+".0);\n      return sampleTexture("+n+", uv);\n    }\n  "}var s=xt(t),o=s.newShape,u=s.keptDims,l=o;if(l.length<t.length)return"\n      "+Hs(eo(e,l))+"\n      float "+r+"(int row, int col) {\n        return "+r+"("+to(["row","col"],u)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2("+t[1]+", 1)));\n        "+Js(e)+"\n      }\n    ";var c=a[0],h=a[1],d=Qs(n);return 1===h?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+d+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / "+c+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":1===c?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+d+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2((index + 0.5) / "+h+".0, 0.5);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n  float "+r+"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * "+t[1]+" + col + "+d+";\n    vec2 uv = uvFromFlat("+c+", "+h+", index);\n    return sampleTexture("+n+", uv);\n  }\n"}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],s=xt(t),o=s.newShape,u=s.keptDims,l=o;if(l.length<t.length)return"\n        "+Hs(eo(e,l))+"\n        float "+r+"(int row, int col, int depth) {\n          return "+r+"("+to(["row","col","depth"],u)+");\n        }\n      ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3("+a+", "+i+", 1)));\n        "+Js(e)+"\n      }\n    ";var c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;return d===a&&null==p?"\n        float "+r+"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2("+i+", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2("+d+".0, "+h+".0);\n          return sampleTexture("+n+", uv);\n        }\n      ":d===i&&null==p?"\n    float "+r+"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2("+t[1]+", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+d+".0, "+h+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n      float "+r+"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * "+a+" + col * "+i+" + depth + "+Qs(n)+";\n        vec2 uv = uvFromFlat("+h+", "+d+", index);\n        return sampleTexture("+n+", uv);\n      }\n  "}(e);case 4:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,s=t[1]*i,o=xt(t),u=o.newShape,l=o.keptDims;if(u.length<t.length)return"\n      "+Hs(eo(e,u))+"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        return "+r+"("+to(["row","col","depth","depth2"],l)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4("+s+", "+i+", "+a+", 1)));\n        "+Js(e)+"\n      }\n    ";var c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===s&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3("+i+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+p+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":p===a&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3("+t[1]*t[2]+", "+t[2]+", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+p+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+s+" + col * "+i+" +\n          depth * "+a+" + depth2;\n      vec2 uv = uvFromFlat("+d+", "+p+", index + "+Qs(n)+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 5:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,u=xt(t),l=u.newShape,c=u.keptDims;if(l.length<t.length)return"\n      "+Hs(eo(e,l))+"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        return "+r+"("+to(["row","col","depth","depth2","depth3"],c)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+o+", "+s+", "+i+", "+a+")) +\n          depth3;\n        "+Js(e)+"\n      }\n    ";var h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===o&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4("+s+", "+i+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+f+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":f===a&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]+",\n               "+t[2]*t[3]+", "+t[3]+", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+f+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+o+" + col * "+s+" + depth * "+i+" +\n          depth2 * "+a+" + depth3 + "+Qs(n)+";\n      vec2 uv = uvFromFlat("+p+", "+f+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 6:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=xt(t),i=a.newShape,s=a.keptDims;if(i.length<t.length)return"\n      "+Hs(eo(e,i))+"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return "+r+"("+to(["row","col","depth","depth2","depth3","depth4"],s)+");\n      }\n    ";var o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4("+h+", "+c+", "+l+", "+u+")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2("+o+", 1)));\n        "+Js(e)+"\n      }\n    ";var d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===h&&null==d?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4("+c+", "+l+", "+u+", "+o+")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":m===o&&null==d?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]*t[4]+",\n               "+t[2]*t[3]*t[4]+",\n               "+t[3]*t[4]+",\n               "+t[4]+")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+h+" + col * "+c+" + depth * "+l+" +\n          depth2 * "+u+" + depth3 * "+o+" + depth4 + "+Qs(n)+";\n      vec2 uv = uvFromFlat("+f+", "+m+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function js(e){var t;switch(e.shapeInfo.logicalShape.length){case 0:return"\n    vec4 "+("get"+(t=e.name).charAt(0).toUpperCase()+t.slice(1))+"() {\n      return "+zs().texture2D+"("+t+", halfCR);\n    }\n  ";case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=zs();return"\n    vec4 "+n+"(int index) {\n      vec2 uv = packedUVfrom1D(\n        "+a[0]+", "+a[1]+", index);\n      return "+i.texture2D+"("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],s=a[1],o=zs();if(null!=a&&dt(t,a))return"\n      vec4 "+r+"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2("+s+".0, "+i+".0);\n\n        return "+o.texture2D+"("+n+", uv);\n      }\n    ";var u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return"\n    vec4 "+r+"(int row, int col) {\n      vec2 uv = packedUVfrom2D("+Math.ceil(t[1]/2)+", "+u[0]+", "+u[1]+", row, col);\n      return "+o.texture2D+"("+n+", uv);\n    }\n  "}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0])return"\n        "+js(eo(e,t.slice(1)))+"\n        vec4 "+r+"(int b, int row, int col) {\n          return "+r+"("+to(["b","row","col"],[1,2])+");\n        }\n      ";var s=i[0],o=i[1],u=Math.ceil(t[2]/2);return"\n    vec4 "+r+"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        "+s+", "+o+", "+u*Math.ceil(t[1]/2)+", "+u+", b, row, col);\n      return "+zs().texture2D+"("+n+", uv);\n    }\n  "}(e);default:return function(e){for(var t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=s[0],u=s[1],l=Math.ceil(t[n-1]/2),c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",d="b * "+c+" + (row / 2) * "+l+" + (col / 2)",p=2;p<n-1;p++)h="int b"+p+", "+h,d="b"+p+" * "+(c*=t[n-p-1])+" + "+d;return"\n    vec4 "+a+"("+h+") {\n      int index = "+d+";\n      int texR = index / "+u+";\n      int texC = index - texR * "+u+";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+u+", "+o+");\n      return "+zs().texture2D+"("+r+", uv);\n    }\n  "}(e)}}var qs="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ks="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xs="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ys="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Qs(e){return"offset"+e}function Js(e){var t=e.name,n=ht(e.shapeInfo.logicalShape);return n<2?"return "+t+";":"\n    for (int i = 0; i < "+n+"; i++) {\n      if (i == index) {\n        return "+t+"[i];\n      }\n    }\n  "}function Zs(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank "+e+" is not yet supported")}function eo(e,t){var n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function to(e,t){return t.map((function(t){return e[t]})).join(", ")}var no=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ot(e.length>2,(function(){return"Packed arg"+(n.charAt(0).toUpperCase()+n.slice(1))+" supports only inputs with rank above 2."}));var a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");var s,o,u=this.outputShape,l=u.length,c=Zs(l),h=Bs("coords",l);if(1===i){var d=Zs(o=l+1);s="\n        "+d+" sourceLocR = "+d+"("+h.join()+", 0);\n        ++"+h[l-1]+";\n        "+d+" sourceLocG = "+d+"("+h.join()+", 0);\n        ++"+h[l-2]+";\n        "+d+" sourceLocA = "+d+"("+h.join()+", 0);\n        --"+h[l-1]+";\n        "+d+" sourceLocB = "+d+"("+h.join()+", 0);\n        --"+h[l-2]+";"}else o=l,s="\n        "+c+" sourceLocR = coords;\n        ++"+h[l-1]+";\n        "+c+" sourceLocG = coords;\n        ++"+h[l-2]+";\n        "+c+" sourceLocA = coords;\n        --"+h[l-1]+";\n        "+c+" sourceLocB = coords;\n        --"+h[l-2]+";";var p=["x","y","z","w","u","v"].slice(0,o),f="."+p[o-1],m=p.map((function(e){return"int "+e})),g=Bs("sourceLocR",o-1).concat("inIdx.r"),v=Bs("sourceLocG",o-1).concat("inIdx.g"),y=Bs("sourceLocB",o-1).concat("inIdx.b"),b=Bs("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel("+g.join()+"),\n                             getBestIndicesAChannel("+v.join()+"),\n                             getBestIndicesAChannel("+y.join()+"),\n                             getBestIndicesAChannel("+b.join()+")));",k="vec4(\n            getAChannel("+g.join()+"),\n            hasNextCol ? getAChannel("+v.join()+") : 0.,\n            hasNextRow ? getAChannel("+y.join()+") : 0.,\n            hasNextRow && hasNextCol ? getAChannel("+b.join()+") : 0.)",I=r?"":"\n      float getBestIndicesAChannel("+m.join()+") {\n        return getChannel(getBestIndicesA("+p.join()+"),\n                                          vec2("+p.slice(-2).join()+"));\n      }";this.userCode="\n      float getAChannel("+m.join()+") {\n        return getChannel(getA("+p.join()+"),\n                               vec2("+p.slice(-2).join()+"));\n      }\n      "+I+"\n      void main() {\n        "+c+" coords = getOutputCoords();\n        bool hasNextCol = "+h[l-1]+" < "+(u[l-1]-1)+";\n        bool hasNextRow = "+h[l-2]+" < "+(u[l-2]-1)+";\n        "+s+"\n        ivec4 srcIdx = ivec4(sourceLocR"+f+", sourceLocG"+f+",\n          sourceLocB"+f+", sourceLocA"+f+") * "+t+";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = "+k+";\n\n        for (int i = 0; i < "+t+"; i++) {\n          inIdx = srcIdx;\n          "+w+"\n          vec4 candidate = "+k+";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4("+x+"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    "},ro=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2("+l+", "+c+");\n      const float avgMultiplier = float("+h+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+o+";\n            wR += "+i+") {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+u+";\n            wC+= "+s+") {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ao=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode="\n      const ivec3 pads = ivec3("+p+", "+f+", "+m+");\n      const float avgMultiplier = float("+g+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+c+";\n            wD += "+o+") {\n          float dyD = float(dyDCorner + wD) / "+a+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+h+";\n              wR += "+u+") {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+d+";\n                wC += "+l+") {\n              float dyC = float(dyCCorner + wC) / "+s+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},io=function(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],za(e,t),za(e,n);var s="0.0";null!=r&&(za(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var o="1.0";null!=a&&(za(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = "+s+";\n        float scale = "+o+";\n        float inv = scale * inversesqrt(variance + float("+i+"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    "},so=function(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],za(e,t),za(e,n);var s="vec4(0.0)";null!=r&&(za(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var o="vec4(1.0)";null!=a&&(za(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = "+s+";\n        vec4 scale = "+o+";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4("+i+"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    "},oo=function(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=za(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        "+e+"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    "},uo="return a + b;",lo="return a - b;",co="return a * b;",ho="return (a < 0.) ? b * a : a;",po=function(e,t,n){this.variableNames=["A","B"],this.outputShape=za(t,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        "+e+"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "},fo="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",mo=function(e,t,n,r){void 0===r&&(r=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=za(t,n);var a=this.outputShape.length,i="";if(r)if(0===a||1===ht(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i="\n          "+Zs(a)+" coords = getOutputCoords();\n        ",1===a)i+="\n            result.y = (coords + 1) >= "+this.outputShape[0]+" ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ";else{var s=Bs("coords",a);i+="\n            bool nextRowOutOfBounds =\n              ("+s[a-2]+" + 1) >= "+this.outputShape[a-2]+";\n            bool nextColOutOfBounds =\n              ("+s[a-1]+" + 1) >= "+this.outputShape[a-1]+";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        "+e+"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        "+i+"\n\n        setOutput(result);\n      }\n    "},go=function(){function e(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),vo=function(){function e(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),yo=function(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "},bo=function(e){this.outputShape=[],this.outputShape=Vr(e,1),this.variableNames=e.map((function(e,t){return"T"+t}));var t=new Array(e.length-1);t[0]=e[0][1];for(var n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];var r=["if (yC < "+t[0]+") setOutput(getT0(yR, yC));"];for(n=1;n<t.length;n++){var a=t[n-1];r.push("else if (yC < "+t[n]+") setOutput(getT"+n+"(yR, yC-"+a+"));")}var i=t.length,s=t[t.length-1];r.push("else setOutput(getT"+i+"(yR, yC-"+s+"));"),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        "+r.join("\n        ")+"\n      }\n    "},xo=function(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Vr(e,t);var n=this.outputShape,r=n.length,a=Zs(r),i=Bs("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((function(e,t){return"T"+t}));var o=new Array(e.length-1);o[0]=e[0][t];for(var u=1;u<o.length;u++)o[u]=o[u-1]+e[u][t];var l=s[t],c=s.slice(-2),h=s.join(),d="if ("+l+" < "+o[0]+") {\n        return getChannel(\n            getT0("+h+"), vec2("+c.join()+"));\n        }";for(u=1;u<o.length;u++){var p=o[u-1];d+="\n        if ("+l+" < "+o[u]+"  && "+l+" >= "+o[u-1]+") {\n          return getChannel(\n            getT"+u+"("+wo(s,l,p)+"),\n            vec2("+wo(c,l,p)+"));\n        }"}var f=o.length,m=o[o.length-1];d+="\n        return getChannel(\n          getT"+f+"("+wo(s,l,m)+"),\n          vec2("+wo(c,l,m)+"));",this.userCode="\n      float getValue("+s.map((function(e){return"int "+e}))+") {\n        "+d+"\n      }\n\n      void main() {\n        "+a+" coords = getOutputCoords();\n        vec4 result = vec4(getValue("+i+"), 0., 0., 0.);\n\n        "+i[r-1]+" = "+i[r-1]+" + 1;\n        if ("+i[r-1]+" < "+n[r-1]+") {\n          result.g = getValue("+i+");\n        }\n\n        "+i[r-2]+" = "+i[r-2]+" + 1;\n        if ("+i[r-2]+" < "+n[r-2]+") {\n          result.a = getValue("+i+");\n        }\n\n        "+i[r-1]+" = "+i[r-1]+" - 1;\n        if ("+i[r-2]+" < "+n[r-2]+" &&\n            "+i[r-1]+" < "+n[r-1]+") {\n          result.b = getValue("+i+");\n        }\n        setOutput(result);\n      }\n    "};function wo(e,t,n){var r=e.indexOf(t);return e.map((function(e,t){return t===r?e+" - "+n:e})).join()}var ko=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              if ("+i+") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Io=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords["+c+"];\n\n        ivec2 dyCorner = ivec2(coords["+u+"], coords["+l+"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n\n              if ("+i+") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Co=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yF = 0; yF < "+e.outDepth+"; yF++) {\n            int xF = wF + yF * "+t+" - "+a+";\n\n            if (xF < 0 || xF >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n              int xR = wR + yR * "+n+" - "+i+";\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n                int xC = wC + yC * "+r+" - "+s+";\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},So=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3("+o+", "+u+", "+l+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+t+"; wF++) {\n          float dyF = float(dyFCorner + wF) / "+a+".0;\n\n          if (dyF < 0.0 || dyF >= "+e.outDepth+".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = "+t+" - 1 - wF;\n\n          for (int wR = 0; wR < "+n+"; wR++) {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = "+n+" - 1 - wR;\n\n            for (int wC = 0; wC < "+r+"; wC++) {\n              float dyC = float(dyCCorner + wC) / "+s+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = "+r+" - 1 - wC;\n\n              for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},No=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * "+i+" + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},To=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2("+i+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < "+o+"; dm++) {\n              int d2 = d1 * "+o+" + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Eo=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.padInfo.top,i=e.padInfo.left,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,v=f?3:1,y="",b="";n&&(y=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",b="result = activation(result);");var x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+y+"\n\n      const ivec2 strides = ivec2("+s+", "+o+");\n      const ivec2 pads = ivec2("+a+", "+i+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords["+v+"];\n\n        ivec2 xRCCorner =\n            ivec2(coords["+m+"], coords["+g+"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+c+"; wR++) {\n          int xR = xRCorner + wR * "+u+";\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+h+"; wC++) {\n            int xC = xCCorner + wC * "+l+";\n\n            if (xC < 0 || xC >= "+e.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+d+"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if ("+f+") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if ("+(1===p)+") {\n\n              if ("+f+") {\n                dotProd +=\n                    getX(batch, xR, xC, "+d+") *\n                    getW(wR, wC, "+d+", d2);\n              } else {\n                dotProd +=\n                    getX(batch, "+d+", xR, xC) *\n                    getW(wR, wC, "+d+", d2);\n              }\n\n            } else if ("+(2===p)+") {\n              vec2 wValues = vec2(\n                getW(wR, wC, "+d+", d2),\n                getW(wR, wC, "+d+" + 1, d2)\n              );\n\n              if ("+f+") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, "+d+"),\n                  getX(batch, xR, xC, "+d+" + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, "+d+", xR, xC),\n                  getX(batch, "+d+" + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if ("+(3===p)+") {\n              vec3 wValues = vec3(\n                getW(wR, wC, "+d+", d2),\n                getW(wR, wC, "+d+" + 1, d2),\n                getW(wR, wC, "+d+" + 2, d2)\n              );\n\n              if ("+f+") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, "+d+"),\n                  getX(batch, xR, xC, "+d+" + 1),\n                  getX(batch, xR, xC, "+d+" + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, "+d+", xR, xC),\n                  getX(batch, "+d+" + 1, xR, xC),\n                  getX(batch, "+d+" + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        "+x+"\n        "+b+"\n        setOutput(result);\n      }\n    "},Ro=function(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3("+a+", "+i+", "+s+");\n      const ivec3 pads = ivec3("+t+", "+n+", "+r+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+c+"; wF++) {\n          int xF = xFCorner + wF * "+o+";\n\n          if (xF < 0 || xF >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+h+"; wR++) {\n            int xR = xRCorner + wR * "+u+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+d+"; wC++) {\n              int xC = xCCorner + wC * "+l+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < "+p+"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if ("+(1===f)+") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, "+p+") *\n                  getW(wF, wR, wC, "+p+", d2);\n              } else if ("+(2===f)+") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if ("+(3===f)+") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1),\n                  getX(batch, xF, xR, xC, "+p+" + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2),\n                  getW(wF, wR, wC, "+p+" + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ao=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.inHeight,i=e.inWidth,s=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=e.outChannels/e.inChannels,m="",g="";n&&(m=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",g="result = activation(result);");var v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+m+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+f+";\n        int q = d2 - d1 * "+f+";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < "+d+"; wR++) {\n          int xR = xRCorner + wR * "+c+";\n\n          if (xR < 0 || xR >= "+a+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+p+"; wC++) {\n            int xC = xCCorner + wC * "+h+";\n\n            if (xC < 0 || xC >= "+i+") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        "+v+"\n        "+g+"\n        setOutput(result);\n      }\n    "},Do=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;for(var a=e.inHeight,i=e.inWidth,s=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=p,m="int xR; int xC; int xCOffset;",g=0;g<d;g++)for(var v=0;v<p;v++)m+="\n          vec4 xTexelR"+g+"C"+2*v+" = vec4(0.);\n          vec4 wR"+g+"C"+v+" = vec4(0.);\n          vec4 xR"+g+"C"+v+" = vec4(0.);";for(g=0;g<d;g++)for(var y=0;y<f;y++){if(m+="\n          xR = xRCorner + "+g*c+";\n          xC = xCCorner + "+(v=2*y)*h+";\n        ",1===l){if(v<p&&(m+=o%2==1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+i+") {\n                    xTexelR"+g+"C"+v+".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+i+") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+i+") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR"+g+"C"+v+" = vec4(previous.zw, xTexelR"+g+"C"+v+".xy);\n                } else {\n                  xR"+g+"C"+v+" = vec4(0, 0, xTexelR"+g+"C"+v+".xy);\n                }\n              ":"\n                if(xR >= 0 && xR < "+a+" && xC >= 0 && xC < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = xTexelR"+g+"C"+v+";\n              ",v+1<p)){var b=o%2==0?it(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+="\n                  xCOffset = xC + "+o%2+" + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+i+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n                ",h>1&&(m+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < "+a+" &&\n                      xCOffset >= 0 && xCOffset < "+i+") {\n                      xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR"+g+"C"+v+" = vec4(0.);\n                    }\n                  "),m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".xy);\n                "):m+="\n                  xCOffset = xC + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+i+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR"+g+"C"+(v+1)+" = xTexelR"+g+"C"+(v+2)+";\n                "}}else v<p&&(m+="\n              if(xR >= 0 && xR < "+a+") {\n            ",o%2==1?(m+="\n                xCOffset = xC + 1 - "+l+";\n                if(xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < "+i+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n              ",v+1<p&&(m+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + "+l+";\n                  if(xCOffset >= 0 && xCOffset < "+i+") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR"+g+"C"+(v+1)+" = vec4(xTexelR"+g+"C"+(v+2)+".xy, final.xy);\n                ")):(m+="\n                if(xC >= 0 && xC < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + "+l+";\n                if(xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".xy, xTexelR"+g+"C"+(v+2)+".xy);\n              ",v+1<p&&(m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n                ")),m+="}");v<p&&(m+="\n            vec4 wTexelR"+g+"C"+v+" = getW("+g+", "+v+", d1, q);\n            wR"+g+"C"+v+" = vec4(wTexelR"+g+"C"+v+".xz, wTexelR"+g+"C"+v+".xz);\n          ",v+1<p&&(m+="\n              vec4 wTexelR"+g+"C"+(v+1)+" = getW("+g+", "+(v+1)+", d1, q);\n              wR"+g+"C"+(v+1)+" =\n                vec4(wTexelR"+g+"C"+(v+1)+".xz, wTexelR"+g+"C"+(v+1)+".xz);"))}for(g=0;g<d;g++)for(v=0;v<p;v++)m+="dotProd += xR"+g+"C"+v+" * wR"+g+"C"+v+";";var x="",w="";n&&(x=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"vec4 activation(vec4 x) {\n          "+n+"\n        }",w="result = activation(result);");var k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+x+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        "+m+"\n\n        vec4 result = dotProd;\n        "+k+"\n        "+w+"\n        setOutput(result);\n      }\n    "},Fo=function(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var i=e[0],s=e[1],o=e[2],u=e[3],l=t[0],c=n[0],h=n[1];this.outputShape=[l,c,h,u];var d="bilinear"===r?1:0,p=[s-1+".0",o-1+".0"],f=p[0],m=p[1],g=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio","y1*"+f+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+f],v=g[0],y=g[1],b=g[2],x=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=x[0],k=x[1],I=x[2];this.userCode="\n      const float height_ratio = float("+v+");\n      const float width_ratio = float("+w+");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= "+i+") {\n          return;\n        }\n\n        float height_scale = "+y+";\n        float width_scale = "+k+";\n\n        float in_y = "+b+";\n        if( in_y < 0.0 || in_y > "+f+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n        float in_x = "+I+";\n        if( in_x < 0.0 || in_x > "+m+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if("+d+" == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    "},_o=function(e,t,n){this.variableNames=["x"],this.outputShape=e;var r=e.length,a=e[e.length-1],i=n?"<":">";this.userCode="\n      int getIndex(int i) {\n        "+(n?"return "+a+" -i - 1;":"return i;")+"\n      }\n\n      void main() {\n        "+Zs(r)+" coords = getOutputCoords();\n        int end = "+$o(r,"coords")+";\n        float val = 0.0;\n        for (int i = "+a+" - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx "+i+" end) {\n            continue;\n          }\n          if (idx == end && "+t+") {\n            continue;\n          }\n          "+$o(r,"coords")+" = idx;\n          val += getX("+function(e,t){if(1===e)return""+t;if(2===e)return t+".x, "+t+".y";if(3===e)return t+".x, "+t+".y, "+t+".z";if(4===e)return t+".x, "+t+".y, "+t+".z, "+t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}(r,"coords")+");\n        }\n        setOutput(val);\n      }\n    "};function $o(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}var Oo=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=In.DENSE;var t=Dn(e),n=zs();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+Ws(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        "+n.output+" = result;\n      }\n    "},Mo=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=In.DENSE;var t=Dn(e),n=zs();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+Ws(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        "+n.output+" = result;\n      }\n    "},Lo=function(){function e(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = "+this.getHeightCoordString()+";\n      int w = "+this.getWidthCoordString()+";\n      int d = "+this.getDepthCoordString()+";\n\n      int in_h = h / "+t+";\n      int offset_h = imod(h, "+t+");\n      int in_w = w / "+t+";\n      int offset_w = imod(w, "+t+");\n      int offset_d = (offset_h * "+t+" + offset_w) *\n        "+this.getOutputDepthSize()+";\n      int in_d = d + offset_d;\n\n      float result = "+this.getInputSamplingString()+";\n      setOutput(result);\n    }\n  "}return e.prototype.getHeightCoordString=function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"},e.prototype.getWidthCoordString=function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"},e.prototype.getDepthCoordString=function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"},e.prototype.getOutputDepthSize=function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},e.prototype.getInputSamplingString=function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},e}(),Po=function(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "},Bo=function(e){this.variableNames=["A"],this.outTexUsage=Cn.DOWNLOAD;var t=zs();this.outputShape=e,this.userCode="\n      "+Us+"\n\n      void main() {\n        float x = getAAtOutCoords();\n        "+t.output+" = encode_float(x);\n      }\n    "},zo=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Cn.DOWNLOAD;var t=zs();this.outputShape=e,this.userCode="\n      "+Us+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        "+t.output+" = encode_float(x);\n      }\n    "},Wo=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"];var r=zs(),a=t[0],i=t[1];this.outputShape=e;var s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode="\n      "+Vs(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / "+i+";\n        int c = imod(flatIndex, "+i+");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n        vec4 values = "+r.texture2D+"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        "+r.output+" = vec4("+s+", 0., 0., 0.);\n      }\n    "},Vo=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=zs(),a=t[0],i=t[1];this.outputShape=e;var s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var l=0;l<=1;l++){var c=2*u+l;s+="\n          localCoords = coords;\n          if(localCoords[2] + "+l+" < "+e[2]+") {\n            localCoords[2] += "+l+";\n            if(localCoords[1] + "+u+" < "+e[1]+") {\n              localCoords[1] += "+u+";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / "+i+";\n              c = imod(flatIndex, "+i+");\n              uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n              values = "+r.texture2D+"(A, uv);\n\n              if(offset == 0) {\n                result["+c+"] = values[0];\n              } else if(offset == 1) {\n                result["+c+"] = values[1];\n              } else if(offset == 2) {\n                result["+c+"] = values[2];\n              } else {\n                result["+c+"] = values[3];\n              }\n            }\n          }\n        "}this.userCode="\n      "+Vs(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        "+s+"\n\n        "+r.output+" = "+o+";\n      }\n    "},Uo=function(e,t,n){this.variableNames=["real","imag"];var r=t[1];this.outputShape=t;var a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?r+".0":"1.0";this.userCode="\n      const float exponentMultiplier = "+a+";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        "+e+"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float("+r+");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < "+r+"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / "+i+";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    "},Go=function(){function e(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.valueLoc&&(t.valueLoc=n.getUniformLocationNoThrow(r,"value")),n.gl.uniform1f(t.valueLoc,e)}},e}(),Ho=function(e,t,n){this.variableNames=["A","indices"];var r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;var a=Zs(this.rank),i=function(e,t){var n=e.length;if(n>4)throw Error("Gather for rank "+n+" is not yet supported");if(1===n)return"int(getIndices(resRC))";for(var r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=0;i<e.length;i++)i===t?a.push("int(getIndices("+r[i]+"))"):a.push(""+r[i]);return a.join()}(e,n);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "},jo=function(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;var r=Zs(t.length),a=Zs(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        "+r+" strides = "+r+"("+this.strides+");\n         void main() {\n          "+a+" coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < "+this.sliceDim+"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * "+i+";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      "};function qo(e,t){var n=zs();return Pn(e,t,n.version+"\n    precision highp float;\n    "+n.attribute+" vec3 clipSpacePos;\n    "+n.attribute+" vec2 uv;\n    "+n.varyingVs+" vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }")}function Ko(e,t){return jn(e,t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Xo(e,t){return qn(e,t,new Uint16Array([0,1,2,2,1,3]))}function Yo(e,t,n,r,a,i,s){Xn(n,r);var o=Kn(e,t),u=e.TEXTURE_2D;return $n(e,t,(function(){return e.bindTexture(u,o)})),$n(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)})),$n(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)})),$n(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)})),$n(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)})),$n(e,t,(function(){return e.texImage2D(u,0,a,n,r,0,i,s,null)})),$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)})),o}function Qo(e,t,n,r,a){var i=An(n,r);return Yo(e,t,i[0],i[1],a.internalFormatFloat,a.textureFormatFloat,e.FLOAT)}function Jo(e,t,n,r,a){var i=An(n,r);return Yo(e,t,i[0],i[1],a.internalFormatHalfFloat,a.textureFormatFloat,a.textureTypeHalfFloat)}function Zo(e,t,n,r,a){var i=An(n,r);return Yo(e,t,i[0],i[1],e.RGBA,e.RGBA,e.UNSIGNED_BYTE)}function eu(e,t,n,r,a){var i=Fn(n,r);return Yo(e,t,i[0],i[1],a.internalFormatPackedFloat,e.RGBA,e.FLOAT)}function tu(e,t,n,r,a){var i=Fn(n,r);return Yo(e,t,i[0],i[1],a.internalFormatPackedHalfFloat,e.RGBA,a.textureTypeHalfFloat)}function nu(e,t,n,r){return $n(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),Qn(e,t,n,"clipSpacePos",r,3,20,0)&&Qn(e,t,n,"uv",r,2,20,12)}function ru(e,t,n,r,a,i,s){var o,u,l;$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),i instanceof Uint8Array?(o=new Uint8Array(r*a*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(r*a*4),u=e.FLOAT,l=s.internalFormatPackedFloat),o.set(i),$n(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,l,r,a,0,e.RGBA,u,o)})),$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function au(e,t,n,r){$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),r.data instanceof Uint8Array?$n(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)})):$n(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)})),$n(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function iu(e,t,n,r,a){var i=e.createBuffer();$n(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,i)}));var s=16*n*r;return $n(e,t,(function(){return e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)})),$n(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,0)})),$n(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,null)})),i}function su(e,t,n){var r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function ou(e,t,n,r,a){var i=An(n,r),s=i[0],o=i[1],u=new Uint8Array(n*r*4);return $n(e,t,(function(){return e.readPixels(0,0,s,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,u)})),new Float32Array(u.buffer)}function uu(e,t,n,r,a,i,s,o){var u=e,l=new Float32Array(function(e,t){var n=Fn(e,t);return n[0]*n[1]*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function lu(e,t,n,r){var a=new Float32Array(n*r*4);return $n(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,a)})),a}var cu=Object.freeze({createVertexShader:qo,createVertexBuffer:Ko,createIndexBuffer:Xo,createFloat32MatrixTexture:Qo,createFloat16MatrixTexture:Jo,createUnsignedBytesMatrixTexture:Zo,createPackedMatrixTexture:eu,createFloat16PackedMatrixTexture:tu,bindVertexProgramAttributeStreams:nu,uploadDenseMatrixToTexture:ru,uploadPixelDataToTexture:au,createBufferFromOutputTexture:iu,downloadFloat32MatrixFromBuffer:su,downloadByteEncodedFloatMatrixFromOutputTexture:ou,downloadPackedMatrixFromBuffer:uu,downloadMatrixFromPackedOutputTexture:lu}),hu=function(){function e(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=qe().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,En(t,e)):this.gl=Rn(t);var n="WEBGL_color_buffer_float";if(1===qe().getNumber("WEBGL_VERSION")){if(this.textureFloatExtension=Ln(this.gl,this.debug,"OES_texture_float"),vr(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=Ln(this.gl,this.debug,"OES_texture_half_float");else if(qe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),vr(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=Ln(this.gl,this.debug,"EXT_color_buffer_half_float");else if(qe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",vr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!vr(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Ko(this.gl,this.debug),this.indexBuffer=Xo(this.gl,this.debug),this.framebuffer=Yn(this.gl,this.debug),this.textureConfig=_n(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(e.prototype,"debug",{get:function(){return qe().getBool("DEBUG")},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){var e=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var t=this.gl;$n(t,this.debug,(function(){return t.finish()})),$n(t,this.debug,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)})),$n(t,this.debug,(function(){return t.deleteFramebuffer(e.framebuffer)})),$n(t,this.debug,(function(){return t.bindBuffer(t.ARRAY_BUFFER,null)})),$n(t,this.debug,(function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)})),$n(t,this.debug,(function(){return t.deleteBuffer(e.indexBuffer)})),this.disposed=!0}},e.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),Qo(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),Jo(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),Zo(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),au(this.gl,this.debug,e,t)},e.prototype.uploadDenseMatrixToTexture=function(e,t,n,r){this.throwIfDisposed(),ru(this.gl,this.debug,e,t,n,r,this.textureConfig)},e.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),tu(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),eu(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&&(rr(this.gl,this.debug,this.framebuffer),this.outputTexture=null),$n(this.gl,this.debug,(function(){return t.gl.deleteTexture(e)}))},e.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return ou(r.gl,r.debug,t,n,r.textureConfig)}))},e.prototype.downloadPackedMatrixFromBuffer=function(e,t,n,r,a,i){return uu(this.gl,e,0,0,0,a,i,this.textureConfig)},e.prototype.downloadFloat32MatrixFromBuffer=function(e,t){return su(this.gl,e,t)},e.prototype.createBufferFromTexture=function(e,t,n){this.bindTextureToFrameBuffer(e);var r=iu(this.gl,this.debug,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},e.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},e.prototype.createFence=function(e){var t,n,r=this;if(qe().getBool("WEBGL_FENCE_API_ENABLED")){var a=e,i=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=function(){var e=a.clientWaitSync(i,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=i}else qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(t,qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):n=function(){return!0};return{query:t,isFencePassed:n}},e.prototype.downloadMatrixFromPackedTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return lu(r.gl,r.debug,t,n)}))},e.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,n=Bn(t,this.debug,e),r=qo(t,this.debug),a=Un(t,this.debug);return $n(t,this.debug,(function(){return t.attachShader(a,r)})),$n(t,this.debug,(function(){return t.attachShader(a,n)})),Gn(t,this.debug,a),this.debug&&Hn(t,this.debug,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=nu(t,this.debug,this.program,this.vertexBuffer)),a},e.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&$n(this.gl,this.debug,(function(){return t.gl.deleteProgram(e)}))},e.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Hn(this.gl,this.debug,this.program),$n(this.gl,this.debug,(function(){return t.gl.useProgram(e)}))},e.prototype.getUniformLocation=function(e,t,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?Zn(this.gl,this.debug,e,t):er(this.gl,e,t)},e.prototype.getAttributeLocation=function(e,t){var n=this;return this.throwIfDisposed(),$n(this.gl,this.debug,(function(){return n.gl.getAttribLocation(e,t)}))},e.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},e.prototype.setInputMatrixTexture=function(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),tr(this.gl,this.debug,this.program,e,t,n)},e.prototype.setOutputMatrixTexture=function(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)},e.prototype.setOutputPackedMatrixTexture=function(e,t,n){this.throwIfDisposed();var r=Fn(t,n),a=r[0],i=r[1];this.setOutputMatrixTextureDriver(e,a,i)},e.prototype.setOutputMatrixWriteRegion=function(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)},e.prototype.setOutputPackedMatrixWriteRegion=function(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},e.prototype.debugValidate=function(){null!=this.program&&Hn(this.gl,this.debug,this.program),ar(this.gl)},e.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),$n(e,this.debug,(function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}))},e.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),$n(this.gl,this.debug,(function(){return e.gl.finish()}))},e.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Ln(this.gl,this.debug,2===qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},e.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},e.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},e.prototype.beginQuery=function(){if(2===qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),a=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,a),a},e.prototype.endQuery=function(){if(2!==qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT)}},e.prototype.waitForQueryAndGetTime=function(e){return Ge(this,void 0,void 0,(function(){var t=this;return He(this,(function(n){switch(n.label){case 0:return[4,vt((function(){return t.disposed||t.isQueryAvailable(e,qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}))];case 1:return n.sent(),[2,this.getQueryTime(e,qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}}))}))},e.prototype.getQueryTime=function(e,t){if(0===t)return null;if(2===t){var n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6},e.prototype.isQueryAvailable=function(e,t){if(0===t)return!0;if(2===t){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}return a=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT),null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint},e.prototype.pollFence=function(e){var t=this;return new Promise((function(n){t.addItemToPoll((function(){return e.isFencePassed()}),(function(){return n()}))}))},e.prototype.pollItems=function(){for(var e=function(e){for(var t=0;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((function(e){return e.isDoneFn}))),t=0;t<=e;++t)(0,this.itemsToPoll[t].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(e+1)},e.prototype.addItemToPoll=function(e,t){var n=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||vt((function(){return n.pollItems(),0===n.itemsToPoll.length}))},e.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),nr(this.gl,this.debug,e,this.framebuffer),this.debug&&ar(this.gl)},e.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(nr(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&ar(this.gl)):rr(this.gl,this.debug,this.framebuffer)},e.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var n=t();return this.unbindTextureToFrameBuffer(),n},e.prototype.setOutputMatrixTextureDriver=function(e,t,n){this.throwIfDisposed();var r=this.gl;nr(r,this.debug,e,this.framebuffer),this.debug&&ar(r),this.outputTexture=e,$n(r,this.debug,(function(){return r.viewport(0,0,t,n)})),$n(r,this.debug,(function(){return r.scissor(0,0,t,n)}))},e.prototype.setOutputMatrixWriteRegionDriver=function(e,t,n,r){var a=this;this.throwIfDisposed(),$n(this.gl,this.debug,(function(){return a.gl.scissor(e,t,n,r)}))},e.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},e.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error("No GPU program is currently set.")},e}();function du(e,t){if(e.length!==t.length)throw Error("Binary was compiled with "+e.length+" inputs, but was executed with "+t.length+" inputs");e.forEach((function(e,n){var r=e.logicalShape,a=t[n],i=a.shape;if(!dt(r,i))throw Error("Binary was compiled with different shapes than the current args. Shapes "+r+" and "+i+" must match");if(!e.isUniform||!a.isUniform){var s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!dt(s,o))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+s+" and "+o+" must match")}}))}var pu=function(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var r=n.filterWidth,a=n.inChannels,i=n.strideWidth,s=n.strideHeight,o=n.padInfo,u=n.outWidth,l=n.dilationWidth,c=n.dilationHeight,h=n.dataFormat,d=o.left,p=o.top,f=a*r,m=zs(),g="channelsLast"===h,v=g?0:1,y=g?1:2,b="",x=0;x<=1;x++)for(var w=0;w<=1;w++)b+="\n          blockIndex = rc.y + "+w+";\n          pos = rc.x + "+x+";\n\n          if(blockIndex < "+e[1]+" && pos < "+e[0]+") {\n            offsetY = int(blockIndex / ("+u+")) * "+s+" - "+p+";\n            d0 = offsetY + "+c+" * (pos / "+f+");\n\n            if(d0 < "+t[v]+" && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), "+u+".) * "+i+". - "+d+".);\n              d1 = offsetX + "+l+" * (int(mod(float(pos), "+f+".) / "+a+".));\n\n              if(d1 < "+t[y]+" && d1 >= 0) {\n\n                ch = int(mod(float(pos), "+a+".));\n\n                if ("+g+") {\n                  innerDims = vec2(d1, ch);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ";this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        "+b+"\n\n        "+m.output+" = result;\n      }\n    "},fu=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];var i,s=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -"+s+"; j <= "+s+"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  "+o+") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * "+i+";\n        setOutput(val);\n      }\n    "},mu=function(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < "+this.depth+"; ++d) {\n          int depthBegin = int(max(0.0, float(d - "+t+")));\n          int depthEnd = int(min(float("+this.depth+"),\n              float(d + "+t+" + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = "+this.depth+";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float("+r+") * norm + float("+n+");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float("+r+")\n                * float("+a+")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * "+a+");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    "},gu=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var i,s=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < "+this.outputShape[3]+";\n        bool hasNextRow = c < "+this.outputShape[2]+";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - "+s+";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - "+s+"; j <= "+s+"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2("+o+"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * "+i+";\n        setOutput(result);\n      }\n    "},vu=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+a+";\n          wR += "+r+") {\n          float dyR = float(dyRCorner + wR) / "+t+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+i+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+n+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = "+u+" - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * "+i+" + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},yu=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode="\n      const ivec3 pads = ivec3("+c+", "+h+", "+d+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+o+";\n           wD += "+a+") {\n          float dyD = float(dyDCorner + wD) / "+t+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+u+";\n              wR += "+i+") {\n            float dyR = float(dyRCorner + wR) / "+n+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+l+";\n                wC += "+s+") {\n              float dyC = float(dyCCorner + wC) / "+r+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = "+p+" -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * "+u+" * "+l+" +\n                  wR * "+l+" + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},bu=function(e,t,n,r,a,i,s){void 0===n&&(n=!1),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===i&&(i=null),void 0===s&&(s=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;var o=n?e[1]:e[2],u=Math.ceil(o/2),l=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",f="";i&&(p=s?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+i+"\n        }":"vec4 activation(vec4 x) {\n          "+i+"\n        }",f="result = activation(result);");var m=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+p+"\n\n      const float sharedDimension = "+u+".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < "+u+"; i++) {\n          vec4 a = getMatrixA(rc.x, "+l+");\n          vec4 b = getMatrixB(rc.x, "+c+");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += ("+h[0]+" * "+d[0]+");\n          result += ("+h[1]+" * "+d[1]+");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        "+m+"\n\n        "+f+"\n\n        setOutput(result);\n      }\n    "},xu=function(){function e(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < "+(t-1)+"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float("+(t-1)+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.seedLoc&&(t.seedLoc=n.getUniformLocation(r,"seed")),n.gl.uniform1f(t.seedLoc,e)}},e}(),wu=function(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float("+r+"), float("+n+"),\n                      float(index == coords.y)));\n      }\n    "},ku=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;var t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var n=Bs("rc",t),r=Zs(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];for(var r="",a=e-2;a<e;a++)r+=n[a]+" >= "+t[a],a<e-1&&(r+="||");return r}(t,e,n),i=function(e,t,n,r){if(1===e)return"";var a=r.slice(-2);return"\n    int r = "+a[0]+";\n    int c = "+a[1]+";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= "+t+";\n    bool rEdge = rp1 >= "+n+";\n  "}(t,e[e.length-1],e[e.length-2],n),s=function(e,t){var n=e.length,r=function(e,t){for(var n=[],r=0;r<=1;r++)for(var a=0;a<=1;a++){for(var i=(0===r?"r":"rp1")+", "+(0===a?"c":"cp1"),s=2;s<e;s++)i=t[t.length-1-s]+","+i;n.push(i)}return n}(n,t);return 1===n?"getA(rc),\n            rc + 1 >= "+e[0]+" ? 0. : getA(rc + 1),\n            0, 0":"getA("+r[0]+"),\n          cEdge ? 0. : getA("+r[1]+"),\n          rEdge ? 0. : getA("+r[2]+"),\n          rEdge || cEdge ? 0. : getA("+r[3]+")"}(e,n);this.userCode="\n        void main() {\n          "+r+" rc = getOutputCoords();\n\n          if("+a+") {\n            setOutput(vec4(0));\n          } else {\n            "+i+"\n\n            setOutput(vec4("+s+"));\n          }\n        }\n      "}},Iu=function(e,t,n){this.variableNames=["x"],this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));var r=e.length,a=Zs(r),i=t.map((function(e){return e[0]})).join(","),s=t.map((function(t,n){return t[0]+e[n]})).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      "+a+" start = "+a+"("+i+");\n      "+a+" end = "+a+"("+s+");\n\n      void main() {\n        "+a+" outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float("+n+"));\n        } else {\n          "+a+" coords = outC - start;\n          setOutput(getX("+o+"));\n        }\n      }\n    ":"\n        int start = "+i+";\n        int end = "+s+";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float("+n+"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      "},Cu=function(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));for(var r=e.length,a=Zs(r),i=t.map((function(e){return e[0]})).join(","),s=t.map((function(t,n){return t[0]+e[n]})).join(","),o=Bs("rc",r),u=Bs("source",r),l=o[r-1]+" < "+this.outputShape[r-1],c=1===r?"source":"vec2("+u.slice(-2).join()+")",h=[a+" rc = outputLoc;",o[r-1]+" += 1;\n       if("+l+") {\n      ",1===r?"":"}\n       rc = outputLoc;\n       "+o[r-2]+" += 1;\n       if("+o[r-2]+" < "+this.outputShape[r-2]+") {",1===r?"":"  "+o[r-1]+" += 1;\n         if("+l+") {"],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="",f=0,m=1===r?2:4;f<m;f++)p+="\n        "+h[f]+"\n        if ("+d+") {\n          result["+f+"] = float("+n+");\n        } else {\n          "+a+" source = rc - start;\n          result["+f+"] = getChannel(getX("+u.join()+"), "+c+");\n        }\n      ";p+=1===r?"} ":"}}",this.userCode="\n      const "+a+" start = "+a+"("+i+");\n      const "+a+" end = "+a+"("+s+");\n\n      void main() {\n        "+a+" outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        "+p+"\n        setOutput(result);\n      }\n    "},Su=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;var f="avg"===t,m="((batch  * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + d",g="(xR * "+e.inWidth+" + xC) * "+e.inChannels+" + d",v="0.0";if(f||(v="-1.0 / 1e-20"),n)this.userCode="\n        const ivec2 strides = ivec2("+s+", "+o+");\n        const ivec2 pads = ivec2("+d+", "+p+");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < "+c+";\n              wR += "+u+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+h+";\n                wC += "+l+") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = "+(r?a?m:g:"wR * "+h+" + wC")+";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var y=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(y="avgValue / count");var b=4*Math.floor(i/4),x=i%4,w="\n      if ("+f+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec2 strides = ivec2("+s+", "+o+");\n      const ivec2 pads = ivec2("+d+", "+p+");\n      const float initializationValue = "+v+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+v+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < "+c+";\n            wR += "+u+") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+b+"; wC += 4) {\n            int xC = xCCorner + wC * "+l+";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              getValue(batch, xR, xC + 3 * "+l+", d)\n            );\n\n            "+w+"\n          }\n\n          int xC = xCCorner + "+b+";\n          if ("+(1===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(2===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(3===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              initializationValue\n            );\n\n            "+w+"\n          }\n        }\n        setOutput("+y+");\n      }\n    "}},Nu=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;var y="avg"===t,b="0.0";if(y||(b="-1.0 / 1e-20"),n)this.userCode="\n        const ivec3 strides =\n            ivec3("+s+", "+o+", "+u+");\n        const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < "+d+";\n              wD += "+l+") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int wR = 0; wR < "+p+";\n                wR += "+c+") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int wC = 0; wC < "+f+";\n                  wC += "+h+") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = "+(r?a?"(((batch * "+e.inDepth+" + xD) * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"((xD * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"wD * "+p+" * "+f+" +\n                      wR * "+f+" + wC")+";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var x=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / count");var w=4*Math.floor(i/4),k=i%4,I="\n      if ("+y+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec3 strides =\n        ivec3("+s+", "+o+", "+u+");\n      const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n      const float initializationValue = "+b+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+b+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < "+d+";\n            wD += "+l+") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+p+";\n            wR += "+c+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+w+"; wC += 4) {\n              int xC = xCCorner + wC * "+h+";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                getValue(batch, xD, xR, xC + 3 * "+h+", ch)\n              );\n\n              "+I+"\n            }\n\n            int xC = xCCorner + "+w+";\n            if ("+(1===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(2===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(3===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                initializationValue\n              );\n\n              "+I+"\n            }\n          }\n          setOutput("+x+");\n        }\n      }\n    "}},Tu=function(e,t){this.variableNames=["x"];var n=e.windowSize,r=e.batchSize,a=e.inSize,i=Math.ceil(a/n);this.outputShape=[r,i];var s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");var u=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");var l=4*Math.floor(n/4),c=n%4,h="\n      if ("+("sum"===t)+") {\n        sumValue += dot(values, ones);\n      } else if ("+("prod"===t)+") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = "+o+"(values, minMaxValue);\n      }\n    ",d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");var p="";a%n>0&&(p="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      "),this.userCode="\n      const float initializationValue = "+s+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+p+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+n+";\n\n        vec4 minMaxValue = vec4("+s+");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < "+l+"; i += 4) {\n          int inIdx = inOffset + i;\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+h+"\n        }\n\n        int inIdx = inOffset + "+l+";\n        if ("+(1===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(2===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(3===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          "+h+"\n        }\n        setOutput("+u+");\n      }\n    "},Eu=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var n="",r=0;r<4;r++){var a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+="\n        "+a+"\n        "+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+"\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result["+r+"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        "+(r>0?"}":"")+"\n      "}this.userCode="\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      "+Ws(["r","c","d"],t)+"\n      return ivec3(r, c, d);\n    }\n  \n      "+Vs(e)+"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = "+e[1]+";\n        int cols = "+e[2]+";\n\n        "+n+"\n\n        setOutput(result);\n      }\n    "},Ru=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],i=r[2],s=e.shape,o=s[1],u=s[2],l=[n&&o>1?a-1:a,n&&u>1?i-1:i],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],d=l[1]/c[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+d+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), "+(a-1)+".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), "+(i-1)+".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},Au=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+i+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    "},Du=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+",\n          "+u[1]/l[1]+");\n      const vec3 inputShapeRC = vec3("+i+".0, "+s+".0,\n                                     "+s+".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < "+(o-1)+";\n        bool hasNextRow = coords.z < "+(n-1)+";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    "},Fu=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],i=r[2],s=e.shape,o=s[1],u=s[2],l=[n&&o>1?a-1:a,n&&u>1?i-1:i],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],d=l[1]/c[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+d+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float("+l[0]+") *\n                (float(dyR) / float("+c[0]+"));\n\n            float sourceFracCol =\n                float("+l[1]+") *\n                  (float(dyC) / float("+c[1]+"));\n\n            int sourceNearestRow = int(min(\n                float(int("+a+") - 1),\n                "+n+" ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int("+i+") - 1),\n                "+n+" ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},_u=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+i+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + "+c+")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    "},$u=function(e,t){this.variableNames=["x"];var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");if(this.outputShape=e,1!==n){var r=e.map((function(n,r){return function(n){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - coords["+n+"] - 1":"coords["+n+"]"}(r)})).join(","),a=Zs(n);this.userCode="\n      void main() {\n        "+a+" coords = getOutputCoords();\n        setOutput(getX("+r+"));\n      }\n    "}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX("+e[0]+" - coord - 1));\n        }\n      "},Ou=function(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");this.outputShape=e;var r=Bs("rc",n),a=r[n-1]+" + 1 < "+this.outputShape[n-1],i=r[n-2]+" + 1 < "+this.outputShape[n-2],s=Zs(n);function o(n){var r=e.map((function(r,a){return function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - "+r[n]+" - 1":""+r[n]}(a,n)}));return"getChannel(getX("+r.join(",")+"), vec2("+r.slice(-2).join(",")+"))"}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX("+e[0]+" - rc - 1),\n            "+e[0]+" - rc - 1);\n          if("+a+"){\n              result.g = getChannel(getX("+e[0]+" - (rc  + 1) - 1),\n                "+e[0]+" - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      ":"\n        void main() {\n          "+s+" rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = "+function(e){return o(e)}(r.slice())+";\n          if("+a+"){\n            result.g = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())+";\n          }\n          if("+i+") {\n            result.b = "+function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            if("+a+") {\n              result.a = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            }\n          }\n          setOutput(result);\n        }\n    "},Mu=function(e,t,n,r,a,i,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;var o=Zs(a.length),u=Zs(i.length),l="";1===n?l="i":2===n&&(l="i, j");var c="getIndices("+l+")",h="";1===r?h="i":2===r&&(h="i, coords[1]");var d="getUpdates("+h+")",p=t>1?"strides[j]":"strides";this.userCode="\n        "+o+" strides = "+o+"("+a+");\n\n        void main() {\n          "+u+" coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < "+e+"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < "+t+"; j++) {\n              int index = round("+c+");\n              flattenedIndex += index * "+p+";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += "+d+";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      "},Lu=function(e,t){this.variableNames=["x","segmentIds"];var n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];var o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ",c="";a%n>0&&(c="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      ");var h="";a%n>0&&(h="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return -1.0;\n        }\n      "),this.userCode="\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        "+c+"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        "+h+"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          "+i+")) * float("+n+"));\n        int currentSeg = int(mod(float(outIdx), float("+i+")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+o+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          "+l+"\n        }\n\n        int inIdx = inOffset + "+o+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          "+l+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          "+l+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          "+l+"\n        }\n        setOutput(sumValue);\n      }\n    "},Pu=function(e,t,n){var r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank "+n+" is not yet supported");if(1===n)a="resRC",r="resRC";else{for(var i=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[],u=0;u<t.length;u++)o.push(""+i[u]),u<e&&s.push(""+i[u]);r=s.join(),a=o.join()}var l=Zs(n);this.userCode="\n      void main() {\n        "+l+" resRC = getOutputCoords();\n        float cVal = getC("+r+");\n        if (cVal >= 1.0) {\n          setOutput(getA("+a+"));\n        } else {\n          setOutput(getB("+a+"));\n        }\n      }\n    "},Bu=function(){function e(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t,n=Zs(this.rank),r="uniform int start["+this.rank+"];",a=function(e){if(1===e)return"sourceLoc";if(e<=6)return zu.slice(0,e).map((function(e){return"sourceLoc."+e})).join(",");throw Error("Slicing for rank "+e+" is not yet supported")}(this.rank);t="\n        "+n+" sourceLoc;\n        "+n+" coords = getOutputCoords();\n        "+e.map((function(e,t){return"sourceLoc."+zu[t]+" = start["+t+"] + coords."+zu[t]+";"})).join("\n")+"\n      ",this.userCode="\n      "+r+"\n      void main() {\n        "+t+"\n        setOutput(getSource("+a+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),zu=["x","y","z","w","u","v"],Wu=function(){function e(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var t=Zs(this.rank),n=Bs("coords",this.rank),r=Bs("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2("+r.slice(-2).join()+")",i="getChannel(getSource("+r.join()+"), "+a+")",s="\n      result.x = "+i+";\n      if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n        ++"+r[this.rank-1]+";\n        result.y = "+i+";\n        --"+r[this.rank-1]+";\n      }\n    ",o=1===this.rank?"":"\n      --"+n[this.rank-1]+";\n      if (++"+n[this.rank-2]+" < "+e[this.rank-2]+") {\n        ++"+r[this.rank-2]+";\n        result.z = "+i+";\n        if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n          ++"+r[this.rank-1]+";\n          result.w = "+i+";\n        }\n      }\n    ",u=this.rank<=4?"sourceLoc = coords +\n            "+t+"("+e.map((function(e,t){return"start["+t+"]"})).join()+");":e.map((function(e,t){return r[t]+" = "+n[t]+" + start["+t+"];"})).join("\n");this.userCode="\n      uniform int start["+this.rank+"];\n      void main() {\n        "+t+" coords = getOutputCoords();\n        "+t+" sourceLoc;\n        "+u+"\n        vec4 result = vec4(0.);\n        "+s+"\n        "+o+"\n        setOutput(result);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),Vu=function(e,t,n){this.variableNames=["x"],this.outputShape=n;var r=n.length,a=Zs(n.length),i=Zs(n.length),s="";if(1===r)s="coords * strides + begin";else{var o=0;s=n.map((function(e,t){return o++,1===n.length?"coords * strides["+t+"] + begin["+t+"]":"coords["+(o-1)+"] * strides["+t+"] + begin["+t+"]"})).join(",")}this.userCode="\n      "+a+" begin = "+a+"("+e+");\n      "+a+" strides = "+a+"("+t+");\n\n      void main() {\n        "+i+" coords = getOutputCoords();\n        setOutput(getX("+s+"));\n      }\n    "},Uu=function(){function e(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return e.prototype.acquireTexture=function(e,t,n){var r,a=Gu(t,n),i=Hu(e,a,n);if(i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]),this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var s=this.freeTextures[i].shift();return this.usedTextures[i].push(s),s}return this.numUsedTextures++,this.log(),a===Sn.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Sn.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Sn.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Sn.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Sn.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(r),r},e.prototype.releaseTexture=function(e,t,n,r){if(null!=this.freeTextures){var a=Hu(t,Gu(n,r),r);a in this.freeTextures||(this.freeTextures[a]=[]),this.freeTextures[a].push(e),this.numFreeTextures++,this.numUsedTextures--;var i=this.usedTextures[a],s=i.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1),this.log()}},e.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")")}},e.prototype.getNumUsedTextures=function(){return this.numUsedTextures},e.prototype.getNumFreeTextures=function(){return this.numFreeTextures},e.prototype.dispose=function(){var e=this;if(null!=this.freeTextures){for(var t in this.freeTextures)this.freeTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));for(var t in this.usedTextures)this.usedTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},e}();function Gu(e,t){if(e===Cn.UPLOAD)return Sn.PACKED_2X2_FLOAT32;if(e===Cn.RENDER||null==e)return function(e){return qe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Sn.PACKED_2X2_FLOAT32:Sn.UNPACKED_FLOAT32:e?Sn.PACKED_2X2_FLOAT16:Sn.UNPACKED_FLOAT16}(t);if(e===Cn.DOWNLOAD||e===Cn.PIXELS)return Sn.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function Hu(e,t,n){return e[0]+"_"+e[1]+"_"+t+"_"+n}var ju=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;var a=Zs(this.rank),i=function(e){var t=e.length;if(t>5)throw Error("Tile for rank "+t+" is not yet supported");if(1===t)return"imod(resRC, "+e[0]+")";for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[],a=0;a<e.length;a++)r.push("imod("+n[a]+", "+e[a]+")");return r.join()}(e);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "},qu=1.7580993408473768,Ku=1.0507009873554805,Xu=function(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      float unaryOperation(float x) {\n        "+t+"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},Yu="if (isnan(x)) return x;",Qu="return abs(x);",Ju=Yu+"\n  return (x < 0.0) ? 0.0 : x;\n",Zu=Yu+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",el="return (x >= 0.0) ? x : (exp(x) - 1.0);",tl="\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = "+qu+";\n  float scale = "+Ku+";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n",nl="return -x;",rl="return ceil(x);",al="return floor(x);",il="return exp(x);",sl="return exp(x) - 1.0;",ol=Yu+"\n  return sin(x);\n",ul=Yu+"\n  return cos(x);\n",ll=Yu+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",cl=Yu+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",hl=Yu+"\n  return atan(x);\n",dl=Yu+"return log(x + sqrt(x * x + 1.0));",pl=Yu+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",fl=Yu+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",ml="return x;",gl="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",vl="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",yl="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",bl=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        "+t+"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},xl=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;var t=e.length,n=Bs("rc",t),r=Zs(t),a=function(e,t){if(1===e)return"rc";for(var n="",r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":"vec2("+i.join(",")+")";this.userCode="\n      void main() {\n        "+r+" rc = getOutputCoords();\n        vec4 packedInput = getA("+a+");\n\n        setOutput(getChannel(packedInput, "+s+"));\n      }\n    "},wl={};function kl(e,t){if(void 0===t&&(t=!1),"linear"===e)return"return x;";if("relu"===e)return t?gl:Ju;if("elu"===e)return t?yl:el;if("relu6"===e)return t?vl:Zu;if("prelu"===e)return t?fo:ho;throw new Error("Activation "+e+" has not been implemented for the WebGL backend.")}var Il=function(e){function t(t){var n,r=e.call(this)||this;if(r.pendingRead=new WeakMap,r.pendingDisposal=new WeakSet,r.dataRefCount=new WeakMap,r.numBytesInGPU=0,r.uploadWaitMs=0,r.downloadWaitMs=0,r.warnedAboutMemory=!1,r.pendingDeletes=0,r.disposed=!1,!qe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){var a=Rn(qe().getNumber("WEBGL_VERSION"));r.binaryCache=((n=qe().getNumber("WEBGL_VERSION"))in wl||(wl[n]={}),wl[n]),r.gpgpu=new hu(a),r.canvas=a.canvas,r.gpgpuCreatedLocally=!0}else r.gpgpu=t,r.binaryCache={},r.gpgpuCreatedLocally=!1,r.canvas=t.gl.canvas;return r.textureManager=new Uu(r.gpgpu),r.numMBBeforeWarning=null==qe().global.screen?1024:qe().global.screen.height*qe().global.screen.width*window.devicePixelRatio*600/1024/1024,r.texData=new ts(r,xn),r}return Ue(t,e),t.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},t.prototype.write=function(e,t,n){if(qe().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Cn.UPLOAD}),r},t.prototype.move=function(e,t,n,r){if(qe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Cn.UPLOAD})},t.prototype.readSync=function(e){var t=this.texData.get(e),n=t.values,r=t.dtype,a=t.complexTensors,i=t.slice,s=t.shape,o=t.isPacked;if(null!=i){var u;u=o?new bl(s,ml):new Xu(s,ml);var l=this.runWebGLProgram(u,[{dataId:e,shape:s,dtype:r}],r),c=this.readSync(l.dataId);return this.disposeData(l.dataId),c}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;var h,d,p=null!=this.activeTimers;return p&&(h=zt()),d="complex64"===r?bs(a.real.dataSync(),a.imag.dataSync()):this.getValuesFromTexture(e),p&&(this.downloadWaitMs+=zt()-h),this.convertAndCacheOnCPU(e,d)},t.prototype.read=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k;return He(this,(function(I){switch(I.label){case 0:if(this.pendingRead.has(e))return t=this.pendingRead.get(e),[2,new Promise((function(e){return t.push(e)}))];if(n=this.texData.get(e),r=n.values,a=n.shape,i=n.slice,s=n.dtype,o=n.complexTensors,u=n.isPacked,null!=i)return void 0,l=u?new bl(a,ml):new Xu(a,ml),c=this.runWebGLProgram(l,[{dataId:e,shape:a,dtype:s}],s),h=this.read(c.dataId),this.disposeData(c.dataId),[2,h];if(null!=r)return[2,this.convertAndCacheOnCPU(e)];if(!qe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===qe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return d=null,"complex64"!==s&&qe().get("WEBGL_BUFFER_SUPPORTED")&&(p=this.decode(e),f=this.texData.get(p.dataId),d=(k=this.gpgpu).createBufferFromTexture.apply(k,[f.texture].concat(Dn(a)))),this.pendingRead.set(e,[]),"complex64"===s?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:I.sent(),I.label=2;case 2:return"complex64"!==s?[3,4]:[4,Promise.all([o.real.data(),o.imag.data()])];case 3:return g=I.sent(),v=g[0],y=g[1],m=bs(v,y),[3,5];case 4:null==d?m=this.getValuesFromTexture(e):(b=ht(a),m=this.gpgpu.downloadFloat32MatrixFromBuffer(d,b)),I.label=5;case 5:return null!=p&&this.disposeData(p.dataId),x=this.convertAndCacheOnCPU(e,m),w=this.pendingRead.get(e),this.pendingRead.delete(e),w.forEach((function(e){return e(x)})),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),[2,x]}}))}))},t.prototype.checkNumericalProblems=function(e){if(null!=e)for(var t=0;t<e.length;t++){var n=e[t];if(!On(n)){if(qe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value "+n+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value "+n+" cannot be represented on this device.")}}},t.prototype.getValuesFromTexture=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,i=n.isPacked,s=ht(r);if(qe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var o=this.decode(e),u=this.texData.get(o.dataId),l=(t=this.gpgpu).downloadMatrixFromPackedTexture.apply(t,[u.texture].concat(Dn(r))).subarray(0,s);return this.disposeData(o.dataId),l}var c=qe().getBool("WEBGL_PACK")&&!0===i,h=c?cr(r):r,d=c?new zo(h):new Bo(h),p=this.runWebGLProgram(d,[{shape:h,dtype:a,dataId:e}],"float32"),f=this.texData.get(p.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture,f.texShape[0],f.texShape[1]).subarray(0,s);return this.disposeData(p.dataId),m},t.prototype.time=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r,a,i,s,o;return He(this,(function(u){switch(u.label){case 0:return t=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e(),a=ct(this.activeTimers.map((function(e){return e.query}))).filter((function(e){return null!=e})),i=ct(this.activeTimers.map((function(e){return e.name}))).filter((function(e){return null!=e})),this.activeTimers=t,r&&(this.programTimersStack=null),s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(a)]:[3,2];case 1:return o=u.sent(),s.kernelMs=st(o),s.getExtraProfileInfo=function(){return o.map((function(e,t){return{name:i[t],ms:e}})).map((function(e){return e.name+": "+e.ms})).join(", ")},[3,3];case 2:s.kernelMs={error:"WebGL query timers are not supported in this environment."},u.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,s]}}))}))},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:zt(),endMs:null}},t.prototype.endTimer=function(e){return qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=zt(),e)},t.prototype.getQueryTime=function(e){return Ge(this,void 0,void 0,(function(){var t;return He(this,(function(n){return qe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]}))}))},t.prototype.disposeData=function(e){if(!this.pendingDisposal.has(e)){if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(this.texData.has(e)){this.releaseGPUData(e);var t=this.texData.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.texData.delete(e)}}},t.prototype.releaseGPUData=function(e){var t=this.texData.get(e),n=t.texture,r=t.dtype,a=t.texShape,i=t.usage,s=t.isPacked,o=t.slice,u=o&&o.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),null!=n&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(n,a,i,s)));var c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null},t.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},t.prototype.getDataInfo=function(e){return this.texData.get(e)},t.prototype.getCPUBackend=function(){return qe().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=xn.findBackend("cpu")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(e,t){var n=this;return void 0===t&&(t=128),null!=this.getCPUBackend()&&e.every((function(e){return null==n.texData.get(e.dataId).texture&&ht(e.shape)<t}))},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.complex=function(e,t){var n=this.makeOutput(e.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:xn.keep(e.clone()),imag:xn.keep(t.clone())},n},t.prototype.real=function(e){return this.texData.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.texData.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.slice(e,t,n);if(0===ht(n))return qr([],n,e.dtype);var r=this.texData.get(e.dataId).isPacked,a=Xi(e.shape,t,n);if(r||!a){var i=qe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Wu(n):new Bu(n),s=i.getCustomSetupFunc(t);return this.compileAndRun(i,[e],null,s)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)},t.prototype.shallowSlice=function(e,t,n){var r=this.texData.get(e.dataId),a=this.makeOutput(n,e.dtype),i=this.texData.get(a.dataId);Object.assign(i,r),i.shape=n,i.dtype=e.dtype;var s=Yi(t,e.strides);r.slice&&(s+=r.slice.flatOffset),i.slice={flatOffset:s,origDataId:r.slice&&r.slice.origDataId||e.dataId};var o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),a},t.prototype.stridedSlice=function(e,t,n,r){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.stridedSlice(e,t,n,r);var a=ji(t,n,r);if(a.some((function(e){return 0===e})))return qr([],a);var i=new Vu(t,r,a);return this.compileAndRun(i,[e])},t.prototype.reverse=function(e,t){var n=qe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ou(e.shape,t):new $u(e.shape,t);return this.compileAndRun(n,[e])},t.prototype.concat=function(e,t){if("complex64"===e[0].dtype){var n=e.map((function(e){return Hr(e)})),r=e.map((function(e){return jr(e)}));return Gr(this.concat(n,t),this.concat(r,t))}if(this.shouldExecuteOnCPU(e))return this.cpuBackend.concat(e,t);if(1===e.length)return e[0];if(e.length>qe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var a=Math.floor(e.length/2),i=this.concat(e.slice(0,a),t),s=this.concat(e.slice(a),t);return this.concat([i,s],t)}if(qe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].rank>1){var o=new xo(e.map((function(e){return e.shape})),t);return this.compileAndRun(o,e)}var u=Vr(e.map((function(e){return e.shape})),t),l=e.map((function(e){return e.as2D(-1,ht(e.shape.slice(t)))})),c=new bo(l.map((function(e){return e.shape})));return this.compileAndRun(c,l).reshape(u)},t.prototype.neg=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.neg(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,nl,e.dtype);var t=new Xu(e.shape,nl);return this.compileAndRun(t,[e])},t.prototype.batchMatMul=function(e,t,n,r){var a=n?e.shape[2]:e.shape[1],i=r?t.shape[1]:t.shape[2],s=n?e.shape[1]:e.shape[2],o=e.shape[0];if((1===a||1===i)&&s>1e3){n&&(e=es(e,[0,2,1])),r&&(t=es(t,[0,2,1]));var u=1===i?e:e.as3D(o,s,1),l=1===i?2:1,c=1===i?t.as3D(o,1,s):t;return this.multiply(u,c).sum(l,!0)}var h=pn(e.dtype,t.dtype),d=new bu(e.shape,[o,a,i],n,r);return this.compileAndRun(d,[e,t],h)},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=r?t.shape[2]:t.shape[1],l=a?n.shape[1]:n.shape[2],c=t.shape[0],h=pn(t.dtype,n.dtype),d=null!=i,p=null!=o,f=s?kl(s,!0):null,m=new bu(t.shape,[c,u,l],r,a,d,f,p),g=[t,n];return i&&g.push(i),o&&g.push(o),this.compileAndRun(m,g,h)},t.prototype.multiply=function(e,t){if("complex64"===e.dtype){var n=this.texData.get(e.dataId),r=this.texData.get(t.dataId),a=new oo("return areal * breal - aimag * bimag;",e.shape,t.shape),i=new oo("return areal * bimag + aimag * breal;",e.shape,t.shape),s=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag),this.makeComplexComponentTensorInfo(t,r.complexTensors.real),this.makeComplexComponentTensorInfo(t,r.complexTensors.imag)],o=this.compileAndRun(a,s),u=this.compileAndRun(i,s),l=this.complex(o,u);return o.dispose(),u.dispose(),l}if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.multiply(e,t);if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,co,e.dtype);var c=new po(co,e.shape,t.shape);return this.compileAndRun(c,[e,t],e.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,i){var s=[e,t,n],o=null;null!=i&&(o=i.shape,s.push(i));var u=null;if(null!=a&&(u=a.shape,s.push(a)),qe().getBool("WEBGL_PACK_NORMALIZATION")){var l=new so(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(l,s)}var c=new io(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(c,s)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){var i=qe().getBool("WEBGL_PACK_NORMALIZATION")?new gu(e.shape,t,n,r,a):new fu(e.shape,t,n,r,a);return this.compileAndRun(i,[e])},t.prototype.LRNGrad=function(e,t,n,r,a,i,s){var o=new mu(t.shape,r,a,i,s);return this.compileAndRun(o,[t,n,e])},t.prototype.tile=function(e,t){if("string"===e.dtype){var n=this.readSync(e.dataId).map((function(e){return Ut(e)}));return Fs(pa(e.shape,e.dtype,n),t)}var r=new ju(e.shape,t);return this.compileAndRun(r,[e])},t.prototype.pad=function(e,t,n){var r=qe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cu(e.shape,t,n):new Iu(e.shape,t,n);return this.compileAndRun(r,[e])},t.prototype.gather=function(e,t,n){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.gather(e,t,n);var r=new Ho(e.shape,t.size,n);return this.compileAndRun(r,[e,t])},t.prototype.batchToSpaceND=function(e,t,n){ot(e.rank<=4,(function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=Sa(e.shape,t,r),i=Na(a.length,t.length),s=Ta(e.shape,t,r),o=Ea(n,t.length),u=Ra(s,n,t.length);return es(e.reshape(a),i).reshape(s).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){ot(e.rank<=4,(function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var i=1+t.length;i<e.shape.length;++i)a.push([0,0]);var s=e.pad(a),o=Sa(s.shape,t,r,!1),u=Na(o.length,t.length,!1),l=Ta(s.shape,t,r,!1);return es(s.reshape(o),u).reshape(l)},t.prototype.reduce=function(e,t,n){var r=e.shape[0],a=e.shape[1],i=zi(a),s=new Tu({windowSize:i,inSize:a,batchSize:r},t),o=this.compileAndRun(s,[e],n);return 1===o.shape[1]?o:this.reduce(o,t,n)},t.prototype.argReduce=function(e,t,n){void 0===n&&(n=null);var r=e.shape[0],a=e.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);var i=zi(a),s=new Ls({windowSize:i,inSize:a,batchSize:r},t,null==n),o=[e];null!=n&&o.push(n);var u=this.compileAndRun(s,o,"int32");return 1===u.shape[1]?u:this.argReduce(e,t,u)},t.prototype.argReducePacked=function(e,t,n){void 0===n&&(n=null);var r=null!=n?n.shape:e.shape,a=zi(r[r.length-1]),i=new no(r,a,t,null==n),s=null==n?[e]:[e,n],o=this.compileAndRun(i,s,"int32");return o.rank===e.rank?this.argReducePacked(e,t,o):o},t.prototype.sum=function(e,t){Lr("sum",t,e.rank);var n=Or(e.shape,t),r=n[0],a=ht(n[1]),i=e.as2D(-1,a),s=fn(e.dtype);return this.reduce(i,"sum",s).reshape(r)},t.prototype.prod=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.prod(e,t);var n=Or(e.shape,t),r=n[0],a=ht(n[1]),i=e.as2D(-1,a),s=fn(e.dtype);return this.reduce(i,"prod",s).reshape(r)},t.prototype.unsortedSegmentSum=function(e,t,n){var r=0,a=Pr([r],e.rank),i=e;null!=a&&(i=es(e,a),r=zr(1,e.rank)[0]);var s=function(e,t,n){for(var r=[],a=e.length,i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}(i.shape,r,n),o=ht([i.shape[r]]),u=i.as2D(-1,o),l=fn(e.dtype),c=this.segOpCompute(u,"unsortedSegmentSum",t,l,n).reshape(s);return null!=a&&(c=es(c,Br(a))),c},t.prototype.segOpCompute=function(e,t,n,r,a){var i=e.shape[0],s=e.shape[1],o=function(e,t){var n,r=!1;for(e<=30?(n=e,r=!0):n=$t(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=$t(e,n+1);return n}(s,a),u=new Lu({windowSize:o,inSize:s,batchSize:i,numSegments:a}),l=this.compileAndRun(u,[e,n],r);return l.shape[1]===a?l:(n=aa(0,a).tile([s/o]),this.segOpCompute(l,t,n,r,a))},t.prototype.argMinMaxReduce=function(e,t,n){var r=[t];if(Lr("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!qe().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){var a=Or(e.shape,r),i=a[0],s=ht(a[1]),o=e.as2D(-1,s);return this.argReduce(o,n).reshape(i)}return this.argReducePacked(e,n)},t.prototype.argMin=function(e,t){return this.argMinMaxReduce(e,t,"min")},t.prototype.argMax=function(e,t){return this.argMinMaxReduce(e,t,"max")},t.prototype.cumsum=function(e,t,n,r){if(t!==e.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(e.rank-1)+" but got axis="+t);var a=new _o(e.shape,n,r);return this.compileAndRun(a,[e])},t.prototype.equal=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");var n=new po("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.notEqual=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(notEqual(a, b));\n","bool");var n=new po("return float(a != b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.less=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.less(e,t);if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");var n=new po("return float(a < b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.lessEqual=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");var n=new po("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greater=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.greater(e,t);if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");var n=new po("return float(a > b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greaterEqual=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");var n=new po("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalNot=function(e){var t=new Xu(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])},t.prototype.logicalAnd=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");var n=new po("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalOr=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");var n=new po("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.select=function(e,t,n){var r=new Pu(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],pn(t.dtype,n.dtype))},t.prototype.where=function(e){Er("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return $s(e.shape,t)},t.prototype.topk=function(e,t,n){return _s(e.dataSync(),e.shape,e.dtype,t)},t.prototype.min=function(e,t){Lr("min",t,e.rank);var n=Or(e.shape,t),r=n[0],a=ht(n[1]),i=e.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(r)},t.prototype.minimum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.minimum(e,t);var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new po("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.mod=function(e,t){var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new po("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.max=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.max(e,t);Lr("max",t,e.rank);var n=Or(e.shape,t),r=n[0],a=ht(n[1]),i=e.as2D(-1,a);return this.reduce(i,"max",i.dtype).reshape(r)},t.prototype.maximum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.maximum(e,t);var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new po("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.all=function(e,t){Lr("all",t,e.rank);var n=Or(e.shape,t),r=n[0],a=ht(n[1]),i=e.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(r)},t.prototype.any=function(e,t){Lr("any",t,e.rank);var n=Or(e.shape,t),r=n[0],a=ht(n[1]),i=e.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(r)},t.prototype.floorDiv=function(e,t){if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");var n=new po("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(n,[e,t],"int32")},t.prototype.add=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,uo);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.add(e,t);var n=pn(e.dtype,t.dtype);if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,uo,n);var r=new po(uo,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.packedUnaryOp=function(e,t,n){var r=new bl(e.shape,t);return this.compileAndRun(r,[e],n)},t.prototype.packedBinaryOp=function(e,t,n,r,a){void 0===a&&(a=!1);var i=new mo(n,e.shape,t.shape,a);return this.compileAndRun(i,[e,t],r)},t.prototype.complexSeparableBinaryOp=function(e,t,n){var r=this,a=this.texData.get(e.dataId),i=this.texData.get(t.dataId),s=[[a.complexTensors.real,i.complexTensors.real],[a.complexTensors.imag,i.complexTensors.imag]].map((function(a){var i=a[0],s=a[1],o=r.makeComplexComponentTensorInfo(e,i),u=r.makeComplexComponentTensorInfo(t,s),l=new po(n,e.shape,t.shape);return r.compileAndRun(l,[o,u],pn(i.dtype,s.dtype))})),o=s[0],u=s[1],l=this.complex(o,u);return o.dispose(),u.dispose(),l},t.prototype.makeComplexComponentTensorInfo=function(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}},t.prototype.addN=function(e){if(1===e.length)return e[0];if(e.length>qe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}var a=e.map((function(e){return e.dtype})).reduce((function(e,t){return pn(e,t)})),i=e.map((function(e){return e.shape})),s=qe().getBool("WEBGL_PACK")?new Ms(e[0].shape,i):new Os(e[0].shape,i);return this.compileAndRun(s,e,a)},t.prototype.subtract=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,lo);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.subtract(e,t);var n=pn(e.dtype,t.dtype);if(qe().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,lo,e.dtype);var r=new po(lo,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.pow=function(e,t){var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new po("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=pn(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)},t.prototype.ceil=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.ceil(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,rl,e.dtype);var t=new Xu(e.shape,rl);return this.compileAndRun(t,[e])},t.prototype.floor=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.floor(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,al,e.dtype);var t=new Xu(e.shape,al);return this.compileAndRun(t,[e])},t.prototype.sign=function(e){var t=new Xu(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])},t.prototype.isNaN=function(e){var t=new Xu(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isInf=function(e){var t=new Xu(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isFinite=function(e){var t=new Xu(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.round=function(e){var t=new Xu(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])},t.prototype.exp=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.exp(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,il,e.dtype);var t=new Xu(e.shape,il);return this.compileAndRun(t,[e])},t.prototype.expm1=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.expm1(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,sl,e.dtype);var t=new Xu(e.shape,sl);return this.compileAndRun(t,[e])},t.prototype.softmax=function(e,t){var n=bt([t],e.shape),r=this.max(e,n),a=Mr(r.shape,n),i=this.subtract(e,r.reshape(a)),s=this.exp(i),o=this.sum(s,n).reshape(a);return Pi(s,o)},t.prototype.log=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.log(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);var t=new Xu(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])},t.prototype.log1p=function(e){var t=new Xu(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])},t.prototype.sqrt=function(e){var t=new Xu(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])},t.prototype.rsqrt=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.rsqrt(e);var t=new Xu(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])},t.prototype.reciprocal=function(e){var t=new Xu(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])},t.prototype.relu=function(e){var t;return t=qe().getBool("WEBGL_PACK")?new bl(e.shape,gl):new Xu(e.shape,Ju),this.compileAndRun(t,[e])},t.prototype.relu6=function(e){var t;return t=qe().getBool("WEBGL_PACK")?new bl(e.shape,vl):new Xu(e.shape,Zu),this.compileAndRun(t,[e])},t.prototype.prelu=function(e,t){var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo(fo,e.shape,t.shape):new po(ho,e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.elu=function(e){if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,yl,e.dtype);var t=new Xu(e.shape,el);return this.compileAndRun(t,[e])},t.prototype.eluDer=function(e,t){var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new po("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.selu=function(e){var t=new Xu(e.shape,tl);return this.compileAndRun(t,[e])},t.prototype.int=function(e){var t=new Xu(e.shape,"return float(int(x));");return this.compileAndRun(t,[e],"int32")},t.prototype.clip=function(e,t,n){var r,a=(r=qe().getBool("WEBGL_PACK_CLIP")?new vo(e.shape):new go(e.shape)).getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,a)},t.prototype.abs=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.abs(e);if(qe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Qu,e.dtype);var t=new Xu(e.shape,Qu);return this.compileAndRun(t,[e])},t.prototype.complexAbs=function(e){var t=this.texData.get(e.dataId),n=new yo(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensors.real),this.makeComplexComponentTensorInfo(e,t.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(e){var t=new Xu(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])},t.prototype.softplus=function(e){var t=new Xu(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])},t.prototype.sin=function(e){var t=new Xu(e.shape,ol);return this.compileAndRun(t,[e])},t.prototype.cos=function(e){var t=new Xu(e.shape,ul);return this.compileAndRun(t,[e])},t.prototype.tan=function(e){var t=new Xu(e.shape,"return tan(x);");return this.compileAndRun(t,[e])},t.prototype.asin=function(e){var t=new Xu(e.shape,ll);return this.compileAndRun(t,[e])},t.prototype.acos=function(e){var t=new Xu(e.shape,cl);return this.compileAndRun(t,[e])},t.prototype.atan=function(e){var t=new Xu(e.shape,hl);return this.compileAndRun(t,[e])},t.prototype.atan2=function(e,t){var n=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new po("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.sinh=function(e){var t=new Xu(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.cosh=function(e){var t=new Xu(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.tanh=function(e){var t=new Xu(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])},t.prototype.asinh=function(e){var t=new Xu(e.shape,dl);return this.compileAndRun(t,[e])},t.prototype.acosh=function(e){var t=new Xu(e.shape,pl);return this.compileAndRun(t,[e])},t.prototype.atanh=function(e){var t=new Xu(e.shape,fl);return this.compileAndRun(t,[e])},t.prototype.erf=function(e){var t=new Xu(e.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(t,[e])},t.prototype.step=function(e,t){var n=new Xu(e.shape,function(e){return void 0===e&&(e=0),Yu+"\n    return x > 0.0 ? 1.0 : float("+e+");\n  "}(t));return this.compileAndRun(n,[e])},t.prototype.conv2dByMatMul=function(e,t,n,r,a,i){var s=e.shape,o=this.texData.get(e.dataId),u=n.inChannels,l=s[0]*s[1]*s[2],c=n.outChannels,h="channelsLast"===n.dataFormat,d=(1===l||1===c)&&u>1e3,p=s[2]%2!=0&&!!o.isPacked;if(d||!qe().getBool("WEBGL_LAZILY_UNPACK")||!qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!p){var f=h?s[0]*s[1]*s[2]:s[0]*s[2]*s[3],m=this.reshape(e,[1,f,n.inChannels]),g=this.reshape(t,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:m,b:g,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),n.outShape)}var v=h?s[0]*s[1]*(s[2]+1):s[0]*s[2]*(s[3]+1),y={dataId:e.dataId,shape:[1,v,n.inChannels],dtype:e.dtype},b=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,ot(pr(o.shape,y.shape),(function(){return"packed reshape "+o.shape+" to "+y.shape+" isn't free"}));var x=this.reshape(t,[1,n.inChannels,n.outChannels]),w=this.fusedBatchMatMul({a:y,b:x,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),k=this.texData.get(w.dataId);return ot(k.isPacked,(function(){return"batchMatMul result is expected to be packed"})),o.shape=b,k.shape=n.outShape,xn.makeTensorFromDataId(w.dataId,n.outShape,w.dtype)},t.prototype.conv2dWithIm2Row=function(e,t,n,r,a,i){var s=n.filterWidth,o=n.filterHeight,u=n.inChannels,l=n.outWidth,c=n.outHeight,h="channelsLast"===n.dataFormat,d=s*o*u,p=c*l,f=[d,p],m=e.squeeze([0]),g=t.reshape([1,d,-1]),v=new pu(f,m.shape,n),y=this.compileAndRun(v,[m]).reshape([1,f[0],f[1]]),b=null!=r,x=null!=i,w=a?kl(a,!0):null,k=new bu(y.shape,[1,p,n.outChannels],!0,!1,b,w,x),I=[y,g];r&&I.push(r),x&&I.push(i);var C=this.compileAndRun(k,I);return h?C.reshape([1,c,l,n.outChannels]):C.reshape([1,n.outChannels,c,l])},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights;if(1===r.filterHeight&&1===r.filterWidth&&1===r.dilationHeight&&1===r.dilationWidth&&1===r.strideHeight&&1===r.strideWidth&&("SAME"===r.padInfo.type||"VALID"===r.padInfo.type))return this.conv2dByMatMul(t,n,r,a,i,s);if(qe().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,n,r,a,i,s);var o=null!=a,u=null!=s,l=i?kl(i,!1):null,c=new Eo(r,o,l,u),h=[t,n];return a&&h.push(a),s&&h.push(s),this.compileAndRun(c,h)},t.prototype.conv2d=function(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(qe().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);var r=new Eo(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerInput=function(e,t,n){var r=new Io(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerFilter=function(e,t,n){var r=new ko(n);return this.compileAndRun(r,[e,t])},t.prototype.fusedDepthwiseConv2D=function(e){var t,n=e.input,r=e.filter,a=e.convInfo,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=qe().getBool("WEBGL_PACK_DEPTHWISECONV")&&a.strideWidth<=2&&a.outChannels/a.inChannels==1,l=s?kl(s,u):null,c=[n,r],h=null!=i,d=null!=o;return h&&c.push(i),d&&c.push(o),u?(t=new Do(a,h,l,d),this.compileAndRun(t,c)):(t=new Ao(a,h,l,d),this.compileAndRun(t,c))},t.prototype.depthwiseConv2D=function(e,t,n){var r;return qe().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Do(n),this.compileAndRun(r,[e,t])):(r=new Ao(n),this.compileAndRun(r,[e,t]))},t.prototype.depthwiseConv2DDerInput=function(e,t,n){var r=new To(n);return this.compileAndRun(r,[e,t])},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){var r=new No(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3d=function(e,t,n){var r=new Ro(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerInput=function(e,t,n){var r=new So(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerFilter=function(e,t,n){var r=new Co(n);return this.compileAndRun(r,[e,t])},t.prototype.maxPool=function(e,t){var n=new Su(t,"max",!1);return this.compileAndRun(n,[e])},t.prototype.avgPool=function(e,t){var n=new Su(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPoolBackprop=function(e,t,n,r){var a=new Su(r,"max",!0),i=this.compileAndRun(a,[t]),s=new vu(r),o=this.compileAndRun(s,[e,i],t.dtype);return i.dispose(),o},t.prototype.avgPoolBackprop=function(e,t,n){var r=new ro(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.cast=function(e,t){return gs(e,t,this)},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,i=0;i<e.rank;i++)i!==t&&(r[a++]=e.shape[i]);var s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(i=0;i<u.length;i++)s[t]=i,u[i]=this.slice(e,s,o).reshape(r);return u},t.prototype.avgPool3d=function(e,t){var n=new Nu(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.avgPool3dBackprop=function(e,t,n){var r=new ao(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.maxPool3d=function(e,t){var n=new Nu(t,"max",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPool3dBackprop=function(e,t,n,r){var a=new Nu(r,"max",!0),i=this.compileAndRun(a,[t]),s=new yu(r),o=this.compileAndRun(s,[e,i],t.dtype);return i.dispose(),o},t.prototype.reshape=function(e,t){var n=this.texData.get(e.dataId);if(n.isPacked&&!pr(e.shape,t)&&(null===n.texture||!pr(n.shape,t))){var r=this.packedReshape(e,t);return xn.makeTensorFromDataId(r.dataId,r.shape,r.dtype)}return vs(e,t)},t.prototype.resizeBilinear=function(e,t,n,r){var a=qe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Du(e.shape,t,n,r):new Au(e.shape,t,n,r);return this.compileAndRun(a,[e],"float32")},t.prototype.resizeBilinearBackprop=function(e,t,n){var r=new Ru(e,t,n);return this.compileAndRun(r,[e])},t.prototype.resizeNearestNeighbor=function(e,t,n,r){var a=new _u(e.shape,t,n,r);return this.compileAndRun(a,[e])},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){var r=new Fu(e,t,n);return this.compileAndRun(r,[e])},t.prototype.multinomial=function(e,t,n,r){var a=t?e:Ji(e),i=a.shape[0],s=a.shape[1],o=new xu(i,s,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)},t.prototype.oneHot=function(e,t,n,r){var a=new wu(e.size,t,n,r);return this.compileAndRun(a,[e])},t.prototype.diag=function(e){var t=new Po(e.size);return this.compileAndRun(t,[e])},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return Er("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),Ss(e.dataSync(),t.dataSync(),n,r,a)},t.prototype.cropAndResize=function(e,t,n,r,a,i){var s=new Fo(e.shape,t.shape,r,a,i);return this.compileAndRun(s,[e,t,n],"float32")},t.prototype.depthToSpace=function(e,t,n){ot(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));var r=e.shape[0],a="NHWC"===n?e.shape[1]:e.shape[2],i="NHWC"===n?e.shape[2]:e.shape[3],s="NHWC"===n?e.shape[3]:e.shape[1],o=a*t,u=i*t,l=s/(t*t),c=new Lo("NHWC"===n?[r,o,u,l]:[r,l,o,u],t,n);return this.compileAndRun(c,[e])},t.prototype.split=function(e,t,n){return Ds(e,t,n)},t.prototype.scatterND=function(e,t,n){var r=Ui(0,e,n),a=r.sliceRank,i=r.numUpdates,s=r.sliceSize,o=r.strides,u=r.outputSize,l=[u/s,s],c=e.reshape([i,a]),h=t.reshape([i,s]);if(0===u)return vs(qr([]),n);var d=Xr(0),p=new Mu(i,a,c.rank,h.rank,o,l);return this.compileAndRun(p,[h,c,d]).reshape(n)},t.prototype.sparseToDense=function(e,t,n,r){var a=Ui(0,e,n),i=a.sliceRank,s=a.numUpdates,o=a.strides,u=a.outputSize,l=new Mu(s,i,e.rank,t.rank,o,[u,1]);return this.compileAndRun(l,[t,e,r]).reshape(n)},t.prototype.fft=function(e){return this.fftImpl(e,!1)},t.prototype.ifft=function(e){return this.fftImpl(e,!0)},t.prototype.fftImpl=function(e,t){var n=this.texData.get(e.dataId),r=new Uo("return real * expR - imag * expI;",e.shape,t),a=new Uo("return real * expI + imag * expR;",e.shape,t),i=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag)],s=this.compileAndRun(r,i),o=this.compileAndRun(a,i),u=this.complex(s,o).as2D(e.shape[0],e.shape[1]);return s.dispose(),o.dispose(),u},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=Bi(e,t),i=a[0],s=a[1],o=a[2],u=a[3],l=t.reshape([s,r]),c=e.reshape([e.size/o,o]),h=new jo(r,u,[s,o]);return this.compileAndRun(h,[c,l]).reshape(i)},t.prototype.fill=function(e,t,n){if("string"===(n=n||Ft(t))){var r=kt(n,ht(e));return r.fill(t),xn.makeTensor(r,e,n,this)}var a=new Go(e,t),i=a.getCustomSetupFunc(t);return this.compileAndRun(a,[],n,i)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)},t.prototype.linspace=function(e,t,n){return ys(e,t,n)},t.prototype.makeTensorInfo=function(e,t){var n=this.write(null,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}},t.prototype.makeOutput=function(e,t){var n=this.makeTensorInfo(e,t).dataId;return xn.makeTensorFromDataId(n,e,t,this)},t.prototype.unpackTensor=function(e){var t=new xl(e.shape);return this.runWebGLProgram(t,[e],e.dtype)},t.prototype.packTensor=function(e){var t=new ku(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)},t.prototype.packedReshape=function(e,t){var n=[ur(e.shape)].concat(lr(e.shape)),r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[ur(t)].concat(lr(t)),i=new Eu(a,n),s=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}},t.prototype.decode=function(e){var t,n=this.texData.get(e),r=n.isPacked,a=n.shape,i=n.dtype,s=cr(a);return t=r?new Mo(s):new Oo(s),{dtype:i,shape:a,dataId:this.runWebGLProgram(t,[{shape:s,dtype:i,dataId:e}],i,null,!0).dataId}},t.prototype.runWebGLProgram=function(e,t,n,r,a){var i=this;void 0===a&&(a=!1);var s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===In.DENSE){var u=Dn(e.outputShape);o.texShape=u.map((function(e){return 2*e}))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===ht(s.shape))return o.values=wt(s.dtype,0),s;var l=[],c=t.map((function(t){if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var n=i.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&ht(t.shape)<=qe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?i.unpackTensor(t):i.packTensor(t),l.push(t),n=i.texData.get(t.dataId);else if(n.isPacked&&!pr(n.shape,t.shape)){var r=t,a=t.shape;t.shape=n.shape,t=i.packedReshape(t,a),l.push(t),n=i.texData.get(t.dataId),r.shape=a}return i.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);var h,d={shape:s.shape,texData:o,isUniform:!1},p=function(e,t,n){var r="";t.concat(n).forEach((function(e){var t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=e.shape+"_"+n+"_"+t}));var a=e.userCode;return e.constructor.name+"_"+r+"_"+a}(e,c,d),f=this.getAndSaveBinary(p,(function(){return function(e,t,n,r){var a=t.userCode,i=n.map((function(e,n){var r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=i.map((function(e){return e.shapeInfo})),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Gs(i,o,a,t.packedInputs),l=e.createProgram(u),c=null,h=e.getUniformLocation(l,"NAN",!1);1===qe().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));for(var d={},p=0;p<t.variableNames.length;p++){var f=t.variableNames[p];d[f]=e.getUniformLocation(l,f,!1),d["offset"+f]=e.getUniformLocation(l,"offset"+f,!1)}return{program:t,source:u,webGLProgram:l,uniformLocations:d,inShapeInfos:s,outShapeInfo:o,infLoc:c,nanLoc:h}}(i.gpgpu,e,c,d)})),m=null!=this.activeTimers;if(m&&(h=this.startTimer()),function(e,t,n,r,a){du(t.inShapeInfos,n),du([t.outShapeInfo],[r]);var i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i,s[0],s[1]):e.setOutputMatrixTexture(i,s[0],s[1]),e.setProgram(t.webGLProgram),1===qe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((function(n,r){var a=t.program.variableNames[r],i=t.uniformLocations[a],s=t.uniformLocations["offset"+a];if(null!=i)if(n.isUniform)if(ht(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{var o=n.uniformValues;o instanceof Float32Array||(o=new Float32Array(o)),e.gl.uniform1fv(i,o)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,f,c,d,r),l.forEach((function(e){return i.disposeData(e.dataId)})),m&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)})),!qe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){var g=this.unpackTensor(s);return this.disposeData(s.dataId),g}return s},t.prototype.compileAndRun=function(e,t,n,r,a){void 0===a&&(a=!1),n=n||t[0].dtype;var i=this.runWebGLProgram(e,t,n,r,a);return xn.makeTensorFromDataId(i.dataId,i.shape,i.dtype)},t.prototype.getAndSaveBinary=function(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){var e=this;this.disposed||(qe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((function(t){e.gpgpu.deleteProgram(e.binaryCache[t].webGLProgram),delete e.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},t.prototype.floatPrecision=function(){var e=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Nr((function(){if(!qe().get("WEBGL_RENDER_FLOAT32_ENABLED")){var t=qe().getBool("DEBUG");qe().set("DEBUG",!1);var n=e.abs(Xr(1e-8)).dataSync()[0];if(qe().set("DEBUG",t),n>0)return 32}return 16}))),this.floatPrecisionValue},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.uploadToGPU=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,i=n.values,s=n.texture,o=n.usage,u=n.isPacked;if(null==s){var l,c=null!=this.activeTimers;c&&(l=zt());var h=n.texShape;if(null==h&&(h=hr(r,u),n.texShape=h),null!=i){var d=cr(r),p=void 0,f=h[1],m=h[0],g=i instanceof Uint8Array;u?(f=(t=Fn(h[0],h[1]))[0],m=t[1],p=new Vo(d,[m,f],g)):p=new Wo(d,[m,f],g);var v=this.makeTensorInfo([m,f],a);this.texData.get(v.dataId).usage=g?Cn.PIXELS:Cn.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),f,m,i);var y=this.runWebGLProgram(p,[v],a,null,!0),b=this.texData.get(y.dataId);n.texture=b.texture,n.texShape=b.texShape,n.isPacked=b.isPacked,n.usage=b.usage,this.disposeData(v.dataId),this.texData.delete(y.dataId),n.values=null,c&&(this.uploadWaitMs+=zt()-l)}else{var x=this.acquireTexture(h,o,a,u);n.texture=x}}},t.prototype.convertAndCacheOnCPU=function(e,t){var n=this.texData.get(e),r=n.dtype;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){for(var n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length),r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values},t.prototype.acquireTexture=function(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,r)},t.prototype.computeBytes=function(e,t){return e[0]*e[1]*Tt(t)},t}(ns);function Cl(e,t){return e(t={exports:{}},t.exports),t.exports}wn()&&xn.registerBackend("webgl",(function(){return new Il}),2);var Sl=Cl((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.alea=i}(0,e)})),Nl=Cl((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xor128=i}(0,e)})),Tl=Cl((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xorwow=i}(0,e)})),El=Cl((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xorshift7=i}(0,e)})),Rl=Cl((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xor4096=i}(0,e)})),Al=Cl((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.tychei=i}(0,e)})),Dl=Cl((function(e){!function(t,n){var r,a=this,i=256,s="random",o=n.pow(i,6),u=n.pow(2,52),l=2*u,c=i-1;function h(e,c,h){var g=[],v=f(function e(t,n){var r,a=[],i=typeof t;if(n&&"object"==i)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==i?t:t+"\0"}((c=1==c?{entropy:!0}:c||{}).entropy?[e,m(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(i):(e=new Uint8Array(i),(a.crypto||a.msCrypto).getRandomValues(e)),m(e)}catch(e){var n=a.navigator,s=n&&n.plugins;return[+new Date,a,s,a.screen,m(t)]}}():e,3),g),y=new d(g),b=function(){for(var e=y.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=y.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/4294967296},b.double=b,f(m(y.S),t),(c.pass||h||function(e,t,r,a){return a&&(a.S&&p(a,y),e.state=function(){return p(y,{})}),r?(n[s]=e,t):e})(b,v,"global"in c?c.global:this==n,c.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(n["seed"+s]=h,f(n.random(),t),e.exports){e.exports=h;try{r=require("crypto")}catch(e){}}}([],Math)}));Dl.alea=Sl,Dl.xor128=Nl,Dl.xorwow=Tl,Dl.xorshift7=El,Dl.xor4096=Rl,Dl.tychei=Al;var Fl=Dl.alea,_l=Ur({addN_:function(e){ot(Array.isArray(e),(function(){return"The argument passed to tf.addN() must be a list of tensors"})),ot(e.length>=1,(function(){return"Must pass at least one tensor to tf.addN(), but got "+e.length}));var t=e.map((function(e,t){return Dr(e,"tensors"+t,"addN")})),n=t[0];t.forEach((function(e){if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((function(e){if(!dt(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));var r=t;return xn.runKernelFunc((function(e,n){return e.addN(t)}),r,null,"AddN")}});function $l(){Sr("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}function Ol(e){return 0===e.rank||1===e.rank?e.as4D(1,1,1,e.size):2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}function Ml(e,t,n,r,a,i){null==i&&(i=.001);var s,o,u=Dr(e,"x","batchNorm"),l=Dr(t,"mean","batchNorm"),c=Dr(n,"variance","batchNorm");null!=a&&(s=Dr(a,"scale","batchNorm")),null!=r&&(o=Dr(r,"offset","batchNorm")),ot(l.rank===c.rank,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),ot(null==o||l.rank===o.rank,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),ot(null==s||l.rank===s.rank,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var h={x:u,scale:s,offset:o,mean:l,variance:c},d={varianceEpsilon:i};return xn.runKernelFunc((function(e,t){var n=Ol(u),r=e.batchNormalization(n,Ll(l),Ll(c),i,Ll(s),Ll(o));return t([u,l,c,s]),r}),h,null,"FusedBatchNorm",d).reshape(u.shape)}function Ll(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}var Pl=Ur({batchNormalization_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),$l(),Ml(e,t,n,i,a,r)}}),Bl=Ur({batchNorm_:Ml});function zl(e,t,n,r,a,i){var s,o,u=Dr(e,"x","batchNorm"),l=Dr(t,"mean","batchNorm"),c=Dr(n,"variance","batchNorm");return null!=a&&(s=Dr(a,"scale","batchNorm")),null!=r&&(o=Dr(r,"offset","batchNorm")),ot(2===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),ot(2===l.rank||1===l.rank,(function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+l.rank+"."})),ot(2===c.rank||1===c.rank,(function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+c.rank+"."})),null!=s&&ot(2===s.rank||1===s.rank,(function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+s.rank+"."})),null!=o&&ot(2===o.rank||1===o.rank,(function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+o.rank+"."})),Bl(u,l,c,o,s,i)}var Wl=Ur({batchNormalization2d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),$l(),zl(e,t,n,i,a,r)}}),Vl=Ur({batchNorm2d_:zl});function Ul(e,t,n,r,a,i){var s,o,u=Dr(e,"x","batchNorm"),l=Dr(t,"mean","batchNorm"),c=Dr(n,"variance","batchNorm");return null!=a&&(s=Dr(a,"scale","batchNorm")),null!=r&&(o=Dr(r,"offset","batchNorm")),ot(3===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),ot(3===l.rank||1===l.rank,(function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+l.rank+"."})),ot(3===c.rank||1===c.rank,(function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+c.rank+"."})),null!=s&&ot(3===s.rank||1===s.rank,(function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+s.rank+"."})),null!=o&&ot(3===o.rank||1===o.rank,(function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+o.rank+"."})),Bl(u,l,c,o,s,i)}var Gl=Ur({batchNormalization3d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),$l(),Ul(e,t,n,i,a,r)}}),Hl=Ur({batchNorm3d_:Ul});function jl(e,t,n,r,a,i){var s,o,u=Dr(e,"x","batchNorm"),l=Dr(t,"mean","batchNorm"),c=Dr(n,"variance","batchNorm");return null!=a&&(s=Dr(a,"scale","batchNorm")),null!=r&&(o=Dr(r,"offset","batchNorm")),ot(4===u.rank,(function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."})),ot(4===l.rank||1===l.rank,(function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+l.rank+"."})),ot(4===c.rank||1===c.rank,(function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+c.rank+"."})),null!=s&&ot(4===s.rank||1===s.rank,(function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+s.rank+"."})),null!=o&&ot(4===o.rank||1===o.rank,(function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+o.rank+"."})),Bl(u,l,c,o,s,i)}var ql=Ur({batchNormalization4d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),$l(),jl(e,t,n,i,a,r)}}),Kl=Ur({batchNorm4d_:jl}),Xl=Ur({broadcastTo_:function(e,t){var n=Dr(e,"broadcastTo","x"),r=n.shape;if(t.some((function(e){return!(e>0)||e%1!=0})))throw new Error("broadcastTo(): Invalid broadcast shape ["+t+"].");if(t.length<n.rank)throw new Error("broadcastTo(): shape.length="+t.length+" < input.rank="+n.rank+".");if(t.length>n.rank){for(var a=n.shape.slice();a.length<t.length;)a.unshift(1);n=n.reshape(a)}for(var i=n.shape,s=Array.from(t),o=t.length-1;o>=0;o--)if(i[o]===t[o])s[o]=1;else if(1!==n.shape[o])throw new Error("broadcastTo(): ["+r+"] cannot be broadcast to ["+t+"].");var u=s.map((function(e,t){return e>1?t:-1})).filter((function(e){return e>=0}));if(0===u.length)return n.clone();var l={x:n},c={shape:t,inputShape:i};return xn.runKernelFunc((function(e){return e.tile(n,s)}),l,(function(e){return{x:function(){return e.sum(u,!0)}}}),Fa,c)}}),Yl=Ur({clone_:function(e){var t=Dr(e,"x","clone",null);return xn.runKernelFunc((function(){return xn.makeTensorFromDataId(t.dataId,t.shape,t.dtype)}),{x:t},null,$a)}}),Ql=Ur({logicalAnd_:function(e,t){var n=Dr(e,"a","logicalAnd","bool"),r=Dr(t,"b","logicalAnd","bool");return za(n.shape,r.shape),xn.runKernelFunc((function(e){return e.logicalAnd(n,r)}),{a:n,b:r},null,"LogicalAnd")}}),Jl=Ur({logicalNot_:function(e){var t=Dr(e,"x","logicalNot","bool");return xn.runKernelFunc((function(e){return e.logicalNot(t)}),{$x:t})}}),Zl=Ur({logicalOr_:function(e,t){var n=Dr(e,"a","logicalOr","bool"),r=Dr(t,"b","logicalOr","bool");return za(n.shape,r.shape),xn.runKernelFunc((function(e){return e.logicalOr(n,r)}),{$a:n,$b:r})}}),ec=Ur({logicalXor_:function(e,t){var n=Dr(e,"a","logicalXor","bool"),r=Dr(t,"b","logicalXor","bool");return za(n.shape,r.shape),Zl(e,t).logicalAnd(Ql(e,t).logicalNot())}}),tc=Ur({where_:function(e,t,n){var r=Dr(t,"a","where"),a=Dr(n,"b","where"),i=Dr(e,"condition","where","bool");return ut(r.shape,a.shape,"Error in where: "),1===i.rank?ot(i.shape[0]===r.shape[0],(function(){return"The first dimension of `a` must match the size of `condition`."})):ut(i.shape,a.shape,"Error in where: "),xn.runKernelFunc((function(e,t){var n=e.select(i,r,a);return t([i]),n}),{$condition:i,$a:r,$b:a},(function(e,t){var n=t[0];return{$condition:function(){return sa(n).toFloat()},$a:function(){return e.mul(n.cast(e.dtype))},$b:function(){return e.mul(n.logicalNot().cast(e.dtype))}}}))}}),nc=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r;return He(this,(function(a){switch(a.label){case 0:return[4,(t=Dr(e,"condition","whereAsync","bool")).data()];case 1:return n=a.sent(),r=$s(t.shape,n),e!==t&&t.dispose(),[2,r]}}))}))},rc=Ur({divNoNan_:function(e,t){var n,r=Dr(e,"a","div"),a=Dr(t,"b","div");r=(n=mn(r,a))[0],a=n[1];var i=Pi(r,a),s=sa(i),o=a.equal(s);return tc(o,s,i)}}),ac=Ur({tile_:function(e,t){var n=Dr(e,"x","tile",null);ot(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of reps "+t+"."}));var r=[n],a={x:n},i={reps:t};return xn.runKernelFunc((function(e,r){var a=e.tile(n,t);return r([n]),a}),a,null,Oa,i,r)}}),ic=Ur({eye_:function(e,t,n,r){void 0===r&&(r="float32"),null==t&&(t=e);for(var a=pa([e,t],r),i=e<=t?e:t,s=0;s<i;++s)a.set(1,s,s);var o=a.toTensor().as2D(e,t);if(null==n)return o;if(1===n.length)return ac(ya(o,0),[n[0],1,1]);if(2===n.length)return ac(ya(ya(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return ac(ya(ya(ya(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+n.length+"D.")}}),sc=Ur({multinomial_:function(e,t,n,r){void 0===r&&(r=!1);var a=Dr(e,"logits","multinomial"),i=a.size,s=a.rank;if(i<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+i+".");if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+s);n=n||Math.random();var o=1===s?a.as2D(1,-1):a,u=xn.runKernelFunc((function(e){return e.multinomial(o,r,t,n)}),{logits2D:o});return 1===s?u.as1D():u}}),oc=Ur({oneHot_:function(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);var a=Dr(e,"indices","oneHot","int32"),i=a.shape.concat([t]),s={indices:a=a.flatten()},o={depth:t,onValue:n,offValue:r};return xn.runKernelFunc((function(e,i){return i([a]),e.oneHot(a,t,n,r)}),s,null,_a,o).reshape(i)}}),uc=Ur({pad_:function(e,t,n){void 0===n&&(n=0);var r=Dr(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var a={paddings:t,constantValue:n},i={x:r};return xn.runKernelFunc((function(e,a){return a([r]),e.pad(r,t,n)}),i,null,Ma,a)}}),lc=Ur({pad1d_:function(e,t,n){return void 0===n&&(n=0),ot(2===t.length,(function(){return"Invalid number of paddings. Must be length of 2."})),uc(e,[t],n)}}),cc=Ur({pad2d_:function(e,t,n){return void 0===n&&(n=0),ot(2===t.length&&2===t[0].length&&2===t[1].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),uc(e,t,n)}}),hc=Ur({pad3d_:function(e,t,n){return void 0===n&&(n=0),ot(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),uc(e,t,n)}}),dc=Ur({pad4d_:function(e,t,n){return void 0===n&&(n=0),ot(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),uc(e,t,n)}}),pc=Ur({rand_:function(e,t,n){var r=ht(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(var i=0;i<r;i++)a[i]=t();return xn.makeTensor(a,e,n)}});function fc(){return 32===xn.backend.floatPrecision()?.001:.1}function mc(e,t,n){var r=!0;if((Nt(e)||Nt(t))&&(r=!1),Nt(e)&&Nt(t)&&(r=!0),r){var a=e.constructor.name,i=t.constructor.name;if(a!==i)throw new Error("Arrays are of different type. Actual: "+a+". Expected: "+i)}if(Array.isArray(e)&&Array.isArray(t)){var s=Rr(e),o=Rr(t);if(!dt(s,o))throw new Error("Arrays have different shapes. Actual: ["+s+"]. Expected: ["+o+"]")}var u=Nt(e)?e:ct(e),l=Nt(t)?t:ct(t);if(u.length!==l.length)throw new Error("Arrays have different lengths actual: "+u.length+" vs expected: "+l.length+".\nActual:   "+u+".\nExpected: "+l+".");for(var c=0;c<l.length;++c){var h=u[c],d=l[c];if(!n(h,d))throw new Error("Arrays differ: actual["+c+"] = "+h+", expected["+c+"] = "+d+".\nActual:   "+u+".\nExpected: "+l+".")}}function gc(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}Object.freeze({TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=fc()),mc(e,t,(function(e,t){return gc(e,t,n)}))},testEpsilon:fc,expectPromiseToFail:function(e,t){e().then((function(){return t.fail()}),(function(){return t()}))},expectArraysEqual:function(e,t){var n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Rt(e)||Rt(e[0])||Rt(t)||Rt(t[0])?mc(e,n,(function(e,t){return e==t})):mc(e,t,(function(e,t){return gc(e,t,0)}))},expectNumbersClose:function(e,t,n){if(null==n&&(n=fc()),!gc(e,t,n))throw new Error("Numbers differ: actual === "+e+", expected === "+t)},expectValuesInRange:function(e,t,n){for(var r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error("Value out of range:"+e[r]+" low: "+t+", high: "+n)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}});var vc=function(){function e(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var i=a||Math.random();this.random=Fl(i.toString())}return e.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,n,r=!1;!r;){var a=void 0,i=void 0,s=void 0;do{s=(a=2*this.random()-1)*a+(i=2*this.random()-1)*i}while(s>=1||0===s);var o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,n=this.mean+this.stdDev*i*o,this.truncated&&!this.isValidTruncated(t)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(t)},e.prototype.convertValue=function(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)},e.prototype.isValidTruncated=function(e){return e<=this.upper&&e>=this.lower},e}(),yc=function(){function e(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;var a=r||Math.random();this.randu=Fl(a.toString()),this.randn=new vc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return e.prototype.nextValue=function(){for(var e,t,n,r,a,i;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-i+Math.log(i)),(a=this.randu())<t||Math.log(a)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)},e.prototype.convertValue=function(e){return"float32"===this.dtype?e:Math.round(e)},e}(),bc=function(){function e(e,t,n,r){var a=this;if(void 0===e&&(e=0),void 0===t&&(t=1),this.canReturnFloat=function(){return null==a.dtype||"float32"===a.dtype},this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+e+" - "+t+" <= 1 and dtype is not float");this.random=Fl(r)}return e.prototype.convertValue=function(e){return this.canReturnFloat()?e:Math.round(e)},e.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},e}(),xc=Ur({randomGamma_:function(e,t,n,r,a){if(void 0===n&&(n=1),void 0===r&&(r="float32"),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);for(var i=new yc(t,n,r,a),s=pa(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),wc=Ur({randomNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);for(var i=new vc(t,n,r,!1,a),s=pa(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),kc=Ur({randomUniform_:function(e,t,n,r,a){void 0===t&&(t=0),void 0===n&&(n=1),void 0===r&&(r="float32");for(var i=pa(e,r),s=new bc(t,n,null,a),o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),Ic=Ur({square_:function(e){var t=Dr(e,"x","square"),n=[t];return xn.runKernelFunc((function(e,n){return n([t]),e.square(t)}),{x:t},null,"Square",{},n,[])}}),Cc=Ur({squaredDifference_:function(e,t){var n,r=Dr(e,"a","squaredDifference"),a=Dr(t,"b","squaredDifference");n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape);var i={a:r,b:a},s=[r,a];return xn.runKernelFunc((function(e,t){var n=e.squaredDifference(r,a);return t([r,a]),n}),i,(function(e,t){var n=t[0],r=t[1],a=Xr(2);return{a:function(){return e.mul(n.sub(r).mul(a))},b:function(){return e.mul(r.sub(n).mul(a))}}}),Da,{},s,[])}}),Sc=Ur({truncatedNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");for(var i=new vc(t,n,r,!0,a),s=pa(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),Nc=Ur({equal_:function(e,t){var n,r=Dr(e,"a","equal"),a=Dr(t,"b","equal");return n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape),xn.runKernelFunc((function(e){return e.equal(r,a)}),{$a:r,$b:a})}}),Tc=Ur({equalStrict_:function(e,t){var n=Dr(e,"a","equalStrict"),r=Dr(t,"b","equalStrict");return ut(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),Ec=Ur({greater_:function(e,t){var n,r=Dr(e,"a","greater"),a=Dr(t,"b","greater");return n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape),xn.runKernelFunc((function(e){return e.greater(r,a)}),{a:r,b:a},null,"Greater")}}),Rc=Ur({greaterEqual_:function(e,t){var n,r=Dr(e,"a","greaterEqual"),a=Dr(t,"b","greaterEqual");return n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape),xn.runKernelFunc((function(e,t){var n=e.greaterEqual(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return sa(n)},b:function(){return sa(r)}}}),"GreaterEqual")}}),Ac=Ur({greaterEqualStrict_:function(e,t){var n=Dr(e,"a","greaterEqualStrict"),r=Dr(t,"b","greaterEqualStrict");return ut(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),Dc=Ur({greaterStrict_:function(e,t){var n=Dr(e,"a","greaterStrict"),r=Dr(t,"b","greaterStrict");return ut(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),Fc=Ur({less_:function(e,t){var n,r=Dr(e,"a","less"),a=Dr(t,"b","less");return n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape),xn.runKernelFunc((function(e){return e.less(r,a)}),{a:r,b:a},null,"Less")}}),_c=Ur({lessEqual_:function(e,t){var n,r=Dr(e,"a","lessEqual"),a=Dr(t,"b","lessEqual");return n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape),xn.runKernelFunc((function(e,t){var n=e.lessEqual(r,a);return t([r,a]),n}),{a:r,b:a},null,"LessEqual")}}),$c=Ur({lessEqualStrict_:function(e,t){var n=Dr(e,"a","lessEqualStrict"),r=Dr(t,"b","lessEqualStrict");return ut(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Oc=Ur({lessStrict_:function(e,t){var n=Dr(e,"a","lessStrict"),r=Dr(t,"b","lessStrict");return ut(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Mc=Ur({notEqual_:function(e,t){var n,r=Dr(e,"a","notEqual"),a=Dr(t,"b","notEqual");return n=mn(r,a),r=n[0],a=n[1],za(r.shape,a.shape),xn.runKernelFunc((function(e){return e.notEqual(r,a)}),{a:r,b:a},null,"NotEqual")}}),Lc=Ur({notEqualStrict_:function(e,t){var n=Dr(e,"a","notEqualStrict"),r=Dr(t,"b","notEqualStrict");return ut(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});function Pc(e,t){for(var n=[],r=e;r<t;++r)n.push(r);return n}function Bc(e){for(var t=[],n=0;n<e.length;++n)for(var r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var zc=Ur({gather_:function(e,t,n){void 0===n&&(n=0);var r=Dr(e,"x","gather"),a=Dr(t,"indices","gather","int32");n=bt(n,r.shape)[0];var i=function(e,t,n){for(var r=e.shape[n],a=[],i=1,s=1,o=0;o<n;o++)a.push(e.shape[o]),i*=e.shape[o];for(o=0;o<t.rank;o++)a.push(t.shape[o]);for(o=n+1;o<e.rank;o++)a.push(e.shape[o]),s*=e.shape[o];return{batchSize:i,sliceSize:s,dimSize:r,outputShape:a}}(r,a,n);return xn.runKernelFunc((function(e,t){var i=e.gather(r,a.flatten(),n);return t([a]),i}),{x:r,indices:a},(function(e,t){var a=t[0];return{x:function(){var t=r.shape,i=a.size,s=t.slice(0,n),o=s.length,u=t.slice(n,t.length).slice(1),l=u.length,c=Pc(0,o),h=Pc(o+1,o+1+l),d=Bc([s,[i],u]),p=e.reshape(d),f=a.reshape([i]),m=Bc([[o],c,h]),g=p.transpose(m),v=Wc(g,f,r.shape[n]),y=Br(m);return v.transpose(y)},indices:function(){return a}}}),"Gather",{axis:n}).reshape(i.outputShape)}}),Wc=Ur({unsortedSegmentSum_:function(e,t,n){var r=Dr(e,"x","unsortedSegmentSum"),a=Dr(t,"segmentIds","unsortedSegmentSum","int32");return ot(pt(n),(function(){return"numSegments must be of dtype int"})),xn.runKernelFunc((function(e,t){var i=e.unsortedSegmentSum(r,a,n);return t([a]),i}),{$x:r},(function(e,t){var n=t[0];return{$x:function(){return function(e,t){for(var n=Si(t,sa(t)),r=zc(e,n),a=Rc(t,Xr(0,"int32")),i=r.rank-a.rank,s=0;s<i;++s)a=ya(a,s+1);a=Ql(a,ea(r.shape,"bool"));var o=sa(r);return tc(a,r,o)}(e,n)}}}))}});function Vc(e,t,n,r,a,i,s){void 0===i&&(i="NHWC"),ot(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var o=e,u=t,l=!1;3===t.rank&&(l=!0,u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]),o=[1,e[0],e[1],e[2]]),ot(4===o.length,(function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."})),ot(4===u.rank,(function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank})),ot(4===n.rank,(function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank}));var c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];ot(c===n.shape[2],(function(){return"Error in conv2dDerInput: depth of input ("+c+") must match input depth for filter "+n.shape[2]+"."})),ot(h===n.shape[3],(function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+n.shape[3]+"."})),null!=s&&ot(pt(a),(function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var d=ms(i),p=ss(o,n.shape,r,1,a,s,!1,d),f=xn.runKernelFunc((function(e,t){var r=e.conv2dDerInput(u,n,p);return t([n,u]),r}),{dy4D:u,filter:n},(function(e,t){var n=t[0],o=t[1];return{dy4D:function(){return jc(e,n,r,a,i,1,s)},filter:function(){return Kc(e,o,n.shape,r,a,i,s)}}}));return l?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function Uc(e){var t=function(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function Gc(e,t,n,r,a){ot(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var i=e,s=t,o=!1;4===t.rank&&(o=!0,s=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]),i=[1,e[0],e[1],e[2],e[3]]);var u=i[4],l=s.shape[4];ot(5===i.length,(function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+i.length+"."})),ot(5===s.rank,(function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+s.rank})),ot(5===n.rank,(function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank})),ot(u===n.shape[3],(function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+n.shape[3]+"."})),ot(l===n.shape[4],(function(){return"Error in conv3dDerInput: depth of output ("+l+") must match output depth for filter "+n.shape[4]+"."}));var c=os(i,n.shape,r,1,a),h=xn.runKernelFunc((function(e){return e.conv3dDerInput(s,n,c)}),{dy5D:s});return o?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var Hc=Ur({conv1d_:function(e,t,n,r,a,i,s){void 0===a&&(a="NWC"),void 0===i&&(i=1);var o=Dr(e,"x","conv1d"),u=Dr(t,"filter","conv1d"),l=o,c=!1;2===o.rank&&(c=!0,l=o.as3D(1,o.shape[0],o.shape[1])),ot(3===l.rank,(function(){return"Error in conv1d: input must be rank 3, but got rank "+l.rank+"."})),ot(3===u.rank,(function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."})),null!=s&&ot(pt(r),(function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."})),ot(l.shape[2]===u.shape[1],(function(){return"Error in conv1d: depth of input ("+l.shape[2]+") must match input depth for filter "+u.shape[1]+"."})),ot(fs(n,i),(function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+n+" and dilation '"+i+"'"})),ot("NWC"===a,(function(){return"Error in conv1d: got dataFormat of "+a+" but only NWC is currently supported."}));var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=l.as4D(l.shape[0],1,l.shape[1],l.shape[2]),p=jc(d,h,[1,n],r,"NHWC",[1,i],s);return c?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),jc=Ur({conv2d_:function(e,t,n,r,a,i,s){void 0===a&&(a="NHWC"),void 0===i&&(i=[1,1]);var o=Dr(e,"x","conv2d"),u=Dr(t,"filter","conv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),ot(4===l.rank,(function(){return"Error in conv2d: input must be rank 4, but got rank "+l.rank+"."})),ot(4===u.rank,(function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."})),null!=s&&ot(pt(r),(function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."}));var h="NHWC"===a?l.shape[3]:l.shape[1];ot(h===u.shape[2],(function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."})),ot(fs(n,i),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"}));var d=ms(a),p=ss(l.shape,u.shape,n,i,r,s,!1,d),f=[u,l],m=xn.runKernelFunc((function(e,t){var n=e.conv2d(l,u,p);return t([u,l]),n}),{x:l,filter:u},(function(e,t){var s=t,o=s[0],u=s[1];return ot(ps(i),(function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+i+"'"})),{x:function(){return Xc(u.shape,e,o,n,r,a)},filter:function(){return Kc(u,e,o.shape,n,r,a)}}}),"Conv2D",p,f);return c?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),qc=Ur({conv3d_:function(e,t,n,r,a,i){void 0===a&&(a="NDHWC"),void 0===i&&(i=[1,1,1]);var s=Dr(e,"x","conv3d"),o=Dr(t,"filter","conv3d"),u=s,l=!1;4===s.rank&&(l=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),ot(5===u.rank,(function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."})),ot(5===o.rank,(function(){return"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."})),ot(u.shape[4]===o.shape[3],(function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+o.shape[3]+"."})),ot(function(e,t){return Uc(e)||Uc(t)}(n,i),(function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),ot("NDHWC"===a,(function(){return"Error in conv3d: got dataFormat of "+a+" but only NDHWC is currently supported."}));var c=os(u.shape,o.shape,n,i,r),h=xn.runKernelFunc((function(e,t){var n=e.conv3d(u,o,c);return t([u,o]),n}),{x:u,$filter:o},(function(e,t){ot(Uc(i),(function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+i+"'"}));var a=t[0],s=t[1];return{x:function(){return Gc(a.shape,e,s,n,r)},$filter:function(){return function(e,t,n,r,a){var i=e;4===e.rank&&(i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]));var s=t;4===s.rank&&(s=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3])),ot(5===i.rank,(function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+i.shape+"."})),ot(5===s.rank,(function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+s.shape+"."})),ot(5===n.length,(function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."})),ot(i.shape[4]===n[3],(function(){return"Error in conv3dDerFilter: depth of input "+i.shape[4]+") must match input depth in filter ("+n[3]+"."})),ot(s.shape[4]===n[4],(function(){return"Error in conv3dDerFilter: depth of dy ("+s.shape[4]+") must match output depth for filter ("+n[4]+")."}));var o=os(i.shape,n,r,1,a);return xn.runKernelFunc((function(e){return e.conv3dDerFilter(i,s,o)}),{x5D:i,dy5D:s})}(a,e,s.shape,n,r)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Kc=Ur({conv2dDerFilter_:function(e,t,n,r,a,i,s){void 0===i&&(i="NHWC");var o=e;3===e.rank&&(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var u=t;3===u.rank&&(u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),ot(4===o.rank,(function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."})),ot(4===u.rank,(function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."})),ot(4===n.length,(function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."}));var l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];ot(l===n[2],(function(){return"Error in conv2dDerFilter: depth of input "+l+") must match input depth in filter ("+n[2]+"."})),ot(c===n[3],(function(){return"Error in conv2dDerFilter: depth of dy ("+c+") must match output depth for filter ("+n[3]+")."})),null!=s&&ot(pt(a),(function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var h=ms(i),d=ss(o.shape,n,r,1,a,s,!1,h);return xn.runKernelFunc((function(e){return e.conv2dDerFilter(o,u,d)}),{x4D:o,dy4D:u})}}),Xc=Ur({conv2dDerInput_:Vc}),Yc=Ur({depthwiseConv2d_:function(e,t,n,r,a,i,s){void 0===i&&(i=[1,1]);var o=Dr(e,"x","depthwiseConv2d"),u=Dr(t,"filter","depthwiseConv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),ot(4===l.rank,(function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+l.rank+"."})),ot(4===u.rank,(function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."})),ot(l.shape[3]===u.shape[2],(function(){return"Error in depthwiseConv2d: number of input channels ("+l.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."})),null==i&&(i=[1,1]),ot(fs(n,i),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),null!=s&&ot(pt(r),(function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."}));var h=ss(l.shape,u.shape,n,i,r,s,!0),d=[l,u],p=xn.runKernelFunc((function(e,t){var n=e.depthwiseConv2D(l,u,h);return t([l,u]),n}),{x:l,filter:u},(function(e,t){ot(ps(i),(function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+i+"'"}));var n=t[0],r=t[1];return{x:function(){return Qc(n.shape,e,r,h)},filter:function(){return Jc(n,e,r.shape,h)}}}),"DepthwiseConv2dNative",h,d);return c?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),Qc=Ur({depthwiseConv2dDerInput_:function(e,t,n,r){var a=t,i=!1;3===t.rank&&(i=!0,a=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var s=xn.runKernelFunc((function(e){return e.depthwiseConv2DDerInput(a,n,r)}),{dy4D:a});return i?s.as3D(s.shape[1],s.shape[2],s.shape[3]):s}}),Jc=Ur({depthwiseConv2dDerFilter_:function(e,t,n,r){var a=e;3===e.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var i=t;return 3===i.rank&&(i=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),xn.runKernelFunc((function(e){return e.depthwiseConv2DDerFilter(a,i,r)}),{x4D:a,dy4D:i})}}),Zc=Ur({separableConv2d_:function(e,t,n,r,a,i,s){void 0===i&&(i=[1,1]),void 0===s&&(s="NHWC");var o=Dr(e,"x","separableConv2d"),u=Dr(t,"depthwiseFilter","separableConv2d"),l=Dr(n,"pointwiseFilter","separableConv2d"),c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ot(4===c.rank,(function(){return"Error in separableConv2d: input must be rank 4, but got rank "+c.rank+"."})),ot(4===u.rank,(function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."})),ot(4===l.rank,(function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."})),ot(1===l.shape[0],(function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+l.shape[0]+"."})),ot(1===l.shape[1],(function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+l.shape[1]+"."}));var d=u.shape[2],p=u.shape[3];ot(l.shape[2]===d*p,(function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+d*p+", but got "+l.shape[2]+"."}));var f=Yc(c,u,r,a,s,i),m=jc(f,l,1,"valid",s);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),eh=Ur({conv2dTranspose_:function(e,t,n,r,a,i){return Vc(n,Dr(e,"x","conv2dTranspose"),Dr(t,"filter","conv2dTranspose"),r,a,"NHWC",i)}}),th=Ur({conv3dTranspose_:function(e,t,n,r,a){return Gc(n,Dr(e,"x","conv3dTranspose"),Dr(t,"filter","conv3dTranspose"),r,a)}}),nh=Ur({matMul_:function(e,t,n,r){var a;void 0===n&&(n=!1),void 0===r&&(r=!1);var i=Dr(e,"a","matMul"),s=Dr(t,"b","matMul");a=mn(i,s),i=a[0],s=a[1];var o=n?i.shape[i.rank-2]:i.shape[i.rank-1],u=r?s.shape[s.rank-1]:s.shape[s.rank-2],l=n?i.shape[i.rank-1]:i.shape[i.rank-2],c=r?s.shape[s.rank-2]:s.shape[s.rank-1],h=i.shape.slice(0,-2),d=s.shape.slice(0,-2),p=ht(h),f=ht(d);ot(i.rank>=2&&s.rank>=2&&i.rank===s.rank,(function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+i.rank+" and "+s.rank+"."})),ot(dt(h,d),(function(){return"Error in matMul: outer dimensions ("+h+") and ("+d+") of Tensors with shapes "+i.shape+" and "+s.shape+" must match."})),ot(o===u,(function(){return"Error in matMul: inner shapes ("+o+") and ("+u+") of Tensors with shapes "+i.shape+" and "+s.shape+" and transposeA="+n+" and transposeB="+r+" must match."}));var m=i.shape.slice(0,-2).concat([l,c]),g=n?i.as3D(p,o,l):i.as3D(p,l,o),v=r?s.as3D(f,c,u):s.as3D(f,u,c),y={transposeA:n,transposeB:r};return xn.runKernelFunc((function(e,t){var a=e.batchMatMul(g,v,n,r);return t([g,v]),a}),{a:g,b:v},(function(e,t){var a=t,i=a[0],s=a[1];return n||r?!n&&r?{a:function(){return e.matMul(s,!1,!1)},b:function(){return e.matMul(i,!0,!1)}}:n&&!r?{a:function(){return s.matMul(e,!1,!0)},b:function(){return i.matMul(e,!1,!1)}}:{a:function(){return s.matMul(e,!0,!0)},b:function(){return e.matMul(i,!0,!0)}}:{a:function(){return e.matMul(s,!1,!0)},b:function(){return i.matMul(e,!0,!1)}}}),"BatchMatMul",y).reshape(m)}}),rh=Ur({dot_:function(e,t){var n=Dr(e,"t1","dot"),r=Dr(t,"t2","dot");ot(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+n.rank+" and "+r.rank+"."}));var a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];return ot(a===i,(function(){return"Error in dot: inner dimensions of inputs must match, but got "+a+" and "+i+"."})),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),ah=Ur({outerProduct_:function(e,t){var n=Dr(e,"v1","outerProduct"),r=Dr(t,"v2","outerProduct");return ot(1===n.rank&&1===r.rank,(function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+n.rank+" and "+r.rank+"."})),n.as2D(-1,1).matMul(r.as2D(1,-1))}}),ih=Ur({reverse_:function(e,t){var n=Dr(e,"x","reverse");if(0===n.rank)return n.clone();var r=bt(t,n.shape);return xn.runKernelFunc((function(e){return e.reverse(n,r)}),{$x:n},(function(e){return{$x:function(){return e.reverse(r)}}})).reshapeAs(n)}}),sh=Ur({reverse1d_:function(e){var t=Dr(e,"x","reverse");return ot(1===t.rank,(function(){return"Error in reverse1D: x must be rank 1 but got rank "+t.rank+"."})),ih(t,0)}}),oh=Ur({reverse2d_:function(e,t){var n=Dr(e,"x","reverse");return ot(2===n.rank,(function(){return"Error in reverse2D: x must be rank 2 but got rank "+n.rank+"."})),ih(n,t)}}),uh=Ur({reverse3d_:function(e,t){var n=Dr(e,"x","reverse");return ot(3===n.rank,(function(){return"Error in reverse3D: x must be rank 3 but got rank "+n.rank+"."})),ih(n,t)}}),lh=Ur({reverse4d_:function(e,t){var n=Dr(e,"x","reverse");return ot(4===n.rank,(function(){return"Error in reverse4D: x must be rank 4 but got rank "+n.rank+"."})),ih(n,t)}});function ch(e,t,n,r,a,i){var s=Dr(e,"x","maxPool"),o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),null==r&&(r=[1,1]),ot(4===o.rank,(function(){return"Error in maxPool: input must be rank 4 but got rank "+o.rank+"."})),ot(fs(n,r),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"})),null!=i&&ot(pt(a),(function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var l=as(o.shape,t,n,r,a,i);if(1===l.filterWidth&&1===l.filterHeight&&dt(l.inShape,l.outShape))return s.clone();var c=[o],h=xn.runKernelFunc((function(e,t){var n=e.maxPool(o,l);return t([o,n]),n}),{x:o},(function(e,i){var s=i[0],o=i[1];return{x:function(){return function(e,t,n,r,a,i,s,o){var u=Dr(e,"dy","maxPoolBackprop"),l=Dr(t,"input","maxPoolBackprop"),c=Dr(n,"output","maxPoolBackprop");ot(l.rank===u.rank,(function(){return"Rank of input ("+l.rank+") does not match rank of dy ("+u.rank+")"})),null==i&&(i=[1,1]),ot(fs(a,i),(function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'"})),ot(4===u.rank,(function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."})),ot(4===l.rank,(function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."}));var h=as(l.shape,r,a,i,s,o);return xn.runKernelFunc((function(e){return e.maxPoolBackprop(u,l,c,h)}),{$dy:u,$input:l})}(e,s,o,t,n,r,a)}}}),"MaxPool",l,c);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function hh(e,t,n,r,a,i){var s=Dr(e,"x","avgPool","float32");null==r&&(r=[1,1]),ot(fs(n,r),(function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"}));var o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),ot(4===o.rank,(function(){return"Error in avgPool: x must be rank 4 but got rank "+o.rank+"."})),null!=i&&ot(pt(a),(function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var l=as(o.shape,t,n,r,a,i);if(1===l.filterWidth&&1===l.filterHeight&&dt(l.inShape,l.outShape))return s.clone();var c=xn.runKernelFunc((function(e){return e.avgPool(o,l)}),{x:o},(function(e){return{x:function(){return function(e,t,n,r,a,i){var s=Dr(e,"dy","avgPoolBackprop"),o=Dr(t,"input","avgPoolBackprop");ot(o.rank===s.rank,(function(){return"Rank of input ("+o.rank+") does not match rank of dy ("+s.rank+")"})),null==a&&(a=[1,1]),ot(fs(r,a),(function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"}));var u=o,l=s,c=!1;3===o.rank&&(c=!0,u=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]),l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),ot(4===l.rank,(function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."})),ot(4===u.rank,(function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+"."}));var h=as(u.shape,n,r,a,i),d=xn.runKernelFunc((function(e){return e.avgPoolBackprop(l,u,h)}),{dy4D:l,input4D:u});return c?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}(e,o,t,n,r,a)}}}),"AvgPool",l);return c=c.cast(s.dtype),u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}var dh=Ur({maxPool_:function(e,t,n,r,a){return ch(e,t,n,1,r,a)}}),ph=Ur({avgPool_:function(e,t,n,r,a){return hh(e,t,n,1,r,a)}}),fh=Ur({pool_:function(e,t,n,r,a,i){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");var s=Dr(e,"x","maxPool"),o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),ot(fs(i,a),(function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+i+" and dilations '"+a+"'"}));var l,c=as(o.shape,t,i,a,r),h=[c.dilationHeight,c.dilationWidth];l="same"===r?function(e,t){var n=e.map((function(e,n){return e+(e-1)*(t[n]-1)})).map((function(e){return e-1})),r=n.map((function(e){return Math.floor(e/2)})),a=n.map((function(e,t){return e-r[t]}));return n.map((function(e,t){return[r[t],a[t]]}))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];var d=1===h[0]&&1===h[1],p=function(e,t,n){var r=n.map((function(e){return e[0]})),a=n.map((function(e){return e[1]})),i=e.concat(r,a),s=t.map((function(e,t){return(e-i[t]%e)%e})),o=a.map((function(e,t){return e+s[t]}));return[t.map((function(e,t){return[r[t],o[t]]})),t.map((function(e,t){return[0,s[t]]}))]}([c.inHeight,c.inWidth],h,l),f=p[0],m=p[1],g=d?r:"valid",v=d?o:xa(o,h,f),y=("avg"===n?function(){return hh(v,t,i,1,g)}:function(){return ch(v,t,i,1,g)})(),b=d?y:fa(y,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),mh=Ur({maxPool3d_:function(e,t,n,r,a,i,s){void 0===i&&(i="NDHWC");var o=Dr(e,"x","maxPool3d"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==s&&(s=[1,1,1]),ot(5===u.rank,(function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."})),ot("NDHWC"===i,(function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+i})),ot(fs(n,s),(function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=a&&ot(pt(r),(function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=is(u.shape,t,n,s,r,a,i),h=xn.runKernelFunc((function(e,t){var n=e.maxPool3d(u,c);return t([u,n]),n}),{x:u},(function(e,i){var o=i[0],u=i[1];return{x:function(){return function(e,t,n,r,a,i,s,o){var u=Dr(e,"dy","maxPool3dBackprop"),l=Dr(t,"input","maxPool3dBackprop"),c=Dr(n,"output","maxPool3dBackprop"),h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),d=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),p=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3])),ot(5===h.rank,(function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."})),ot(5===d.rank,(function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."})),ot(5===p.rank,(function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."})),null==i&&(i=[1,1,1]),ot(fs(a,i),(function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'"})),null!=o&&ot(pt(s),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."}));var m=is(d.shape,r,a,i,s,o),g=xn.runKernelFunc((function(e){return e.maxPool3dBackprop(h,d,p,m)}),{dy5D:h,input5D:d});return f?g.as4D(g.shape[1],g.shape[2],g.shape[3],g.shape[4]):g}(e,o,u,t,n,s,r,a)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),gh=Ur({avgPool3d_:function(e,t,n,r,a,i,s){void 0===i&&(i="NDHWC");var o=Dr(e,"x","avgPool3d","float32"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==s&&(s=[1,1,1]),ot(5===u.rank,(function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."})),ot("NDHWC"===i,(function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+i})),ot(fs(n,s),(function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=a&&ot(pt(r),(function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=is(u.shape,t,n,s,r,a,i),h=xn.runKernelFunc((function(e){return e.avgPool3d(u,c)}),{x:u},(function(e){return{x:function(){return function(e,t,n,r,a,i,s){var o=Dr(e,"dy","avgPool3dBackprop"),u=Dr(t,"input","avgPool3dBackprop"),l=o,c=u,h=!1;4===u.rank&&(h=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),ot(5===l.rank,(function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."})),ot(5===c.rank,(function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."})),null==a&&(a=[1,1,1]),ot(fs(r,a),(function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"})),null!=s&&ot(pt(i),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+i+"."}));var d=is(c.shape,n,r,a,i,s),p=xn.runKernelFunc((function(e){return e.avgPool3dBackprop(l,c,d)}),{dy5D:l,input5D:c});return h?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}(e,u,t,n,s,r,a)}}}));return h=h.cast(u.dtype),l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),vh=Ur({maxPoolWithArgmax_:function(e,t,n,r,a){void 0===a&&(a=!1);var i=Dr(e,"x","maxPoolWithArgmax"),s={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=xn.runKernel("MaxPoolWithArgmax",{x:i},s);return{result:o[0],indexes:o[1]}}}),yh=Ur({slice_:function(e,t,n){var r,a,i=Dr(e,"x","slice");if(0===i.rank)throw new Error("Slicing scalar is not possible");(r="number"==typeof t?[t].concat(new Array(i.rank-1).fill(0)):t.length<i.rank?t.concat(new Array(i.rank-t.length).fill(0)):t.slice()).forEach((function(e){ot(-1!==e,(function(){return"slice() does not support negative begin indexing."}))})),a=(a=null==n?new Array(i.rank).fill(-1):"number"==typeof n?[n].concat(new Array(i.rank-1).fill(-1)):n.length<i.rank?n.concat(new Array(i.rank-n.length).fill(-1)):n).map((function(e,t){return e>=0?e:(ot(-1===e,(function(){return"Negative size values should be exactly -1 but got "+e+" for the slice() size at index "+t+"."})),i.shape[t]-r[t])})),Gi(i,r,a);var s=i.shape,o={begin:r,size:a};return xn.runKernelFunc((function(e){return e.slice(i,r,a)}),{x:i},(function(e){for(var t=[],n=0;n<e.rank;n++)t.push([r[n],s[n]-r[n]-a[n]]);return{x:function(){return uc(e,t)}}}),"Slice",o)}}),bh=Ur({slice1d_:function(e,t,n){var r=Dr(e,"x","slice1d");return ot(1===r.rank,(function(){return"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"})),yh(r,[t],[n])}}),xh=Ur({slice2d_:function(e,t,n){var r=Dr(e,"x","slice2d");return ot(2===r.rank,(function(){return"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"})),yh(r,t,n)}}),wh=Ur({slice3d_:function(e,t,n){var r=Dr(e,"x","slice3d");return ot(3===r.rank,(function(){return"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"})),yh(r,t,n)}}),kh=Ur({slice4d_:function(e,t,n){var r=Dr(e,"x","slice4d");return ot(4===r.rank,(function(){return"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"})),yh(r,t,n)}});function Ih(e,t,n,r,a){return t.rank<n.rank&&(t=t.reshape(Mr(t.shape,r))),e.rank<n.rank&&(e=e.reshape(Mr(e.shape,r))),{x:function(){var r=e.mul(n.equal(t).cast(e.dtype));return null==a?r:r.transpose(a)}}}var Ch=Ur({all_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","all","bool"),a=bt(t,r.shape),i=a,s=Pr(i,r.rank);null!=s&&(r=r.transpose(s),i=zr(i.length,r.rank));var o=xn.runKernelFunc((function(e){return e.all(r,i)}),{$x:r});if(n){var u=Mr(o.shape,a);return o.reshape(u)}return o}}),Sh=Ur({any_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","any","bool"),a=bt(t,r.shape),i=a,s=Pr(i,r.rank);null!=s&&(r=r.transpose(s),i=zr(i.length,r.rank));var o=xn.runKernelFunc((function(e){return e.any(r,i)}),{$x:r});if(n){var u=Mr(o.shape,a);return o.reshape(u)}return o}}),Nh=Ur({argMax_:function(e,t){void 0===t&&(t=0);var n=Dr(e,"x","argMax");null==t&&(t=0);var r=bt(t,n.shape),a=Pr(r,n.rank);null!=a&&(n=n.transpose(a),r=zr(r.length,n.rank));var i={axis:r[0]},s=[n];return xn.runKernelFunc((function(e,t){var a=e.argMax(n,r[0]);return t([n]),a}),{x:n},(function(e,t){var n=t[0];return{x:function(){return sa(n)}}}),"ArgMax",i,s)}}),Th=Ur({argMin_:function(e,t){void 0===t&&(t=0);var n=Dr(e,"x","argMin");null==t&&(t=0);var r=bt(t,n.shape),a=Pr(r,n.rank);return null!=a&&(n=n.transpose(a),r=zr(r.length,n.rank)),xn.runKernelFunc((function(e,t){var a=e.argMin(n,r[0]);return t([n]),a}),{$x:n},(function(e,t){var n=t[0];return{$x:function(){return sa(n)}}}))}}),Eh=Ur({logSumExp_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","logSumExp"),a=bt(t,r.shape),i=r.max(a,!0),s=r.sub(i).exp().sum(a).log(),o=i.reshape(s.shape).add(s);if(n){var u=Mr(o.shape,a);return o.reshape(u)}return o}}),Rh=Ur({max_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","max"),a=r,i=bt(t,r.shape),s=i,o=Pr(s,r.rank);null!=o&&(r=r.transpose(o),s=zr(s.length,r.rank));var u=[r],l=xn.runKernelFunc((function(e,t){var n=e.max(r,s);return t([a,n]),n}),{x:r},(function(e,t){return Ih(e,t[1],t[0],i,o)}),"Max",{axes:s},u,[!0]);if(n){var c=Mr(l.shape,i);l=l.reshape(c)}return l}}),Ah=Ur({mean_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","mean"),a=bt(t,r.shape),i=ht(Or(r.shape,a)[1]);return Qi((function(e){var r=Xr(i);return{value:(r.dtype===e.dtype?e:e.cast(r.dtype)).div(r).sum(t,n),gradFunc:function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(ea(e.shape,"float32")).div(i)}}}))(r)}}),Dh=Ur({min_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","min"),a=r,i=bt(t,r.shape),s=i,o=Pr(s,r.rank);null!=o&&(r=r.transpose(o),s=zr(s.length,r.rank));var u=[r],l=xn.runKernelFunc((function(e,t){var n=e.min(r,s);return t([a,n]),n}),{x:r},(function(e,t){return Ih(e,t[1],t[0],i,o)}),"Min",{axes:s},u,[!0]);if(n){var c=Mr(l.shape,i);l=l.reshape(c)}return l}}),Fh=Ur({moments_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=bt(t,(e=Dr(e,"x","moments")).shape),a=e.mean(r,n),i=a.shape;n||(i=Mr(a.shape,r));var s=e.toFloat().sub(a.reshape(i)).square();return{mean:a,variance:s.mean(r,n)}}}),_h=Ur({sum_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","sum");"bool"===r.dtype&&(r=r.toInt());var a=bt(t,r.shape);return Qi((function(e){var t=Pr(a,e.rank),r=a,i=e;null!=t&&(i=e.transpose(t),r=zr(r.length,e.rank));var s=function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(ea(e.shape,"float32"))},o={axes:r},u=xn.runKernelFunc((function(e){return e.sum(i,r)}),{x:i},(function(e){return{x:function(){return s(e)}}}),"Sum",o);if(n){var l=Mr(u.shape,a);u=u.reshape(l)}return{value:u,gradFunc:s}}))(r)}}),$h=Ur({prod_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Dr(e,"x","prod");"bool"===r.dtype&&(r=r.toInt());var a=bt(t,r.shape),i=Pr(a,r.rank),s=a,o=r;null!=i&&(o=r.transpose(i),s=zr(s.length,r.rank));var u=xn.runKernelFunc((function(e){return e.prod(o,s)}),{permutedX:o});if(n){var l=Mr(u.shape,a);u=u.reshape(l)}return u}}),Oh=Ur({elu_:function(e){var t=Dr(e,"x","elu");return xn.runKernelFunc((function(e,n){var r=e.elu(t);return n([r]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return xn.runKernelFunc((function(t){return t.eluDer(e,n)}),{dy:e,y:n})}}}))}}),Mh=Ur({leakyRelu_:function(e,t){void 0===t&&(t=.2);var n=Dr(e,"x","leakyRelu");return Si(Xr(t).mul(n),n)}}),Lh=Ur({prelu_:function(e,t){var n=Dr(e,"x","prelu"),r=Dr(t,"alpha","prelu");return xn.runKernelFunc((function(e,t){var a=e.prelu(n,r);return t([n,r]),a}),{x:n,alpha:r},(function(e,t){var n=t[0],r=t[1],a=n.greater(0);return{x:function(){return tc(a,e,e.mul(r))},alpha:function(){var t=tc(a,sa(e),e.mul(n)),i=Ba(r.shape,e.shape);return i.length>0&&(t=t.sum(i)),t.reshape(r.shape)}}}),"Prelu")}}),Ph=Ur({relu_:function(e){var t=Dr(e,"x","relu");return"bool"===t.dtype?t.toInt():xn.runKernelFunc((function(e,n){var r=e.relu(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mulStrict(n.step().toFloat())}}}),"Relu")}}),Bh=Ur({relu6_:function(e){var t=Dr(e,"x","relu6");return"bool"===t.dtype?t.toInt():xn.runKernelFunc((function(e,n){var r=e.relu6(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0],r=n.lessEqual(6).mul(n.step());return{x:function(){return e.mulStrict(r.toFloat())}}}),"Relu6")}}),zh=Ur({selu_:function(e){var t=Dr(e,"x","selu");return xn.runKernelFunc((function(e,n){var r=e.selu(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){var t=n.greater(Xr(0)),r=Xr(qu),a=Xr(Ku),i=e.mul(a),s=e.mul(r).mul(n.toFloat().exp());return tc(t,i,s)}}}))}}),Wh=Ur({localResponseNormalization_:function(e,t,n,r,a){void 0===t&&(t=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===a&&(a=.5);var i=Dr(e,"x","localResponseNormalization");ot(4===i.rank||3===i.rank,(function(){return"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank "+i.rank+"."})),ot(pt(t),(function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+t+"."}));var s=i,o=!1;3===i.rank&&(o=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2]));var u=xn.runKernelFunc((function(e,i){var o=e.localResponseNormalization4D(s,t,n,r,a);return i([s,o]),o}),{x4D:s},(function(e,i){var s=i[0],o=i[1];return{x4D:function(){return xn.runKernelFunc((function(i){return i.LRNGrad(e,s,o,t,n,r,a)}),{})}}}));return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Vh=Ur({norm_:function(e,t,n,r){void 0===t&&(t="euclidean"),void 0===n&&(n=null),void 0===r&&(r=!1);var a=function e(t,n,r){if(void 0===r&&(r=null),0===t.rank)return t.abs();if(1!==t.rank&&null===r)return e(t.reshape([-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return t.abs().sum(r);if(n===1/0)return t.abs().max(r);if(n===-1/0)return t.abs().min(r);if("euclidean"===n||2===n)return t.abs().pow(Xr(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return t.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return t.abs().sum(r[1]).max(r[0]);if(n===-1/0)return t.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return t.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Dr(e,"x","norm"),t,n),i=a.shape;if(r){var s=bt(n,e.shape);i=Mr(a.shape,s)}return a.reshape(i)}}),Uh=Ur({basicLSTMCell_:function(e,t,n,r,a,i){var s=Dr(e,"forgetBias","basicLSTMCell"),o=Dr(t,"lstmKernel","basicLSTMCell"),u=Dr(n,"lstmBias","basicLSTMCell"),l=Dr(r,"data","basicLSTMCell"),c=Dr(a,"c","basicLSTMCell"),h=Dr(i,"h","basicLSTMCell"),d=l.concat(h,1).matMul(o).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),v=d.slice([0,f],m),y=d.slice([0,2*f],m),b=d.slice([0,3*f],m),x=g.sigmoid().mulStrict(v.tanh()).addStrict(c.mulStrict(s.add(y).sigmoid())),w=x.tanh().mulStrict(b.sigmoid());return[x,w]}}),Gh=Ur({multiRNNCell_:function(e,t,n,r){for(var a=Dr(t,"data","multiRNNCell"),i=Fr(n,"c","multiRNNCell"),s=Fr(r,"h","multiRNNCell"),o=a,u=[],l=0;l<e.length;l++){var c=e[l](o,i[l],s[l]);u.push(c[0]),u.push(c[1]),o=c[1]}var h=[],d=[];for(l=0;l<u.length;l+=2)h.push(u[l]),d.push(u[l+1]);return[h,d]}}),Hh=Ur({movingAverage_:function(e,t,n,r,a){void 0===a&&(a=!0);var i=Dr(e,"v","movingAverage"),s=Dr(t,"x","movingAverage"),o=Dr(n,"decay","movingAverage");gn(i,s),ot(dt(i.shape,s.shape),(function(){return"Shape mismatch in v and x"}));var u=Xr(1),l=u.sub(o),c=s.sub(i).mul(l);if(a){ot(null!=r,(function(){return"When using zeroDebias: true, step is required."}));var h=Dr(r,"step","movingAverage");c=c.div(u.sub(_i(o,h)))}return i.add(c)}}),jh=Ur({stridedSlice_:function(e,t,n,r,a,i,s,o,u){if(void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===o&&(o=0),void 0===u&&(u=0),null==r&&(r=new Array(t.length)),0!==s)throw new Error("ellipsis mask is not yet supported");var l=Dr(e,"x","stridedSlice"),c=Hi(o),h=l.shape.slice();c.forEach((function(e){t[e]=0,n[e]=1,h.splice(e,0,1)})),l=l.reshape(h);for(var d=0;d<l.rank;d++)t[d]=qi(a,t,r,l.shape,d),n[d]=Ki(i,n,r,l.shape,d),r[d]=r[d]||1;var p=Hi(u);p.forEach((function(e){n[e]=t[e]+1,r[e]=1}));var f=ji(t,n,r),m=f.filter((function(e,t){return-1===p.indexOf(t)}));return r.every((function(e){return 1===e}))?yh(l,t,f).reshape(m):xn.runKernelFunc((function(e){return e.stridedSlice(l,t,n,r)}),{$x:l}).reshape(m)}}),qh=Ur({topk_:function(e,t,n){void 0===t&&(t=1),void 0===n&&(n=!0);var r=Dr(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");var a=r.shape[r.shape.length-1];if(t>a)throw new Error("'k' passed to topk() must be <= the last dimension ("+a+") but got "+t);var i=xn.runKernelFunc((function(e){return e.topk(r,t,n)}),{$x:r});return{values:i[0],indices:i[1]}}}),Kh=Ur({scatterND_:function(e,t,n){var r=Dr(e,"indices","scatterND","int32"),a=Dr(t,"updates","scatterND");return Vi(a,r,n),xn.runKernelFunc((function(e){return e.scatterND(r,a,n)}),{indices:r,updates:a},null,"ScatterNd",{shape:n})}}),Xh=Ur({fft_:function(e){ot("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return xn.runKernelFunc((function(e){return e.fft(r)}),{input:e}).reshape(e.shape)}}),Yh=Ur({ifft_:function(e){ot("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return xn.runKernelFunc((function(e){return e.ifft(r)}),{input:e}).reshape(e.shape)}}),Qh=Ur({rfft_:function(e,t){ot("float32"===e.dtype,(function(){return"The dtype for rfft() must be real value but got "+e.dtype}));var n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){var i=e.shape.map((function(e){return 0})),s=e.shape.map((function(e){return e}));s[e.shape.length-1]=t,n=e.slice(i,s),r=t}else if(null!=t&&t>r){var o=e.shape.map((function(e){return e}));o[e.shape.length-1]=t-r,n=e.concat(ta(o),e.shape.length-1),r=t}else n=e;var u=n.zerosLike(),l=Gr(n,u).as2D(a,r),c=Xh(l),h=Math.floor(r/2)+1,d=Hr(c),p=jr(c),f=d.split([h,r-h],d.shape.length-1),m=p.split([h,r-h],p.shape.length-1),g=n.shape.slice();return g[n.shape.length-1]=h,Gr(f[0],m[0]).reshape(g)}}),Jh=Ur({irfft_:function(e){var t=e.shape[e.shape.length-1],n=e.size/t;if(t<=2){var r=e.as2D(n,t),a=Yh(r);return Hr(a)}var i=[n,2*(t-1)],s=Hr(e).as2D(n,t),o=jr(e).as2D(n,t),u=s.slice([0,1],[n,t-2]).reverse(1),l=o.slice([0,1],[n,t-2]).reverse(1).mul(Xr(-1)),c=s.concat(u,1),h=o.concat(l,1);return r=Gr(c,h).as2D(i[0],i[1]),a=Yh(r),Hr(a)}}),Zh=Object.freeze({fft:Xh,ifft:Yh,rfft:Qh,irfft:Jh}),ed=Ur({sparseToDense_:function(e,t,n,r){void 0===r&&(r=0);var a=Dr(e,"sparseIndices","sparseToDense","int32"),i=Dr(t,"sparseValues","sparseToDense"),s=Dr(r,"defaultValue","sparseToDense",i.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+e.shape+".");var a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error("outputShape has incorrect number of elements:, "+n.length+", should be: "+i+".");var s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error("sparseValues has incorrect shape "+t.shape+", should be [] or ["+a+"]");if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,n,s),xn.runKernelFunc((function(e){return e.sparseToDense(a,i,n,s)}),{$sparseIndices:a,$sparseValues:i,$defaultValue:s})}}),td=Ur({gatherND_:function(e,t){var n=Dr(t,"indices","gatherND","int32"),r=Dr(e,"x","gatherND");return xn.runKernelFunc((function(e){return e.gatherND(r,n)}),{x:r,indices:n},null,"GatherNd")}}),nd=Ur({diag_:function(e){var t=Dr(e,"x","diag").flatten(),n=e.shape.concat(e.shape);return xn.runKernelFunc((function(e){return e.diag(t)}),{$x:t}).reshape(n)}}),rd=Ur({dropout_:function(e,t,n,r){var a=Dr(e,"x","dropout");if(ot("float32"===a.dtype,(function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+a.dtype+" tensor instead."})),ot(t>=0&&t<1,(function(){return"rate must be a float in the range [0, 1), but got "+t+"."})),0===t)return e instanceof rn?a.clone():a;var i=function(e,t){if(null==t)return e.shape.slice();if(dt(e.shape,t))return t;if(e.shape.length===t.length){for(var n=[],r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=kc(i,0,1,"float32",r).add(s).floor().div(s);return a.mul(o)}});function ad(e,t,n){for(var r=1-e%2,a=new Float32Array(e),i=0;i<e;++i){var s=2*Math.PI*i/(e+r-1);a[i]=t-n*Math.cos(s)}return Yr(a,"float32")}var id,sd=Ur({hannWindow_:function(e){return ad(e,.5,.5)}}),od=Ur({hammingWindow_:function(e){return ad(e,.54,.46)}}),ud=Ur({frame_:function(e,t,n,r,a){void 0===r&&(r=!1),void 0===a&&(a=0);for(var i=0,s=[];i+t<=e.size;)s.push(yh(e,i,t)),i+=n;if(r)for(;i<e.size;){var o=i+t-e.size,u=oa([yh(e,i,t-o),na([o],a)]);s.push(u),i+=n}return 0===s.length?Qr([],[0,t]):oa(s).as2D(s.length,t)}}),ld=Ur({stft_:function(e,t,n,r,a){var i;void 0===a&&(a=sd),null==r&&(i=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));for(var s=ud(e,t,n),o=Di(s,a(t)),u=[],l=0;l<s.shape[0];l++)u.push(Qh(o.slice([l,0],[1,t]),r));return oa(u)}}),cd=Object.freeze({hannWindow:sd,hammingWindow:od,frame:ud,stft:ld});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(id||(id={}));var hd=Ur({absoluteDifference_:function(e,t,n,r){void 0===r&&(r=id.SUM_BY_NONZERO_WEIGHTS);var a=Dr(e,"labels","absoluteDifference"),i=Dr(t,"predictions","absoluteDifference"),s=null;null!=n&&(s=Dr(n,"weights","absoluteDifference")),ut(a.shape,i.shape,"Error in absoluteDifference: ");var o=a.sub(i).abs();return dd(o,s,r)}}),dd=Ur({computeWeightedLoss_:function(e,t,n){void 0===n&&(n=id.SUM_BY_NONZERO_WEIGHTS);var r=Dr(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Dr(t,"weights","computeWeightedLoss"));var i=null==a?r:r.mul(a);if(n===id.NONE)return i;if(n===id.SUM)return i.sum();if(n===id.MEAN){if(null==a)return i.mean();var s=r.size/a.size,o=i.sum().div(a.sum());return s>1?o.div(Xr(s)):o}if(n===id.SUM_BY_NONZERO_WEIGHTS){if(null==a)return i.sum().div(Xr(r.size));var u=a.mul(ea(r.shape)).notEqual(Xr(0)).sum().toFloat();return i.sum().div(u)}throw Error("Unknown reduction: "+n)}}),pd=Ur({cosineDistance_:function(e,t,n,r,a){void 0===a&&(a=id.SUM_BY_NONZERO_WEIGHTS);var i=Dr(e,"labels","cosineDistance"),s=Dr(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Dr(r,"weights","cosineDistance")),ut(i.shape,s.shape,"Error in cosineDistance: ");var u=Xr(1).sub(i.mul(s).sum(n,!0));return dd(u,o,a)}}),fd=Ur({hingeLoss_:function(e,t,n,r){void 0===r&&(r=id.SUM_BY_NONZERO_WEIGHTS);var a=Dr(e,"labels","hingeLoss"),i=Dr(t,"predictions","hingeLoss"),s=null;null!=n&&(s=Dr(n,"weights","hingeLoss")),ut(a.shape,i.shape,"Error in hingeLoss: ");var o=Xr(1);a=Xr(2).mul(a).sub(o);var u=o.sub(a.mul(i)).relu();return dd(u,s,r)}}),md=Ur({huberLoss_:function(e,t,n,r,a){void 0===r&&(r=1),void 0===a&&(a=id.SUM_BY_NONZERO_WEIGHTS);var i=Dr(e,"labels","huberLoss"),s=Dr(t,"predictions","huberLoss"),o=null;null!=n&&(o=Dr(n,"weights","huberLoss")),ut(i.shape,s.shape,"Error in huberLoss: ");var u=Xr(r),l=s.sub(i).abs(),c=Ti(l,u),h=l.sub(c),d=Xr(.5).mul(c.square()).add(u.mul(h));return dd(d,o,a)}}),gd=Ur({logLoss_:function(e,t,n,r,a){void 0===r&&(r=1e-7),void 0===a&&(a=id.SUM_BY_NONZERO_WEIGHTS);var i=Dr(e,"labels","logLoss"),s=Dr(t,"predictions","logLoss"),o=null;null!=n&&(o=Dr(n,"weights","logLoss")),ut(i.shape,s.shape,"Error in logLoss: ");var u=Xr(1),l=Xr(r),c=i.mul(s.add(l).log()).neg().sub(u.sub(i).mul(u.sub(s).add(l).log()));return dd(c,o,a)}}),vd=Ur({meanSquaredError_:function(e,t,n,r){void 0===r&&(r=id.SUM_BY_NONZERO_WEIGHTS);var a=Dr(e,"labels","meanSquaredError"),i=Dr(t,"predictions","meanSquaredError"),s=null;null!=n&&(s=Dr(n,"weights","meanSquaredError")),ut(a.shape,i.shape,"Error in meanSquaredError: ");var o=a.squaredDifference(i);return dd(o,s,r)}}),yd=Ur({sigmoidCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=id.SUM_BY_NONZERO_WEIGHTS);var i=Dr(e,"multiClassLabels","sigmoidCrossEntropy"),s=Dr(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Dr(n,"weights","sigmoidCrossEntropy")),ut(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=Xr(r),l=Xr(1),c=Xr(.5);i=i.mul(l.sub(u)).add(c.mul(u))}var h=function(e,t){var n=Dr(e,"labels","sigmoidCrossEntropyWithLogits"),r=Dr(t,"logits","sigmoidCrossEntropyWithLogits");ut(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");var a=r.relu(),i=r.mul(n),s=r.abs().neg().exp().log1p();return a.sub(i).add(s)}(i,s);return dd(h,o,a)}}),bd=Ur({softmaxCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=id.SUM_BY_NONZERO_WEIGHTS);var i=Dr(e,"onehotLabels","softmaxCrossEntropy"),s=Dr(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Dr(n,"weights","softmaxCrossEntropy")),ut(i.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){var u=Xr(r),l=Xr(1),c=Xr(i.shape[1]);i=i.mul(l.sub(u)).add(u.div(c))}var h=function(e,t,n){if(void 0===n&&(n=-1),-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+t.rank+" and dim was "+n);return Qi((function(e,t,r){var a=t.logSumExp([n],!0),i=t.toFloat().sub(a);return r([e,i]),{value:i.mul(e).neg().sum([n]),gradFunc:function(e,t){var r=t[0],a=t[1],i=Mr(e.shape,[n]);return[e.reshape(i).mul(r.toFloat().sub(a.exp())),e.reshape(i).mul(a.exp().sub(r.toFloat()))]}}}))(e,t)}(i,s);return dd(h,o,a)}}),xd=Object.freeze({get Reduction(){return id},absoluteDifference:hd,computeWeightedLoss:dd,cosineDistance:pd,hingeLoss:fd,huberLoss:md,logLoss:gd,meanSquaredError:vd,sigmoidCrossEntropy:yd,softmaxCrossEntropy:bd});function wd(e,t){return void 0===t&&(t=!1),xn.tidy((function(){if(2!==e.shape.length)throw new Error("qr2d() requires a 2D Tensor, but got a "+e.shape.length+"D Tensor.");for(var n=e.shape[0],r=e.shape[1],a=ic(n),i=e.clone(),s=Qr([[1]],[1,1]),o=s.clone(),u=n>=r?r:n,l=function(e){var t,u=i,l=o,c=a;t=xn.tidy((function(){var t=i.slice([e,e],[n-e,1]),u=t.norm(),l=i.slice([e,e],[1,1]),c=Qr([[-1]]).where(l.greater(0),Qr([[1]])),h=l.sub(c.mul(u)),d=t.div(h);o=1===d.shape[0]?s.clone():s.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);var p=c.matMul(h).div(u).neg(),f=i.slice([e,0],[n-e,r]),m=p.mul(o),g=o.transpose();if(0===e)i=f.sub(m.matMul(g.matMul(f)));else{var v=f.sub(m.matMul(g.matMul(f)));i=i.slice([0,0],[e,r]).concat(v,0)}var y=m.transpose(),b=a.slice([0,e],[n,a.shape[1]-e]);if(0===e)a=b.sub(b.matMul(o).matMul(y));else{var x=b.sub(b.matMul(o).matMul(y));a=a.slice([0,0],[n,e]).concat(x,1)}return[o,i,a]})),o=t[0],i=t[1],a=t[2],Tr([u,l,c])},c=0;c<u;++c)l(c);return!t&&n>r&&(a=a.slice([0,0],[n,r]),i=i.slice([0,0],[r,r])),[a,i]}))}var kd=Ur({bandPart_:function(e,t,n){if(t%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+t+".");if(n%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+n+".");var r=Dr(e,"a","bandPart");if(r.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+r.rank+".");var a=r.shape,i=r.shape.slice(-2),s=i[0],o=i[1];if(!(t<=s))throw new Error("bandPart(): numLower ("+t+") must not be greater than the number of rows ("+s+").");if(!(n<=o))throw new Error("bandPart(): numUpper ("+n+") must not be greater than the number of columns ("+o+").");t<0&&(t=s),n<0&&(n=o);var u=aa(0,s,1,"int32").reshape([-1,1]),l=aa(0,o,1,"int32"),c=Mi(u,l),h=Ql(c.lessEqual(Xr(+t,"int32")),c.greaterEqual(Xr(-n,"int32"))),d=ta([s,o],r.dtype);return ka(Ia(r.reshape([-1,s,o])).map((function(e){return tc(h,e,d)}))).reshape(a)}}),Id=Ur({gramSchmidt_:function(e){var t;if(Array.isArray(e)){t=!1,ot(null!=e&&e.length>0,(function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"}));for(var n=e[0].shape[0],r=function(t){ot(e[t].shape[0]===n,(function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+e[t].shape[0]+" vs. "+n+")"}))},a=1;a<e.length;++a)r(a)}else t=!0,e=da(e,e.shape[0],0).map((function(e){return wa(e,[0])}));ot(e.length<=e[0].shape[0],(function(){return"Gram-Schmidt: Number of vectors ("+e.length+") exceeds number of dimensions ("+e[0].shape[0]+")."}));var i=[],s=e,o=function(e){i.push(xn.tidy((function(){var t=s[e];if(e>0)for(var n=0;n<e;++n){var r=_h(i[n].mulStrict(t)).mul(i[n]);t=t.sub(r)}return t.div(Vh(t,"euclidean"))})))};for(a=0;a<e.length;++a)o(a);return t?ka(i,0):i}}),Cd=Ur({qr_:function(e,t){if(void 0===t&&(t=!1),e.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+e.rank);if(2===e.rank)return wd(e,t);var n=e.shape.slice(0,e.shape.length-2).reduce((function(e,t){return e*t})),r=Ia(e.reshape([n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];return r.forEach((function(e){var n=wd(e,t),r=n[0],s=n[1];a.push(r),i.push(s)})),[ka(a,0).reshape(e.shape),ka(i,0).reshape(e.shape)]}}),Sd=Object.freeze({bandPart:kd,gramSchmidt:Id,qr:Cd});function Nd(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);var s=e.shape[0];return n=Math.min(n,s),ot(0<=r&&r<=1,(function(){return"iouThreshold must be in [0, 1], but was '"+r+"'"})),ot(2===e.rank,(function(){return"boxes must be a 2D tensor, but was of rank '"+e.rank+"'"})),ot(4===e.shape[1],(function(){return"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]})),ot(1===t.rank,(function(){return"scores must be a 1D tensor"})),ot(t.shape[0]===s,(function(){return"scores has incompatible shape with boxes. Expected "+s+", but was "+t.shape[0]})),ot(0<=i&&i<=1,(function(){return"softNmsSigma must be in [0, 1], but was '"+i+"'"})),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}var Td=Ur({resizeBilinear_:function(e,t,n){void 0===n&&(n=!1);var r=Dr(e,"images","resizeBilinear");ot(3===r.rank||4===r.rank,(function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."})),ot(2===t.length,(function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."}));var a=r,i=!1;3===r.rank&&(i=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var s=t[0],o=t[1],u=xn.runKernelFunc((function(e,t){return t([a]),e.resizeBilinear(a,s,o,n)}),{x:a},(function(e,t){return{x:function(){return xn.runKernelFunc((function(r){return r.resizeBilinearBackprop(e,t[0],n)}),{})}}}),"ResizeBilinear",{alignCorners:n,newHeight:s,newWidth:o});return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Ed=Ur({resizeNearestNeighbor_:function(e,t,n){void 0===n&&(n=!1);var r=Dr(e,"images","resizeNearestNeighbor");ot(3===r.rank||4===r.rank,(function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."})),ot(2===t.length,(function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."})),ot("float32"===r.dtype||"int32"===r.dtype,(function(){return"`images` must have `int32` or `float32` as dtype"}));var a=r,i=!1;3===r.rank&&(i=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var s=t[0],o=t[1],u=xn.runKernelFunc((function(e,t){return t([a]),e.resizeNearestNeighbor(a,s,o,n)}),{batchImages:a},(function(e,t){return{batchImages:function(){return xn.runKernelFunc((function(r){return r.resizeNearestNeighborBackprop(e,t[0],n)}),{})}}}));return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Rd=Ur({nonMaxSuppression_:function(e,t,n,r,a){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY);var i=Dr(e,"boxes","nonMaxSuppression"),s=Dr(t,"scores","nonMaxSuppression"),o=Nd(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;var u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return xn.runKernelFunc((function(e){return e.nonMaxSuppression(i,s,n,r,a)}),{boxes:i,scores:s},null,"NonMaxSuppressionV3",u)}}),Ad=Ur({nonMaxSuppressionWithScore_:function(e,t,n,r,a,i){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===i&&(i=0);var s=Dr(e,"boxes","nonMaxSuppression"),o=Dr(t,"scores","nonMaxSuppression"),u=Nd(s,o,n,r,a,i),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},c=xn.runKernel("NonMaxSuppressionV5",{boxes:s,scores:o},l);return{selectedIndices:c[0],selectedScores:c[1]}}}),Dd=Ur({cropAndResize_:function(e,t,n,r,a,i){var s=Dr(e,"image","cropAndResize"),o=Dr(t,"boxes","cropAndResize","float32"),u=Dr(n,"boxInd","cropAndResize","int32");a=a||"bilinear",i=i||0;var l=o.shape[0];return ot(4===s.rank,(function(){return"Error in cropAndResize: image must be rank 4,but got rank "+s.rank+"."})),ot(2===o.rank&&4===o.shape[1],(function(){return"Error in cropAndResize: boxes must be have size ["+l+",4] but had shape "+o.shape+"."})),ot(1===u.rank&&u.shape[0]===l,(function(){return"Error in cropAndResize: boxInd must be have size ["+l+"] but had shape "+o.shape+"."})),ot(2===r.length,(function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."})),ot(r[0]>=1&&r[1]>=1,(function(){return"cropSize must be atleast [1,1], but was "+r})),ot("bilinear"===a||"nearest"===a,(function(){return"method must be bilinear or nearest, but was "+a})),xn.runKernelFunc((function(e,t){return e.cropAndResize(s,o,u,r,a,i)}),{images:s,boxes:o,boxInd:u},null,"CropAndResize",{method:a,extrapolationValue:i,cropSize:r})}}),Fd=Object.freeze({resizeBilinear:Td,resizeNearestNeighbor:Ed,nonMaxSuppression:Rd,nonMaxSuppressionAsync:function(e,t,n,r,a){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),Ge(this,void 0,void 0,(function(){var i,s,o,u,l,c,h;return He(this,(function(d){switch(d.label){case 0:return i=Dr(e,"boxes","nonMaxSuppressionAsync"),s=Dr(t,"scores","nonMaxSuppressionAsync"),o=Nd(i,s,n,r,a),n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold,[4,Promise.all([i.data(),s.data()])];case 1:return u=d.sent(),l=u[0],c=u[1],h=Ss(l,c,n,r,a),i!==e&&i.dispose(),s!==t&&s.dispose(),[2,h]}}))}))},nonMaxSuppressionWithScore:Ad,nonMaxSuppressionWithScoreAsync:function(e,t,n,r,a,i){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===i&&(i=0),Ge(this,void 0,void 0,(function(){var s,o,u,l,c,h,d;return He(this,(function(p){switch(p.label){case 0:return s=Dr(e,"boxes","nonMaxSuppressionAsync"),o=Dr(t,"scores","nonMaxSuppressionAsync"),u=Nd(s,o,n,r,a,i),n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma,[4,Promise.all([s.data(),o.data()])];case 1:return l=p.sent(),c=l[0],h=l[1],d=Ns(c,h,n,r,a,i),s!==e&&s.dispose(),o!==t&&o.dispose(),[2,d]}}))}))},cropAndResize:Dd}),_d=function(e,t){return!(e>0)||"linear"===t},$d=function(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return e.mul(t.step());throw new Error("Gradient for activation "+n+" has not been implemented yet.")},Od=function(e,t){var n=t,r=Ba(e.shape,t.shape);return r.length>0&&(n=n.sum(r)),n.reshape(e.shape)},Md=function(e,t,n){if("linear"===t)return e;if("relu"===t)return Ph(e);if("elu"===t)return Oh(e);if("relu6"===t)return Bh(e);if("prelu"===t)return Lh(e,n);throw new Error("Unknown fused activation "+t+".")},Ld=Ur({fusedMatMul_:function(e){var t,n=e.a,r=e.b,a=e.transposeA,i=void 0!==a&&a,s=e.transposeB,o=void 0!==s&&s,u=e.bias,l=e.activation,c=void 0===l?"linear":l,h=e.preluActivationWeights;if(!1===_d(xn.state.gradientDepth,c)){var d=nh(n,r,i,o);return null!=u&&(d=La(d,u)),Md(d,c,h)}var p=Dr(n,"a","fused matMul"),f=Dr(r,"b","fused matMul");t=mn(p,f),p=t[0],f=t[1];var m=i?p.shape[p.rank-2]:p.shape[p.rank-1],g=o?f.shape[f.rank-1]:f.shape[f.rank-2],v=i?p.shape[p.rank-1]:p.shape[p.rank-2],y=o?f.shape[f.rank-2]:f.shape[f.rank-1],b=p.shape.slice(0,-2),x=f.shape.slice(0,-2),w=ht(b),k=ht(x);ot(p.rank>=2&&f.rank>=2&&p.rank===f.rank,(function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+p.rank+" and "+f.rank+"."})),ot(dt(b,x),(function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+x+") of Tensors with shapes "+p.shape+" and "+f.shape+" must match."})),ot(m===g,(function(){return"Error in fused matMul: inner shapes ("+m+") and ("+g+") of Tensors with shapes "+p.shape+" and "+f.shape+" and transposeA="+i+" and transposeB="+o+" must match."}));var I,C,S=p.shape.slice(0,-2).concat([v,y]),N=i?p.as3D(w,m,v):p.as3D(w,v,m),T=o?f.as3D(k,y,g):f.as3D(k,g,y);null!=u&&za(S,(I=mn(I=Dr(u,"bias","fused matMul"),p)[0]).shape),null!=h&&(C=Dr(h,"prelu weights","fused matMul"));var E={a:N,b:T};null!=u&&(E.bias=I),null!=h&&(E.preluActivationWeights=C);var R=[N,T];return xn.runKernelFunc((function(e,t){var n=e.fusedBatchMatMul({a:N,b:T,transposeA:i,transposeB:o,bias:I,activation:c,preluActivationWeights:C});return t([N,T,n]),n}),E,(function(e,t){var n=t[0],r=t[1],a=t[2],s=$d(e,a,c),l={};return null!=u&&(l={bias:function(){return Od(I,s)}}),i||o?!i&&o?Object.assign({a:function(){return s.matMul(r,!1,!1)},b:function(){return s.matMul(n,!0,!1)}},l):i&&!o?Object.assign({a:function(){return r.matMul(s,!1,!0)},b:function(){return n.matMul(s,!1,!1)}},l):Object.assign({a:function(){return r.matMul(s,!0,!0)},b:function(){return s.matMul(n,!0,!0)}},l):Object.assign({a:function(){return s.matMul(r,!1,!0)},b:function(){return n.matMul(s,!0,!1)}},l)}),"_FusedMatMul",{transposeA:i,transposeB:o,activation:c},R,[!0]).reshape(S)}}),Pd=Ur({fusedConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,i=e.dataFormat,s=void 0===i?"NHWC":i,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,d=void 0===h?"linear":h,p=e.preluActivationWeights;if(d=d||"linear",!1===_d(xn.state.gradientDepth,d)){var f=jc(t,n,r,a,s,u,l);return null!=c&&(f=La(f,c)),Md(f,d,p)}var m=Dr(t,"x","conv2d"),g=Dr(n,"filter","conv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),ot(4===v.rank,(function(){return"Error in fused conv2d: input must be rank 4, but got rank "+v.rank+"."})),ot(4===g.rank,(function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+g.rank+"."})),null!=l&&ot(pt(a),(function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+l+" but got pad "+a+"."})),ot(v.shape[3]===g.shape[2],(function(){return"Error in conv2d: depth of input ("+v.shape[3]+") must match input depth for filter "+g.shape[2]+"."})),ot(fs(r,u),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),ot("NHWC"===s,(function(){return"Error in conv2d: got dataFormat of "+s+" but only NHWC is currently supported."}));var b,x,w=ss(v.shape,g.shape,r,u,a,l);null!=c&&(b=mn(b=Dr(c,"bias","fused conv2d"),m)[0],za(w.outShape,b.shape)),null!=p&&(x=Dr(p,"prelu weights","fused conv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=p&&(k.preluActivationWeights=x);var I=[g,v],C=xn.runKernelFunc((function(e,t){var n=e.fusedConv2d({input:v,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){var n=t,i=n[0],s=n[1],o=n[2],l=$d(e,o,d);ot(ps(u),(function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"}));var h={};return null!=c&&(h={bias:function(){return Od(b,l)}}),Object.assign({x:function(){return Xc(s.shape,l,i,r,a)},filter:function(){return Kc(s,l,i.shape,r,a)}},h)}),"FusedConv2D",{convInfo:w,activation:d},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),Bd=Ur({fusedDepthwiseConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,i=e.dataFormat,s=void 0===i?"NHWC":i,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,d=void 0===h?"linear":h,p=e.preluActivationWeights;if(!1===_d(xn.state.gradientDepth,d)){var f=Yc(t,n,r,a,s,u,l);return null!=c&&(f=La(f,c)),Md(f,d,p)}var m=Dr(t,"x","depthwiseConv2d"),g=Dr(n,"filter","depthwiseConv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),ot(4===v.rank,(function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+v.rank+"."})),ot(4===g.rank,(function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+g.rank+"."})),ot(v.shape[3]===g.shape[2],(function(){return"Error in fused depthwiseConv2d: number of input channels ("+v.shape[3]+") must match the inChannels dimension in filter "+g.shape[2]+"."})),null==u&&(u=[1,1]),ot(fs(r,u),(function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),null!=l&&ot(pt(a),(function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+l+" but got pad "+a+"."}));var b,x,w=ss(v.shape,g.shape,r,u,a,l,!0);null!=c&&(b=mn(b=Dr(c,"bias","fused conv2d"),m)[0],za(w.outShape,b.shape)),null!=p&&(x=Dr(p,"prelu weights","fused depthwiseConv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=p&&(k.preluActivationWeights=x);var I=[g,v],C=xn.runKernelFunc((function(e,t){var n=e.fusedDepthwiseConv2D({input:v,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){ot(ps(u),(function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"}));var n=t[0],r=t[1],a=t[2],i=$d(e,a,d),s={};return null!=c&&(s={bias:function(){return Od(b,i)}}),Object.assign({x:function(){return Qc(r.shape,i,n,w)},filter:function(){return Jc(r,i,n.shape,w)}},s)}),"FusedDepthwiseConv2D",{convInfo:w,activation:d},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),zd=Object.freeze({matMul:Ld,conv2d:Pd,depthwiseConv2d:Bd}),Wd=Object.freeze({image:Fd,linalg:Sd,losses:xd,spectral:Zh,fused:zd,signal:cd,add:La,addN:_l,batchNorm:Bl,batchNormalization:Pl,batchNorm2d:Vl,batchNormalization2d:Wl,batchNorm3d:Hl,batchNormalization3d:Gl,batchNorm4d:Kl,batchNormalization4d:ql,broadcastTo:Xl,clone:Yl,div:Pi,divNoNan:rc,eye:ic,multinomial:sc,oneHot:oc,pad:uc,pad1d:lc,pad2d:cc,pad3d:hc,pad4d:dc,rand:pc,randomGamma:xc,randomNormal:wc,randomUniform:kc,square:Ic,squaredDifference:Cc,tile:ac,truncatedNormal:Sc,conv1d:Hc,conv2d:jc,conv3d:qc,depthwiseConv2d:Yc,separableConv2d:Zc,conv2dTranspose:eh,conv3dTranspose:th,op:Ur,booleanMaskAsync:function(e,t,n){return Ge(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m;return He(this,(function(g){switch(g.label){case 0:for(r=Dr(e,"tensor","boolMask"),a=Dr(t,"mask","boolMask","bool"),i=null==n?0:n,s=a.rank,o=r.shape,ot(s>0,(function(){return"mask cannot be scalar"})),ut(o.slice(i,i+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,"),u=1,l=i;l<i+s;l++)u*=o[l];return c=o.slice(0,i).concat([u],o.slice(i+s)),h=r.reshape(c),d=a.reshape([-1]),[4,nc(d)];case 1:return p=g.sent(),f=p.squeeze([1]),m=zc(h,f,i),e!==r&&r.dispose(),t!==a&&a.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,m]}}))}))},complex:Gr,real:Hr,imag:jr,concat:oa,concat1d:ua,concat2d:la,concat3d:ca,concat4d:ha,split:da,matMul:nh,dot:rh,outerProduct:ah,reverse:ih,reverse1d:sh,reverse2d:oh,reverse3d:uh,reverse4d:lh,maxPool:dh,avgPool:ph,pool:fh,maxPool3d:mh,avgPool3d:gh,maxPoolWithArgmax:vh,slice:yh,slice1d:bh,slice2d:xh,slice3d:wh,slice4d:kh,abs:Wa,acos:Va,acosh:Ua,asin:Ga,asinh:Ha,atan:ja,atanh:qa,ceil:Ka,clipByValue:Xa,cos:Ya,cosh:Qa,erf:Ja,exp:Za,expm1:ei,floor:ti,log:ni,log1p:ri,logSigmoid:ai,neg:ii,reciprocal:si,round:oi,rsqrt:ui,sigmoid:li,sign:ci,isNaN:hi,isInf:di,isFinite:pi,sin:fi,sinh:mi,softplus:gi,sqrt:vi,step:yi,tan:bi,tanh:xi,all:Ch,any:Sh,argMax:Nh,argMin:Th,logSumExp:Eh,max:Rh,mean:Ah,min:Dh,moments:Fh,sum:_h,prod:$h,equal:Nc,equalStrict:Tc,greater:Ec,greaterEqual:Rc,greaterEqualStrict:Ac,greaterStrict:Dc,less:Fc,lessEqual:_c,lessEqualStrict:$c,lessStrict:Oc,notEqual:Mc,notEqualStrict:Lc,addStrict:wi,atan2:ki,divStrict:Ii,floorDiv:Ci,maximum:Si,maximumStrict:Ni,minimum:Ti,minimumStrict:Ei,mod:Ri,modStrict:Ai,mul:Di,mulStrict:Fi,pow:_i,powStrict:$i,squaredDifferenceStrict:Oi,sub:Mi,subStrict:Li,elu:Oh,leakyRelu:Mh,prelu:Lh,relu:Ph,relu6:Bh,selu:zh,logicalAnd:Ql,logicalNot:Jl,logicalOr:Zl,logicalXor:ec,where:tc,whereAsync:nc,buffer:pa,print:function(e,t){void 0===t&&(t=!1),console.log(e.toString(t))},batchToSpaceND:fa,cast:ma,cumsum:ga,depthToSpace:va,expandDims:ya,reshape:ba,spaceToBatchND:xa,squeeze:wa,stack:ka,unstack:Ia,setdiff1dAsync:Ca,fill:na,linspace:ra,ones:ea,range:aa,scalar:Xr,tensor:qr,tensor1d:Yr,tensor2d:Qr,tensor3d:Jr,tensor4d:Zr,tensor5d:function(e,t,n){if(lt(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");var r=Rr(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Kr(e,t,r,n)},tensor6d:function(e,t,n){if(lt(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");var r=Rr(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Kr(e,t=t||r,r,n)},variable:function(e,t,n,r){return void 0===t&&(t=!0),xn.makeVariable(e,t,n,r)},zeros:ta,onesLike:ia,zerosLike:sa,transpose:es,softmax:Ji,logSoftmax:Zi,localResponseNormalization:Wh,norm:Vh,gather:zc,unsortedSegmentSum:Wc,basicLSTMCell:Uh,multiRNNCell:Gh,movingAverage:Hh,stridedSlice:jh,topk:qh,scatterND:Kh,fft:Xh,ifft:Yh,rfft:Qh,irfft:Jh,sparseToDense:ed,gatherND:td,diag:nd,dropout:rd,hannWindow:sd,hammingWindow:od,frame:ud,stft:ld,inTopKAsync:function(e,t,n){return void 0===n&&(n=1),Ge(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g;return He(this,(function(v){switch(v.label){case 0:return r=Dr(e,"predictions","inTopK"),a=Dr(t,"targets","inTopK"),ot(r.rank>1,(function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank})),ot(r.rank-1===a.rank,(function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+a.rank})),ut(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),i=r.shape[r.shape.length-1],ot(n>0&&n<=i,(function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+i+"), but got "+n})),[4,r.data()];case 1:return s=v.sent(),[4,a.data()];case 2:for(o=v.sent(),u=[s.length/i,i],c=u[1],h=wt("bool",l=u[0]),d=0;d<l;d++){for(p=d*c,f=s.subarray(p,p+c),m=[],g=0;g<f.length;g++)m.push({value:f[g],index:g});for(m.sort((function(e,t){return t.value-e.value})),h[d]=0,g=0;g<n;g++)if(m[g].index===o[d]){h[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),[2,qr(h,a.shape,"bool")]}}))}))}});function Vd(e,t){Array.isArray(e)||(e=[e]),e.forEach((function(e){null!=e&&ot("complex64"!==e.dtype,(function(){return t+" does not support complex64 tensors."}))}))}function Ud(e,t,n,r,a,i){for(var s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=pa(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3],x=0;x<a.batchSize;++x)for(var w=x*v,k=x*r[0],I=0;I<a.inChannels;++I)for(var C=0;C<a.outHeight;++C)for(var S=C*s-d,N=Math.max(0,S),T=Math.min(a.inHeight,c+S),E=w+C*y,R=0;R<a.outWidth;++R){for(var A=R*o-p,D=Math.max(0,A),F=Math.min(a.inWidth,h+A),_=f,$=0,O=0,M=N;M<T;M+=u){for(var L=k+M*r[1],P=D;P<F;P+=l){var B=e[L+P*r[2]+I];"max"===i&&B>_?_=B:"avg"===i&&($+=B,O++)}if(isNaN(_))break}g[E+R*b+I]="avg"===i?$/O:_}return m}function Gd(e,t,n,r,a,i){void 0===a&&(a=!1),void 0===i&&(i=!1);for(var s=pa(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=pa(t,n,e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.outHeight;++y){for(var b=y*o-p,x=b;x<0;)x+=l;for(var w=Math.min(r.inHeight,h+b),k=0;k<r.outWidth;++k){for(var I=k*u-f,C=I;C<0;)C+=c;for(var S=Math.min(r.inWidth,d+I),N=Number.NEGATIVE_INFINITY,T=-1,E=x;E<w;E+=l)for(var R=E-b,A=C;A<S;A+=c){var D=A-I,F=m.get(g,E,A,v);F>N&&(N=F,T=a?i?((g*r.inHeight+E)*r.inWidth+A)*r.inChannels+v:(E*r.inWidth+A)*r.inChannels+v:R*d+D)}s.set(T,g,y,k,v)}}return s}function Hd(e,t,n,r){if("linear"===n)return e.linear(t);if("relu"===n)return e.relu(t);if("elu"===n)return e.elu(t);if("relu6"===n)return e.relu6(t);if("prelu"===n)return e.prelu(t,r);throw new Error("Activation "+n+" has not been implemented for the CPU backend.")}var jd=function(e){function t(){var t=e.call(this)||this;return t.blockSize=48,t.firstUse=!0,t.data=new ts(t,xn),t}return Ue(t,e),t.prototype.write=function(e,t,n){this.firstUse&&(this.firstUse=!1,qe().get("IS_NODE")&&Er("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var r={};return this.data.set(r,{values:e,dtype:n}),r},t.prototype.move=function(e,t,n,r){this.data.set(e,{values:t,dtype:r})},t.prototype.numDataIds=function(){return this.data.numDataIds()},t.prototype.read=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(t){return[2,this.readSync(e)]}))}))},t.prototype.readSync=function(e){var t=this.data.get(e),n=t.dtype,r=t.complexTensors;return"complex64"===n?bs(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(e).values},t.prototype.bufferSync=function(e){var t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((function(e){return Ut(e)}))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return pa(e.shape,e.dtype,n)},t.prototype.makeOutput=function(e,t,n){var r=this.write(e,t,n);return xn.makeTensorFromDataId(r,t,n,this)},t.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.data.delete(e)}},t.prototype.time=function(e){return Ge(this,void 0,void 0,(function(){var t;return He(this,(function(n){return t=zt(),e(),[2,{kernelMs:zt()-t}]}))}))},t.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},t.prototype.complex=function(e,t){var n=this.makeOutput(null,e.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:xn.keep(e.clone()),imag:xn.keep(t.clone())},n},t.prototype.real=function(e){return this.data.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.data.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(Vd(e,"slice"),Xi(e.shape,t,n)){var r=Yi(t,e.strides),a=ht(n);return qr(this.readSync(e.dataId).subarray(r,r+a),n,e.dtype)}for(var i=pa(n,e.dtype),s=this.bufferSync(e),o=0;o<i.size;++o){var u=i.indexToLoc(o).map((function(e,n){return e+t[n]}));i.values[o]=s.get.apply(s,u)}return i.toTensor()},t.prototype.stridedSlice=function(e,t,n,r){Vd(e,"stridedSlice");var a=ji(t,n,r);if(a.some((function(e){return 0===e})))return qr([],a);for(var i=pa(a,e.dtype),s=this.bufferSync(e),o=0;o<i.size;o++){for(var u=i.indexToLoc(o),l=new Array(u.length),c=0;c<l.length;c++)l[c]=u[c]*r[c]+t[c];i.set.apply(i,[s.get.apply(s,l)].concat(u))}return i.toTensor()},t.prototype.diag=function(e){for(var t=this.readSync(e.dataId),n=pa([e.size,e.size],e.dtype),r=n.values,a=0;a<t.length;a++)r[a*e.size+a]=t[a];return n.toTensor()},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,i=0;i<e.rank;i++)i!==t&&(r[a++]=e.shape[i]);var s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(i=0;i<u.length;i++)s[t]=i,u[i]=this.slice(e,s,o).reshape(r);return u},t.prototype.reverse=function(e,t){Vd(e,"reverse");for(var n=pa(e.shape,e.dtype),r=this.bufferSync(e),a=function(a){var i=n.indexToLoc(a),s=i.slice();t.forEach((function(t){return s[t]=e.shape[t]-1-s[t]})),n.set.apply(n,[r.get.apply(r,s)].concat(i))},i=0;i<n.size;i++)a(i);return n.toTensor()},t.prototype.concat=function(e,t){var n=this;if("complex64"===e[0].dtype){var r=e.map((function(e){return Hr(e)})),a=e.map((function(e){return jr(e)}));return Gr(this.concat(r,t),this.concat(a,t))}var i=e.map((function(e){var n=ht(e.shape.slice(t));return e.as2D(-1,n)})),s=Vr(i.map((function(e){return e.shape})),1),o=pa(s,e[0].dtype).values;if(1===i[0].shape[0]){var u=0;i.forEach((function(e){o.set(n.readSync(e.dataId),u),u+=e.size}))}else{var l=0;i.forEach((function(e){for(var t=n.readSync(e.dataId),r=0,a=0;a<e.shape[0];++a)for(var i=a*s[1]+l,u=0;u<e.shape[1];++u)o[i+u]=t[r++];l+=e.shape[1]}))}var c=Vr(e.map((function(e){return e.shape})),t);return qr(o,c,e[0].dtype)},t.prototype.neg=function(e){return Vd(e,"neg"),this.multiply(Xr(-1),e)},t.prototype.add=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e+n,imag:t+r}})):this.broadcastedBinaryOp(e,t,pn(e.dtype,t.dtype),(function(e,t){return e+t}))},t.prototype.addN=function(e){var t=this;Vd(e,"addN");for(var n=e.map((function(e){return t.readSync(e.dataId)})),r=pa(e[0].shape,e[0].dtype),a=r.values,i=0;i<e.length;i++)for(var s=n[i],o=0;o<a.length;o++)a[o]+=s[o];return r.toTensor()},t.prototype.softmax=function(e,t){var n=bt([t],e.shape),r=this.max(e,n),a=Mr(r.shape,n),i=this.subtract(e,r.reshape(a)),s=this.exp(i),o=this.sum(s,n).reshape(a);return Pi(s,o)},t.prototype.subtract=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e-n,imag:t-r}})):this.broadcastedBinaryOp(e,t,pn(e.dtype,t.dtype),(function(e,t){return e-t}))},t.prototype.pow=function(e,t){return Vd([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.pow(e,t)}))},t.prototype.batchMatMul=function(e,t,n,r){Vd([e,t],"matMul");for(var a=n?e.shape[1]:e.shape[2],i=n?e.shape[2]:e.shape[1],s=r?t.shape[1]:t.shape[2],o=e.shape[0],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=n?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],h=c[0],d=c[1],p=c[2],f=r?[1,t.strides[1],t.strides[0]]:[t.strides[1],1,t.strides[0]],m=f[0],g=f[1],v=f[2],y=i*s,b=pa([o,i,s],e.dtype),x=b.values,w=this.blockSize,k=0;k<o;k++)for(var I=0;I<i;I+=w)for(var C=0;C<s;C+=w)for(var S=0;S<a;S+=w)for(var N=Math.min(I+w,i),T=Math.min(C+w,s),E=Math.min(S+w,a),R=I;R<N;R++)for(var A=C;A<T;A++){for(var D=0,F=S;F<E;F++)D+=u[k*h+R*d+F*p]*l[F*m+A*g+k*v];x[k*y+(R*s+A)]+=D}return b.toTensor()},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=this.batchMatMul(t,n,r,a);return i&&(u=this.add(u,i)),s&&(u=Hd(this,u,s,o)),u},t.prototype.multiply=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e*n-t*r,imag:e*r+t*n}})):this.broadcastedBinaryOp(e,t,pn(e.dtype,t.dtype),(function(e,t){return e*t}))},t.prototype.floorDiv=function(e,t){return Vd([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",(function(e,t){return Math.floor(e/t)}))},t.prototype.sum=function(e,t){Vd(e,"sum"),Lr("sum",t,e.rank);for(var n=Or(e.shape,t),r=n[0],a=n[1],i=ta(r,pn(e.dtype,"int32")),s=ht(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=0,d=0;d<s;++d)h+=u[c+d];o[l]=h}return i},t.prototype.prod=function(e,t){Vd(e,"sum");for(var n=Or(e.shape,t),r=n[0],a=n[1],i=ta(r,pn(e.dtype,"int32")),s=ht(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=1,d=0;d<s;++d)h*=u[c+d];o[l]=h}return i},t.prototype.unsortedSegmentSum=function(e,t,n){Vd(e,"unsortedSegmentSum");for(var r=[],a=e.rank-t.rank,i=0;i<a;++i)t=t.expandDims(i+1);for(i=0;i<n;++i){var s=Xr(i,"int32"),o=Nc(s,t).asType("float32").mul(e).sum(0);r.push(o)}return ka(r)},t.prototype.argMin=function(e,t){Vd(e,"argMin");var n=[t];Lr("argMin",n,e.rank);for(var r=Or(e.shape,n),a=r[0],i=r[1],s=ta(a,"int32"),o=ht(i),u=this.readSync(s.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,d=l[h],p=0,f=0;f<o;++f){var m=l[h+f];m<d&&(d=m,p=f)}u[c]=p}return s},t.prototype.argMax=function(e,t){Vd(e,"argMax");var n=[t];Lr("argMax",n,e.rank);for(var r=Or(e.shape,n),a=r[0],i=r[1],s=ta(a,"int32"),o=ht(i),u=this.readSync(s.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,d=l[h],p=0,f=0;f<o;++f){var m=l[h+f];m>d&&(d=m,p=f)}u[c]=p}return s},t.prototype.cumsum=function(e,t,n,r){if(Vd(e,"cumsum"),t!==e.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(e.rank-1)+" but got axis="+t);for(var a=pn(e.dtype,"int32"),i=ta(e.shape,a),s=this.readSync(i.dataId),o=this.readSync(e.dataId),u=e.shape[e.rank-1],l=r?function(e,t){return e+u-t-1}:function(e,t){return e+t},c=0;c<o.length;c+=u)for(var h=0;h<u;h++){var d=l(c,h);if(0===h)s[d]=n?0:o[d];else{var p=l(c,h-1);s[d]=n?o[p]+s[p]:o[d]+s[p]}}return i},t.prototype.equal=function(e,t){return Vd([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e===t?1:0}))},t.prototype.notEqual=function(e,t){return Vd([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e!==t?1:0}))},t.prototype.less=function(e,t){return Vd([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<t?1:0}))},t.prototype.lessEqual=function(e,t){return Vd([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<=t?1:0}))},t.prototype.greater=function(e,t){return Vd([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>t?1:0}))},t.prototype.greaterEqual=function(e,t){return Vd([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>=t?1:0}))},t.prototype.logicalNot=function(e){Vd(e,"logicalNot");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t[r]?0:1;return this.makeOutput(n,e.shape,"bool")},t.prototype.logicalAnd=function(e,t){return Vd([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e&&t}))},t.prototype.logicalOr=function(e,t){return Vd([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e||t}))},t.prototype.select=function(e,t,n){Vd([e,t,n],"select");for(var r=this.readSync(e.dataId),a=this.readSync(t.dataId),i=this.readSync(n.dataId),s=ta(t.shape,pn(t.dtype,n.dtype)),o=this.readSync(s.dataId),u=0,l=0===e.rank||e.rank>1||1===t.rank?1:ht(t.shape.slice(1)),c=0;c<r.length;c++)for(var h=0;h<l;h++)1===r[c]?o[u++]=a[c]:o[u++]=i[c];return s},t.prototype.where=function(e){Vd([e],"where");var t=this.readSync(e.dataId);return $s(e.shape,t)},t.prototype.topk=function(e,t,n){return Vd(e,"topk"),_s(this.readSync(e.dataId),e.shape,e.dtype,t)},t.prototype.min=function(e,t){Vd(e,"min"),Lr("min",t,e.rank);for(var n=Or(e.shape,t),r=n[0],a=n[1],i=ta(r,e.dtype),s=ht(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];p<h&&(h=p)}o[l]=h}return i},t.prototype.minimum=function(e,t){return Vd([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.min(e,t)}))},t.prototype.mod=function(e,t){return Vd([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))},t.prototype.max=function(e,t){Vd(e,"max"),Lr("max",t,e.rank);for(var n=Or(e.shape,t),r=n[0],a=n[1],i=ta(r,e.dtype),s=ht(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];p>h&&(h=p)}o[l]=h}return i},t.prototype.maximum=function(e,t){return Vd([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.max(e,t)}))},t.prototype.all=function(e,t){Vd(e,"all"),Lr("all",t,e.rank);for(var n=Or(e.shape,t),r=n[0],a=n[1],i=ta(r,e.dtype),s=ht(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];h=h&&p}o[l]=h}return i},t.prototype.any=function(e,t){Vd(e,"any"),Lr("any",t,e.rank);for(var n=Or(e.shape,t),r=n[0],a=n[1],i=ta(r,e.dtype),s=ht(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];h=h||p}o[l]=h}return i},t.prototype.squaredDifference=function(e,t){return Vd([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e-t;return n*n}))},t.prototype.ceil=function(e){Vd(e,"ceil");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.ceil(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.floor=function(e){Vd(e,"floor");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.floor(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.sign=function(e){Vd(e,"x");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)t[r]<0?n[r]=-1:t[r]>0?n[r]=1:n[r]=0;return this.makeOutput(n,e.shape,"float32")},t.prototype.isNaN=function(e){Vd(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isNaN(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isInf=function(e){Vd(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Math.abs(t[r])===1/0&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isFinite=function(e){Vd(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isFinite(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.round=function(e){Vd(e,"round");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=Math.floor(t[r]);t[r]-a<.5?n[r]=Math.floor(t[r]):t[r]-a>.5?n[r]=Math.ceil(t[r]):n[r]=a%2==0?a:a+1}return this.makeOutput(n,e.shape,"float32")},t.prototype.exp=function(e){Vd(e,"exp");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.exp(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.expm1=function(e){Vd(e,"expm1");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.expm1(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.log=function(e){Vd(e,"log");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.log1p=function(e){Vd(e,"log1p");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log1p(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.sqrt=function(e){Vd(e,"sqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.rsqrt=function(e){Vd(e,"rsqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=1/Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.reciprocal=function(e){Vd(e,"reciprocal");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=1/t[r];return this.makeOutput(n,e.shape,"float32")},t.prototype.linear=function(e){return e},t.prototype.relu=function(e){Vd(e,"relu");for(var t=ta(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.max(0,r[a]);return t},t.prototype.relu6=function(e){Vd(e,"relu");for(var t=ta(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.min(Math.max(0,r[a]),6);return t},t.prototype.prelu=function(e,t){return Vd([e,t],"prelu"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return e<0?t*e:e}))},t.prototype.elu=function(e){Vd(e,"elu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?a:Math.exp(a)-1}return this.makeOutput(t,e.shape,"float32")},t.prototype.eluDer=function(e,t){Vd([e,t],"eluDer");for(var n=new Float32Array(t.size),r=this.readSync(t.dataId),a=this.readSync(e.dataId),i=0;i<r.length;++i){var s=r[i];n[i]=s>=1?a[i]:a[i]*(s+1)}return this.makeOutput(n,t.shape,"float32")},t.prototype.selu=function(e){Vd(e,"selu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?1.0507009873554805*a:1.7580993408473768*(Math.exp(a)-1)}return this.makeOutput(t,e.shape,"float32")},t.prototype.clip=function(e,t,n){Vd(e,"clip");for(var r=new Float32Array(e.size),a=this.readSync(e.dataId),i=0;i<a.length;++i){var s=a[i];r[i]=s>n?n:s<t?t:s}return this.makeOutput(r,e.shape,"float32")},t.prototype.abs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.abs(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.complexAbs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<e.size;++r){var a=n[2*r],i=n[2*r+1];t[r]=Math.hypot(a,i)}return this.makeOutput(t,e.shape,"float32")},t.prototype.int=function(e){Vd(e,"int");for(var t=new Int32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=n[r];return this.makeOutput(t,e.shape,"int32")},t.prototype.sigmoid=function(e){Vd(e,"sigmoid");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=1/(1+Math.exp(-n[r]));return this.makeOutput(t,e.shape,"float32")},t.prototype.softplus=function(e){Vd(e,"softplus");for(var t=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var i,s=r[a]>-t,o=r[a]<t,u=Math.exp(r[a]);i=o?u:s?r[a]:Math.log(1+u),n[a]=i}return this.makeOutput(n,e.shape,"float32")},t.prototype.sin=function(e){Vd(e,"sin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cos=function(e){Vd(e,"cos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tan=function(e){Vd(e,"tan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.tan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asin=function(e){Vd(e,"asin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acos=function(e){Vd(e,"acos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan=function(e){Vd(e,"atan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan2=function(e,t){return Vd([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.atan2(e,t)}))},t.prototype.sinh=function(e){Vd(e,"sinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cosh=function(e){Vd(e,"cosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tanh=function(e){Vd(e,"tanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=ft(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asinh=function(e){Vd(e,"asinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acosh=function(e){Vd(e,"acosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atanh=function(e){Vd(e,"atanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atanh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.erf=function(e){Vd(e,"erf");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=Math.sign(n[r]),i=Math.abs(n[r]),s=1/(1+.3275911*i);t[r]=a*(1-((((1.061405429*s-1.453152027)*s+1.421413741)*s-.284496736)*s+.254829592)*s*Math.exp(-i*i))}return this.makeOutput(t,e.shape,"float32")},t.prototype.step=function(e,t){void 0===t&&(t=0),Vd(e,"step");for(var n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var i=r[a];isNaN(i)?n[a]=NaN:n[a]=i>0?1:t}return this.makeOutput(n,e.shape,"float32")},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights,o=this.conv2d(t,n,r);return a&&(o=this.add(o,a)),i&&(o=Hd(this,o,i,s)),o},t.prototype.conv2d=function(e,t,n){Vd([e,t],"conv2d");for(var r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,s=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l="channelsLast"===n.dataFormat,c=pa(n.outShape,e.dtype),h=e.strides[0],d=l?e.strides[1]:e.strides[2],p=l?e.strides[2]:1,f=l?1:e.strides[1],m=c.strides[0],g=l?c.strides[1]:c.strides[2],v=l?c.strides[2]:1,y=l?1:c.strides[1],b=this.readSync(e.dataId),x=this.readSync(t.dataId),w=c.values,k=0;k<n.batchSize;++k)for(var I=k*h,C=k*m,S=0;S<n.outHeight;++S)for(var N=C+S*g,T=S*n.strideHeight-u,E=0;E<r;E++){var R=T+E*i;if(!(R<0||R>=n.inHeight))for(var A=E*t.strides[0],D=I+R*d,F=0;F<n.outWidth;++F)for(var _=N+F*v,$=F*n.strideWidth-o,O=0;O<a;O++){var M=$+O*s;if(!(M<0||M>=n.inWidth))for(var L=D+M*p,P=A+O*t.strides[1],B=0;B<n.inChannels;++B){for(var z=b[L+B*f],W=0;W<n.outChannels;++W)w[_+W*y]+=z*x[P+W];P+=n.outChannels}}}return c.toTensor()},t.prototype.conv3d=function(e,t,n){for(var r=n.filterDepth,a=n.filterHeight,i=n.filterWidth,s=n.dilationDepth,o=n.dilationHeight,u=n.dilationWidth,l=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=pa(n.outShape,e.dtype),p=this.readSync(e.dataId),f=this.readSync(t.dataId),m=d.values,g=0;g<n.batchSize;++g)for(var v=g*e.strides[0],y=g*d.strides[0],b=0;b<n.outDepth;++b)for(var x=y+b*d.strides[1],w=b*n.strideDepth-l,k=0;k<r;k++){var I=w+k*s;if(!(I<0||I>=n.inDepth))for(var C=k*t.strides[0],S=v+I*e.strides[1],N=0;N<n.outHeight;++N)for(var T=x+N*d.strides[2],E=N*n.strideHeight-h,R=0;R<a;R++){var A=E+R*o;if(!(A<0||A>=n.inHeight))for(var D=C+R*t.strides[1],F=S+A*e.strides[2],_=0;_<n.outWidth;++_)for(var $=T+_*n.outChannels,O=_*n.strideWidth-c,M=0;M<i;M++){var L=O+M*u;if(!(L<0||L>=n.inWidth))for(var P=D+M*t.strides[2],B=F+L*n.inChannels,z=P,W=0;W<n.inChannels;++W){for(var V=p[B+W],U=0;U<n.outChannels;++U)m[$+U]+=V*f[z+U];z+=n.outChannels}}}}return d.toTensor()},t.prototype.conv2dDerInput=function(e,t,n){Vd([e,t],"conv2dDerInput");for(var r=pa(n.inShape,"float32"),a=r.values,i=this.readSync(e.dataId),s=this.readSync(t.dataId),o=t.strides,u=o[0],l=o[1],c=o[2],h=n.batchSize,d=n.filterHeight,p=n.filterWidth,f=n.inChannels,m=n.inHeight,g=n.inWidth,v=n.outChannels,y=n.outHeight,b=n.outWidth,x=n.strideHeight,w=n.strideWidth,k=n.dataFormat,I=d-1-n.padInfo.top,C=p-1-n.padInfo.left,S="channelsLast"===k,N=r.strides[0],T=S?r.strides[1]:r.strides[2],E=S?r.strides[2]:1,R=S?1:r.strides[1],A=e.strides[0],D=S?e.strides[1]:e.strides[2],F=S?e.strides[2]:1,_=S?1:e.strides[1],$=0;$<h;++$)for(var O=0;O<f;++O)for(var M=0;M<m;++M)for(var L=M-I,P=Math.max(0,Math.ceil(L/x)),B=Math.min(y,(d+L)/x),z=0;z<g;++z){for(var W=z-C,V=Math.max(0,Math.ceil(W/w)),U=Math.min(b,(p+W)/w),G=0,H=P;H<B;++H)for(var j=H*x-L,q=V;q<U;++q)for(var K=A*$+D*H+F*q,X=u*(d-1-j)+l*(p-1-(q*w-W))+c*O,Y=0;Y<v;++Y)G+=i[K+_*Y]*s[X+Y];a[N*$+T*M+E*z+R*O]=G}return r.toTensor()},t.prototype.conv3dDerInput=function(e,t,n){for(var r=pa(n.inShape,"float32"),a=r.values,i=r.strides,s=i[0],o=i[1],u=i[2],l=i[3],c=this.readSync(e.dataId),h=e.strides,d=h[0],p=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=n.batchSize,I=n.filterDepth,C=n.filterHeight,S=n.filterWidth,N=n.inChannels,T=n.inDepth,E=n.inHeight,R=n.inWidth,A=n.outChannels,D=n.outDepth,F=n.outHeight,_=n.outWidth,$=n.strideDepth,O=n.strideHeight,M=n.strideWidth,L=I-1-n.padInfo.front,P=C-1-n.padInfo.top,B=S-1-n.padInfo.left,z=0;z<k;++z)for(var W=0;W<N;++W)for(var V=0;V<T;++V)for(var U=V-L,G=Math.max(0,Math.ceil(U/$)),H=Math.min(D,(I+U)/$),j=0;j<E;++j)for(var q=j-P,K=Math.max(0,Math.ceil(q/O)),X=Math.min(F,(C+q)/O),Y=0;Y<R;++Y){for(var Q=Y-B,J=Math.max(0,Math.ceil(Q/M)),Z=Math.min(_,(S+Q)/M),ee=0,te=G;te<H;++te)for(var ne=te*$-U,re=K;re<X;++re)for(var ae=re*O-q,ie=J;ie<Z;++ie)for(var se=d*z+p*te+f*re+m*ie,oe=y*(I-1-ne)+b*(C-1-ae)+x*(S-1-(ie*M-Q))+w*W,ue=0;ue<A;++ue)ee+=c[se+ue]*g[oe+ue];a[s*z+o*V+u*j+l*Y+W]=ee}return r.toTensor()},t.prototype.conv2dDerFilter=function(e,t,n){Vd([e,t],"conv2dDerFilter");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o="channelsLast"===n.dataFormat,u=pa(n.filterShape,"float32"),l=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(e),d=this.bufferSync(t),p=0;p<i;++p)for(var f=Math.max(0,Math.ceil((c-p)/r)),m=Math.min(n.outHeight,(n.inHeight+c-p)/r),g=0;g<s;++g)for(var v=Math.max(0,Math.ceil((l-g)/a)),y=Math.min(n.outWidth,(n.inWidth+l-g)/a),b=0;b<n.inChannels;++b)for(var x=0;x<n.outChannels;++x){for(var w=0,k=0;k<n.batchSize;++k)for(var I=f;I<m;++I)for(var C=p+I*r-c,S=v;S<y;++S){var N=g+S*a-l;w+=o?h.get(k,C,N,b)*d.get(k,I,S,x):h.get(k,b,C,N)*d.get(k,x,I,S)}u.set(w,p,g,b,x)}return u.toTensor()},t.prototype.conv3dDerFilter=function(e,t,n){for(var r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,s=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=pa(n.filterShape,"float32"),c=l.values,h=l.strides,d=h[0],p=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=this.readSync(e.dataId),I=e.strides,C=I[0],S=I[1],N=I[2],T=I[3],E=n.padInfo.front,R=n.padInfo.left,A=n.padInfo.top,D=0;D<s;++D)for(var F=Math.max(0,Math.ceil((E-D)/r)),_=Math.min(n.outDepth,(n.inDepth+E-D)/r),$=D*d,O=0;O<o;++O)for(var M=Math.max(0,Math.ceil((A-O)/a)),L=Math.min(n.outHeight,(n.inHeight+A-O)/a),P=O*p+$,B=0;B<u;++B)for(var z=Math.max(0,Math.ceil((R-B)/i)),W=Math.min(n.outWidth,(n.inWidth+R-B)/i),V=B*f+P,U=0;U<n.inChannels;++U)for(var G=U*m+V,H=0;H<n.outChannels;++H){for(var j=0,q=0;q<n.batchSize;++q)for(var K=q*C,X=q*y,Y=F;Y<_;++Y)for(var Q=(D+Y*r-E)*S+K,J=Y*b+X,Z=M;Z<L;++Z)for(var ee=(O+Z*a-A)*N+Q,te=Z*x+J,ne=z;ne<W;++ne){var re=ne*w+te;j+=k[(B+ne*i-R)*T+ee+U]*g[re+H]}c[G+H]=j}return l.toTensor()},t.prototype.fusedDepthwiseConv2D=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights,o=this.depthwiseConv2D(t,n,r);return a&&(o=this.add(o,a)),i&&(o=Hd(this,o,i,s)),o},t.prototype.depthwiseConv2D=function(e,t,n){Vd([e,t],"depthwiseConv2D");for(var r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,s=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l=n.outChannels/n.inChannels,c=pa(n.outShape,e.dtype),h=this.readSync(e.dataId),d=this.readSync(t.dataId),p=c.values,f=0;f<n.batchSize;++f)for(var m=f*e.strides[0],g=f*c.strides[0],v=0;v<n.outHeight;++v)for(var y=g+v*c.strides[1],b=v*n.strideHeight-o,x=0;x<r;++x){var w=b+x*i;if(!(w<0||w>=n.inHeight))for(var k=x*t.strides[0],I=m+w*e.strides[1],C=0;C<n.outWidth;++C)for(var S=y+C*c.strides[2],N=C*n.strideWidth-u,T=0;T<a;++T){var E=N+T*s;if(!(E<0||E>=n.inWidth))for(var R=k+T*t.strides[1],A=I+E*n.inChannels,D=S,F=R,_=0;_<n.inChannels;++_){for(var $=h[A+_],O=0;O<l;++O)p[D+O]+=$*d[F+O];D+=l,F+=l}}}return c.toTensor()},t.prototype.depthwiseConv2DDerInput=function(e,t,n){Vd([e,t],"depthwiseConv2DDerInput");for(var r=pa(n.inShape,"float32"),a=r.values,i=r.strides,s=i[0],o=i[1],u=i[2],l=this.readSync(e.dataId),c=e.strides,h=c[0],d=c[1],p=c[2],f=this.readSync(t.dataId),m=t.strides,g=m[0],v=m[1],y=m[2],b=n.batchSize,x=n.filterHeight,w=n.filterWidth,k=n.inChannels,I=n.inHeight,C=n.inWidth,S=n.outChannels,N=n.outHeight,T=n.outWidth,E=n.strideHeight,R=n.strideWidth,A=x-1-n.padInfo.top,D=w-1-n.padInfo.left,F=S/k,_=0;_<b;++_)for(var $=0;$<k;++$)for(var O=0;O<I;++O)for(var M=O-A,L=Math.max(0,Math.ceil(M/E)),P=Math.min(N,(x+M)/E),B=0;B<C;++B){for(var z=B-D,W=Math.max(0,Math.ceil(z/R)),V=Math.min(T,(w+z)/R),U=0,G=L;G<P;++G)for(var H=G*E-M,j=W;j<V;++j)for(var q=h*_+d*G+p*j,K=g*(x-1-H)+v*(w-1-(j*R-z))+y*$,X=0;X<F;++X)U+=l[q+($*F+X)]*f[K+X];a[s*_+o*O+u*B+$]=U}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){Vd([e,t],"depthwiseConv2DDerFilter");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o=pa(n.filterShape,"float32"),u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(e),d=this.bufferSync(t),p=0;p<i;++p)for(var f=Math.max(0,Math.ceil((l-p)/r)),m=Math.min(n.outHeight,(n.inHeight+l-p)/r),g=0;g<s;++g)for(var v=Math.max(0,Math.ceil((u-g)/a)),y=Math.min(n.outWidth,(n.inWidth+u-g)/a),b=0;b<n.outChannels;++b){for(var x=Math.trunc(b/c),w=b%c,k=0,I=0;I<n.batchSize;++I)for(var C=f;C<m;++C)for(var S=p+C*r-l,N=v;N<y;++N){var T=g+N*a-u;k+=h.get(I,S,T,x)*d.get(I,C,N,b)}o.set(k,p,g,x,w)}return o.toTensor()},t.prototype.tile=function(e,t){return Vd(e,"tile"),Fs(this.bufferSync(e),t)},t.prototype.pad=function(e,t,n){Vd(e,"pad");var r=t.map((function(t,n){return t[0]+e.shape[n]+t[1]})),a=t.map((function(e){return e[0]})),i=this.bufferSync(e),s=pa(r,e.dtype);0!==n&&s.values.fill(n);for(var o=0;o<e.size;o++){var u=i.indexToLoc(o),l=u.map((function(e,t){return e+a[t]}));s.set.apply(s,[i.get.apply(i,u)].concat(l))}return s.toTensor()},t.prototype.gather=function(e,t,n){Vd([e,t],"gather");var r=e.shape.slice(),a=this.readSync(t.dataId);r[n]=a.length;for(var i=pa(r,e.dtype),s=this.bufferSync(e),o=0;o<i.size;++o){var u=i.indexToLoc(o),l=u.slice();l[n]=a[u[n]];var c=s.locToIndex(l);i.values[o]=s.values[c]}return i.toTensor()},t.prototype.batchToSpaceND=function(e,t,n){Vd([e],"batchToSpaceND");var r=t.reduce((function(e,t){return e*t})),a=Sa(e.shape,t,r),i=Na(a.length,t.length),s=Ta(e.shape,t,r),o=Ea(n,t.length),u=Ra(s,n,t.length);return es(e.reshape(a),i).reshape(s).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){Vd([e],"spaceToBatchND");var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var i=1+t.length;i<e.shape.length;++i)a.push([0,0]);var s=e.pad(a),o=Sa(s.shape,t,r,!1),u=Na(o.length,t.length,!1),l=Ta(s.shape,t,r,!1);return es(s.reshape(o),u).reshape(l)},t.prototype.maxPool=function(e,t){return Vd(e,"maxPool"),Ud(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"max").toTensor()},t.prototype.maxPoolBackprop=function(e,t,n,r){Vd([t,n],"maxPoolBackprop");for(var a=this.readSync(t.dataId),i=pa(r.outShape,t.dtype,Gd(a,t.shape,t.dtype,r).values),s=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=pa(t.shape,"float32"),m=this.bufferSync(e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.inHeight;++y)for(var b=0;b<r.inWidth;++b){for(var x=y-p,w=b-d,k=0,I=0;I<c;I+=u){var C=(x+I)/s;if(!(C<0||C>=r.outHeight||Math.floor(C)!==C))for(var S=0;S<h;S+=l){var N=(w+S)/o;if(!(N<0||N>=r.outWidth||Math.floor(N)!==N)){var T=c*h-1-i.get(g,C,N,v)===I*h+S?1:0;0!==T&&(k+=m.get(g,C,N,v)*T)}}}f.set(k,g,y,b,v)}return f.toTensor()},t.prototype.avgPoolBackprop=function(e,t,n){Vd([e,t],"avgPoolBackprop");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o=n.dilationHeight,u=n.dilationWidth,l=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=l-1-n.padInfo.top,p=pa(t.shape,"float32"),f=1/(i*s),m=this.bufferSync(e),g=0;g<n.batchSize;++g)for(var v=0;v<n.inChannels;++v)for(var y=0;y<n.inHeight;++y)for(var b=0;b<n.inWidth;++b){for(var x=y-d,w=b-h,k=0,I=0;I<l;I+=o){var C=(x+I)/r;if(!(C<0||C>=n.outHeight||Math.floor(C)!==C))for(var S=0;S<c;S+=u){var N=(w+S)/a;N<0||N>=n.outWidth||Math.floor(N)!==N||(k+=m.get(g,C,N,v))}}p.set(k*f,g,y,b,v)}return p.toTensor()},t.prototype.pool3d=function(e,t,n){Vd(e,"pool3d");for(var r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(e.dataId),v=pa(t.outShape,e.dtype),y=v.values,b=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],x=t.outShape[2]*t.outShape[3]*t.outShape[4],w=t.outShape[3]*t.outShape[4],k=t.outShape[4],I=0;I<t.batchSize;++I)for(var C=I*b,S=I*e.strides[0],N=0;N<t.inChannels;++N)for(var T=0;T<t.outDepth;++T){for(var E=T*r-d,R=E;R<0;)R+=s;for(var A=Math.min(t.inDepth,l+E),D=C+T*x,F=0;F<t.outHeight;++F){for(var _=F*a-p,$=_;$<0;)$+=o;for(var O=Math.min(t.inHeight,c+_),M=D+F*w,L=0;L<t.outWidth;++L){for(var P=L*i-f,B=P;B<0;)B+=u;for(var z=Math.min(t.inWidth,h+P),W=M+L*k,V=m,U=0,G=0,H=R;H<A;H+=s){for(var j=S+H*e.strides[1],q=$;q<O;q+=o){for(var K=j+q*e.strides[2],X=B;X<z;X+=u){var Y=g[K+X*e.strides[3]+N];if("max"===n&&Y>V?V=Y:"avg"===n&&(U+=Y,G++),isNaN(V))break}if(isNaN(V))break}if(isNaN(V))break}y[W+N]="avg"===n?U/G:V}}}return v.toTensor()},t.prototype.avgPool3d=function(e,t){return Vd(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()},t.prototype.avgPool3dBackprop=function(e,t,n){Vd([e,t],"avgPool3dBackprop");for(var r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,s=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=d-1-n.padInfo.front,g=f-1-n.padInfo.left,v=p-1-n.padInfo.top,y=pa(t.shape,"float32"),b=1/(s*o*u),x=this.bufferSync(e),w=0;w<n.batchSize;++w)for(var k=0;k<n.inChannels;++k)for(var I=0;I<n.inDepth;++I)for(var C=0;C<n.inHeight;++C)for(var S=0;S<n.inWidth;++S){for(var N=I-m,T=C-v,E=S-g,R=0,A=0;A<d;A+=l){var D=(N+A)/r;if(!(D<0||D>=n.outDepth||Math.floor(D)!==D))for(var F=0;F<p;F+=c){var _=(T+F)/a;if(!(_<0||_>=n.outHeight||Math.floor(_)!==_))for(var $=0;$<f;$+=h){var O=(E+$)/i;O<0||O>=n.outWidth||Math.floor(O)!==O||(R+=x.get(w,D,_,O,k))}}}y.set(R*b,w,I,C,S,k)}return y.toTensor()},t.prototype.maxPool3d=function(e,t){return Vd(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()},t.prototype.maxPool3dPositions=function(e,t){for(var n=pa(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m=this.bufferSync(e),g=0;g<t.batchSize;++g)for(var v=0;v<t.inChannels;++v)for(var y=0;y<t.outDepth;++y){for(var b=y*r-d,x=b;x<0;)x+=s;for(var w=Math.min(t.inDepth,l+b),k=0;k<t.outHeight;++k){for(var I=k*a-p,C=I;C<0;)C+=o;for(var S=Math.min(t.inHeight,c+I),N=0;N<t.outWidth;++N){for(var T=N*i-f,E=T;E<0;)E+=u;for(var R=Math.min(t.inWidth,h+T),A=Number.NEGATIVE_INFINITY,D=-1,F=x;F<w;F+=s)for(var _=F-b,$=C;$<S;$+=o)for(var O=$-I,M=E;M<R;M+=u){var L=M-T,P=m.get(g,F,$,M,v);P>=A&&(A=P,D=_*c*h+O*c+L)}n.set(D,g,y,k,N,v)}}}return n.toTensor()},t.prototype.maxPool3dBackprop=function(e,t,n,r){Vd([t,n],"maxPool3dBackprop");for(var a=this.maxPool3dPositions(t,r),i=r.strideDepth,s=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=p-1-r.padInfo.left,g=d-1-r.padInfo.top,v=pa(t.shape,"float32"),y=this.bufferSync(a),b=this.bufferSync(e),x=0;x<r.batchSize;++x)for(var w=0;w<r.inChannels;++w)for(var k=0;k<r.inDepth;++k)for(var I=0;I<r.inHeight;++I)for(var C=0;C<r.inWidth;++C){for(var S=k-f,N=I-g,T=C-m,E=0,R=0;R<h;R+=u){var A=(S+R)/i;if(!(A<0||A>=r.outDepth||Math.floor(A)!==A))for(var D=0;D<d;D+=l){var F=(N+D)/s;if(!(F<0||F>=r.outHeight||Math.floor(F)!==F))for(var _=0;_<p;_+=c){var $=(T+_)/o;if(!($<0||$>=r.outWidth||Math.floor($)!==$)){var O=h*d*p-1-y.get(x,A,F,$,w)===R*d*p+D*p+_?1:0;0!==O&&(E+=b.get(x,A,F,$,w)*O)}}}}v.set(E,x,k,I,C,w)}return v.toTensor()},t.prototype.cast=function(e,t){return gs(e,t,this)},t.prototype.reshape=function(e,t){return vs(e,t)},t.prototype.avgPool=function(e,t){return Vd(e,"avgPool"),Vd(e,"maxPool"),Ud(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"avg").toTensor().toFloat()},t.prototype.resizeBilinear=function(e,t,n,r){Vd(e,"resizeBilinear");for(var a=e.shape,i=a[0],s=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(ht([i,t,n,u])),h=[r&&t>1?s-1:s,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=0,f=h[0]/d[0],m=h[1]/d[1],g=0;g<i;g++)for(var v=0;v<t;v++)for(var y=f*v,b=Math.floor(y),x=y-b,w=Math.min(s-1,Math.ceil(y)),k=g*e.strides[0]+b*e.strides[1],I=g*e.strides[0]+w*e.strides[1],C=0;C<n;C++)for(var S=m*C,N=Math.floor(S),T=S-N,E=Math.min(o-1,Math.ceil(S)),R=k+N*e.strides[2],A=I+N*e.strides[2],D=k+E*e.strides[2],F=I+E*e.strides[2],_=0;_<u;_++){var $=l[R+_],O=l[A+_],M=$+(l[D+_]-$)*T,L=M+(O+(l[F+_]-O)*T-M)*x;c[p++]=L}return qr(c,[i,t,n,u])},t.prototype.resizeBilinearBackprop=function(e,t,n){Vd([e,t],"resizeBilinearBackprop");for(var r=t.shape,a=r[0],i=r[1],s=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*i*s*o),d=[n&&l>1?i-1:i,n&&c>1?s-1:s],p=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=d[0]/p[0],m=d[1]/p[1],g=this.readSync(e.dataId),v=0,y=0;y<a;y++)for(var b=y*t.strides[0],x=0;x<l;x++)for(var w=x*f,k=Math.floor(w),I=Math.min(Math.ceil(w),i-1),C=b+k*t.strides[1],S=b+I*t.strides[1],N=w-k,T=1-N,E=0;E<c;E++)for(var R=E*m,A=Math.floor(R),D=Math.min(Math.ceil(R),s-1),F=R-A,_=1-F,$=C+A*t.strides[2],O=C+D*t.strides[2],M=S+A*t.strides[2],L=S+D*t.strides[2],P=T*_,B=T*F,z=N*_,W=N*F,V=0;V<o;V++){var U=g[v++];h[$+V]+=U*P,h[O+V]+=U*B,h[M+V]+=U*z,h[L+V]+=U*W}return Zr(h,[a,s,i,o],t.dtype)},t.prototype.resizeNearestNeighbor=function(e,t,n,r){Vd(e,"resizeNearestNeighbor");for(var a=e.shape,i=a[0],s=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(i*t*n*u),h=[r&&t>1?s-1:s,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=h[0]/d[0],f=h[1]/d[1],m=0,g=0;g<i;g++)for(var v=g*e.strides[0],y=0;y<t;y++)for(var b=p*y,x=v+Math.min(s-1,r?Math.round(b):Math.floor(b))*e.strides[1],w=0;w<n;w++)for(var k=f*w,I=x+Math.min(o-1,r?Math.round(k):Math.floor(k))*e.strides[2],C=0;C<u;C++){var S=l[I+C];c[m++]=S}return qr(c,[i,t,n,u],e.dtype)},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){Vd([e,t],"resizeNearestNeighborBackprop");for(var r=t.shape,a=r[0],i=r[1],s=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*i*s*o),d=this.readSync(e.dataId),p=[n&&l>1?i-1:i,n&&c>1?s-1:s],f=[n&&l>1?l-1:l,n&&c>1?c-1:c],m=p[0]/f[0],g=p[1]/f[1],v=1/m,y=1/g,b=2*Math.ceil(v)+2,x=2*Math.ceil(y)+2,w=0;w<a;w++)for(var k=w*t.strides[0],I=0;I<i;I++)for(var C=k+I*t.strides[1],S=Math.floor(I*v),N=Math.floor(S-b/2),T=0;T<s;T++)for(var E=C+T*t.strides[2],R=Math.floor(T*y),A=Math.floor(R-x/2),D=0;D<o;D++){for(var F=0,_=0;_<b;_++){var $=_+N;if(!($<0||$>=l)){var O=k+$*e.strides[1],M=$*m;if(I===Math.min(i-1,n?Math.round(M):Math.floor(M)))for(var L=0;L<x;L++){var P=L+A;if(!(P<0||P>=c)){var B=O+P*e.strides[2],z=P*g;T===Math.min(s-1,n?Math.round(z):Math.floor(z))&&(F+=d[B+D])}}}}h[E+D]=F}return Zr(h,t.shape,t.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,i){Vd([e,t,n,a,i],"batchNorm");for(var s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=this.readSync(n.dataId),l=a?this.readSync(a.dataId):new Float32Array([1]),c=i?this.readSync(i.dataId):new Float32Array([0]),h=new Float32Array(s.length),d=c.length,p=l.length,f=u.length,m=o.length,g=0,v=0,y=0,b=0,x=0;x<s.length;++x)h[x]=c[g++]+(s[x]-o[v++])*l[y++]/Math.sqrt(u[b++]+r),g>=d&&(g=0),v>=m&&(v=0),y>=p&&(y=0),b>=f&&(b=0);return Zr(h,e.shape)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){Vd(e,"localResponseNormalization4D");var i=e.shape[3],s=i-1,o=this.readSync(e.dataId),u=e.size,l=new Float32Array(u);function c(e){for(var n=e%i,r=e-n+Math.max(0,n-t),a=e-n+Math.min(n+t,s),u=0;r<=a;r++){var l=o[r];u+=l*l}return u}for(var h=0;h<u;h++){var d=c(h),p=o[h]*Math.pow(n+r*d,-a);l[h]=p}return Zr(l,e.shape)},t.prototype.LRNGrad=function(e,t,n,r,a,i,s){Vd(e,"LRNGrad");for(var o=e.shape[3],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=this.readSync(n.dataId),h=new Float32Array(e.size),d=e.size,p=0;p<d;p++){for(var f=p%o,m=p-f+Math.max(0,f-r),g=p-f+Math.min(o,f+r+1),v=0,y=m;y<g;y++)v+=Math.pow(l[y],2);for(v=i*v+a,y=m;y<g;y++){var b=-2*i*s*l[y]*c[p]/v;p===y&&(b+=Math.pow(v,-s)),b*=u[p],h[y]+=b}}return Zr(h,e.shape)},t.prototype.multinomial=function(e,t,n,r){Vd(e,"multinomial");for(var a=t?e:Ji(e),i=a.shape[0],s=a.shape[1],o=ta([i,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(a.dataId),c=0;c<i;++c){var h=c*s,d=new Float32Array(s-1);d[0]=l[h];for(var p=1;p<d.length;++p)d[p]=d[p-1]+l[h+p];for(var f=Fl(r.toString()),m=c*n,g=0;g<n;++g){var v=f();u[m+g]=d.length;for(var y=0;y<d.length;y++)if(v<d[y]){u[m+g]=y;break}}}return o},t.prototype.oneHot=function(e,t,n,r){Vd(e,"oneHot");var a=new Float32Array(e.size*t);a.fill(r);for(var i=this.readSync(e.dataId),s=0;s<e.size;++s)i[s]>=0&&i[s]<t&&(a[s*t+i[s]]=n);return Qr(a,[e.size,t],"int32")},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return Vd(e,"nonMaxSuppression"),Ss(this.readSync(e.dataId),this.readSync(t.dataId),n,r,a)},t.prototype.fft=function(e){return this.fftBatch(e,!1)},t.prototype.ifft=function(e){return this.fftBatch(e,!0)},t.prototype.fftBatch=function(e,t){for(var n=e.shape[0],r=e.shape[1],a=pa(e.shape,"float32"),i=pa(e.shape,"float32"),s=Hr(e).as2D(n,r),o=jr(e).as2D(n,r),u=0;u<n;u++)for(var l=s.slice([u,0],[1,r]),c=o.slice([u,0],[1,r]),h=Gr(l,c),d=this.readSync(this.fftImpl(h,t).dataId),p=0;p<r;p++){var f=xs(d,p);a.values[u*r+p]=f.real,i.values[u*r+p]=f.imag}return Gr(a.toTensor(),i.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(e,t){var n=e.as1D(),r=n.size;if(this.isExponentOf2(r)){var a=this.fftRadix2(n,r,t).as2D(e.shape[0],e.shape[1]);return t&&(a=Gr(Hr(a).div(Xr(r)),jr(a).div(Xr(r)))),a}var i=this.readSync(e.dataId),s=function(e){for(var t=new Float32Array(e.length/2),n=new Float32Array(e.length/2),r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}(this.fourierTransformByMatmul(i,r,t));return Gr(s.real,s.imag).as2D(e.shape[0],e.shape[1])},t.prototype.isExponentOf2=function(e){return 0==(e&e-1)},t.prototype.fftRadix2=function(e,t,n){if(1===t)return e;var r=this.readSync(e.dataId),a=t/2,i=function(e){for(var t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),s=Gr(i.real,i.imag).as1D(),o=function(e){for(var t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),u=Gr(o.real,o.imag).as1D();s=this.fftRadix2(s,a,n),u=this.fftRadix2(u,a,n);var l=function(e,t){for(var n=new Float32Array(e/2),r=new Float32Array(e/2),a=0;a<Math.ceil(e/2);a++){var i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}(t,n),c=Gr(l.real,l.imag).mul(u),h=s.add(c),d=s.sub(c),p=Hr(h).concat(Hr(d)),f=jr(h).concat(jr(d));return Gr(p,f).as1D()},t.prototype.fourierTransformByMatmul=function(e,t,n){for(var r=new Float32Array(2*t),a=0;a<t;a++){for(var i=0,s=0,o=0;o<t;o++){var u=ks(a*o,t,n),l=xs(e,o);i+=l.real*u.real-l.imag*u.imag,s+=l.real*u.imag+l.imag*u.real}n&&(i/=t,s/=t),ws(r,i,s,a)}return r},t.prototype.depthToSpace=function(e,t,n){ot("NHWC"===n,(function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n})),ot(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));for(var r=e.shape[0],a=e.shape[1],i=e.shape[2],s=e.shape[3],o=a*t,u=i*t,l=s/(t*t),c=this.readSync(e.dataId),h=new Float32Array(r*o*u*l),d=0,p=0;p<r;++p)for(var f=0;f<o;++f)for(var m=Math.floor(f/t),g=f%t,v=0;v<u;++v)for(var y=Math.floor(v/t),b=(g*t+v%t)*l,x=0;x<l;++x){var w=x+b+s*(y+i*(m+a*p));h[d++]=c[w]}return Zr(h,[r,o,u,l])},t.prototype.broadcastedBinaryOp=function(e,t,n,r){var a=za(e.shape,t.shape),i=pa(a,n),s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Pa(e.shape,a),l=Pa(t.shape,a),c=i.values;if(u.length+l.length===0)for(var h=0;h<c.length;++h)c[h]=r(s[h%s.length],o[h%o.length]);else{var d=this.bufferSync(e),p=this.bufferSync(t),f=function(n){var a=i.indexToLoc(n),h=a.slice(-e.rank);u.forEach((function(e){return h[e]=0}));var f=d.locToIndex(h),m=a.slice(-t.rank);l.forEach((function(e){return m[e]=0}));var g=p.locToIndex(m);c[n]=r(s[f],o[g])};for(h=0;h<c.length;++h)f(h)}return i.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(e,t,n){var r=za(e.shape,t.shape),a=pa(r,"float32"),i=pa(r,"float32"),s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Pa(e.shape,r),l=Pa(t.shape,r),c=a.values,h=i.values;if(u.length+l.length===0)for(var d=0;d<c.length;d++){var p=d%s.length,f=d%o.length,m=n(s[2*p],s[2*p+1],o[2*f],o[2*f+1]);c[d]=m.real,h[d]=m.imag}else{var g=this.bufferSync(this.data.get(e.dataId).complexTensors.real),v=this.bufferSync(this.data.get(t.dataId).complexTensors.real),y=function(r){var i=a.indexToLoc(r),d=i.slice(-e.rank);u.forEach((function(e){return d[e]=0}));var p=g.locToIndex(d),f=i.slice(-t.rank);l.forEach((function(e){return f[e]=0}));var m=v.locToIndex(f),y=n(s[2*p],s[2*p+1],o[2*m],o[2*m+1]);c[r]=y.real,h[r]=y.imag};for(d=0;d<c.length;d++)y(d)}return this.complex(a.toTensor(),i.toTensor())},t.prototype.split=function(e,t,n){return Ds(e,t,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.epsilon=function(){return 1e-7},t.prototype.cropAndResize=function(e,t,n,r,a,i){for(var s=e.shape,o=s[0],u=s[1],l=s[2],c=s[3],h=t.shape[0],d=r[0],p=r[1],f=pa([h,d,p,c],"float32"),m=this.readSync(t.dataId),g=this.readSync(n.dataId),v=this.readSync(e.dataId),y=e.strides,b=f.strides,x=0;x<h;x++){var w=4*x,k=m[w],I=m[w+1],C=m[w+2],S=m[w+3],N=g[x];if(!(N>=o))for(var T=d>1?(C-k)*(u-1)/(d-1):0,E=p>1?(S-I)*(l-1)/(p-1):0,R=0;R<d;R++){var A=d>1?k*(u-1)+R*T:.5*(k+C)*(u-1);if(A<0||A>u-1)for(var D=0;D<p;D++)for(var F=0;F<c;F++){var _=F+D*b[2]+R*b[1]+x*b[0];f.values[_]=i}else if("bilinear"===a){var $=Math.floor(A),O=Math.ceil(A),M=A-$;for(D=0;D<p;D++)if((H=p>1?I*(l-1)+D*E:.5*(I+S)*(l-1))<0||H>l-1)for(F=0;F<c;F++)_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=i;else{var L=Math.floor(H),P=Math.ceil(H),B=H-L;for(F=0;F<c;F++){var z=v[_=F+L*y[2]+$*y[1]+N*y[0]],W=v[_=F+P*y[2]+$*y[1]+N*y[0]],V=v[_=F+L*y[2]+O*y[1]+N*y[0]],U=z+(W-z)*B,G=V+(v[_=F+P*y[2]+O*y[1]+N*y[0]]-V)*B;_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=U+(G-U)*M}}}else for(D=0;D<p;++D){var H;if((H=p>1?I*(l-1)+D*E:.5*(I+S)*(l-1))<0||H>l-1)for(F=0;F<c;F++)_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=i;else{var j=Math.round(H),q=Math.round(A);for(F=0;F<c;F++){var K=F+j*y[2]+q*y[1]+N*y[0],X=F+D*b[2]+R*b[1]+x*b[0];f.values[X]=v[K]}}}}}return f.toTensor()},t.prototype.sparseToDense=function(e,t,n,r){var a=Ui(0,e,n),i=a.sliceRank,s=a.numUpdates,o=a.sliceSize,u=a.strides,l=a.outputSize;return this.scatter(e,t,n,l,o,s,i,u,r,!1)},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=Bi(e,t),i=a[0],s=a[1],o=a[2],u=a[3];if(0===s)return qr([],i,e.dtype);for(var l=new Zt([s,o],e.dtype),c=this.readSync(t.dataId),h=this.readSync(e.dataId),d=0;d<s;d++){for(var p=[],f=0,m=0;m<r;m++){var g=c[d*r+m];f+=g*u[m],p.push(g)}if(f<0||f>=e.size/o)throw new Error("Invalid indices: "+p+" does not index into "+e.shape);for(var v=0;v<o;v++)l.values[d*o+v]=h[f*o+v]}return l.toTensor().reshape(i)},t.prototype.scatterND=function(e,t,n){var r=Ui(0,e,n),a=r.sliceRank,i=r.numUpdates,s=r.sliceSize,o=r.strides,u=r.outputSize,l=Xr(0);return this.scatter(e,t,n,u,s,i,a,o,l,!0)},t.prototype.fill=function(e,t,n){var r=kt(n=n||Ft(t),ht(e));return r.fill(t),xn.makeTensor(r,e,n,this)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){var t=kt(e.dtype,ht(e.shape));return this.makeOutput(t,e.shape,e.dtype)},t.prototype.linspace=function(e,t,n){return ys(e,t,n)},t.prototype.scatter=function(e,t,n,r,a,i,s,o,u,l){var c=[r/a,a],h=this.readSync(e.dataId),d=this.readSync(t.dataId);if(0===r)return qr([],n,t.dtype);var p=new Zt(c,t.dtype);p.values.fill(this.readSync(u.dataId)[0]);for(var f=0;f<i;f++){for(var m=[],g=0,v=0;v<s;v++){var y=h[f*s+v];m.push(y),g+=y*o[v]}if(g<0||g>=r/a)throw new Error("Invalid indices: "+m+" does not index into "+n);for(var b=0;b<a;b++)l?p.values[g*a+b]+=d[f*a+b]:p.values[g*a+b]=0===t.rank?d[0]:d[f*a+b]}return p.toTensor().reshape(n)},t}(ns);function qd(e,t){return{kernelName:e,backendName:"cpu",kernelFunc:function(n){var r=n.inputs,a=n.backend,i=r,s=i.a,o=i.b,u=a;Vd([s,o],e);var l=u.data.get(s.dataId).values,c=u.data.get(o.dataId).values,h=t(s.shape,o.shape,l,c,s.dtype),d=h[0],p=h[1];return{dataId:u.write(d,p,s.dtype),shape:p,dtype:s.dtype}}}}function Kd(e){return function(t,n,r,a,i){var s=za(t,n),o=s.length,u=Ot(s),l=wt(i,ht(s)),c=t.length,h=n.length,d=Ot(t),p=Ot(n),f=Pa(t,s),m=Pa(n,s);if(f.length+m.length===0)for(var g=0;g<l.length;++g)l[g]=e(r[g%r.length],a[g%a.length]);else{var v=function(t){var n=Ht(t,o,u),i=n.slice(-c);f.forEach((function(e){return i[e]=0}));var s=Gt(i,c,d),g=n.slice(-h);m.forEach((function(e){return g[e]=0}));var v=Gt(g,h,p);l[t]=e(r[s],a[v])};for(g=0;g<l.length;++g)v(g)}return[l,s]}}xn.registerBackend("cpu",(function(){return new jd}),1);var Xd=Kd((function(e,t){return e/t})),Yd=qd(Aa,Xd),Qd={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n,s=i.filterSize,o=i.strides,u=i.pad,l=i.includeBatchInIndex,c=r;Vd(a,"MaxPoolWithArgmax");var h=c.data.get(a.dataId).values,d=as(a.shape,s,o,[1,1],u),p=function(e,t,n,r,a){var i=Ud(e,0,n,Ot(t),a,"max"),s=Gd(e,t,n,a,!0,r);return[i.values,s.values]}(h,a.shape,a.dtype,l,d),f=p[0],m=p[1],g=c.write(f,d.outShape,a.dtype),v=c.write(m,d.outShape,a.dtype);return[{dataId:g,shape:d.outShape,dtype:a.dtype},{dataId:v,shape:d.outShape,dtype:"int32"}]}},Jd={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t,i=a.boxes,s=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,d=n;Vd(i,"NonMaxSuppressionWithScore");var p=Ns(d.data.get(i.dataId).values,d.data.get(s.dataId).values,u,l,c,h);return[p.selectedIndices,p.selectedScores]}},Zd={kernelName:"Square",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n;Vd(r,"square");for(var i=a.data.get(r.dataId).values,s=new Float32Array(i.length),o=0;o<i.length;++o){var u=i[o];s[o]=u*u}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ep=Kd((function(e,t){var n=e-t;return n*n}));function tp(e,t,n,r,a){for(var i=ht(t),s=t.length,o=Ot(t),u=Ot(a),l=wt(n,ht(a)),c=0;c<i;++c){for(var h=Ht(c,s,o),d=new Array(h.length),p=0;p<d.length;p++)d[p]=h[r[p]];l[Gt(d,s,u)]=e[c]}return l}for(var np=0,rp=[Jd,Zd,qd(Da,ep),Yd,{kernelName:"Transpose",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n.perm,s=r;Vd(a,"transpose");for(var o=a.shape.length,u=new Array(o),l=0;l<u.length;l++)u[l]=a.shape[i[l]];var c=tp(s.data.get(a.dataId).values,a.shape,a.dtype,i,u);return{dataId:s.write(c,u,a.dtype),shape:u,dtype:a.dtype}}},Qd];np<rp.length;np++)et(rp[np]);for(var ap,ip=function(e){this.variableNames=["A"];var t=zs(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+r+".0, "+n+".0);\n\n        vec4 values = "+t.texture2D+"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    "},sp=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=zs(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2("+r+".0, "+n+".0);\n            vec4 values = "+t.texture2D+"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        "+t.output+" = result;\n      }\n    "},op=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;var a=Zs(this.rank),i=function(e){var t=e.length;if(t>6)throw Error("Transpose for rank "+t+" is not yet supported");for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t),a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode="\n    void main() {\n      "+a+" resRC = getOutputCoords();\n      setOutput(getA("+i+"));\n    }\n    "},up=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var a=Zs(this.rank),i=Ps("rc",this.rank),s=new Array(this.rank);for(r=0;r<t.length;r++)s[t[r]]=i[r];var o="vec2("+s.slice(-2).join()+")",u="++"+i[this.rank-1]+" < "+n[this.rank-1],l="getChannel(getA("+s.join()+"), "+o+")";this.userCode="\n    void main() {\n      "+a+" rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = "+l+";\n      if("+u+") {\n        result[1] = "+l+";\n      }\n      --"+i[this.rank-1]+";\n      if(++"+i[this.rank-2]+" < "+n[this.rank-2]+") {\n        result[2] = "+l+";\n        if("+u+") {\n          result[3] = "+l+";\n        }\n      }\n      setOutput(result);\n    }\n    "},lp=0,cp=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t.pixels,i=r.numChannels,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,u=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=u[0],c=u[1],h=[c,l],d=[c,l,i];(o||s)&&(null==ap&&(ap=document.createElement("canvas").getContext("2d")),ap.canvas.width=l,ap.canvas.height=c,ap.drawImage(a,0,0,l,c),a=ap.canvas);var p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=Cn.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);var f=qe().getBool("WEBGL_PACK")?new sp(d):new ip(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}},{kernelName:Aa,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t;return function(e,t,n){var r=new po("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",e.shape,t.shape);return qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new mo("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",e.shape,t.shape,!0)),n.runWebGLProgram(r,[e,t],"float32")}(r.a,r.b,n)}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs;Er("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var a=t,i=a.boxes,s=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,d=n,p=Ns(d.readSync(i.dataId),d.readSync(s.dataId),u,l,c,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n,i=new Xu(r.shape,"return x * x;");return a.runWebGLProgram(i,[r],r.dtype)}},{kernelName:Da,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t,a=r.a,i=r.b,s=n,o=qe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mo("return (a - b) * (a - b);",a.shape,i.shape):new po("return (a - b) * (a - b);",a.shape,i.shape);return s.compileAndRun(o,[a,i])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:function(e){for(var t,n=e.inputs,r=e.attrs,a=e.backend,i=n.x,s=r.perm,o=a,u=i.shape.length,l=new Array(u),c=0;c<l.length;c++)l[c]=i.shape[s[c]];if(o.shouldExecuteOnCPU([i])){var h=tp(o.texData.get(i.dataId).values,i.shape,i.dtype,s,l);t=o.makeTensorInfo(l,i.dtype),o.texData.get(t.dataId).values=h}else t=function(e,t,n){var r=qe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new up(e.shape,t):new op(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}(i,s,o);return t}},{kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n,s=i.filterSize,o=i.strides,u=i.pad,l=i.includeBatchInIndex,c=r;ot(4===a.shape.length,(function(){return"Error in maxPool: input must be rank 4 but got rank "+a.shape.length+"."}));var h=[1,1];ot(fs(o,h),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+o+" and dilations '"+h+"'"}));var d=as(a.shape,s,o,h,u),p=function(e,t,n,r){var a=new Su(n,"max",!1),i=r.runWebGLProgram(a,[e],"float32");return a=new Su(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(a,l,d,c);return[p[0],p[1]]}}];lp<cp.length;lp++)et(cp[lp]);for(var hp=0,dp=[{kernelName:"Add",inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=za(n.shape,r.shape);return{a:function(){var t=e,r=Ba(n.shape,a);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},b:function(){var t=e,n=Ba(r.shape,a);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)}}}},{kernelName:"AddN",saveAllInputs:!0,gradFunc:function(e,t){var n={};return t.forEach((function(t,r){n[r]=function(){return e.clone()}})),n}},{kernelName:Fa,gradFunc:function(e,t,n){for(var r=n,a=r.inputShape,i=r.shape,s=Array.from(i),o=a.length-1;o>=0;o--)if(a[o]===i[o])s[o]=1;else if(1!==a[o])throw new Error("broadcastTo(): ["+a+"] cannot be broadcast to ["+i+"].");var u=[];for(o=0;o<s.length;o++)s[o]>1&&u.push(o);return{x:function(){return e.sum(u,!0)}}}},{kernelName:Aa,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=za(n.shape,r.shape);return{a:function(){var t=Pi(e,r.toFloat()),i=Ba(n.shape,a);return i.length>0?_h(t,i).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),i=Ba(r.shape,a);i.length>0&&(t=_h(t,i).reshape(r.shape));var s=Ic(r);return ii(Pi(t,s.toFloat()))}}}},{kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:function(e,t,n){var r=n.varianceEpsilon,a=t[0],i=t[1],s=t[2],o=t[3],u=Ol(a),l=null==o?Xr(1):o,c=Ba(i.shape,u.shape),h=[];if(1===i.rank){for(var d=0;d<u.shape.length-1;++d)h.push(u.shape[d]);h.push(1)}var p=Mi(a,i),f=Di(e,l),m=ui(La(s,Xr(r))),g=Di(Di(Di(m,m),m),Xr(-.5));return{x:function(){return 1===i.rank?ba(Di(Di(e,ac(m.as4D(1,1,1,i.shape[0]),h)),l),a.shape):ba(Di(Di(e,m),l),a.shape)},mean:function(){var e=Di(Di(m,Xr(-1)),f);return 1===i.rank&&(e=_h(e,c)),ba(e,i.shape)},variance:function(){var e=Di(Di(g,p),f);return 1===i.rank&&(e=_h(e,c)),ba(e,i.shape)},scale:function(){var t=Di(p,m),n=Di(e,t);return 1===i.rank&&(n=_h(n,c)),ba(n,i.shape)},offset:function(){var t=e;return 1===i.rank&&(t=_h(t,c)),ba(t,i.shape)}}}},{kernelName:$a,gradFunc:function(e){return{x:function(){return e.toFloat()}}}},{kernelName:_a,inputsToSave:["indices"],gradFunc:function(e,t){var n=t[0];return{indices:function(){return ta(n.shape,"float32")}}}},{kernelName:Ma,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.paddings.map((function(e){return e[0]}));return{x:function(){return e.slice(a,r.shape)}}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().mul(2))}}}},{kernelName:Da,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Xr(2);return{a:function(){return Di(e,Di(a,Mi(n,r)))},b:function(){return Di(e,Di(a,Mi(r,n)))}}}},{kernelName:Oa,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.reps;return{x:function(){var t=sa(r);if(1===r.rank)for(var n=0;n<a[0];++n)t=t.add(e.slice([n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(n=0;n<a[0];++n)for(var i=0;i<a[1];++i)t=t.add(e.slice([n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(n=0;n<a[0];++n)for(i=0;i<a[1];++i)for(var s=0;s<a[2];++s)t=t.add(e.slice([n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(n=0;n<a[0];++n)for(i=0;i<a[1];++i)for(s=0;s<a[2];++s)for(var o=0;o<a[3];++o)t=t.add(e.slice([n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:function(e,t,n){var r=Br(n.perm);return{x:function(){return es(e,r)}}}}];hp<dp.length;hp++)tt(dp[hp]);var pp=function(){function e(){}return e.prototype.fetch=function(e,t){return fetch(e,t)},e.prototype.now=function(){return performance.now()},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return new TextDecoder(t).decode(e)},e}();qe().get("IS_BROWSER")&&qe().setPlatform("browser",new pp);var fp,mp=function(){function e(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}return e.prototype.fetch=function(e,t){return null!=qe().global.fetch?qe().global.fetch(e,t):(null==fp&&(fp=require("node-fetch")),fp(e,t))},e.prototype.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)},e}();qe().get("IS_NODE")&&qe().setPlatform("node",new mp);var gp={float32:4,int32:4,uint16:2,uint8:1,bool:1},vp=4;function yp(e,t){for(var n={},r=0,a=function(t){var a=t.name,i=t.dtype,s=t.shape,o=ht(s),u=void 0;if("quantization"in t){var l=t.quantization;if("uint8"!==l.dtype&&"uint16"!==l.dtype)throw new Error("Weight "+t.name+" has unknown quantization dtype "+l.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var c=gp[l.dtype],h=e.slice(r,r+o*c),d="uint8"===l.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===i)u=Float32Array.from(d,(function(e){return e*l.scale+l.min}));else{if("int32"!==i)throw new Error("Unsupported dtype in weight '"+a+"': "+i);u=Int32Array.from(d,(function(e){return Math.round(e*l.scale+l.min)}))}r+=o*c}else if("string"===i){var p=ht(t.shape);u=[];for(var f=0;f<p;f++){var m=new Uint32Array(e.slice(r,r+vp))[0];r+=vp;var g=new Uint8Array(e.slice(r,r+m));u.push(g),r+=m}}else{var v=gp[i];if(h=e.slice(r,r+o*v),"float32"===i)u=new Float32Array(h);else if("int32"===i)u=new Int32Array(h);else{if("bool"!==i)throw new Error("Unsupported dtype in weight '"+a+"': "+i);u=new Uint8Array(h)}r+=o*v}n[a]=qr(u,s,i)},i=0,s=t;i<s.length;i++)a(s[i]);return n}function bp(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));var t=0,n=[];e.forEach((function(e){if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));var r=new Uint8Array(t),a=0;return n.forEach((function(e){r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var xp="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function wp(e){return xp?Buffer.byteLength(e):new Blob([e]).size}function kp(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ip(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);var t=e.split("/");return t[t.length-1]}function Cp(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:wp(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:wp(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}var Sp=function(){function e(){this.saveRouters=[],this.loadRouters=[]}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerSaveRouter=function(t){e.getInstance().saveRouters.push(t)},e.registerLoadRouter=function(t){e.getInstance().loadRouters.push(t)},e.getSaveHandlers=function(t){return e.getHandlers(t,"save")},e.getLoadHandlers=function(t,n){return e.getHandlers(t,"load",n)},e.getHandlers=function(t,n,r){var a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach((function(e){var n=e(t,r);null!==n&&a.push(n)})),a},e}(),Np="://",Tp=function(){function e(){this.managers={}}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerManager=function(t,n){ot(null!=t,(function(){return"scheme must not be undefined or null."})),t.endsWith(Np)&&(t=t.slice(0,t.indexOf(Np))),ot(t.length>0,(function(){return"scheme must not be an empty string."}));var r=e.getInstance();ot(null==r.managers[t],(function(){return"A model store manager is already registered for scheme '"+t+"'."})),r.managers[t]=n},e.getManager=function(e){var t=this.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '"+e+"'");return t},e.getSchemes=function(){return Object.keys(this.getInstance().managers)},e}();function Ep(e){if(-1===e.indexOf(Np))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Tp.getSchemes().join(","));return{scheme:e.split(Np)[0],path:e.split(Np)[1]}}function Rp(e,t,n){return void 0===n&&(n=!1),Ge(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h;return He(this,(function(d){switch(d.label){case 0:return ot(e!==t,(function(){return"Old path and new path are the same: '"+e+"'"})),ot((r=Sp.getLoadHandlers(e)).length>0,(function(){return"Copying failed because no load handler is found for source URL "+e+"."})),ot(r.length<2,(function(){return"Copying failed because more than one ("+r.length+") load handlers for source URL "+e+"."})),a=r[0],ot((i=Sp.getSaveHandlers(t)).length>0,(function(){return"Copying failed because no save handler is found for destination URL "+t+"."})),ot(i.length<2,(function(){return"Copying failed because more than one ("+r.length+") save handlers for destination URL "+t+"."})),s=i[0],o=Ep(e).scheme,u=Ep(e).path,l=o===Ep(e).scheme,[4,a.load()];case 1:return c=d.sent(),n&&l?[4,Tp.getManager(o).removeModel(u)]:[3,3];case 2:d.sent(),d.label=3;case 3:return[4,s.save(c)];case 4:return h=d.sent(),!n||l?[3,6]:[4,Tp.getManager(o).removeModel(u)];case 5:d.sent(),d.label=6;case 6:return[2,h.modelArtifactsInfo]}}))}))}var Ap="models_store",Dp="model_info_store";function Fp(){if(!qe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var e=window||self,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _p(e){var t=e.result;t.createObjectStore(Ap,{keyPath:"modelPath"}),t.createObjectStore(Dp,{keyPath:"modelPath"})}var $p=function(){function e(e){if(this.indexedDB=Fp(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}return e.prototype.save=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,e)]}))}))},e.prototype.load=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){return[2,this.databaseAction(this.modelPath)]}))}))},e.prototype.databaseAction=function(e,t){var n=this;return new Promise((function(e,r){var a=n.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return _p(a)},a.onsuccess=function(){var i=a.result;if(null==t){var s=i.transaction(Ap,"readonly"),o=s.objectStore(Ap).get(n.modelPath);o.onsuccess=function(){if(null==o.result)return i.close(),r(new Error("Cannot find model with path '"+n.modelPath+"' in IndexedDB."));e(o.result.modelArtifacts)},o.onerror=function(e){return i.close(),r(o.error)},s.oncomplete=function(){return i.close()}}else{var u,l=Cp(t),c=i.transaction(Dp,"readwrite"),h=c.objectStore(Dp),d=h.put({modelPath:n.modelPath,modelArtifactsInfo:l});d.onsuccess=function(){var a=(u=i.transaction(Ap,"readwrite")).objectStore(Ap).put({modelPath:n.modelPath,modelArtifacts:t,modelArtifactsInfo:l});a.onsuccess=function(){return e({modelArtifactsInfo:l})},a.onerror=function(e){var t=(h=c.objectStore(Dp)).delete(n.modelPath);t.onsuccess=function(){return i.close(),r(a.error)},t.onerror=function(e){return i.close(),r(a.error)}}},d.onerror=function(e){return i.close(),r(d.error)},c.oncomplete=function(){null==u?i.close():u.oncomplete=function(){return i.close()}}}},a.onerror=function(e){return r(a.error)}}))},e.URL_SCHEME="indexeddb://",e}(),Op=function(e){return qe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith($p.URL_SCHEME)?(t=e.slice($p.URL_SCHEME.length),new $p(t)):null;var t};Sp.registerSaveRouter(Op),Sp.registerLoadRouter(Op);var Mp=function(){function e(){this.indexedDB=Fp()}return e.prototype.listModels=function(){return Ge(this,void 0,void 0,(function(){var e=this;return He(this,(function(t){return[2,new Promise((function(t,n){var r=e.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=function(){return _p(r)},r.onsuccess=function(){var e=r.result,a=e.transaction(Dp,"readonly"),i=a.objectStore(Dp).getAll();i.onsuccess=function(){for(var e={},n=0,r=i.result;n<r.length;n++){var a=r[n];e[a.modelPath]=a.modelArtifactsInfo}t(e)},i.onerror=function(t){return e.close(),n(i.error)},a.oncomplete=function(){return e.close()}},r.onerror=function(e){return n(r.error)}}))]}))}))},e.prototype.removeModel=function(e){return Ge(this,void 0,void 0,(function(){var t=this;return He(this,(function(n){var r;return e=(r=e).startsWith($p.URL_SCHEME)?r.slice($p.URL_SCHEME.length):r,[2,new Promise((function(n,r){var a=t.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return _p(a)},a.onsuccess=function(){var t,i=a.result,s=i.transaction(Dp,"readwrite"),o=s.objectStore(Dp),u=o.get(e);u.onsuccess=function(){if(null==u.result)return i.close(),r(new Error("Cannot find model with path '"+e+"' in IndexedDB."));var a=o.delete(e),s=function(){var a=(t=i.transaction(Ap,"readwrite")).objectStore(Ap).delete(e);a.onsuccess=function(){return n(u.result.modelArtifactsInfo)},a.onerror=function(e){return r(u.error)}};a.onsuccess=s,a.onerror=function(e){return s(),i.close(),r(u.error)}},u.onerror=function(e){return i.close(),r(u.error)},s.oncomplete=function(){null==t?i.close():t.oncomplete=function(){return i.close()}}},a.onerror=function(e){return r(a.error)}}))]}))}))},e}();if(qe().getBool("IS_BROWSER"))try{Tp.registerManager($p.URL_SCHEME,new Mp)}catch(Ve){}var Lp="/",Pp="tensorflowjs_models",Bp="info",zp="model_topology",Wp="weight_specs",Vp="weight_data",Up="model_metadata";function Gp(e){return{info:[Pp,e,Bp].join(Lp),topology:[Pp,e,zp].join(Lp),weightSpecs:[Pp,e,Wp].join(Lp),weightData:[Pp,e,Vp].join(Lp),modelMetadata:[Pp,e,Up].join(Lp)}}function Hp(e){var t=e.split(Lp);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Lp)}var jp=function(){function e(e){if(!qe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Gp(this.modelPath)}return e.prototype.save=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r;return He(this,(function(a){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Cp(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(xp)return Buffer.from(e).toString("base64");for(var t=new Uint8Array(e),n="",r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),[2,{modelArtifactsInfo:r}]}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+r.modelTopologyBytes+", weightSpecsBytes="+r.weightSpecsBytes+", weightDataBytes="+r.weightDataBytes+".")}return[2]}))}))},e.prototype.load=function(){return Ge(this,void 0,void 0,(function(){var e,t,n,r,a,i,s;return He(this,(function(o){if(null==(e=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(t={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(t.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(t.weightSpecs=r,null!=(a=this.LS.getItem(this.keys.modelMetadata))&&(i=JSON.parse(a),t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,t.userDefinedMetadata=i.userDefinedMetadata),null==(s=this.LS.getItem(this.keys.weightData)))throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return t.weightData=function(e){if(xp){var t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}for(var n=atob(e),r=new Uint8Array(n.length),a=0;a<n.length;++a)r.set([n.charCodeAt(a)],a);return r.buffer}(s),[2,t]}))}))},e.URL_SCHEME="localstorage://",e}(),qp=function(e){return qe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(jp.URL_SCHEME)?(t=e.slice(jp.URL_SCHEME.length),new jp(t)):null;var t};Sp.registerSaveRouter(qp),Sp.registerLoadRouter(qp);var Kp=function(){function e(){ot(qe().getBool("IS_BROWSER"),(function(){return"Current environment is not a web browser"})),ot("undefined"==typeof window||void 0!==window.localStorage,(function(){return"Current browser does not appear to support localStorage"})),this.LS=window.localStorage}return e.prototype.listModels=function(){return Ge(this,void 0,void 0,(function(){var e,t,n,r,a,i;return He(this,(function(s){for(e={},t=Pp+Lp,n=Lp+Bp,r=0;r<this.LS.length;++r)(a=this.LS.key(r)).startsWith(t)&&a.endsWith(n)&&(i=Hp(a),e[i]=JSON.parse(this.LS.getItem(a)));return[2,e]}))}))},e.prototype.removeModel=function(e){return Ge(this,void 0,void 0,(function(){var t,n;return He(this,(function(r){var a;if(e=(a=e).startsWith(jp.URL_SCHEME)?a.slice(jp.URL_SCHEME.length):a,t=Gp(e),null==this.LS.getItem(t.info))throw new Error("Cannot find model at path '"+e+"'");return n=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,n]}))}))},e}();if(qe().getBool("IS_BROWSER"))try{Tp.registerManager(jp.URL_SCHEME,new Kp)}catch(Ve){}function Xp(e){return new Promise((function(e){return setTimeout(e)})).then(e)}var Yp=function(){function e(t){if(!qe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}return e.prototype.save=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r,a,i,s;return He(this,(function(o){switch(o.label){case 0:if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),(i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,i.href=a,[4,Xp((function(){return i.dispatchEvent(new MouseEvent("click"))}))];case 2:return o.sent(),null==e.weightData?[3,4]:((s=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,s.href=t,[4,Xp((function(){return s.dispatchEvent(new MouseEvent("click"))}))]);case 3:o.sent(),o.label=4;case 4:return[2,{modelArtifactsInfo:Cp(e)}]}}))}))},e.URL_SCHEME="downloads://",e}(),Qp=function(){function e(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}return e.prototype.load=function(){return Ge(this,void 0,void 0,(function(){var e,t,n=this;return He(this,(function(r){return e=this.files[0],t=this.files.slice(1),[2,new Promise((function(r,a){var i=new FileReader;i.onload=function(i){var s=JSON.parse(i.target.result),o=s.modelTopology;if(null!=o){0===t.length&&r({modelTopology:o});var u=s.weightsManifest;if(null!=u){var l;try{l=n.checkManifestAndWeightFiles(u,t)}catch(e){return void a(e)}var c=[],h=[],d=[];u.forEach((function(e){e.paths.forEach((function(e){h.push(e),d.push(null)})),c.push.apply(c,e.weights)})),u.forEach((function(e){e.paths.forEach((function(e){var t=new FileReader;t.onload=function(t){var n=t.target.result,a=h.indexOf(e);d[a]=n,-1===d.indexOf(null)&&r({modelTopology:o,weightSpecs:c,weightData:kp(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},t.onerror=function(t){return a("Failed to weights data from file of path '"+e+"'.")},t.readAsArrayBuffer(l[e])}))}))}else a(new Error("weightManifest field is missing from file "+e.name))}else a(new Error("modelTopology field is missing from file "+e.name))},i.onerror=function(t){return a("Failed to read model topology and weights manifest JSON from file '"+e.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},i.readAsText(e)}))]}))}))},e.prototype.checkManifestAndWeightFiles=function(e,t){for(var n=[],r=t.map((function(e){return Ip(e.name)})),a={},i=0,s=e;i<s.length;i++)s[i].paths.forEach((function(e){var i=Ip(e);if(-1!==n.indexOf(i))throw new Error("Duplicate file basename found in weights manifest: '"+i+"'");if(n.push(i),-1===r.indexOf(i))throw new Error("Weight file with basename '"+i+"' is not provided.");a[e]=t[r.indexOf(i)]}));if(n.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest ("+n.length+") and the number of weight files provided ("+t.length+").");return a},e}();function Jp(e,t,n,r){!function(e){ot(null!=e&&Array.isArray(e)&&e.length>0,(function(){return"promises must be a none empty array"}))}(e),function(e,t){ot(e>=0&&e<=1,(function(){return"Progress fraction must be in range [0, 1], but got startFraction "+e})),ot(t>=0&&t<=1,(function(){return"Progress fraction must be in range [0, 1], but got endFraction "+t})),ot(t>=e,(function(){return"startFraction must be no more than endFraction, but got startFraction "+e+" and endFraction "+t}))}(n=null==n?0:n,r=null==r?1:r);var a=0;return Promise.all(e.map((function(i){return i.then((function(i){var s=n+ ++a/e.length*(r-n);return t(s),i})),i})))}function Zp(e,t){return Ge(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c;return He(this,(function(h){switch(h.label){case 0:return null==t&&(t={}),n=null==t.fetchFunc?qe().platform.fetch:t.fetchFunc,r=e.map((function(e){return n(e,t.requestInit,{isBinary:!0})})),a=0,i=.5,null!=t.onProgress?[3,2]:[4,Promise.all(r)];case 1:return s=h.sent(),[3,4];case 2:return[4,Jp(r,t.onProgress,a,i)];case 3:s=h.sent(),h.label=4;case 4:return o=s.map((function(e){return e.arrayBuffer()})),u=.5,l=1,null!=t.onProgress?[3,6]:[4,Promise.all(o)];case 5:return c=h.sent(),[3,8];case 6:return[4,Jp(o,t.onProgress,u,l)];case 7:c=h.sent(),h.label=8;case 8:return[2,c]}}))}))}function ef(e){var t=this;return function(n,r,a){return void 0===r&&(r=""),Ge(t,void 0,void 0,(function(){var t,i,s,o,u,l,c,h,d,p;return He(this,(function(f){switch(f.label){case 0:if(t=n.map((function(){return!1})),i={},s=null!=a?a.map((function(){return!1})):[],o=[],n.forEach((function(e,n){var r=0;e.weights.forEach((function(e){var u="quantization"in e?e.quantization.dtype:e.dtype,l=gp[u]*ht(e.shape),c=function(){t[n]=!0,null==i[n]&&(i[n]=[]),i[n].push({manifestEntry:e,groupOffset:r,sizeBytes:l})};null!=a?a.forEach((function(t,n){t===e.name&&(c(),s[n]=!0)})):c(),o.push(e.name),r+=l}))})),!s.every((function(e){return e})))throw u=a.filter((function(e,t){return!s[t]})),new Error("Could not find weights in manifest with names: "+u.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".");return l=t.reduce((function(e,t,n){return t&&e.push(n),e}),[]),c=[],l.forEach((function(e){n[e].paths.forEach((function(e){var t=r+(r.endsWith("/")?"":"/")+e;c.push(t)}))})),[4,e(c)];case 1:return h=f.sent(),d={},p=0,l.forEach((function(e){for(var t=n[e].paths.length,r=0,a=0;a<t;a++)r+=h[p+a].byteLength;for(var s=new ArrayBuffer(r),o=new Uint8Array(s),u=0,l=0;l<t;l++){var c=new Uint8Array(h[p+l]);o.set(c,u),u+=c.byteLength}i[e].forEach((function(e){var t=yp(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(var n in t)d[n]=t[n]})),p+=t})),[2,d]}}))}))}}Sp.registerSaveRouter((function(e){return qe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yp.URL_SCHEME)?function(e){return void 0===e&&(e="model"),new Yp(e)}(e.slice(Yp.URL_SCHEME.length)):null}));var tf=function(){function e(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(ot("function"==typeof t.fetchFunc,(function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"})),this.fetch=t.fetchFunc):this.fetch=qe().platform.fetch,ot(null!=e&&e.length>0,(function(){return"URL path for http must not be null, undefined or empty."})),Array.isArray(e)&&ot(2===e.length,(function(){return"URL paths for http must have a length of 2, (actual length is "+e.length+")."})),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}return e.prototype.save=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r,a;return He(this,(function(i){switch(i.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n},t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,t)];case 1:if((a=i.sent()).ok)return[2,{modelArtifactsInfo:Cp(e),responses:[a]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}}))}))},e.prototype.load=function(){return Ge(this,void 0,void 0,(function(){var e,t,n,r,a,i,s,o,u,l,c,h;return He(this,(function(d){switch(d.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(e=d.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+e.status+". Please verify this URL points to the model JSON of the model to load.");d.label=2;case 2:return d.trys.push([2,4,,5]),[4,e.json()];case 3:return t=d.sent(),[3,5];case 4:throw d.sent(),n="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?n+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":n+=" Please make sure the server is serving valid JSON for this request.",new Error(n);case 5:if(r=t.modelTopology,a=t.weightsManifest,i=t.generatedBy,s=t.convertedBy,o=t.format,u=t.userDefinedMetadata,null==r&&null==a)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return null==a?[3,7]:[4,this.loadWeights(a)];case 6:h=d.sent(),l=h[0],c=h[1],d.label=7;case 7:return[2,{modelTopology:r,weightSpecs:l,weightData:c,userDefinedMetadata:u,generatedBy:i,convertedBy:s,format:o}]}}))}))},e.prototype.loadWeights=function(e){return Ge(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u,l,c,h;return He(this,(function(d){switch(d.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,n=function(e){var t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=n[0],a=n[1],i=this.weightPathPrefix||r,s=[],o=0,u=e;o<u.length;o++)l=u[o],s.push.apply(s,l.weights);return c=[],e.forEach((function(e){e.paths.forEach((function(e){c.push(i+e+a)}))})),[4,Zp(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return h=d.sent(),[2,[s,kp(h)]]}}))}))},e.URL_SCHEME_REGEX=/^https?:\/\//,e}();function nf(e){return null!=e.match(tf.URL_SCHEME_REGEX)}var rf=function(e,t){return"undefined"==typeof fetch?null:(Array.isArray(e)?e.every((function(e){return nf(e)})):nf(e))?af(e,{onProgress:t}):null};function af(e,t){return new tf(e,t)}Sp.registerSaveRouter(rf),Sp.registerLoadRouter(rf);var sf,of=function(){function e(e){this.modelArtifacts=e}return e.prototype.load=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){return[2,this.modelArtifacts]}))}))},e}(),uf=function(){function e(e){this.saveHandler=e}return e.prototype.save=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(t){return[2,this.saveHandler(e)]}))}))},e}(),lf=Object.freeze({browserFiles:function(e){return new Qp(e)},browserHTTPRequest:function(e,t){return af(e,t)},concatenateArrayBuffers:kp,decodeWeights:yp,encodeWeights:function(e,t){return Ge(this,void 0,void 0,(function(){var n,r,a,i,s,o=this;return He(this,(function(u){switch(u.label){case 0:for(n=[],r=[],a=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e),i=function(i){var s=a[i],u=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype)throw new Error("Unsupported dtype in weight '"+s+"': "+u.dtype);var l={name:s,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){var c=new Promise((function(e){return Ge(o,void 0,void 0,(function(){var t,n,r,a,i,s,o;return He(this,(function(l){switch(l.label){case 0:return[4,u.bytes()];case 1:for(t=l.sent(),n=t.reduce((function(e,t){return e+t.length}),0)+vp*t.length,r=new Uint8Array(n),a=0,i=0;i<t.length;i++)s=t[i],o=new Uint8Array(new Uint32Array([s.length]).buffer),r.set(o,a),a+=vp,r.set(s,a),a+=s.length;return e(r),[2]}}))}))}));r.push(c)}else r.push(u.data());null!=t&&(l.group=t),n.push(l)},s=0;s<a.length;++s)i(s);return[4,Promise.all(r)];case 1:return[2,{data:bp(u.sent()),specs:n}]}}))}))},fromMemory:function(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new of(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new of({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new of({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))},getLoadHandlers:function(e,t){return Sp.getLoadHandlers(e,t)},getModelArtifactsInfoForJSON:Cp,getSaveHandlers:function(e){return Sp.getSaveHandlers(e)},http:af,isHTTPScheme:nf,loadWeights:function(e,t,n,r){return void 0===t&&(t=""),Ge(this,void 0,void 0,(function(){return He(this,(function(a){return[2,ef((function(e){return Zp(e,{requestInit:r})}))(e,t,n)]}))}))},registerLoadRouter:function(e){return Sp.registerLoadRouter(e)},registerSaveRouter:function(e){return Sp.registerSaveRouter(e)},weightsLoaderFactory:ef,withSaveHandler:function(e){return new uf(e)},copyModel:function(e,t){return Ge(this,void 0,void 0,(function(){return He(this,(function(n){return[2,Rp(e,t,!1)]}))}))},listModels:function(){return Ge(this,void 0,void 0,(function(){var e,t,n,r,a,i,s;return He(this,(function(o){switch(o.label){case 0:e=Tp.getSchemes(),t={},n=0,r=e,o.label=1;case 1:return n<r.length?(a=r[n],[4,Tp.getManager(a).listModels()]):[3,4];case 2:for(s in i=o.sent())t[a+Np+s]=i[s];o.label=3;case 3:return n++,[3,1];case 4:return[2,t]}}))}))},moveModel:function(e,t){return Ge(this,void 0,void 0,(function(){return He(this,(function(n){return[2,Rp(e,t,!0)]}))}))},removeModel:function(e){return Ge(this,void 0,void 0,(function(){var t;return He(this,(function(n){return t=Ep(e),[2,Tp.getManager(t.scheme).removeModel(t.path)]}))}))}}),cf=Ur({confusionMatrix_:function(e,t,n){var r=Dr(e,"labels","confusionMatrix"),a=Dr(t,"predictions","confusionMatrix");ot(null==n||n>0&&Number.isInteger(n),(function(){return"If provided, numClasses must be a positive integer, but got "+n})),ot(1===r.rank,(function(){return"Expected the rank of labels to be 1, but got "+r.rank})),ot(1===a.rank,(function(){return"Expected the rank of predictions to be 1, but got "+a.rank})),ot(r.shape[0]===a.shape[0],(function(){return"Mismatch in the number of examples: "+r.shape[0]+" vs. "+a.shape[0]+". Labels and predictions should have the same number of elements."})),ot(n>0&&Number.isInteger(n),(function(){return"numClasses is required to be a positive integer, but got "+n}));var i=oc(r.asType("int32"),n),s=oc(a.asType("int32"),n);return i.transpose().matMul(s).asType("int32")}});Object.freeze({confusionMatrix:cf});var hf=Ur({fromPixels_:function(e,t){if(void 0===t&&(t=3),t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var n=!1,r=!1,a=!1,i=!1,s=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);s=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=Qe("FromPixels",xn.backendName))return xn.runKernel("FromPixels",{pixels:e},{numChannels:t});var o,u,l=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],c=l[0],h=l[1];if(s?o=e.getContext("2d").getImageData(0,0,c,h).data:r||n?o=e.data:(i||a)&&(null==sf&&(sf=document.createElement("canvas").getContext("2d")),sf.canvas.width=c,sf.canvas.height=h,sf.drawImage(e,0,0,c,h),o=sf.getImageData(0,0,c,h).data),4===t)u=new Int32Array(o);else{var d=c*h;u=new Int32Array(d*t);for(var p=0;p<d;p++)for(var f=0;f<t;++f)u[p*t+f]=o[4*p+f]}return Jr(u,[h,c,t],"int32")}});Object.freeze({toPixels:function(e,t){return Ge(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k,I,C;return He(this,(function(S){switch(S.label){case 0:if(n=Dr(e,"img","toPixels"),e instanceof rn||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank "+n.rank+".");if(r=n.shape.slice(0,2),a=r[0],i=r[1],(s=2===n.rank?1:n.shape[2])>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);return[4,n.data()];case 1:return o=S.sent(),u=n.min(),l=n.max(),[4,Promise.all([u.data(),l.data()])];case 2:if(c=S.sent(),h=c[0],d=c[1],p=h[0],f=d[0],u.dispose(),l.dispose(),"float32"===n.dtype){if(p<0||f>1)throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range ["+p+" - "+f+"].")}else{if("int32"!==n.dtype)throw new Error("Unsupported type for toPixels: "+n.dtype+". Please use float32 or int32 tensors.");if(p<0||f>255)throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range ["+p+" - "+f+"].")}for(m="float32"===n.dtype?255:1,g=new Uint8ClampedArray(i*a*4),v=0;v<a*i;++v)y=void 0,b=void 0,x=void 0,w=void 0,1===s?(y=o[v]*m,b=o[v]*m,x=o[v]*m,w=255):3===s?(y=o[3*v]*m,b=o[3*v+1]*m,x=o[3*v+2]*m,w=255):4===s&&(y=o[4*v]*m,b=o[4*v+1]*m,x=o[4*v+2]*m,w=o[4*v+3]*m),g[0+(k=4*v)]=Math.round(y),g[k+1]=Math.round(b),g[k+2]=Math.round(x),g[k+3]=Math.round(w);return null!=t&&(t.width=i,t.height=a,I=t.getContext("2d"),C=new ImageData(g,i,a),I.putImageData(C,0,0)),n!==e&&n.dispose(),[2,g]}}))}))},fromPixels:hf});var df=function(){function e(){}return e.prototype.getClassName=function(){return this.constructor.className},e.fromConfig=function(e,t){return new e(t)},e}(),pf=function(){function e(){this.classNameMap={}}return e.getMap=function(){return null==e.instance&&(e.instance=new e),e.instance},e.register=function(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]},e}();function ff(e){ot(null!=e.className,(function(){return"Class being registered does not have the static className property defined."})),ot("string"==typeof e.className,(function(){return"className is required to be a string, but got type "+typeof e.className})),ot(e.className.length>0,(function(){return"Class being registered has an empty-string as its className, which is disallowed."})),pf.register(e)}Object.freeze({Serializable:df,SerializationMap:pf,registerClass:ff}),Object.freeze({gpgpu_util:cu,webgl_util:Ir,forceHalfFloat:function(){qe().set("WEBGL_FORCE_F16_TEXTURES",!0)},MathBackendWebGL:Il,setWebGLContext:En,GPGPUContext:hu});var mf=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Ue(t,e),t.prototype.minimize=function(e,t,n){void 0===t&&(t=!1);var r=this.computeGradients(e,n),a=r.value,i=r.grads;if(null!=n){var s=n.map((function(e){return{name:e.name,tensor:i[e.name]}}));this.applyGradients(s)}else this.applyGradients(i);return Tr(i),t?a:(a.dispose(),null)},Object.defineProperty(t.prototype,"iterations",{get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),t.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},t.prototype.computeGradients=function(e,t){return function(e,t){ot(_t(e),(function(){return"The f passed in variableGrads(f) must be a function"})),ot(null==t||Array.isArray(t)&&t.every((function(e){return e instanceof cn})),(function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"}));var n=null!=t;if(!n)for(var r in t=[],xn.registeredVariables)t.push(xn.registeredVariables[r]);var a=n?t.filter((function(e){return!e.trainable})):null,i=t.length;ot((t=t.filter((function(e){return e.trainable}))).length>0,(function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+i+" variables is trainable."}));var s=xn.gradients(e,t,null,!0),o=s.value,u=s.grads;ot(u.some((function(e){return null!=e})),(function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."})),ot(0===o.rank,(function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+o.rank+" tensor"}));var l={};return t.forEach((function(e,t){null!=u[t]&&(l[e.name]=u[t])})),null!=a&&a.forEach((function(e){return l[e.name]=null})),{value:o,grads:l}}(e,t)},t.prototype.dispose=function(){null!=this.iterations_&&Tr(this.iterations_)},t.prototype.saveIterations=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){return null==this.iterations_&&(this.iterations_=0),[2,{name:"iter",tensor:Xr(this.iterations_,"int32")}]}))}))},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){throw new Error("getWeights() is not implemented for this optimizer yet.")}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}))}))},t.prototype.extractIterations=function(e){return Ge(this,void 0,void 0,(function(){var t;return He(this,(function(n){switch(n.label){case 0:return t=this,[4,e[0].tensor.data()];case 1:return t.iterations_=n.sent()[0],[2,e.slice(1)]}}))}))},t}(df);Object.defineProperty(mf,Symbol.hasInstance,{value:function(e){return null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients}});var gf=function(e){function t(t,n,r){void 0===r&&(r=null);var a=e.call(this)||this;return a.learningRate=t,a.rho=n,a.epsilon=r,a.accumulatedGrads=[],a.accumulatedUpdates=[],null==r&&(a.epsilon=xn.backend.epsilon()),a}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=xn.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accum_grad",variable:Nr((function(){return sa(a).variable(!1)}))}),null==t.accumulatedUpdates[r]&&(t.accumulatedUpdates[r]={originalName:n+"/accum_var",variable:Nr((function(){return sa(a).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedGrads[r].variable,o=t.accumulatedUpdates[r].variable;Nr((function(){var e=s.mul(t.rho).add(i.square().mul(1-t.rho)),n=o.add(t.epsilon).sqrt().div(s.add(t.epsilon).sqrt()).mul(i),r=o.mul(t.rho).add(n.square().mul(1-t.rho));s.assign(e),o.assign(r);var u=n.mul(-t.learningRate).add(a);a.assign(u)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedUpdates&&(Tr(this.accumulatedGrads.map((function(e){return e.variable}))),Tr(this.accumulatedUpdates.map((function(e){return e.variable}))))},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){var e;return He(this,(function(t){switch(t.label){case 0:return e=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){var t;return He(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=e.length/2,this.accumulatedGrads=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedUpdates=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.rho,t.epsilon)},t.className="Adadelta",t}(mf);ff(gf);var vf=function(e){function t(t,n){void 0===n&&(n=.1);var r=e.call(this)||this;return r.learningRate=t,r.initialAccumulatorValue=n,r.accumulatedGrads=[],r}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=xn.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accumulator",variable:Nr((function(){return na(a.shape,t.initialAccumulatorValue).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedGrads[r].variable;Nr((function(){var e=s.add(i.square());s.assign(e);var n=i.div(e.add(xn.backend.epsilon()).sqrt()).mul(-t.learningRate).add(a);a.assign(n)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedGrads&&Tr(this.accumulatedGrads.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulatedGrads.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulatedGrads=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},t.fromConfig=function(e,t){return new e(t.learningRate,t.initialAccumulatorValue)},t.className="Adagrad",t}(mf);ff(vf);var yf=function(e){function t(t,n,r,a){void 0===a&&(a=null);var i=e.call(this)||this;return i.learningRate=t,i.beta1=n,i.beta2=r,i.epsilon=a,i.accumulatedFirstMoment=[],i.accumulatedSecondMoment=[],Nr((function(){i.accBeta1=Xr(n).variable(),i.accBeta2=Xr(r).variable()})),null==a&&(i.epsilon=xn.backend.epsilon()),i}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);Nr((function(){var r=Mi(1,t.accBeta1),a=Mi(1,t.accBeta2);n.forEach((function(n,i){var s=xn.registeredVariables[n];null==t.accumulatedFirstMoment[i]&&(t.accumulatedFirstMoment[i]={originalName:n+"/m",variable:Nr((function(){return sa(s).variable(!1)}))}),null==t.accumulatedSecondMoment[i]&&(t.accumulatedSecondMoment[i]={originalName:n+"/v",variable:Nr((function(){return sa(s).variable(!1)}))});var o=Array.isArray(e)?e[i].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[i].variable,l=t.accumulatedSecondMoment[i].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2).add(o.square().mul(1-t.beta2)),d=c.div(r),p=h.div(a);u.assign(c),l.assign(h);var f=d.div(p.sqrt().add(t.epsilon)).mul(-t.learningRate).add(s);s.assign(f)}})),t.accBeta1.assign(t.accBeta1.mul(t.beta1)),t.accBeta2.assign(t.accBeta2.mul(t.beta2))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Tr(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedSecondMoment&&Tr(this.accumulatedSecondMoment.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){var e;return He(this,(function(t){switch(t.label){case 0:return e=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){var t,n=this;return He(this,(function(r){switch(r.label){case 0:return[4,this.extractIterations(e)];case 1:return e=r.sent(),Nr((function(){n.accBeta1.assign(_i(n.beta1,n.iterations_+1)),n.accBeta2.assign(_i(n.beta2,n.iterations_+1))})),t=e.length/2,this.accumulatedFirstMoment=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedSecondMoment=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)},t.className="Adam",t}(mf);ff(yf);var bf=function(e){function t(t,n,r,a,i){void 0===a&&(a=null),void 0===i&&(i=0);var s=e.call(this)||this;return s.learningRate=t,s.beta1=n,s.beta2=r,s.epsilon=a,s.decay=i,s.accumulatedFirstMoment=[],s.accumulatedWeightedInfNorm=[],Nr((function(){s.iteration=Xr(0).variable(),s.accBeta1=Xr(n).variable()})),null==a&&(s.epsilon=xn.backend.epsilon()),s}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);Nr((function(){var r=Mi(1,t.accBeta1),a=Pi(-t.learningRate,t.iteration.mul(t.decay).add(1));n.forEach((function(n,i){var s=xn.registeredVariables[n];null==t.accumulatedFirstMoment[i]&&(t.accumulatedFirstMoment[i]={originalName:n+"/m",variable:sa(s).variable(!1)}),null==t.accumulatedWeightedInfNorm[i]&&(t.accumulatedWeightedInfNorm[i]={originalName:n+"/v",variable:sa(s).variable(!1)});var o=Array.isArray(e)?e[i].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[i].variable,l=t.accumulatedWeightedInfNorm[i].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2),d=o.abs(),p=h.maximum(d);u.assign(c),l.assign(p);var f=a.div(r).mul(c.div(p.add(t.epsilon))).add(s);s.assign(f)}})),t.iteration.assign(t.iteration.add(1)),t.accBeta1.assign(t.accBeta1.mul(t.beta1))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Tr(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedWeightedInfNorm&&Tr(this.accumulatedWeightedInfNorm.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){throw new Error("getWeights() is not implemented for Adamax yet.")}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){throw new Error("setWeights() is not implemented for Adamax yet.")}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)},t.className="Adamax",t}(mf);ff(bf);var xf=function(e){function t(t){var n=e.call(this)||this;return n.learningRate=t,n.setLearningRate(t),n}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Array.isArray(e)?e[r].tensor:e[n];if(null!=a){var i=xn.registeredVariables[n];Nr((function(){var e=t.c.mul(a).add(i);i.assign(e)}))}})),this.incrementIterations()},t.prototype.setLearningRate=function(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=function(e){return xn.keep(e)}(Xr(-e))},t.prototype.dispose=function(){this.c.dispose()},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()]]}}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:if(0!==(e=t.sent()).length)throw new Error("SGD optimizer does not have settable weights.");return[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate}},t.fromConfig=function(e,t){return new e(t.learningRate)},t.className="SGD",t}(mf);ff(xf);var wf=function(e){function t(t,n,r){void 0===r&&(r=!1);var a=e.call(this,t)||this;return a.learningRate=t,a.momentum=n,a.useNesterov=r,a.accumulations=[],a.m=Xr(a.momentum),a}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=xn.registeredVariables[n];null==t.accumulations[r]&&(t.accumulations[r]={originalName:n+"/momentum",variable:Nr((function(){return sa(a).variable(!1)}))});var i=t.accumulations[r].variable,s=Array.isArray(e)?e[r].tensor:e[n];null!=s&&Nr((function(){var e,n=t.m.mul(i).add(s);e=t.useNesterov?t.c.mul(s.add(n.mul(t.m))).add(a):t.c.mul(n).add(a),i.assign(n),a.assign(e)}))})),this.incrementIterations()},t.prototype.dispose=function(){this.m.dispose(),null!=this.accumulations&&Tr(this.accumulations.map((function(e){return e.variable})))},t.prototype.setMomentum=function(e){this.momentum=e},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){return He(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulations.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){return He(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulations=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},t.fromConfig=function(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)},t.className="Momentum",t}(xf);ff(wf);var kf=function(e){function t(t,n,r,a,i){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===a&&(a=null),void 0===i&&(i=!1);var s=e.call(this)||this;if(s.learningRate=t,s.decay=n,s.momentum=r,s.epsilon=a,s.accumulatedMeanSquares=[],s.accumulatedMoments=[],s.accumulatedMeanGrads=[],s.centered=i,null==a&&(s.epsilon=xn.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.");return s}return Ue(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=xn.registeredVariables[n];null==t.accumulatedMeanSquares[r]&&(t.accumulatedMeanSquares[r]={originalName:n+"/rms",variable:Nr((function(){return sa(a).variable(!1)}))}),null==t.accumulatedMoments[r]&&(t.accumulatedMoments[r]={originalName:n+"/momentum",variable:Nr((function(){return sa(a).variable(!1)}))}),null==t.accumulatedMeanGrads[r]&&t.centered&&(t.accumulatedMeanGrads[r]={originalName:n+"/mg",variable:Nr((function(){return sa(a).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedMeanSquares[r].variable,o=t.accumulatedMoments[r].variable;Nr((function(){var e=s.mul(t.decay).add(i.square().mul(1-t.decay));if(t.centered){var n=t.accumulatedMeanGrads[r].variable,u=n.mul(t.decay).add(i.mul(1-t.decay)),l=o.mul(t.momentum).add(i.mul(t.learningRate).div(e.sub(u.square().add(t.epsilon)).sqrt()));s.assign(e),n.assign(u),o.assign(l);var c=a.sub(l);a.assign(c)}else{var h=s.mul(t.decay).add(i.square().mul(1-t.decay));l=o.mul(t.momentum).add(i.mul(t.learningRate).div(h.add(t.epsilon).sqrt())),s.assign(h),o.assign(l),c=a.sub(l),a.assign(c)}}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedMeanSquares&&Tr(this.accumulatedMeanSquares.map((function(e){return e.variable}))),null!=this.accumulatedMeanGrads&&this.centered&&Tr(this.accumulatedMeanGrads.map((function(e){return e.variable}))),null!=this.accumulatedMoments&&Tr(this.accumulatedMoments.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Ge(this,void 0,void 0,(function(){var e;return He(this,(function(t){switch(t.label){case 0:return e=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&e.push.apply(e,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Ge(this,void 0,void 0,(function(){var t;return He(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=this.centered?e.length/3:e.length/2,this.accumulatedMeanSquares=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedMoments=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}}))),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},t.fromConfig=function(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)},t.className="RMSProp",t}(mf);ff(kf),"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate&&setImmediate,rn.prototype.add=function(e){return La(this,e)},rn.prototype.broadcastTo=function(e){return Xl(this,e)},rn.prototype.div=function(e){return Pi(this,e)},rn.prototype.divNoNan=function(e){return rc(this,e)},rn.prototype.squaredDifference=function(e){return Cc(this,e)},rn.prototype.tile=function(e){return ac(this,e)},rn.prototype.oneHot=function(e,t,n){return void 0===t&&(t=1),void 0===n&&(n=0),oc(this,e,t,n)},rn.prototype.transpose=function(e){return es(this,e)},rn.prototype.pad=function(e,t){return uc(this,e,t)},rn.prototype.batchNorm=function(e,t,n,r,a){return Bl(this,e,t,n,r,a)},tn=Wd;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var If,Cf,Sf=function(){return(Sf=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function Nf(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function Tf(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(If||(If={})),function(e){!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Cf||(Cf={}));var Ef={};function Rf(e){return Ef[e]}function Af(e,t,n,r){var a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){var i=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?i+1:a.inputIndexEnd;if("tensor"===a.type)return Df(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type)return t.inputNames.slice(i,s).map((function(e){return Df(e,n,r)}));var o=Array.prototype.slice.call(Df(t.inputNames.slice(i)[0],n,r).dataSync());return"number"===a.type?o[0]:o}var u=t.attrParams[e];return u&&u.value}function Df(e,t,n){var r=$f(e),a=r[0],i=r[1],s=n.currentContextIds.find((function(e){return!!t[_f(a,e)]}));return void 0!==s?t[_f(a,s)][i]:void 0}function Ff(e,t){var n=$f(e),r=n[0],a=n[1];return[_f(r,t&&t.currentContextId),a]}function _f(e,t){return t?e+"-"+t:e}function $f(e){var t=e.lastIndexOf(":");return-1===t?[e,0]:[e.substring(0,t),Number(e.substring(t+1))]}function Of(e,t){for(var n=[],r=0;r<e.length;r+=t)n.push(e.slice(r,r+t));return n}var Mf=Object.freeze({json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Lf=Object.freeze({json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Pf=Object.freeze({json:[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}]}),Bf=Object.freeze({json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}]}),zf=Object.freeze({json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),Wf=Object.freeze({json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Vf=Object.freeze({json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]}),Uf=Object.freeze({json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),Gf=Object.freeze({json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]}),Hf=Object.freeze({json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),jf=Object.freeze({json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),qf=Object.freeze({json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]}),Kf=Object.freeze({json:[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}]}),Xf=Object.freeze({json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]}),Yf=Object.freeze({json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),Qf=Object.freeze({json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}]}),Jf=function(){function e(){var e=[Mf,Lf,Pf,Bf,zf,Wf,Vf,Hf,Gf,Uf,jf,qf,Kf,Xf,Yf,Qf],t=[].concat.apply([],e.map((function(e){return e.json})));this.opMappers=t.reduce((function(e,t){return e[t.tfOpName]=t,e}),{})}return Object.defineProperty(e,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.transformGraph=function(e,t){var n=this;void 0===t&&(t={});var r=[],a=[],i=e.node.reduce((function(e,t){return e[t.name]=n.mapNode(t),t.op.startsWith("Placeholder")&&r.push(e[t.name]),"Const"===t.op&&a.push(e[t.name]),e}),{}),s=[],o=[],u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));var c=Object.keys(i);return c.forEach((function(e){var t=i[e];t.inputNames.forEach((function(e){var n=Ff(e)[0];t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(l).length?c.forEach((function(e){var t=i[e];0===t.children.length&&o.push(t)})):Object.keys(l).forEach((function(e){var t=Ff(e)[0],n=i[t];null!=n&&(n.signatureKey=l[e],o.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((function(e){var t=Ff(e)[0],n=i[t];n&&(n.signatureKey=u[e],s.push(n))})):s=r,{nodes:i,inputs:s,outputs:o,weights:a,placeholders:r,signature:t}},e.prototype.mapSignatureEntries=function(e){return Object.keys(e||{}).reduce((function(t,n){return t[e[n].name]=n,t}),{})},e.prototype.mapNode=function(e){var t=Rf(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});var n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((function(e){return e.startsWith("^")?e.substr(1):e})),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((function(e,t){return e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e}),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((function(t,n){var r=n.type,a=void 0;switch(n.type){case"string":void 0===(a=em(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=em(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(a=lm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=lm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(a=nm(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(a=nm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(a=um(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=um(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(a=tm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=tm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(a=hm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=hm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(a=om(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=om(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(a=cm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=cm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(a=am(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=am(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(a=im(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=im(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+n.type+" for op: "+e.op)}return t[n.name]={value:a,type:r},t}),{})),n},e}();function Zf(e,t){var n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){var t=qe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function em(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return null!=a?Zf(a.s,r):n}function tm(e,t,n){var r=e[t];return r?r.b:n}function nm(e,t,n){var r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function rm(e){switch("string"==typeof e&&(e=If[e]),e){case If.DT_FLOAT:return"float32";case If.DT_INT32:case If.DT_INT64:case If.DT_INT8:case If.DT_UINT8:return"int32";case If.DT_BOOL:return"bool";case If.DT_DOUBLE:return"float32";case If.DT_STRING:return"string";default:return null}}function am(e,t,n){var r=e[t];return r&&r.type?rm(r.type):n}function im(e,t,n){var r=e[t];return r&&r.list&&r.list.type?r.list.type.map((function(e){return rm(e)})):n}function sm(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((function(e){return"number"==typeof e.size?e.size:parseInt(e.size,10)})):[]}function om(e,t,n){var r=e[t];return r&&r.shape?sm(r.shape):n}function um(e,t,n){var r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((function(e){return"number"==typeof e?e:parseInt(e,10)})):n}function lm(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return a&&a.list&&a.list.s?a.list.s.map((function(e){return Zf(e,r)})):n}function cm(e,t,n){var r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((function(e){return sm(e)})):n}function hm(e,t,n){var r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var dm=function(){function e(e,t,n){var r=this;this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((function(e){return r.getInput(e)})),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((function(e,t){return e[t]=r.getAttr(t),e}),{}))}return e.prototype.getInput=function(e){return Df(e,this.tensorMap,this.context)},e.prototype.getAttr=function(e,t){var n=this.node.rawAttrs[e];if(null!=n.tensor)return Df(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return nm(this.node.rawAttrs,e,t);if(null!=n.s)return em(this.node.rawAttrs,e,t);if(null!=n.b)return tm(this.node.rawAttrs,e,t);if(null!=n.shape)return om(this.node.rawAttrs,e,t);if(null!=n.type)return am(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return um(this.node.rawAttrs,e,t);if(null!=n.list.s)return lm(this.node.rawAttrs,e,t);if(null!=n.list.shape)return cm(this.node.rawAttrs,e,t);if(null!=n.list.b)return hm(this.node.rawAttrs,e,t);if(null!=n.list.type)return im(this.node.rawAttrs,e,t)}return t},e}(),pm=function(){function e(t,n,r,a,i,s,o){this.name=t,this.dtype=n,this.maxSize=r,this.elementShape=a,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.id=e.nextId++}return Object.defineProperty(e.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),e.prototype.clearAndClose=function(){this.tensors.forEach((function(e){return e.tensor.dispose()})),this.tensors=[],this.closed_=!0},e.prototype.size=function(){return this.tensors.length},e.prototype.read=function(e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||e>=this.tensors.length)throw new Error("Tried to read from index "+e+", but array size is: "+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+e+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},e.prototype.readMany=function(e){var t=this;return e.map((function(e){return t.read(e)}))},e.prototype.write=function(e,t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index "+e+", but array is not resizeable and size is: "+this.maxSize);var n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+",\n          because the value dtype is "+t.dtype+", but TensorArray dtype is "+this.dtype+".");if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+e+"."),n&&n.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been read.");if(n&&n.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been written.");n.tensor=t,n.written=!0,this.tensors[e]=n},e.prototype.writeMany=function(e,t){var n=this;if(e.length!==t.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+e.length+" is not the same as tensors size: "+t.length+".");e.forEach((function(e,r){return n.write(e,t[r])}))},e.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+t);if(!e){e=[];for(var n=0;n<this.size();n++)e.push(n)}if(0===e.length)return qr([],[0].concat(this.elementShape));var r=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),ka(r,0)},e.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+e);if(0===this.size())return qr([],[0].concat(this.elementShape));for(var t=[],n=0;n<this.size();n++)t.push(n);var r=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+r[0].shape+")"),oa(r,0)},e.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+e.length+" vs. "+t.shape[0]);var n=Math.max.apply(Math,e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size ("+n+"  vs. "+this.maxSize+")");this.writeMany(e,Ia(t,0))},e.prototype.split=function(e,t){var n=this;if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);var r=0,a=e.map((function(e){return r+=e}));if(r!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        "+r+", and tensor's shape is: "+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+e.length+"), and the TensorArray is not marked as dynamically resizeable");var i=0===r?0:t.size/r,s=[];Nr((function(){t=t.reshape([1,r,i]);for(var o=0;o<e.length;++o){var u=[0,0===o?0:a[o-1],0],l=[1,e[o],i];s[o]=yh(t,u,l).reshape(n.elementShape)}return s}));for(var o=[],u=0;u<e.length;u++)o[u]=u;this.writeMany(o,s)},e.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,n){void 0===n&&(n=""),jt.assert(this.shapesEqualAllowUndefinedSize(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))},e.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0},e.nextId=0,e}();function fm(e,t,n){var r=function(e,t,n){switch(e.category){case"arithmetic":return Nr((function(){return function(e,t,n){switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[La(Af("a",e,t,n),Af("b",e,t,n))];case"AddN":return[_l(Af("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ri(Af("a",e,t,n),Af("b",e,t,n))];case"Mul":return[Di(Af("a",e,t,n),Af("b",e,t,n))];case"RealDiv":case"Div":return[Pi(Af("a",e,t,n),Af("b",e,t,n))];case"DivNoNan":return[rc(Af("a",e,t,n),Af("b",e,t,n))];case"FloorDiv":return[Ci(Af("a",e,t,n),Af("b",e,t,n))];case"Sub":return[Mi(Af("a",e,t,n),Af("b",e,t,n))];case"Minimum":return[Ti(Af("a",e,t,n),Af("b",e,t,n))];case"Maximum":return[Si(Af("a",e,t,n),Af("b",e,t,n))];case"Pow":return[_i(Af("a",e,t,n),Af("b",e,t,n))];case"SquaredDifference":return[Cc(Af("a",e,t,n),Af("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"basic_math":return Nr((function(){return function(e,t,n){switch(e.op){case"Abs":case"ComplexAbs":return[Wa(Af("x",e,t,n))];case"Acos":return[Va(Af("x",e,t,n))];case"Acosh":return[Ua(Af("x",e,t,n))];case"Asin":return[Ga(Af("x",e,t,n))];case"Asinh":return[Ha(Af("x",e,t,n))];case"Atan":return[ja(Af("x",e,t,n))];case"Atan2":return[ki(Af("x",e,t,n),Af("y",e,t,n))];case"Atanh":return[qa(Af("x",e,t,n))];case"Ceil":return[Ka(Af("x",e,t,n))];case"Complex":return[Gr(Af("real",e,t,n),Af("imag",e,t,n))];case"Cos":return[Ya(Af("x",e,t,n))];case"Cosh":return[Qa(Af("x",e,t,n))];case"Elu":return[Oh(Af("x",e,t,n))];case"Erf":return[Ja(Af("x",e,t,n))];case"Exp":return[Za(Af("x",e,t,n))];case"Expm1":return[ei(Af("x",e,t,n))];case"Floor":return[ti(Af("x",e,t,n))];case"Log":return[ni(Af("x",e,t,n))];case"Log1p":return[ri(Af("x",e,t,n))];case"Imag":return[jr(Af("x",e,t,n))];case"Neg":return[ii(Af("x",e,t,n))];case"Reciprocal":return[si(Af("x",e,t,n))];case"Real":return[Hr(Af("x",e,t,n))];case"Relu":return[Ph(Af("x",e,t,n))];case"Round":return[oi(Af("x",e,t,n))];case"Selu":return[zh(Af("x",e,t,n))];case"Sigmoid":return[li(Af("x",e,t,n))];case"Sin":return[fi(Af("x",e,t,n))];case"Sign":return[ci(Af("x",e,t,n))];case"Sinh":return[mi(Af("x",e,t,n))];case"Softplus":return[gi(Af("x",e,t,n))];case"Sqrt":return[vi(Af("x",e,t,n))];case"Square":return[Ic(Af("x",e,t,n))];case"Tanh":return[xi(Af("x",e,t,n))];case"Tan":return[bi(Af("x",e,t,n))];case"Relu6":case"ClipByValue":return[Xa(Af("x",e,t,n),Af("clipValueMin",e,t,n),Af("clipValueMax",e,t,n))];case"Rsqrt":return[ui(Df(e.inputNames[0],t,n))];case"Prod":return[$h(Af("x",e,t,n),Af("axes",e,t,n))];case"LeakyRelu":return[Mh(Af("x",e,t,n),Af("alpha",e,t,n))];case"Prelu":return[Lh(Af("x",e,t,n),Af("alpha",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"control":return function(e,t,n){return Nf(void 0,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k,I,C,S,N,T,E,R,A,D,F,_,$,O,M;return Tf(this,(function(L){switch(L.label){case 0:switch(e.op){case"LoopCond":return[3,1];case"Switch":return[3,2];case"Merge":return[3,4];case"Enter":return[3,5];case"Exit":return[3,6];case"NextIteration":return[3,7];case"TensorArrayV3":return[3,8];case"TensorArrayWriteV3":return[3,9];case"TensorArrayReadV3":return[3,10];case"TensorArrayGatherV3":return[3,11];case"TensorArrayScatterV3":return[3,12];case"TensorArrayConcatV3":return[3,13];case"TensorArraySplitV3":return[3,14];case"TensorArraySizeV3":return[3,15];case"TensorArrayCloseV3":return[3,16]}return[3,17];case 1:return[2,[Af("pred",e,t,n).clone()]];case 2:return r=Af("pred",e,t,n),a=Af("data",e,t,n),[4,r.data()];case 3:return[2,L.sent()[0]?[void 0,a.clone()]:[a.clone(),void 0]];case 4:return[2,(i=e.inputNames.find((function(e){return void 0!==Df(e,t,n)})))?[Df(i,t,n).clone()]:void 0];case 5:return s=Af("frameName",e,t,n),o=Af("tensor",e,t,n),n.enterFrame(s),[2,[o.clone()]];case 6:return u=Af("tensor",e,t,n),n.exitFrame(),[2,[u.clone()]];case 7:return l=Af("tensor",e,t,n),n.nextIteration(),[2,[l.clone()]];case 8:return c=Af("size",e,t,n),h=Af("dtype",e,t,n),d=Af("elementShape",e,t,n),p=Af("dynamicSize",e,t,n),f=Af("clearAfterRead",e,t,n),m=Af("identicalElementShapes",e,t,n),g=Af("name",e,t,n),v=new pm(g,h,c,d,m,p,f),n.addTensorArray(v),[2,[Xr(v.id),Xr(1)]];case 9:return y=Af("tensorArrayId",e,t,n),b=Af("index",e,t,n),x=Af("tensor",e,t,n),n.getTensorArray(y).write(b,x),[2,[Xr(1)]];case 10:return w=Af("tensorArrayId",e,t,n),k=Af("index",e,t,n),[2,[n.getTensorArray(w).read(k)]];case 11:return I=Af("tensorArrayId",e,t,n),C=Af("indices",e,t,n),S=Af("dtype",e,t,n),[2,[n.getTensorArray(I).gather(C,S)]];case 12:return N=Af("tensorArrayId",e,t,n),T=Af("indices",e,t,n),E=Af("tensor",e,t,n),n.getTensorArray(N).scatter(T,E),[2,[Xr(1)]];case 13:return R=Af("tensorArrayId",e,t,n),A=n.getTensorArray(R),D=Af("dtype",e,t,n),[2,[A.concat(D)]];case 14:return F=Af("tensorArrayId",e,t,n),_=Af("tensor",e,t,n),$=Af("lengths",e,t,n),n.getTensorArray(F).split($,_),[2,[Xr(1)]];case 15:return O=Af("tensorArrayId",e,t,n),[2,[Xr(n.getTensorArray(O).size(),"int32")]];case 16:return M=Af("tensorArrayId",e,t,n),n.getTensorArray(M).clearAndClose(),[2,[Xr(0)]];case 17:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"convolution":return Nr((function(){return function(e,t,n){switch(e.op){case"Conv1D":var r=Af("stride",e,t,n),a=Af("pad",e,t,n),i=Af("dataFormat",e,t,n).toUpperCase(),s=Af("dilation",e,t,n);return[Hc(Af("x",e,t,n),Af("filter",e,t,n),r,a,i,s)];case"Conv2D":r=Af("strides",e,t,n),a=Af("pad",e,t,n),i=Af("dataFormat",e,t,n).toUpperCase();var o=Af("dilations",e,t,n);return[jc(Af("x",e,t,n),Af("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])];case"_FusedConv2D":case"FusedDepthwiseConv2dNative":var u=Af("fusedOps",e,t,n),l=u[0],c=u[1],h="biasadd"===l,d="prelu"===c,p="fusedbatchnorm"===l,f=Af("numArgs",e,t,n);if(h){if(d&&2!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&1!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");r=Af("strides",e,t,n),a=Af("pad",e,t,n),i=Af("dataFormat",e,t,n).toUpperCase(),o=Af("dilations",e,t,n);var m=Af("args",e,t,n),g=m[0],v=m[1];return[("_FusedConv2D"===e.op?zd.conv2d:zd.depthwiseConv2d)({x:Af("x",e,t,n),filter:Af("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:g,activation:c,preluActivationWeights:v})];case"Conv2DBackpropInput":case"Conv2dTranspose":var y=Af("outputShape",e,t,n);return r=Af("strides",e,t,n),a=Af("pad",e,t,n),[eh(Af("x",e,t,n),Af("filter",e,t,n),y,[r[1],r[2]],a)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":return r=Af("strides",e,t,n),a=Af("pad",e,t,n),o=Af("dilations",e,t,n),i=Af("dataFormat",e,t,n).toUpperCase(),[Yc(Af("input",e,t,n),Af("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])];case"Conv3D":return r=Af("strides",e,t,n),a=Af("pad",e,t,n),i=Af("dataFormat",e,t,n).toUpperCase(),o=Af("dilations",e,t,n),[qc(Af("x",e,t,n),Af("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])];case"AvgPool":r=Af("strides",e,t,n),a=Af("pad",e,t,n);var b=Af("kernelSize",e,t,n);return[ph(Af("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a)];case"MaxPool":return r=Af("strides",e,t,n),a=Af("pad",e,t,n),b=Af("kernelSize",e,t,n),[dh(Af("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a)];case"MaxPoolWithArgmax":r=Af("strides",e,t,n),a=Af("pad",e,t,n),b=Af("kernelSize",e,t,n);var x=Af("includeBatchInIndex",e,t,n),w=vh(Af("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a,x);return[w.result,w.indexes];case"AvgPool3D":return r=Af("strides",e,t,n),a=Af("pad",e,t,n),b=Af("kernelSize",e,t,n),[gh(Af("x",e,t,n),[b[1],b[2],b[3]],[r[1],r[2],r[3]],a)];case"MaxPool3D":return r=Af("strides",e,t,n),a=Af("pad",e,t,n),b=Af("kernelSize",e,t,n),[mh(Af("x",e,t,n),[b[1],b[2],b[3]],[r[1],r[2],r[3]],a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"creation":return Nr((function(){return function(e,t,n){switch(e.op){case"Fill":var r=Af("shape",e,t,n),a=Af("dtype",e,t,n);return[na(r,Af("value",e,t,n),a)];case"LinSpace":var i=Af("start",e,t,n);return[ra(i,Af("stop",e,t,n),Af("num",e,t,n))];case"Multinomial":var s=Af("logits",e,t,n),o=Af("numSamples",e,t,n),u=Af("seed",e,t,n);return[sc(s,o,u)];case"OneHot":var l=Af("indices",e,t,n),c=Af("depth",e,t,n),h=Af("onValue",e,t,n),d=Af("offValue",e,t,n);return[oc(l,c,h,d)];case"Ones":return[ea(Af("shape",e,t,n),Af("dtype",e,t,n))];case"OnesLike":return[ia(Af("x",e,t,n))];case"RandomUniform":return[kc(Af("shape",e,t,n),Af("minval",e,t,n),Af("maxval",e,t,n),Af("dtype",e,t,n))];case"Range":return[aa(i=Af("start",e,t,n),Af("stop",e,t,n),Af("step",e,t,n),Af("dtype",e,t,n))];case"TruncatedNormal":r=Af("shape",e,t,n);var p=Af("mean",e,t,n),f=Af("stdDev",e,t,n);return u=Af("seed",e,t,n),[Sc(r,p,f,Af("dtype",e,t,n),u)];case"Zeros":return[ta(Af("shape",e,t,n),Af("dtype",e,t,n))];case"ZerosLike":return[sa(Af("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"dynamic":return function(e,t,n){return Nf(void 0,void 0,void 0,(function(){var r,a,i,s,o,u,l,c;return Tf(this,(function(h){switch(h.label){case 0:switch(e.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":return[3,1];case"Where":return[3,5];case"ListDiff":return[3,7]}return[3,8];case 1:return r=Af("boxes",e,t,n),a=Af("scores",e,t,n),i=Af("maxOutputSize",e,t,n),s=Af("iouThreshold",e,t,n),o=Af("scoreThreshold",e,t,n),"NonMaxSuppressionV5"!==e.op?[3,3]:(u=Af("softNmsSigma",e,t,n),[4,Fd.nonMaxSuppressionWithScoreAsync(r,a,i,s,o,u)]);case 2:return[2,[(c=h.sent()).selectedIndices,c.selectedScores]];case 3:return[4,Fd.nonMaxSuppressionAsync(r,a,i,s,o)];case 4:return[2,[h.sent()]];case 5:return l=Af("condition",e,t,n).asType("bool"),[4,nc(l)];case 6:return c=[h.sent()],l.dispose(),[2,c];case 7:return[2,Ca(Af("x",e,t,n),Af("y",e,t,n))];case 8:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"evaluation":return Nr((function(){return function(e,t,n){if("TopKV2"===e.op){var r=Af("x",e,t,n),a=Af("k",e,t,n),i=Af("sorted",e,t,n),s=qh(r,a,i);return[s.values,s.indices]}throw TypeError("Node type "+e.op+" is not implemented")}(e,t,n)}));case"image":return Nr((function(){return function(e,t,n){switch(e.op){case"ResizeBilinear":var r=Af("images",e,t,n),a=Af("size",e,t,n),i=Af("alignCorners",e,t,n);return[Fd.resizeBilinear(r,[a[0],a[1]],i)];case"ResizeNearestNeighbor":return r=Af("images",e,t,n),a=Af("size",e,t,n),i=Af("alignCorners",e,t,n),[Fd.resizeNearestNeighbor(r,[a[0],a[1]],i)];case"CropAndResize":var s=Af("image",e,t,n),o=Af("boxes",e,t,n),u=Af("boxInd",e,t,n),l=Af("cropSize",e,t,n),c=Af("method",e,t,n),h=Af("extrapolationValue",e,t,n);return[Fd.cropAndResize(s,o,u,l,c,h)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"graph":return Nr((function(){return function(e,t,n){switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":var r=Af("default",e,t,n);return[Df(e.name,t,n)||r];case"Placeholder":return[Df(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Af("x",e,t,n).clone()];case"IdentityN":return Af("x",e,t,n).map((function(e){return e.clone()}));case"Shape":return[Yr(Af("x",e,t,n).shape,"int32")];case"ShapeN":return Af("x",e,t,n).map((function(e){return Yr(e.shape)}));case"Size":return[Xr(Af("x",e,t,n).size,"int32")];case"Rank":return[Xr(Af("x",e,t,n).rank,"int32")];case"NoOp":return[Xr(1)];case"Print":var a=Af("x",e,t,n),i=Af("data",e,t,n),s=Af("message",e,t,n),o=Af("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(var u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,o));return[a];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"logical":return Nr((function(){return function(e,t,n){switch(e.op){case"Equal":return[Nc(Af("a",e,t,n),Af("b",e,t,n))];case"NotEqual":return[Mc(Af("a",e,t,n),Af("b",e,t,n))];case"Greater":return[Ec(Af("a",e,t,n),Af("b",e,t,n))];case"GreaterEqual":return[Rc(Af("a",e,t,n),Af("b",e,t,n))];case"Less":return[Fc(Af("a",e,t,n),Af("b",e,t,n))];case"LessEqual":return[_c(Af("a",e,t,n),Af("b",e,t,n))];case"LogicalAnd":return[Ql(Af("a",e,t,n),Af("b",e,t,n))];case"LogicalNot":return[Jl(Af("a",e,t,n))];case"LogicalOr":return[Zl(Af("a",e,t,n),Af("b",e,t,n))];case"Select":case"SelectV2":return[tc(Af("condition",e,t,n),Af("a",e,t,n),Af("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"matrices":return Nr((function(){return function(e,t,n){switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[nh(Af("a",e,t,n),Af("b",e,t,n),Af("transposeA",e,t,n),Af("transposeB",e,t,n))];case"Transpose":return[es(Af("x",e,t,n),Af("perm",e,t,n))];case"_FusedMatMul":var r=Af("fusedOps",e,t,n),a=r[0],i=r[1],s="biasadd"===a,o="prelu"===i,u=Af("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var l=Af("args",e,t,n),c=l[0],h=l[1];return[zd.matMul({a:Af("a",e,t,n),b:Af("b",e,t,n),transposeA:Af("transposeA",e,t,n),transposeB:Af("transposeB",e,t,n),bias:c,activation:i,preluActivationWeights:h})];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"normalization":return Nr((function(){return function(e,t,n){switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Bl(Af("x",e,t,n),Af("mean",e,t,n),Af("variance",e,t,n),Af("offset",e,t,n),Af("scale",e,t,n),Af("epsilon",e,t,n))];case"LRN":return[Wh(Af("x",e,t,n),Af("radius",e,t,n),Af("bias",e,t,n),Af("alpha",e,t,n),Af("beta",e,t,n))];case"Softmax":return[Ji(Af("x",e,t,n))];case"LogSoftmax":return[Zi(Af("x",e,t,n))];case"SparseToDense":return[ed(Af("sparseIndices",e,t,n),Af("outputShape",e,t,n),Af("sparseValues",e,t,n),Af("defaultValue",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"reduction":return Nr((function(){return function(e,t,n){switch(e.op){case"Max":var r=Af("axis",e,t,n),a=Af("keepDims",e,t,n);return[Rh(Af("x",e,t,n),r,a)];case"Mean":return r=Af("axis",e,t,n),a=Af("keepDims",e,t,n),[Ah(Af("x",e,t,n),r,a)];case"Min":return r=Af("axis",e,t,n),a=Af("keepDims",e,t,n),[Dh(Af("x",e,t,n),r,a)];case"Sum":return r=Af("axis",e,t,n),a=Af("keepDims",e,t,n),[_h(Af("x",e,t,n),r,a)];case"All":return r=Af("axis",e,t,n),a=Af("keepDims",e,t,n),[Ch(Af("x",e,t,n),r,a)];case"Any":return r=Af("axis",e,t,n),a=Af("keepDims",e,t,n),[Sh(Af("x",e,t,n),r,a)];case"ArgMax":return r=Af("axis",e,t,n),[Nh(Af("x",e,t,n),r)];case"ArgMin":return r=Af("axis",e,t,n),[Th(Af("x",e,t,n),r)];case"Prod":return r=Af("axis",e,t,n),a=Af("keepDims",e,t,n),[$h(Af("x",e,t,n),r,a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"slice_join":return Nr((function(){return function(e,t,n){switch(e.op){case"ConcatV2":case"Concat":var r=Af("n",e,t,n),a=Af("axis",e,t,n),i=Af("tensors",e,t,n);return i=i.slice(0,r),[oa(i,a)];case"GatherV2":case"Gather":a=Af("axis",e,t,n);var s=Af("x",e,t,n),o=Af("indices",e,t,n);return[zc(s,o.asType("int32"),a)];case"ReverseV2":case"Reverse":return a=Af("axis",e,t,n),s=Af("x",e,t,n),[ih(s,a)];case"Slice":var u=Af("begin",e,t,n),l=Af("size",e,t,n);return[yh(Af("x",e,t,n),u,l)];case"StridedSlice":u=Af("begin",e,t,n);var c=Af("end",e,t,n),h=Af("strides",e,t,n),d=Af("beginMask",e,t,n),p=Af("endMask",e,t,n),f=Af("ellipsisMask",e,t,n),m=Af("newAxisMask",e,t,n),g=Af("shrinkAxisMask",e,t,n),v=Af("x",e,t,n);if(1===u.length&&v.shape.length>1)for(var y=1;y<v.shape.length;y++)u.push(0),c.push(v.shape[y]),h.push(h[0]);return[jh(v,u,c,h,d,p,f,m,g)];case"Pack":return Nr((function(){var r=Af("axis",e,t,n),a=Af("tensors",e,t,n),i=a[0].shape,s=a[0].squeeze().shape,o=a.map((function(e){var t=jt.arraysEqual(e.shape,i);if(!t&&!jt.arraysEqual(e.squeeze().shape,s))throw new Error("the input tensors shape does not match");return t?e:e.reshape(i)}));return[ka(o,r)]}));case"Unpack":return Nr((function(){var r=Af("axis",e,t,n),a=Af("tensor",e,t,n);return Ia(a,r)}));case"Tile":var b=Af("reps",e,t,n);return[ac(Af("x",e,t,n),b)];case"Split":case"SplitV":a=Af("axis",e,t,n);var x=Af("numOrSizeSplits",e,t,n);return da(Af("x",e,t,n),x,a);case"ScatterNd":o=Af("indices",e,t,n);var w=Af("values",e,t,n),k=Af("shape",e,t,n);return[Kh(o,w,k)];case"GatherNd":var I=Af("x",e,t,n);return o=Af("indices",e,t,n),[td(I,o)];case"SparseToDense":o=Af("sparseIndices",e,t,n),k=Af("outputShape",e,t,n);var C=Af("sparseValues",e,t,n),S=Af("defaultValue",e,t,n);return[ed(o,C,k,C.dtype===S.dtype?S:S.asType(C.dtype))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"spectral":return Nr((function(){return function(e,t,n){switch(e.op){case"FFT":return[Xh(Af("x",e,t,n))];case"IFFT":return[Yh(Af("x",e,t,n))];case"RFFT":return[Qh(Af("x",e,t,n))];case"IRFFT":return[Jh(Af("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"transformation":return Nr((function(){return function(e,t,n){switch(e.op){case"Cast":return[ma(Af("x",e,t,n),Af("dtype",e,t,n))];case"ExpandDims":var r=Af("axis",e,t,n);return[ya(Af("x",e,t,n),r)];case"Squeeze":return r=Af("axis",e,t,n),[wa(Af("x",e,t,n),r)];case"Reshape":return[ba(Af("x",e,t,n),Af("shape",e,t,n))];case"PadV2":case"Pad":return[uc(Af("x",e,t,n),Of(Af("padding",e,t,n),2),Af("constantValue",e,t,n))];case"SpaceToBatchND":var a=Af("blockShape",e,t,n),i=Of(Af("paddings",e,t,n),2);return[xa(Af("x",e,t,n),a,i)];case"BatchToSpaceND":a=Af("blockShape",e,t,n);var s=Of(Af("crops",e,t,n),2);return[fa(Af("x",e,t,n),a,s)];case"DepthToSpace":var o=Af("blockSize",e,t,n),u=Af("dataFormat",e,t,n).toUpperCase();return[va(Af("x",e,t,n),o,u)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"custom":var r=Rf(e.op);if(r&&r.customExecutor)return r.customExecutor(new dm(e,t,n));throw TypeError("Custom op "+e.op+" is not registered.");default:throw TypeError("Unknown op '"+e.op+"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(e,t,n);return r instanceof Promise?r.then((function(e){return[].concat(e)})):[].concat(r)}var mm=function(){function e(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return e.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(e.prototype,"currentContext",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),e.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e},e.prototype.contextIdforContexts=function(e){return e?e.map((function(e){return 0===e.id&&0===e.iterationId?"":e.frameName+"-"+e.iterationId})).join("/"):""},e.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},e.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},e.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},e.prototype.getWeight=function(e){return this.weightMap[e]},e.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},e.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},e}();function gm(e,t,n){for(var r=new Set,a=[],i=null,s=null,o=new Set,u=Object.keys(e).map((function(e){return $f(e)[0]})),l=t.slice();l.length>0;){var c=l.pop();(bm(c)||xm(c))&&null==i&&(s=(i=c).children.map((function(e){return e.name})).filter((function(e){return r.has(e)}))),r.add(c.name),null==n[c.name]&&-1===u.indexOf(c.name)&&(0!==c.inputs.length?c.inputs.forEach((function(e){o.has(e.name)||(o.add(e.name),l.push(e))})):a.push(c.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:s}}var vm=["Switch","Merge","Enter","Exit","NextIteration"],ym=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function bm(e){return vm.indexOf(e.op)>=0}function xm(e){return ym.indexOf(e.op)>=0}var wm=function(){function e(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature}return Object.defineProperty(e.prototype,"weightMap",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map((function(t){return e[t].map((function(e){return e.id}))}));this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this._inputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this._outputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this._inputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this._outputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),e.prototype.getCompilationKey=function(e,t){var n=e.map((function(e){return e.name})).sort(),r=t.map((function(e){return e.name})).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)},e.prototype.compile=function(e,t){var n=gm(e,t,this.weightMap),r=n.missingInputs,a=n.dynamicNode,i=n.syncInputs;if(null!=a)throw new Error("This execution contains the node '"+a.name+"', which has the dynamic op '"+a.op+"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs ["+i+"]");if(r.length>0){var s=t.map((function(e){return e.name})),o=Object.keys(e);throw new Error("Cannot compute the outputs ["+s+"] from the provided inputs ["+o+"]. Missing the following inputs: ["+r+"]")}return function(e,t,n){var r=n.usedNodes,a=n.inputs,i=[];Object.keys(a).map((function(e){return $f(e)[0]})).map((function(t){return e.nodes[t]})).forEach((function(e){r.has(e.name)&&i.push(e)})),e.weights.forEach((function(e){r.has(e.name)&&i.push(e)}));for(var s=new Set,o=[];i.length>0;){var u=i.pop();s.add(u.name),t[u.name]||o.push(u),u.children.forEach((function(e){!s.has(e.name)&&r.has(e.name)&&e.inputs.every((function(e){return s.has(e.name)}))&&i.push(e)}))}return o}(this.graph,this.weightMap,n)},e.prototype.execute=function(e,t){var n=this;e=this.mapInputs(e);var r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);var a=r.map((function(e){return n.graph.nodes[$f(e)[0]]})),i=t.map((function(e){return n.graph.nodes[$f(e)[0]]})),s=this.getCompilationKey(a,i),o=this.compiledMap.get(s);null==o&&(o=this.compile(e,i),this.compiledMap.set(s,o));var u={};return Nr((function(){var r=new mm(n._weightMap,u),a=Sf({},n.weightMap);Object.keys(e).forEach((function(t){var n=$f(t),r=n[0],i=[];i[n[1]]=e[t],a[r]=i}));for(var i=n.getFrozenTensorIds(a),s={},l=0;l<o.length;l++){var c=o[l];if(!a[c.name]){var h=fm(c,a,r);if(h instanceof Promise)throw new Error("The execution of the op '"+c.op+"' returned a promise. Please use model.executeAsync() instead.");a[c.name]=h,n.checkTensorForDisposal(c.name,c,a,r,i,t,s)}}return t.map((function(e){return Df(e,a,r)}))}))},e.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map((function(t){return e[t]})).map((function(e){return e.map((function(e){return e.id}))})));return new Set(t)},e.prototype.checkTensorForDisposal=function(e,t,n,r,a,i,s){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((function(e){null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)})),t.inputs.forEach((function(e){if("control"!==e.category){var t=function(e,t,n){return t[_f(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((function(e){if(e&&!a.has(e.id)){var t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}))}})))},e.prototype.executeAsync=function(e,t){return Nf(this,void 0,void 0,(function(){var n,r,a,i,s,o,u=this;return Tf(this,(function(l){switch(l.label){case 0:return e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t),n={},r=new mm(this._weightMap,n),[4,this.executeWithControlFlow(e,r,t)];case 1:return a=l.sent(),i=t.map((function(e){return Df(e,a,r)})),s=new Set(i.map((function(e){return e.id}))),o=new Set(Object.keys(e).map((function(t){return e[t].id}))),Object.keys(a).forEach((function(e){a[e].forEach((function(e){!e||e.isDisposed||s.has(e.id)||o.has(e.id)||-1!==u.weightIds.indexOf(e.id)||e.dispose()}))})),[2,i]}}))}))},e.prototype.executeWithControlFlow=function(e,t,n){return Nf(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b=this;return Tf(this,(function(x){switch(x.label){case 0:r=Object.keys(e),a=r.map((function(e){return b.graph.nodes[$f(e)[0]]})),i=n.map((function(e){return b.graph.nodes[$f(e)[0]]})),s=gm(e,i,this.weightMap),o=s.usedNodes,u=s.missingInputs,l=s.dynamicNode,c=s.syncInputs,h=a.concat(this.graph.weights).map((function(e){return{node:e,contexts:t.currentContext}})),d=Sf({},this.weightMap),Object.keys(e).forEach((function(t){var n=$f(t),r=n[0],a=[];a[n[1]]=e[t],d[r]=a})),p={},f=this.getFrozenTensorIds(d),m={},x.label=1;case 1:return h.length>0?(g=this.processStack(a,h,t,d,m,f,n,p,o),[4,Promise.all(g)]):[3,3];case 2:return x.sent(),[3,1];case 3:if(null==l&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),(v=i.filter((function(e){return!bm(e)&&!Df(e.name,d,t)})).map((function(e){return e.name}))).length>0)throw y="",null!=l&&(y="Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs ["+c+"]"),new Error("Cannot compute the outputs ["+v+"] from the provided inputs ["+r+"]. Consider providing the following inputs: ["+u+"]. "+y);return[2,d]}}))}))},e.prototype.processStack=function(e,t,n,r,a,i,s,o,u){for(var l=this,c=[],h=function(){var h=t.pop();n.currentContext=h.contexts;var p="";if("Enter"===h.node.op&&Af("isConstant",h.node,r,n)&&(p=Ff(h.node.name,n)[0]),-1===e.indexOf(h.node)){var f=fm(h.node,r,n);p||(p=Ff(h.node.name,n)[0]);var m=n.currentContext;f instanceof Promise?c.push(f.then((function(e){return r[p]=e,n.currentContext=m,l.checkTensorForDisposal(p,h.node,r,n,i,s,o),l.processChildNodes(h.node,t,n,r,a,u),e}))):(r[p]=f,d.checkTensorForDisposal(p,h.node,r,n,i,s,o),d.processChildNodes(h.node,t,n,r,a,u))}else d.processChildNodes(h.node,t,n,r,a,u)},d=this;t.length>0;)h();return c},e.prototype.processChildNodes=function(e,t,n,r,a,i){e.children.forEach((function(e){var s=Ff(e.name,n)[0];!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((function(e){return!!Df(e,r,n)}))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((function(e){return!!Df(e,r,n)}))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))}))},e.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach((function(t){return e.weightMap[t].forEach((function(e){return e.dispose()}))}))},e.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach((function(n){var r=e[n],a=$f(n)[0],i=t.graph.nodes[a];if(i.attrParams.shape&&i.attrParams.shape.value){var s=i.attrParams.shape.value,o=s.length===r.shape.length&&r.shape.every((function(e,t){return-1===s[t]||s[t]===e}));jt.assert(o,(function(){return"The shape of dict['"+i.name+"'] provided in model.execute(dict) must be ["+s+"], but was ["+r.shape+"]"}))}i.attrParams.dtype&&i.attrParams.dtype.value&&jt.assert(r.dtype===i.attrParams.dtype.value,(function(){return"The dtype of dict['"+i.name+"'] provided in model.execute(dict) must be "+i.attrParams.dtype.value+", but was "+r.dtype}))}))},e.prototype.mapInputs=function(e){var t={};for(var n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t},e.prototype.checkInputs=function(e){var t=this,n=Object.keys(e).filter((function(e){var n=$f(e)[0];return null==t.graph.nodes[n]}));if(n.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+n+"] that are not part of graph")},e.prototype.mapOutputs=function(e){var t=this;return e.map((function(e){return null!=t._signature&&null!=t._signature.outputs&&null!=t._signature.outputs[e]?t._signature.outputs[e].name:e}),{})},e.prototype.checkOutputs=function(e){var t=this;e.forEach((function(e){var n=$f(e)[0];if(!t.graph.nodes[n])throw new Error("The output '"+e+"' is not found in the graph")}))},e}(),km=function(){function e(e,t){void 0===t&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}return Object.defineProperty(e.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),e.prototype.findIOHandler=function(){var e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=lf.browserHTTPRequest(e,this.loadOptions);else{var t=lf.getLoadHandlers(e,this.loadOptions.onProgress);if(0===t.length)t.push(lf.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one ("+t.length+") load handlers for URL '"+[e]+"'");this.handler=t[0]}},e.prototype.load=function(){return Nf(this,void 0,void 0,(function(){var e,t,n,r;return Tf(this,(function(a){switch(a.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return e=this,[4,this.handler.load()];case 1:return e.artifacts=a.sent(),t=this.artifacts.modelTopology,n={},null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=t.versions.producer+"."+t.versions.minConsumer,r=lf.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs),this.executor=new wm(Jf.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),[2,!0]}}))}))},e.prototype.save=function(e,t){return Nf(this,void 0,void 0,(function(){var t;return Tf(this,(function(n){if("string"==typeof e){if(0===(t=lf.getSaveHandlers(e)).length)throw new Error("Cannot find any save handlers for URL '"+e+"'");if(t.length>1)throw new Error("Found more than one ("+t.length+") save handlers for URL '"+e+"'");e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[2,e.save(this.artifacts)]}))}))},e.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},e.prototype.normalizeInputs=function(e){if(!(e instanceof rn||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the graph model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce((function(t,n,r){return t[n]=e[r],t}),{})},e.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},e.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var n=this.executor.execute(e,t);return n.length>1?n:n[0]},e.prototype.executeAsync=function(e,t){return Nf(this,void 0,void 0,(function(){var n;return Tf(this,(function(r){switch(r.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(n=r.sent()).length>1?n:n[0]]}}))}))},e.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce((function(t,n){return t[n]=[e[n]],t}),{})},e.prototype.dispose=function(){this.executor.dispose()},e}();function Im(e,t){return void 0===t&&(t={}),Nf(this,void 0,void 0,(function(){var n;return Tf(this,(function(r){switch(r.label){case 0:if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");return null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file"),[4,(n=new km(e,t)).load()];case 1:return r.sent(),[2,n]}}))}))
/**
    * @license
    * Copyright 2019 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */}function Cm(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function Sm(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var Nm=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var a=r[n];t.push(a)}return t},Tm=function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]},Em=function(){function e(){this.root=new Tm}return e.prototype.insert=function(e,t,n){for(var r=this.root,a=Nm(e),i=0;i<a.length;i++)r.children[a[i]]||(r.children[a[i]]=new Tm,r.children[a[i]].parent=r,r.children[a[i]].word[0]=r.word[0].concat(a[i])),r=r.children[a[i]],i===a.length-1&&(r.end=!0,r.word[1]=t,r.word[2]=n)},e.prototype.commonPrefixSearch=function(e){for(var t=[],n=this.root.children[e[0]],r=0;r<e.length&&n;r++)n.end&&t.push(n.word),n=n.children[e[r+1]];return t.length||t.push([[e[0]],0,0]),t},e}();var Rm=function(){function e(e){this.vocabulary=e,this.trie=new Em;for(var t=6;t<this.vocabulary.length;t++)this.trie.insert(this.vocabulary[t][0],this.vocabulary[t][1],t)}return e.prototype.encode=function(e){var t=[],n=[],r=[];e=function(e){return"▁"+e.normalize("NFKC").replace(/ /g,"▁")}(e);for(var a=Nm(e),i=0;i<=a.length;i++)t.push({}),n.push(0),r.push(0);for(i=0;i<a.length;i++)for(var s=this.trie.commonPrefixSearch(a.slice(i)),o=0;o<s.length;o++){var u=s[o],l={key:u[0],score:u[1],index:u[2]};null==t[i+(c=u[0].length)][i]&&(t[i+c][i]=[]),t[i+c][i].push(l)}for(var c=0;c<=a.length;c++)for(var h in t[c]){var d=t[c][h];for(o=0;o<d.length;o++){var p=d[o],f=p.score+r[c-p.key.length];(0===r[c]||f>=r[c])&&(r[c]=f,n[c]=d[o].index)}}for(var m=[],g=n.length-1;g>0;)m.push(n[g]),g-=this.vocabulary[n[g]][0].length;var v=[],y=!1;for(i=0;i<m.length;i++){var b=m[i];y&&0===b||v.push(b),y=0===b}return v.reverse()},e}();function Am(){return Cm(this,void 0,void 0,(function(){var e;return Sm(this,(function(t){switch(t.label){case 0:return[4,(e=new Fm).load()];case 1:return t.sent(),[2,e]}}))}))}function Dm(e){return void 0===e&&(e="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/vocab.json"),Cm(this,void 0,void 0,(function(){return Sm(this,(function(t){switch(t.label){case 0:return[4,jt.fetch(e)];case 1:return[2,t.sent().json()]}}))}))}var Fm=function(){function e(){}return e.prototype.loadModel=function(){return Cm(this,void 0,void 0,(function(){return Sm(this,(function(e){return[2,Im("https://tfhub.dev/tensorflow/tfjs-model/universal-sentence-encoder-lite/1/default/1",{fromTFHub:!0})]}))}))},e.prototype.load=function(){return Cm(this,void 0,void 0,(function(){var e,t,n;return Sm(this,(function(r){switch(r.label){case 0:return[4,Promise.all([this.loadModel(),Dm()])];case 1:return e=r.sent(),t=e[0],n=e[1],this.model=t,this.tokenizer=new Rm(n),[2]}}))}))},e.prototype.embed=function(e){return Cm(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u=this;return Sm(this,(function(l){switch(l.label){case 0:for("string"==typeof e&&(e=[e]),t=e.map((function(e){return u.tokenizer.encode(e)})),n=t.map((function(e,t){return e.map((function(e,n){return[t,n]}))})),r=[],a=0;a<n.length;a++)r=r.concat(n[a]);return i=Qr(r,[r.length,2],"int32"),s=Yr(jt.flatten(t),"int32"),[4,this.model.executeAsync({indices:i,values:s})];case 1:return o=l.sent(),i.dispose(),s.dispose(),[2,o]}}))}))},e}();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _m{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class $m{refCount(e){return Om("refCount")}incRef(e){return Om("incRef")}timerAvailable(){return!0}time(e){return Om("time")}read(e){return Om("read")}readSync(e){return Om("readSync")}readToGPU(e,t){return Om("readToGPU")}numDataIds(){return Om("numDataIds")}disposeData(e,t){return Om("disposeData")}write(e,t,n){return Om("write")}move(e,t,n,r,a){return Om("move")}createTensorFromGPUData(e,t,n){return Om("createTensorFromGPUData")}memory(){return Om("memory")}floatPrecision(){return Om("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Om("dispose")}}function Om(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mm(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Bm(e,t,n)}function Lm(e,t,n){return Math.max(e,Math.min(t,n))}function Pm(e){return e%2==0?e:e+1}function Bm(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function zm(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Wm(e,t,n=""){zm(Gm(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Vm(e){zm(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Um(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Gm(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Hm(e){return e%1==0}function jm(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function qm(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Km(e,t=(e=>0),n,r){return new Promise(((a,i)=>{let s=0;const o=()=>{if(e())return void a();s++;const u=t(s);null!=n&&s>=n?i():null!=r?r(o,u):setTimeout(o,u)};o()}))}function Xm(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function Ym(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),zm(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),zm(e.every((e=>Hm(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function Qm(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:Ym(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function Jm(e,t){return Zm(e,t)}function Zm(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function eg(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function tg(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ng(e){return"string"==typeof e||e instanceof String}function rg(e){return"number"==typeof e}function ag(e){return Array.isArray(e)?ag(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":rg(e)?"float32":ng(e)?"string":"boolean"==typeof e?"bool":"float32"}function ig(e){return!!(e&&e.constructor&&e.call&&e.apply)}function sg(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function og(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ug(e,t,n,r=!1){const a=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)a[t]=n[e+t]}else{const i=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)a[t]=ug(e+t*o,s,n,r)}return a}function lg(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return ug(0,e,t,n)}function cg(e,t){const n=hg(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function hg(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function dg(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return lg(e,new Float32Array(n));if("int32"===t)return lg(e,new Int32Array(n));if("bool"===t)return lg(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function pg(e){e.forEach((t=>{zm(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function fg(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function mg(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function gg(e){return e&&e.then&&"function"==typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vg="tfjsflags";class yg{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=bg,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(xg().getBool("IS_TEST")||xg().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];xg().getBool("IS_TEST")||xg().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(gg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(vg in e){e[vg].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function bg(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function xg(){return kg}let wg,kg=null;function Ig(){if(null==wg){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}wg=e}return wg}function Cg(e,t){const n=function(){const e=Ig();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Sg="Abs",Ng="Acos",Tg="Acosh",Eg="Add",Rg="AddN",Ag="All",Dg="Any",Fg="ArgMax",_g="ArgMin",$g="Asin",Og="Asinh",Mg="Atan",Lg="Atanh",Pg="Atan2",Bg="AvgPool",zg="AvgPoolGrad",Wg="AvgPool3D",Vg="AvgPool3DGrad",Ug="BatchMatMul",Gg="BatchToSpaceND",Hg="Bincount",jg="BitwiseAnd",qg="BroadcastArgs",Kg="Cast",Xg="Ceil",Yg="ClipByValue",Qg="Complex",Jg="ComplexAbs",Zg="Concat",ev="Conv2D",tv="Conv2DBackpropFilter",nv="Conv2DBackpropInput",rv="Conv3D",av="Conv3DBackpropFilterV2",iv="Conv3DBackpropInputV2",sv="Cos",ov="Cosh",uv="Cumprod",lv="Cumsum",cv="CropAndResize",hv="DenseBincount",dv="DepthToSpace",pv="DepthwiseConv2dNative",fv="DepthwiseConv2dNativeBackpropFilter",mv="DepthwiseConv2dNativeBackpropInput",gv="Diag",vv="Dilation2D",yv="Dilation2DBackpropInput",bv="Dilation2DBackpropFilter",xv="RealDiv",wv="Einsum",kv="Elu",Iv="EluGrad",Cv="Erf",Sv="Equal",Nv="Exp",Tv="ExpandDims",Ev="Expm1",Rv="FFT",Av="Fill",Dv="FlipLeftRight",Fv="Floor",_v="FloorDiv",$v="FusedBatchNorm",Ov="GatherV2",Mv="GatherNd",Lv="Greater",Pv="GreaterEqual",Bv="Identity",zv="IFFT",Wv="Imag",Vv="IsFinite",Uv="IsInf",Gv="IsNan",Hv="LeakyRelu",jv="Less",qv="LessEqual",Kv="LinSpace",Xv="Log",Yv="Log1p",Qv="LogicalAnd",Jv="LogicalNot",Zv="LogicalOr",ey="LRN",ty="LRNGrad",ny="Max",ry="Maximum",ay="MaxPool",iy="MaxPoolGrad",sy="MaxPool3D",oy="MaxPool3DGrad",uy="MaxPoolWithArgmax",ly="Mean",cy="Min",hy="Minimum",dy="MirrorPad",py="Mod",fy="Multinomial",my="Multiply",gy="Neg",vy="NotEqual",yy="NonMaxSuppressionV3",by="NonMaxSuppressionV4",xy="NonMaxSuppressionV5",wy="OnesLike",ky="OneHot",Iy="Pack",Cy="PadV2",Sy="Pow",Ny="Prelu",Ty="Prod",Ey="RaggedGather",Ry="RaggedRange",Ay="RaggedTensorToTensor",Dy="Range",Fy="Real",_y="Reciprocal",$y="Relu",Oy="Reshape",My="ResizeNearestNeighbor",Ly="ResizeNearestNeighborGrad",Py="ResizeBilinear",By="ResizeBilinearGrad",zy="Relu6",Wy="Reverse",Vy="Round",Uy="Rsqrt",Gy="ScatterNd",Hy="TensorScatterUpdate",jy="SearchSorted",qy="Select",Ky="Selu",Xy="Slice",Yy="Sin",Qy="Sinh",Jy="Sign",Zy="Sigmoid",eb="Softplus",tb="Sqrt",nb="Sum",rb="SpaceToBatchND",ab="SplitV",ib="Softmax",sb="SparseFillEmptyRows",ob="SparseReshape",ub="SparseSegmentMean",lb="SparseSegmentSum",cb="SparseToDense",hb="SquaredDifference",db="Square",pb="StaticRegexReplace",fb="StridedSlice",mb="StringNGrams",gb="StringSplit",vb="StringToHashBucketFast",yb="Sub",bb="Tan",xb="Tanh",wb="Tile",kb="TopK",Ib="Transform",Cb="Transpose",Sb="Unique",Nb="Unpack",Tb="UnsortedSegmentSum",Eb="ZerosLike",Rb="Step",Ab="RotateWithOffset",Db="_FusedMatMul",Fb="FusedConv2D",_b="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $b(...e){xg().getBool("IS_TEST")||xg().getBool("PROD")||console.warn(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ob=Cg("kernelRegistry",(()=>new Map)),Mb=Cg("gradRegistry",(()=>new Map));function Lb(e,t){const n=Vb(e,t);return Ob.get(n)}function Pb(e){return Mb.get(e)}function Bb(e){const t=Ob.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[i,s]=a,[o]=i.split("_");o===e&&n.push(s)}return n}function zb(e){const{kernelName:t,backendName:n}=e,r=Vb(t,n);Ob.has(r)&&$b(`The kernel '${t}' for backend '${n}' is already registered`),Ob.set(r,e)}function Wb(e){const{kernelName:t}=e;Mb.has(t)&&xg().getBool("DEBUG")&&$b(`Overriding the gradient for '${t}'`),Mb.set(t,e)}function Vb(e,t){return`${t}_${e}`}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ub(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Gb=jb,Hb=null;try{Hb=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(Ue){}function jb(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function qb(e){return!0===(e&&e.__isLong__)}jb.prototype.__isLong__,Object.defineProperty(jb.prototype,"__isLong__",{value:!0}),jb.isLong=qb;var Kb={},Xb={};function Yb(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=Xb[e])?r:(n=Jb(e,(0|e)<0?-1:0,!0),a&&(Xb[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=Kb[e])?r:(n=Jb(e,e<0?-1:0,!1),a&&(Kb[e]=n),n)}function Qb(e,t){if(isNaN(e))return t?ox:sx;if(t){if(e<0)return ox;if(e>=rx)return dx}else{if(e<=-ax)return px;if(e+1>=ax)return hx}return e<0?Qb(-e,t).neg():Jb(e%nx|0,e/nx|0,t)}function Jb(e,t,n){return new jb(e,t,n)}jb.fromInt=Yb,jb.fromNumber=Qb,jb.fromBits=Jb;var Zb=Math.pow;function ex(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return sx;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return ex(e.substring(1),t,n).neg();for(var a=Qb(Zb(n,8)),i=sx,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),n);if(o<8){var l=Qb(Zb(n,o));i=i.mul(l).add(Qb(u))}else i=(i=i.mul(a)).add(Qb(u))}return i.unsigned=t,i}function tx(e,t){return"number"==typeof e?Qb(e,t):"string"==typeof e?ex(e,t):Jb(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}jb.fromString=ex,jb.fromValue=tx;var nx=4294967296,rx=nx*nx,ax=rx/2,ix=Yb(1<<24),sx=Yb(0);jb.ZERO=sx;var ox=Yb(0,!0);jb.UZERO=ox;var ux=Yb(1);jb.ONE=ux;var lx=Yb(1,!0);jb.UONE=lx;var cx=Yb(-1);jb.NEG_ONE=cx;var hx=Jb(-1,2147483647,!1);jb.MAX_VALUE=hx;var dx=Jb(-1,-1,!0);jb.MAX_UNSIGNED_VALUE=dx;var px=Jb(0,-2147483648,!1);jb.MIN_VALUE=px;var fx=jb.prototype;fx.toInt=function(){return this.unsigned?this.low>>>0:this.low},fx.toNumber=function(){return this.unsigned?(this.high>>>0)*nx+(this.low>>>0):this.high*nx+(this.low>>>0)},fx.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(px)){var t=Qb(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=Qb(Zb(e,6),this.unsigned),i=this,s="";;){var o=i.div(a),u=(i.sub(o.mul(a)).toInt()>>>0).toString(e);if((i=o).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},fx.getHighBits=function(){return this.high},fx.getHighBitsUnsigned=function(){return this.high>>>0},fx.getLowBits=function(){return this.low},fx.getLowBitsUnsigned=function(){return this.low>>>0},fx.getNumBitsAbs=function(){if(this.isNegative())return this.eq(px)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},fx.isZero=function(){return 0===this.high&&0===this.low},fx.eqz=fx.isZero,fx.isNegative=function(){return!this.unsigned&&this.high<0},fx.isPositive=function(){return this.unsigned||this.high>=0},fx.isOdd=function(){return 1==(1&this.low)},fx.isEven=function(){return 0==(1&this.low)},fx.equals=function(e){return qb(e)||(e=tx(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},fx.eq=fx.equals,fx.notEquals=function(e){return!this.eq(e)},fx.neq=fx.notEquals,fx.ne=fx.notEquals,fx.lessThan=function(e){return this.comp(e)<0},fx.lt=fx.lessThan,fx.lessThanOrEqual=function(e){return this.comp(e)<=0},fx.lte=fx.lessThanOrEqual,fx.le=fx.lessThanOrEqual,fx.greaterThan=function(e){return this.comp(e)>0},fx.gt=fx.greaterThan,fx.greaterThanOrEqual=function(e){return this.comp(e)>=0},fx.gte=fx.greaterThanOrEqual,fx.ge=fx.greaterThanOrEqual,fx.compare=function(e){if(qb(e)||(e=tx(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},fx.comp=fx.compare,fx.negate=function(){return!this.unsigned&&this.eq(px)?px:this.not().add(ux)},fx.neg=fx.negate,fx.add=function(e){qb(e)||(e=tx(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,o=e.low>>>16,u=0,l=0,c=0,h=0;return c+=(h+=a+(65535&e.low))>>>16,l+=(c+=r+o)>>>16,u+=(l+=n+s)>>>16,u+=t+i,Jb((c&=65535)<<16|(h&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},fx.subtract=function(e){return qb(e)||(e=tx(e)),this.add(e.neg())},fx.sub=fx.subtract,fx.multiply=function(e){if(this.isZero())return sx;if(qb(e)||(e=tx(e)),Hb)return Jb(Hb.mul(this.low,this.high,e.low,e.high),Hb.get_high(),this.unsigned);if(e.isZero())return sx;if(this.eq(px))return e.isOdd()?px:sx;if(e.eq(px))return this.isOdd()?px:sx;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ix)&&e.lt(ix))return Qb(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,o=e.low>>>16,u=65535&e.low,l=0,c=0,h=0,d=0;return h+=(d+=a*u)>>>16,c+=(h+=r*u)>>>16,h&=65535,c+=(h+=a*o)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*o)>>>16,c&=65535,l+=(c+=a*s)>>>16,l+=t*u+n*o+r*s+a*i,Jb((h&=65535)<<16|(d&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},fx.mul=fx.multiply,fx.divide=function(e){if(qb(e)||(e=tx(e)),e.isZero())throw Error("division by zero");var t,n,r;if(Hb)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?Jb((this.unsigned?Hb.div_u:Hb.div_s)(this.low,this.high,e.low,e.high),Hb.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?ox:sx;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ox;if(e.gt(this.shru(1)))return lx;r=ox}else{if(this.eq(px))return e.eq(ux)||e.eq(cx)?px:e.eq(px)?ux:(t=this.shr(1).div(e).shl(1)).eq(sx)?e.isNegative()?ux:cx:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(px))return this.unsigned?ox:sx;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=sx}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),i=a<=48?1:Zb(2,a-48),s=Qb(t),o=s.mul(e);o.isNegative()||o.gt(n);)o=(s=Qb(t-=i,this.unsigned)).mul(e);s.isZero()&&(s=ux),r=r.add(s),n=n.sub(o)}return r},fx.div=fx.divide,fx.modulo=function(e){return qb(e)||(e=tx(e)),Hb?Jb((this.unsigned?Hb.rem_u:Hb.rem_s)(this.low,this.high,e.low,e.high),Hb.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},fx.mod=fx.modulo,fx.rem=fx.modulo,fx.not=function(){return Jb(~this.low,~this.high,this.unsigned)},fx.and=function(e){return qb(e)||(e=tx(e)),Jb(this.low&e.low,this.high&e.high,this.unsigned)},fx.or=function(e){return qb(e)||(e=tx(e)),Jb(this.low|e.low,this.high|e.high,this.unsigned)},fx.xor=function(e){return qb(e)||(e=tx(e)),Jb(this.low^e.low,this.high^e.high,this.unsigned)},fx.shiftLeft=function(e){return qb(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Jb(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Jb(0,this.low<<e-32,this.unsigned)},fx.shl=fx.shiftLeft,fx.shiftRight=function(e){return qb(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Jb(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Jb(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},fx.shr=fx.shiftRight,fx.shiftRightUnsigned=function(e){if(qb(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?Jb(this.low>>>e|t<<32-e,t>>>e,this.unsigned):Jb(32===e?t:t>>>e-32,0,this.unsigned)},fx.shru=fx.shiftRightUnsigned,fx.shr_u=fx.shiftRightUnsigned,fx.toSigned=function(){return this.unsigned?Jb(this.low,this.high,!1):this},fx.toUnsigned=function(){return this.unsigned?this:Jb(this.low,this.high,!0)},fx.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},fx.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},fx.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},jb.fromBytes=function(e,t,n){return n?jb.fromBytesLE(e,t):jb.fromBytesBE(e,t)},jb.fromBytesLE=function(e,t){return new jb(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},jb.fromBytesBE=function(e,t){return new jb(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const mx=Gb||n({__proto__:null,default:Gb},[Gb]);function gx(e){return mx.fromString(e,!0,16)}const vx=gx("c3a5c85c97cb3127"),yx=gx("b492b66fbe98f273"),bx=gx("9ae16a3b2f90404f");function xx(e){return e.xor(e.shru(47))}function wx(e,t,n){const r=e.slice(t,t+n);return mx.fromBytes(Array.from(r),!0,!0)}function kx(e,t){return wx(e,t,8)}function Ix(e,t){return wx(e,t,4)}function Cx(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Sx(e,t,n=gx("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Nx(e,t,n,r){return function(e,t,n,r,a,i){a=a.add(e),i=Cx(i.add(a).add(r),21);const s=a;return a=(a=a.add(t)).add(n),i=i.add(Cx(a,44)),[a.add(r),i.add(s)]}(kx(e,t),kx(e,t+8),kx(e,t+16),kx(e,t+24),n,r)}function Tx(e,t=e.length){const n=mx.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=bx.add(2*t),r=kx(e,0).add(bx),a=kx(e,t-8);return Sx(Cx(a,37).mul(n).add(r),Cx(r,25).add(a).mul(n),n)}if(t>=4){const n=bx.add(2*t);return Sx(Ix(e,0).shl(3).add(t),Ix(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return xx(bx.mul(n).xor(vx.mul(r))).mul(bx)}return bx}(e,t):function(e,t=e.length){const n=bx.add(2*t),r=kx(e,0).mul(yx),a=kx(e,8),i=kx(e,t-8).mul(n),s=kx(e,t-16).mul(bx);return Sx(Cx(r.add(a),43).add(Cx(i,30)).add(s),r.add(Cx(a.add(bx),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=bx.add(2*t),r=kx(e,0).mul(bx),a=kx(e,8),i=kx(e,t-8).mul(n),s=kx(e,t-16).mul(bx),o=Cx(r.add(a),43).add(Cx(i,30)).add(s),u=Sx(o,r.add(Cx(a.add(bx),18)).add(i),n),l=kx(e,16).mul(n),c=kx(e,24),h=o.add(kx(e,t-32)).mul(n),d=u.add(kx(e,t-24)).mul(n);return Sx(Cx(l.add(c),43).add(Cx(h,30)).add(d),l.add(Cx(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(yx).add(113),i=xx(a.mul(bx).add(113)).mul(bx),s=[mx.UZERO,mx.UZERO],o=[mx.UZERO,mx.UZERO];r=r.mul(bx).add(kx(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Cx(r.add(a).add(s[0]).add(kx(e,u+8)),37).mul(yx),a=Cx(a.add(s[1]).add(kx(e,u+48)),42).mul(yx),r=r.xor(o[1]),a=a.add(s[0]).add(kx(e,u+40)),i=Cx(i.add(o[0]),33).mul(yx),s=Nx(e,u,s[1].mul(yx),r.add(o[0])),o=Nx(e,u+32,i.add(o[1]),a.add(kx(e,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=yx.add(i.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),r=Cx(r.add(a).add(s[0]).add(kx(e,u+8)),37).mul(h),a=Cx(a.add(s[1]).add(kx(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(s[0].mul(9).add(kx(e,u+40))),i=Cx(i.add(o[0]),33).mul(h),s=Nx(e,u,s[1].mul(h),r.add(o[0])),o=Nx(e,u+32,i.add(o[1]),a.add(kx(e,u+16))),[i,r]=[r,i],Sx(Sx(s[0],o[0],h).add(xx(a).mul(vx)).add(i),Sx(s[1],o[1],h).add(r),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ex(e,t){return"string"===t?Dx(e):Rx([e],t)}function Rx(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=$x(e)),xg().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ax(){return xg().platform.now()}function Dx(e,t="utf-8"){return t=t||"utf-8",xg().platform.encode(e,t)}function Fx(e,t="utf-8"){return t=t||"utf-8",xg().platform.decode(e,t)}function _x(e){return null!=xg().platform.isTypedArray?xg().platform.isTypedArray(e):Ub(e)}function $x(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||gg(e)||null==e||_x(e)&&n)t.push(e);else if(Array.isArray(e)||_x(e))for(let r=0;r<e.length;++r)$x(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)$x(e[a],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ox{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Lx)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const s=Ax();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:Ax()-s})}if(xg().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Mx(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Mx(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Lx{logKernelProfile(e,t,n,r,a,i){const s="number"==typeof r?qm(`${r}ms`,9):r.error,o=qm(e,25),u=t.rank,l=t.size,c=qm(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${s}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Px=20,Bx=3,zx=7;function Wx(e,t,n,r){const a=og(t),i=function(e,t,n,r){const a=Um(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?Hx(e):e;if(o>1)for(let e=0;e<a/i;e++){const t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],Vx(u[t+e],0,n).length)}return s}(e,t,n,a),s=t.length,o=Gx(e,t,n,a,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${s}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Vx(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(zx))} + ${parseFloat(e[1].toFixed(zx))}j`:ng(e)?`'${e}'`:"bool"===n?Ux(e):parseFloat(e.toFixed(zx)).toString(),qm(r,t)}function Ux(e){return 0===e?"false":"true"}function Gx(e,t,n,r,a,i=!0){const s="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){return[Vx(Hx(e)[0],0,n)]}return"bool"===n?[Ux(e[0])]:[e[0].toString()]}if(1===u){if(o>Px){const t=Bx*s;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-Bx)*s,o*s));return"complex64"===n&&(r=Hx(r),i=Hx(i)),["["+r.map(((e,t)=>Vx(e,a[t],n))).join(", ")+", ..., "+i.map(((e,t)=>Vx(e,a[o-Bx+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Hx(e):Array.from(e)).map(((e,t)=>Vx(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*s,d=[];if(o>Px){for(let t=0;t<Bx;t++){const r=t*h,i=r+h;d.push(...Gx(e.slice(r,i),l,n,c,a,!1))}d.push("...");for(let t=o-Bx;t<o;t++){const r=t*h,i=r+h;d.push(...Gx(e.slice(r,i),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,i=r+h;d.push(...Gx(e.slice(r,i),l,n,c,a,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Hx(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jx{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Um(e),null!=n){const e=n.length;zm(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Zm(t,this.size),this.strides=og(e)}set(e,...t){0===t.length&&(t=[0]),zm(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return qx().makeTensor(this.values,this.shape,this.dtype)}}let qx=null,Kx=null;class Xx{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Um(e),this.strides=og(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Kx.buffer(this.shape,this.dtype,e)}bufferSync(){return Kx.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return lg(this.shape,e,"complex64"===this.dtype)}arraySync(){return lg(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=qx().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Fx(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),qx().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=qx().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Fx(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await qx().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),qx().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Kx.print(this,e)}clone(){return this.throwIfDisposed(),Kx.clone(this)}toString(e=!1){return Wx(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Kx.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),qx().makeVariable(this,e,t,n)}}function Yx(){return Cg("Tensor",(()=>Xx))}Object.defineProperty(Xx,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Yx();class Qx extends Xx{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Gm(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);qx().disposeTensor(this),this.dataId=e.dataId,qx().incRef(this,null)}dispose(){qx().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Jx,Zx,ew,tw,nw;Object.defineProperty(Qx,Symbol.hasInstance,{value:e=>e instanceof Xx&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Jx||(Jx={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Zx||(Zx={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ew||(ew={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(tw||(tw={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(nw||(nw={}));const rw={float32:tw,int32:Zx,bool:ew,complex64:nw};function aw(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return rw[e][t]}function iw(e){return aw(e,"int32")}function sw(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function ow(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(e,t){if(e.dtype===t.dtype)return[e,t];const n=aw(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function lw(e){const t=[];return cw(e,t,new Set),t}function cw(e,t,n){if(null==e)return;if(e instanceof Xx)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),cw(r,t,n))}}function hw(e){return null!=e.kernelName}class dw{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class pw{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new dw}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?($b(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ox(this.backendInstance),!0}setupRegisteredKernels(){Bb(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Bb(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof $m||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,$b(`Initialization of backend ${e} failed`),$b(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return $b(`Initialization of backend ${e} failed`),$b(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return pw.nextTensorId++}nextVariableId(){return pw.nextVariableId++}clone(e){const t=mw.runKernel(Bv,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return mw.runKernel(Kg,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Lb(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let s,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=hw(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(hw(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const u=Lb(t,this.backendName);zm(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:i,backend:this.backend});const s=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const l=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=hw(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=s()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Pb(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(zm(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const s=n.filter(((e,t)=>a[t]));return i.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ng(e[0])&&(a=e.map((e=>Dx(e))));const i=r.write(a,t,n),s=new Xx(t,n,i,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,i=new Xx(r,a,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Qx(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*tg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Qx||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*tg(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,i){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Pb(e);null!=o&&(r=o.gradFunc),null!=r&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=hg(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=lw(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(zm(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));zm(a instanceof Xx,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],s=i.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=cg(Um(e),"float32");return mw.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const i=t[a],s=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(s);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=i.inputs[t];if(!Gm(a.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),gw);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return zm(ig(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;zm(t.every((e=>e instanceof Xx)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),zm(n.value instanceof Xx,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),zm(ig(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];zm(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),zm(i.every((e=>e instanceof Xx)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return i.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ax(),n=await this.backend.time(e);return n.wallMs=Ax()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new dw;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function fw(){const e=Ig();if(null==e._tfengine){const t=new yg(e);e._tfengine=new pw(t)}var t;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */return t=e._tfengine.ENV,kg=t,qx=()=>e._tfengine,e._tfengine}pw.nextTensorId=0,pw.nextVariableId=0;const mw=fw();function gw(e,t){const n={a:e,b:t};return mw.runKernel(Eg,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function yw(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bw=xg();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xw(e,t){let n=e;if(_x(e))return"string"===t?[]:[e.length];if(sw(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(ow(e))return[e.buffer.size/(null==t?4:tg(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||_x(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&xg().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ww(e,r,[]),r}function ww(e,t,n){if(n=n||[],!Array.isArray(e)&&!_x(e))return void zm(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));zm(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),zm(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ww(e[t],r,n.concat(t))}function kw(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Iw(e,t,n,r="numeric"){if(e instanceof Yx())return kw(r,e.dtype,t,n),e;let a=ag(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),kw(r,a,t,n),null==e||!_x(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=xw(e,a);_x(e)||Array.isArray(e)||(e=[e]);const s="string"!==a?Rx(e,a):$x(e,[],!0);return mw.makeTensor(s,i,a)}function Cw(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Iw(e,`${t}[${a}]`,n,r)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bw.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),bw.registerFlag("IS_BROWSER",(()=>yw())),bw.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),bw.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),bw.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),bw.registerFlag("PROD",(()=>!1)),bw.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>bw.getBool("DEBUG"))),bw.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),bw.registerFlag("IS_TEST",(()=>!1)),bw.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>bw.getBool("DEBUG"))),bw.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),bw.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),bw.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function Sw(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{mw.startScope(n);try{const t=r(...e);return gg(t)&&console.error("Cannot return a Promise inside of tidy."),mw.endScope(t),t}catch(e){throw mw.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nw=Sw({complex_:function(e,t){const n=Iw(e,"real","complex"),r=Iw(t,"imag","complex");Wm(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return mw.runKernel(Qg,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(e,t,n,r){if(null==r)r=ag(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ow(e)||sw(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return mw.backend.createTensorFromGPUData(e,t||n,r)}if(!_x(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){pg(t);const e=Um(t),r=Um(n);zm(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==Um(t.slice(e));zm(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return _x(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Rx(e,r):$x(e,[],!0),mw.makeTensor(e,t,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(e,t,n){return Tw(e,t,xw(e,n),n)}class Rw{static join(e){return new Rw(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>_x(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let i=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],s=e+i-n.start,o=i,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,s,u-s);if(a.set(l,o),i+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,i=t(e[a]);if(0===i)return a;i<0?r=a:n=a+1}return-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}async function Aw(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){const s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);const u={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Dw(await Promise.all(r)),specs:n}}function Dw(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Fw="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function _w(e){return Fw?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function $w(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ow(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}function Mw(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:_w(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:_w(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Rw(e.weightData).byteLength}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lw{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Lw.instance&&(Lw.instance=new Lw),Lw.instance}static registerSaveRouter(e){Lw.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Lw.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Lw.getHandlers(e,"save")}static getLoadHandlers(e,t){return Lw.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Lw.getInstance().loadRouters:Lw.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Pw="tensorflowjs",Bw="models_store",zw="model_info_store";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ww(){if(!xg().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Vw(e){const t=e.result;t.createObjectStore(Bw,{keyPath:"modelPath"}),t.createObjectStore(zw,{keyPath:"modelPath"})}class Uw{constructor(e){if(this.indexedDB=Ww(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Pw,1);r.onupgradeneeded=()=>Vw(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Bw,"readonly"),r=t.objectStore(Bw).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=Rw.join(t.weightData);const r=Mw(t),i=a.transaction(zw,"readwrite");let s,o,u=i.objectStore(zw);try{s=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}s.onsuccess=()=>{o=a.transaction(Bw,"readwrite");const s=o.objectStore(Bw);let l;try{l=s.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=i.objectStore(zw);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},s.onerror=e=>(a.close(),n(s.error)),i.oncomplete=()=>{null==o?a.close():o.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}Uw.URL_SCHEME="indexeddb://";const Gw=e=>{return xg().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Uw.URL_SCHEME)?(t=e.slice(Uw.URL_SCHEME.length),new Uw(t)):null;var t};Lw.registerSaveRouter(Gw),Lw.registerLoadRouter(Gw);class Hw{constructor(){this.indexedDB=Ww()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Pw,1);n.onupgradeneeded=()=>Vw(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(zw,"readonly"),i=a.objectStore(zw).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Uw.URL_SCHEME)?t.slice(Uw.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Pw,1);r.onupgradeneeded=()=>Vw(r),r.onsuccess=()=>{const a=r.result,i=a.transaction(zw,"readwrite"),s=i.objectStore(zw),o=s.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),i=()=>{u=a.transaction(Bw,"readwrite");const r=u.objectStore(Bw).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw="/",qw="tensorflowjs_models",Kw="info",Xw="model_topology",Yw="weight_specs",Qw="weight_data",Jw="model_metadata";function Zw(e){return{info:[qw,e,Kw].join(jw),topology:[qw,e,Xw].join(jw),weightSpecs:[qw,e,Yw].join(jw),weightData:[qw,e,Qw].join(jw),modelMetadata:[qw,e,Jw].join(jw)}}function ek(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function tk(e){const t=e.split(jw);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(jw)}class nk{constructor(e){if(!xg().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Zw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Mw(e),a=Rw.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Fw)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(e){throw ek(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Fw){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}nk.URL_SCHEME="localstorage://";const rk=e=>{return xg().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(nk.URL_SCHEME)?(t=e.slice(nk.URL_SCHEME.length),new nk(t)):null;var t};Lw.registerSaveRouter(rk),Lw.registerLoadRouter(rk);class ak{constructor(){zm(xg().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),zm("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=qw+jw,n=jw+Kw;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[tk(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=Zw(e=(t=e).startsWith(nk.URL_SCHEME)?t.slice(nk.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ek(n),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ik{constructor(){this.managers={}}static getInstance(){return null==ik.instance&&(ik.instance=new ik),ik.instance}static registerManager(e,t){zm(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),zm(e.length>0,(()=>"scheme must not be an empty string."));const n=ik.getInstance();zm(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ik.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ik.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sk{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&xg().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Ub(e)}}if(xg().get("IS_BROWSER")){xg().setPlatform("browser",new sk);try{ik.registerManager(nk.URL_SCHEME,new ak)}catch(e){}try{ik.registerManager(Uw.URL_SCHEME,new Hw)}catch(e){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok=()=>require("node-fetch");let uk;class lk{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=xg().global.fetch?xg().global.fetch(e,t):(null==uk&&(uk=ok()),uk(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ck(e,t="float32",n){return t=t||"float32",pg(e),new jx(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */xg().get("IS_NODE")&&!xg().get("IS_BROWSER")&&xg().setPlatform("node",new lk);const hk=Sw({cast_:function(e,t){const n=Iw(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return mw.runKernel(Kg,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=Sw({clone_:function(e){const t={x:Iw(e,"x","clone","string_or_numeric")};return mw.runKernel(Bv,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
fw();const pk={buffer:ck,cast:hk,clone:dk,print:function(e,t=!1){console.log(e.toString(t))}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fk(){return mw}function mk(){return mw.memory()}function gk(e,t){return mw.tidy(e,t)}function vk(e){lw(e).forEach((e=>e.dispose()))}function yk(e){return mw.keep(e)}function bk(e,t,n=1){return mw.registerBackend(e,t,n)}Kx=pk;const xk=Sw({add_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=Iw(e,"a","add"),r=Iw(t,"b","add");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(Eg,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=Sw({floorDiv_:function(e,t){let n=Iw(e,"a","floorDiv"),r=Iw(t,"b","floorDiv");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(_v,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=Sw({div_:function(e,t){let n=Iw(e,"a","div"),r=Iw(t,"b","div");if([n,r]=uw(n,r),"int32"===n.dtype&&"int32"===r.dtype)return wk(n,r);const a={a:n,b:r};return mw.runKernel(xv,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ik=Sw({mul_:function(e,t){let n=Iw(e,"a","mul"),r=Iw(t,"b","mul");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(my,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck=Sw({abs_:function(e){const t=Iw(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return mw.runKernel(Jg,e)}{const e={x:t};return mw.runKernel(Sg,e)}}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk=Sw({acos_:function(e){const t={x:Iw(e,"x","acos")};return mw.runKernel(Ng,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk=Sw({acosh_:function(e){const t={x:Iw(e,"x","acosh")};return mw.runKernel(Tg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=Sw({all_:function(e,t=null,n=!1){const r={x:Iw(e,"x","all","bool")},a={axis:t,keepDims:n};return mw.runKernel(Ag,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek=Sw({any_:function(e,t=null,n=!1){const r={x:Iw(e,"x","any","bool")},a={axis:t,keepDims:n};return mw.runKernel(Dg,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rk=Sw({argMax_:function(e,t=0){const n={x:Iw(e,"x","argMax")},r={axis:t};return mw.runKernel(Fg,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ak=Sw({argMin_:function(e,t=0){const n={x:Iw(e,"x","argMin")},r={axis:t};return mw.runKernel(_g,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dk=Sw({asin_:function(e){const t={x:Iw(e,"x","asin")};return mw.runKernel($g,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk=Sw({asinh_:function(e){const t={x:Iw(e,"x","asinh")};return mw.runKernel(Og,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k=Sw({atan_:function(e){const t={x:Iw(e,"x","atan")};return mw.runKernel(Mg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k=Sw({atan2_:function(e,t){let n=Iw(e,"a","atan2"),r=Iw(t,"b","atan2");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(Pg,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ok=Sw({atanh_:function(e){const t={x:Iw(e,"x","atanh")};return mw.runKernel(Lg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(e,t,n,r,a="NHWC",i){return Bk(e,[...t,e[3]],n,i,r,null,null,Xk(a))}function Lk(e,t,n,r,a,i,s="channelsLast"){const[o,u]=Vk(t);let l;if("channelsLast"===s)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);l=[o,u,e[1],e[1]]}return Bk(e,l,n,r,a,i,!1,s)}function Pk(e,t,n,r,a,i,s="NDHWC"){const[o,u,l]=Uk(t);let c,h;if("NDHWC"===s)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return zk(e,c,n,r,a,!1,h,i)}function Bk(e,t,n,r,a,i,s=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=Vk(n),[v,y]=Vk(r),b=Gk(d,v),x=Gk(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,i,s,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Wk(e,t,n));const i=e[0],s=e[1],o=Hk((i-t+2*r)/n+1,a),u=Hk((s-t+2*r)/n+1,a);return[o,u]}([t,n],i,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*a+s-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=Hk((t-i+d+p)/r+1,o),h=Hk((n-s+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,b,x,i,o),C=s?f*h:f;let S;return"channelsFirst"===o?S=[u,C,k,I]:"channelsLast"===o&&(S=[u,k,I,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:v,dilationWidth:y,inShape:e,outShape:S,filterShape:t}}function zk(e,t,n,r,a,i=!1,s="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,l,c,h,d]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[v,y,b]=Uk(n),[x,w,k]=Uk(r),I=Gk(p,x),C=Gk(f,w),S=Gk(m,k),{padInfo:N,outDepth:T,outHeight:E,outWidth:R}=function(e,t,n,r,a,i,s,o,u,l,c){let h,d,p,f;"valid"===e&&(e=0);if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,a,i){null==a&&(a=Wk(e,t[0],r[0]));const s=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(s[n]=Hk((e[n]-t[n]+2*a)/r[n]+1,i));return s}([t,n,r,1],[o,u,l],1,[a,i,s],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/a),p=Math.ceil(n/i),f=Math.ceil(r/s);const e=(d-1)*a+o-t,c=(p-1)*i+u-n,m=(f-1)*s+l-r,g=Math.floor(e/2),v=e-g,y=Math.floor(c/2),b=c-y,x=Math.floor(m/2);h={top:y,bottom:b,left:x,right:m-x,front:g,back:v,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,l,c,h,v,y,b,I,C,S,o),A=i?g*d:g;let D;return"channelsFirst"===s?D=[u,A,T,E,R]:"channelsLast"===s&&(D=[u,T,E,R,A]),{batchSize:u,dataFormat:s,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:E,outWidth:R,outChannels:A,padInfo:N,strideDepth:v,strideHeight:y,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:D,filterShape:t}}function Wk(e,t,n,r=1){const a=Gk(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Vk(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Uk(e){return"number"==typeof e?[e,e,e]:e}function Gk(e,t){return t<=1?e:e+(e-1)*(t-1)}function Hk(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function jk(e){const[t,n,r]=Vk(e);return 1===t&&1===n&&1===r}function qk(e,t){return jk(e)||jk(t)}function Kk(e){return Vk(e).every((e=>e>0))}function Xk(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Yk(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)zm(Hm(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{zm(Hm(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qk=Sw({reshape_:function(e,t){const n={x:Iw(e,"x","reshape","string_or_numeric")},r={shape:t};return mw.runKernel(Oy,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=Sw({avgPool_:function(e,t,n,r,a){const i=Iw(e,"x","avgPool","float32");zm(qk(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=i,o=!1;3===i.rank&&(o=!0,s=Qk(i,[1,i.shape[0],i.shape[1],i.shape[2]])),zm(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),Yk("avgPool",r,a);const u={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=mw.runKernel(Bg,u,l);return c=hk(c,i.dtype),o?Qk(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=Sw({avgPool3d_:function(e,t,n,r,a,i="NDHWC"){const s=Iw(e,"x","avgPool3d","float32");let o=s,u=!1;4===s.rank&&(u=!0,o=Qk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),zm(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),zm("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),zm("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Yk("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let h=mw.runKernel(Wg,l,c);return h=hk(h,o.dtype),u?Qk(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI=Sw({concat_:function(e,t=0){zm(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Cw(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return dk(n[0]);const r=n,a={axis:t};return mw.runKernel(Zg,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=Sw({matMul_:function(e,t,n=!1,r=!1){let a=Iw(e,"a","matMul"),i=Iw(t,"b","matMul");[a,i]=uw(a,i);const s={a:a,b:i},o={transposeA:n,transposeB:r};return mw.runKernel(Ug,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nI=Sw({sigmoid_:function(e){const t={x:Iw(e,"x","sigmoid","float32")};return mw.runKernel(Zy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI=Sw({slice_:function(e,t,n){const r=Iw(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},i={begin:t,size:n};return mw.runKernel(Xy,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aI=Sw({tanh_:function(e){const t={x:Iw(e,"x","tanh","float32")};return mw.runKernel(xb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI=Sw({batchToSpaceND_:function(e,t,n){const r=Iw(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));zm(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),zm(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),zm(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},s={blockShape:t,crops:n};return mw.runKernel(Gg,i,s)}});const sI=Sw({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){null==i&&(i=.001);const s=Iw(e,"x","batchNorm"),o=Iw(t,"mean","batchNorm"),u=Iw(n,"variance","batchNorm");let l,c;null!=a&&(l=Iw(a,"scale","batchNorm")),null!=r&&(c=Iw(r,"offset","batchNorm")),zm(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),zm(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),zm(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Qk(e,[1,1,1,e.size]):2===e.rank?Qk(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Qk(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:i},f=mw.runKernel($v,d,p);return Qk(f,s.shape)}});const oI=Sw({batchNorm2d_:function(e,t,n,r,a,i){const s=Iw(e,"x","batchNorm"),o=Iw(t,"mean","batchNorm"),u=Iw(n,"variance","batchNorm");let l,c;return null!=a&&(l=Iw(a,"scale","batchNorm")),null!=r&&(c=Iw(r,"offset","batchNorm")),zm(2===s.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`)),zm(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),zm(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&zm(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&zm(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),sI(s,o,u,c,l,i)}});const uI=Sw({batchNorm3d_:function(e,t,n,r,a,i){const s=Iw(e,"x","batchNorm"),o=Iw(t,"mean","batchNorm"),u=Iw(n,"variance","batchNorm");let l,c;return null!=a&&(l=Iw(a,"scale","batchNorm")),null!=r&&(c=Iw(r,"offset","batchNorm")),zm(3===s.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`)),zm(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),zm(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&zm(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&zm(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),sI(s,o,u,c,l,i)}});const lI=Sw({batchNorm4d_:function(e,t,n,r,a,i){const s=Iw(e,"x","batchNorm"),o=Iw(t,"mean","batchNorm"),u=Iw(n,"variance","batchNorm");let l,c;return null!=a&&(l=Iw(a,"scale","batchNorm")),null!=r&&(c=Iw(r,"offset","batchNorm")),zm(4===s.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`)),zm(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),zm(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&zm(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&zm(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),sI(s,o,u,c,l,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cI=Sw({bincount_:function(e,t,n){const r=Iw(e,"x","bincount"),a=Iw(t,"weights","bincount");zm("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),zm(n>=0,(()=>`size must be non-negative, but got ${n}.`)),zm(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},s={size:n};return mw.runKernel(Hg,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI=Sw({broadcastTo_:function(e,t){let n=Iw(e,"broadcastTo","x");const r=n.shape;if(pg(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Qk(n,e)}const a=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const s=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===s.length)return dk(n);const o={x:n},u={reps:i};return mw.runKernel(wb,o,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dI=Sw({ceil_:function(e){const t={x:Iw(e,"x","ceil","float32")};return mw.runKernel(Xg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(e,t,n){pg(e);const r={shape:e,value:t,dtype:n=n||ag(t)};return mw.runKernel(Av,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI=Sw({clipByValue_:function(e,t,n){const r=Iw(e,"x","clipByValue");if(zm(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return pI(r.shape,t,r.dtype);const a={x:r},i={clipValueMin:t,clipValueMax:n};return mw.runKernel(Yg,a,i)}});const mI=Sw({concat1d_:function(e){return eI(e,0)}});const gI=Sw({concat2d_:function(e,t){return eI(e,t)}});const vI=Sw({concat3d_:function(e,t){return eI(e,t)}});const yI=Sw({concat4d_:function(e,t){return eI(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI=Sw({conv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=Iw(e,"x","conv2d","float32"),u=Iw(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Qk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),zm(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),zm(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Yk("conv2d",r,s);const h="NHWC"===a?l.shape[3]:l.shape[1];zm(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),zm(qk(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),zm(Kk(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),zm(Kk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=mw.runKernel(ev,d,p);return c?Qk(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const xI=Sw({conv1d_:function(e,t,n,r,a="NWC",i=1,s){const o=Iw(e,"x","conv1d"),u=Iw(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=Qk(o,[1,o.shape[0],o.shape[1]])),zm(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),zm(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Yk("conv1d",r,s),zm(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),zm(qk(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),zm(Kk(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),zm(Kk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),zm("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=Qk(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=Qk(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=bI(d,h,[1,n],r,"NHWC",[1,i],s);return Qk(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI=Sw({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",s){zm(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=Qk(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),zm(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),zm(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),zm(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];zm(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),zm(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Yk("conv2dDerInput",a,s);const d={dy:u,filter:n},p={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,inputShape:o},f=mw.runKernel(nv,d,p);return l?Qk(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const kI=Sw({conv2dTranspose_:function(e,t,n,r,a,i){const s=Iw(e,"x","conv2dTranspose"),o=Iw(t,"filter","conv2dTranspose");return wI(n,s,o,r,a,"NHWC",i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II=Sw({conv3d_:function(e,t,n,r,a="NDHWC",i=[1,1,1]){const s=Iw(e,"x","conv3d"),o=Iw(t,"filter","conv3d");let u=s,l=!1;4===s.rank&&(l=!0,u=Qk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),zm(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),zm(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),zm(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),zm(qk(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),zm("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),zm(Kk(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),zm(Kk(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:i},d=mw.runKernel(rv,c,h);return l?Qk(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=Sw({conv3DBackpropInput_:function(e,t,n,r,a){zm(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=Qk(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=s.shape[4];zm(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),zm(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),zm(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),zm(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),zm(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:s,filter:n},h={pad:a,strides:r,inputShape:i},d=mw.runKernel(iv,c,h);return o?Qk(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const SI=Sw({conv3dTranspose_:function(e,t,n,r,a){const i=Iw(e,"x","conv3dTranspose"),s=Iw(t,"filter","conv3dTranspose");return CI(n,i,s,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=Sw({cos_:function(e){const t={x:Iw(e,"x","cos","float32")};return mw.runKernel(sv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI=Sw({cosh_:function(e){const t={x:Iw(e,"x","cosh","float32")};return mw.runKernel(ov,t)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI=Sw({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:Iw(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return mw.runKernel(uv,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI=Sw({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Iw(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return mw.runKernel(lv,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=Sw({denseBincount_:function(e,t,n,r=!1){const a=Iw(e,"x","denseBincount"),i=Iw(t,"weights","denseBincount");zm("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),zm(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),zm(n>=0,(()=>`size must be non-negative, but got ${n}.`)),zm(i.size===a.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`));const s={x:a,weights:i},o={size:n,binaryOutput:r};return mw.runKernel(hv,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI=Sw({depthToSpace_:function(e,t,n="NHWC"){const r=Iw(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];zm(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),zm(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),zm(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),zm(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return mw.runKernel(dv,o,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI=Sw({depthwiseConv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=Iw(e,"x","depthwiseConv2d","float32"),u=Iw(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=Qk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),zm(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),zm(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];zm(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Yk("depthwiseConv2d",r,s);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=mw.runKernel(pv,d,p);return c?Qk(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I=Sw({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const s=Iw(e,"x","dilation2d"),o=Iw(t,"filter","dilation2d");zm(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),zm(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),zm("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=s,l=!1;3===s.rank&&(u=Qk(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0),zm(u.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`));const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},d=mw.runKernel(vv,c,h);return l?Qk(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function OI(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function MI(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let i=e[e.length-a-1];null==i&&(i=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===i)r[n-a-1]=s;else if(1===s)r[n-a-1]=i;else{if(i!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=i}}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI=Sw({equal_:function(e,t){let n=Iw(e,"a","equal","string_or_numeric"),r=Iw(t,"b","equal","string_or_numeric");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(Sv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI=Sw({where_:function(e,t,n){const r=Iw(t,"a","where"),a=Iw(n,"b","where"),i=Iw(e,"condition","where","bool"),s=MI(MI(i.shape,r.shape),a.shape),o={condition:hI(i,s),t:hI(r,s),e:hI(a,s)};return mw.runKernel(qy,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI=Sw({zerosLike_:function(e){const t={x:Iw(e,"x","zerosLike")};return mw.runKernel(Eb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI=Sw({divNoNan_:function(e,t){let n=Iw(e,"a","div"),r=Iw(t,"b","div");[n,r]=uw(n,r);const a=kk(n,r),i=BI(a),s=LI(r,i);return PI(s,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI=Sw({dot_:function(e,t){const n=Iw(e,"t1","dot"),r=Iw(t,"t2","dot");zm(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(zm(a===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${i}.`)),1===n.rank&&1===r.rank){const e=Qk(n,[1,-1]),t=Qk(r,[-1,1]),a=tI(e,t);return Qk(a,[])}if(1===n.rank&&2===r.rank){const e=Qk(n,[1,-1]),t=Qk(r,[r.shape[0],r.shape[1]]),a=tI(e,t);return Qk(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Qk(r,[-1,1]),t=tI(n,e);return Qk(t,[t.size])}{const e=Qk(r,[r.shape[0],r.shape[1]]);return tI(n,e)}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VI=Sw({einsum_:function(e,...t){const n=t.map(((e,t)=>Iw(e,`tensors${t}`,"einsum"))),r={equation:e};return mw.runKernel(wv,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI=Sw({elu_:function(e){const t={x:Iw(e,"x","elu","float32")};return mw.runKernel(kv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI=Sw({erf_:function(e){let t=Iw(e,"x","erf");zm("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=hk(t,"float32"));const n={x:t};return mw.runKernel(Cv,n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function jI(e,t,n){const r=e.length+t.length,a=[];let i=0,s=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function qI(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function KI(e,t){return jI(e,t.map((e=>1)),t)}function XI(e,t,n){zm(HI(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function YI(e,t){if(HI(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function QI(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function JI(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI=Sw({max_:function(e,t=null,n=!1){const r={x:Iw(e,"x","max")},a={reductionIndices:t,keepDims:n};return mw.runKernel(ny,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eC=Sw({min_:function(e,t=null,n=!1){const r={x:Iw(e,"x","min")},a={axis:t,keepDims:n};return mw.runKernel(cy,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tC=Sw({pow_:function(e,t){let n=Iw(e,"base","pow"),r=Iw(t,"exp","pow");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(Sy,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(e,t){if((_x(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&_x(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Tw(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rC=Sw({sqrt_:function(e){const t={x:Iw(e,"x","sqrt","float32")};return mw.runKernel(tb,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aC=Sw({square_:function(e){const t=Iw(e,"x","square");return mw.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC=Sw({sum_:function(e,t=null,n=!1){let r=Iw(e,"x","sum");"bool"===r.dtype&&(r=hk(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return mw.runKernel(nb,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(e,t,n=null){if(0===e.rank)return Ck(e);if(1!==e.rank&&null===n)return sC(Qk(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return iC(Ck(e),n);if(t===1/0)return ZI(Ck(e),n);if(t===-1/0)return eC(Ck(e),n);if("euclidean"===t||2===t)return rC(iC(tC(Ck(e),nC(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return ZI(iC(Ck(e),n[0]),n[1]-1);if(t===1/0)return ZI(iC(Ck(e),n[1]),n[0]);if(t===-1/0)return eC(iC(Ck(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return rC(iC(aC(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const oC=Sw({norm_:function(e,t="euclidean",n=null,r=!1){const a=sC(e=Iw(e,"x","norm"),t,n);let i=a.shape;if(r){const t=Ym(n,e.shape);i=KI(a.shape,t)}return Qk(a,i)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uC=Sw({euclideanNorm_:function(e,t=null,n=!1){return oC(e,"euclidean",t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lC=Sw({exp_:function(e){const t={x:Iw(e,"x","exp")};return mw.runKernel(Nv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cC=Sw({expandDims_:function(e,t=0){const n=Iw(e,"x","expandDims","string_or_numeric");zm(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return mw.runKernel(Tv,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hC=Sw({expm1_:function(e){const t={x:Iw(e,"x","expm1")};return mw.runKernel(Ev,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC=Sw({tile_:function(e,t){const n=Iw(e,"x","tile","string_or_numeric");zm(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return mw.runKernel(wb,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC=Sw({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=ck([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)a.set(1,e,e);const s=Qk(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return dC(cC(s,0),[n[0],1,1]);if(2===n.length)return dC(cC(cC(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return dC(cC(cC(cC(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=Sw({floor_:function(e){const t={x:Iw(e,"x","floor","float32")};return mw.runKernel(Fv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC=Sw({gather_:function(e,t,n=0,r=0){const a={x:Iw(e,"x","gather"),indices:Iw(t,"indices","gather","int32")},i={axis:n,batchDims:r};return mw.runKernel(Ov,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC=Sw({greater_:function(e,t){let n=Iw(e,"a","greater","string_or_numeric"),r=Iw(t,"b","greater","string_or_numeric");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(Lv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vC=Sw({greaterEqual_:function(e,t){let n=Iw(e,"a","greaterEqual","string_or_numeric"),r=Iw(t,"b","greaterEqual","string_or_numeric");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(Pv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=Sw({imag_:function(e){const t={input:Iw(e,"input","imag")};return mw.runKernel(Wv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bC=Sw({isFinite_:function(e){const t={x:Iw(e,"x","isFinite")};return mw.runKernel(Vv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xC=Sw({isInf_:function(e){const t={x:Iw(e,"x","isInf")};return mw.runKernel(Uv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC=Sw({isNaN_:function(e){const t={x:Iw(e,"x","isNaN")};return mw.runKernel(Gv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kC=Sw({leakyRelu_:function(e,t=.2){const n={x:Iw(e,"x","leakyRelu")},r={alpha:t};return mw.runKernel(Hv,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC=Sw({less_:function(e,t){let n=Iw(e,"a","less","string_or_numeric"),r=Iw(t,"b","less","string_or_numeric");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(jv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=Sw({lessEqual_:function(e,t){let n=Iw(e,"a","lessEqual","string_or_numeric"),r=Iw(t,"b","lessEqual","string_or_numeric");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(qv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SC=Sw({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=Iw(e,"x","localResponseNormalization");zm(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),zm(Hm(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=i,o=!1;3===i.rank&&(o=!0,s=Qk(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:s},l={depthRadius:t,bias:n,alpha:r,beta:a},c=mw.runKernel(ey,u,l);return o?Qk(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NC=Sw({log_:function(e){const t={x:Iw(e,"x","log","float32")};return mw.runKernel(Xv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=Sw({log1p_:function(e){const t={x:Iw(e,"x","log1p")};return mw.runKernel(Yv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(e){return mw.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RC=Sw({neg_:function(e){const t={x:Iw(e,"x","neg")};return mw.runKernel(gy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC=Sw({softplus_:function(e){const t={x:Iw(e,"x","softplus")};return mw.runKernel(eb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DC=Sw({logSigmoid_:function(e){const t=Iw(e,"x","logSigmoid"),n=EC((e=>({value:RC(AC(RC(e))),gradFunc:t=>Ik(t,nI(RC(e)))})));return n(t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC=Sw({sub_:function(e,t){let n=Iw(e,"a","sub"),r=Iw(t,"b","sub");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(yb,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=Sw({logSoftmax_:function(e,t=-1){const n=Iw(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=EC(((e,n)=>{const r=ZI(e,t,!0),a=FC(e,r),i=FC(hk(a,"float32"),NC(iC(lC(a),t,!0)));n([i]);return{value:i,gradFunc:(e,n)=>{const[r]=n,a=lC(r);return FC(e,Ik(iC(e,t,!0),a))}}}));return r(n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C=Sw({logSumExp_:function(e,t=null,n=!1){const r=Iw(e,"x","logSumExp"),a=Ym(t,r.shape),i=ZI(r,a,!0),s=FC(r,i),o=lC(s),u=iC(o,a),l=NC(u),c=xk(Qk(i,l.shape),l);if(n){const e=KI(c.shape,a);return Qk(c,e)}return c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC=Sw({logicalAnd_:function(e,t){const n=Iw(e,"a","logicalAnd","bool"),r=Iw(t,"b","logicalAnd","bool");MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(Qv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MC=Sw({logicalNot_:function(e){const t={x:Iw(e,"x","logicalNot","bool")};return mw.runKernel(Jv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC=Sw({logicalOr_:function(e,t){const n=Iw(e,"a","logicalOr","bool"),r=Iw(t,"b","logicalOr","bool");MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(Zv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC=Sw({logicalXor_:function(e,t){const n=Iw(e,"a","logicalXor","bool"),r=Iw(t,"b","logicalXor","bool");return MI(n.shape,r.shape),OC(LC(e,t),MC(OC(e,t)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=Sw({maxPool_:function(e,t,n,r,a){const i=Iw(e,"x","maxPool");let s=i,o=!1;3===i.rank&&(o=!0,s=Qk(i,[1,i.shape[0],i.shape[1],i.shape[2]])),zm(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),zm(qk(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Yk("maxPool",r,a);const u={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=mw.runKernel(ay,u,l);return o?Qk(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zC=Sw({maxPool3d_:function(e,t=[1,1,1],n,r,a,i="NDHWC"){const s=Iw(e,"x","maxPool3d");let o=s,u=!1;4===s.rank&&(u=!0,o=Qk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),zm(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),zm("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Yk("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},h=mw.runKernel(sy,l,c);return u?Qk(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC=Sw({maximum_:function(e,t){let n=Iw(e,"a","maximum"),r=Iw(t,"b","maximum");[n,r]=uw(n,r),"bool"===n.dtype&&(n=hk(n,"int32"),r=hk(r,"int32")),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(ry,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC=Sw({mean_:function(e,t=null,n=!1){const r={x:Iw(e,"x","mean")},a={axis:t,keepDims:n};return mw.runKernel(ly,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(e,t="float32"){if(pg(e),"complex64"===t){const t=UC(e,"float32"),n=UC(e,"float32");return Nw(t,n)}const n=hg(Um(e),t);return mw.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GC(e,t="float32"){if(pg(e),"complex64"===t){const t=GC(e,"float32"),n=UC(e,"float32");return Nw(t,n)}const n=cg(Um(e),t);return mw.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC=Sw({minimum_:function(e,t){let n=Iw(e,"a","minimum"),r=Iw(t,"b","minimum");[n,r]=uw(n,r),"bool"===n.dtype&&(n=hk(n,"int32"),r=hk(r,"int32")),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(hy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC=Sw({mirrorPad_:function(e,t,n){zm("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Iw(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");zm(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)zm(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),zm(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},s={x:r};return mw.runKernel(dy,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC=Sw({mod_:function(e,t){let n=Iw(e,"a","mod"),r=Iw(t,"b","mod");[n,r]=uw(n,r);const a={a:n,b:r};return mw.runKernel(py,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=Sw({moments_:function(e,t=null,n=!1){const r=Ym(t,(e=Iw(e,"x","moments")).shape),a=VC(e,r,n);let i=a.shape;n||(i=KI(a.shape,r));const s=aC(FC(hk(e,"float32"),Qk(a,i)));return{mean:a,variance:VC(s,r,n)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XC=Sw({notEqual_:function(e,t){let n=Iw(e,"a","notEqual","string_or_numeric"),r=Iw(t,"b","notEqual","string_or_numeric");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(vy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YC=Sw({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:Iw(e,"indices","oneHot","int32")},s={dtype:a,depth:t,onValue:n,offValue:r};return mw.runKernel(ky,i,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QC=Sw({onesLike_:function(e){const t={x:Iw(e,"x","onesLike")};return mw.runKernel(wy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC=Sw({pad_:function(e,t,n=0){const r=Iw(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},i={x:r};return mw.runKernel(Cy,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZC=Sw({spaceToBatchND_:function(e,t,n){const r=Iw(e,"x","spaceToBatchND");zm(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),zm(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),zm(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return mw.runKernel(rb,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS=Sw({pool_:function(e,t,n,r,a,i,s){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=Iw(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=Qk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),zm(qk(i,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${a}'`));const c=Lk(u.shape,t,i,a,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],i[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),i=e.concat(r,a),s=t.map(((e,t)=>(e-i[t]%e)%e)),o=a.map(((e,t)=>e+s[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,s[t]]));return[u,l]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",v=p?u:ZC(u,h,f),y=("avg"===n?()=>Jk(v,t,i,g,s):()=>BC(v,t,i,g,s))(),b=p?y:iI(y,h,m);return l?Qk(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tS=Sw({prelu_:function(e,t){const n={x:Iw(e,"x","prelu"),alpha:Iw(t,"alpha","prelu")};return mw.runKernel(Ny,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nS=Sw({prod_:function(e,t=null,n=!1){let r=Iw(e,"x","prod");"bool"===r.dtype&&(r=hk(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return mw.runKernel(Ty,a,i)}});var rS={};(function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.alea=i})(0,{get exports(){return rS},set exports(e){rS=e}},!1);var aS={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor128=i}(0,e,!1)}({get exports(){return aS},set exports(e){aS=e}});var iS={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorwow=i}(0,e,!1)}({get exports(){return iS},set exports(e){iS=e}});var sS={};!function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorshift7=i}(0,e,!1)}({get exports(){return sS},set exports(e){sS=e}});var oS={};!function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor4096=i}(0,e,!1)}({get exports(){return oS},set exports(e){oS=e}});var uS={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.tychei=i}(0,e,!1)}({get exports(){return uS},set exports(e){uS=e}});var lS={},cS={get exports(){return lS},set exports(e){lS=e}},hS=ue(Object.freeze({__proto__:null,default:{}}));!function(e){!function(t,n,r){var a,i=256,s="random",o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=i-1;function h(e,c,h){var v=[],y=m(f((c=1==c?{entropy:!0}:c||{}).entropy?[e,g(n)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(i):(e=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(e)),g(e)}catch(e){var r=t.navigator,s=r&&r.plugins;return[+new Date,t,s,t.screen,g(n)]}}():e,3),v),b=new d(v),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),n),(c.pass||h||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r[s]=e,t):e})(x,y,"global"in c?c.global:this==r,c.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),e.exports){e.exports=h;try{a=hS}catch(e){}}else r["seed"+s]=h}("undefined"!=typeof self?self:oe,[],Math)}(cS);var dS=rS,pS=aS,fS=iS,mS=sS,gS=oS,vS=uS,yS=lS;yS.alea=dS,yS.xor128=pS,yS.xorwow=fS,yS.xorshift7=mS,yS.xor4096=gS,yS.tychei=vS;var bS=yS;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xS{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=bS.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,i;do{r=2*this.random()-1,a=2*this.random()-1,i=r*r+a*a}while(i>=1||0===i);const s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class wS{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=bS.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kS=Sw({randomNormal_:function(e,t=0,n=1,r,a){if(pg(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new xS(t,n,r,!1,a),s=ck(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS=Sw({randomUniform_:function(e,t=0,n=1,r="float32",a){pg(e);const i=ck(e,r),s=new wS(t,n,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return mw.runKernel(Dy,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS=Sw({real_:function(e){const t={input:Iw(e,"input","real")};return mw.runKernel(Fy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NS=Sw({reciprocal_:function(e){const t={x:Iw(e,"x","reciprocal")};return mw.runKernel(_y,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TS=Sw({relu_:function(e){const t={x:Iw(e,"x","relu")};return mw.runKernel($y,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ES=Sw({relu6_:function(e){const t={x:Iw(e,"x","relu6")};return mw.runKernel(zy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RS=Sw({reverse_:function(e,t){const n={x:Iw(e,"x","reverse")},r={dims:t};return mw.runKernel(Wy,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AS=Sw({round_:function(e){const t={x:Iw(e,"x","round")};return mw.runKernel(Vy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS=Sw({rsqrt_:function(e){const t={x:Iw(e,"x","rsqrt","float32")};return mw.runKernel(Uy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS=Sw({selu_:function(e){const t={x:Iw(e,"x","selu")};return mw.runKernel(Ky,t)}});const _S=Sw({separableConv2d_:function(e,t,n,r,a,i=[1,1],s="NHWC"){const o=Iw(e,"x","separableConv2d"),u=Iw(t,"depthwiseFilter","separableConv2d"),l=Iw(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Qk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");zm(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),zm(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),zm(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),zm(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),zm(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];zm(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=FI(c,u,r,a,s,i),m=bI(f,l,1,"valid",s);return h?Qk(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S=Sw({sign_:function(e){const t={x:Iw(e,"x","sign")};return mw.runKernel(Jy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS=Sw({sin_:function(e){const t={x:Iw(e,"x","sin","float32")};return mw.runKernel(Yy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MS=Sw({sinh_:function(e){const t={x:Iw(e,"x","sinh")};return mw.runKernel(Qy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS=Sw({slice1d_:function(e,t,n){const r=Iw(e,"x","slice1d");return zm(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),rI(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PS=Sw({slice2d_:function(e,t,n){const r=Iw(e,"x","slice2d");return zm(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),rI(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS=Sw({slice3d_:function(e,t,n){const r=Iw(e,"x","slice3d");return zm(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),rI(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zS=Sw({slice4d_:function(e,t,n){const r=Iw(e,"x","slice4d");return zm(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),rI(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS=Sw({softmax_:function(e,t=-1){const n=Iw(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return mw.runKernel(ib,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VS=Sw({fft_:function(e){zm("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return mw.runKernel(Rv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US=Sw({ifft_:function(e){zm("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return mw.runKernel(zv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GS=Sw({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Qk(e,[n,t]);r=US(a)}else{const a=[n,2*(t-1)],i=Qk(SS(e),[n,t]),s=Qk(yC(e),[n,t]),o=RS(rI(i,[0,1],[n,t-2]),1),u=Ik(RS(rI(s,[0,1],[n,t-2]),1),nC(-1)),l=eI([i,o],1),c=eI([s,u],1),h=Qk(Nw(l,c),[a[0],a[1]]);r=US(h)}if(r=SS(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Qk(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=Sw({split_:function(e,t,n=0){const r={x:Iw(e,"x","split")},a={numOrSizeSplits:t,axis:n};return mw.runKernel(ab,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS=Sw({rfft_:function(e,t){zm("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,a=rI(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=eI([e,UC(r)],e.shape.length-1),n=t}else a=e;const i=BI(a),s=Qk(Nw(a,i),[r,n]),o=VS(s),u=Math.floor(n/2)+1,l=SS(o),c=yC(o),h=HS(l,[u,n-u],l.shape.length-1),d=HS(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,Qk(Nw(h[0],d[0]),p)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS=Sw({squaredDifference_:function(e,t){let n=Iw(e,"a","squaredDifference"),r=Iw(t,"b","squaredDifference");[n,r]=uw(n,r),MI(n.shape,r.shape);const a={a:n,b:r};return mw.runKernel(hb,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS=Sw({squeeze_:function(e,t){const n=Iw(e,"x","squeeze","string_or_numeric");return Qk(n,Qm(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XS=Sw({stack_:function(e,t=0){const n=Cw(e,"tensors","stack","string_or_numeric");zm(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&zm(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return mw.runKernel(Iy,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS=Sw({step_:function(e,t=0){const n={x:Iw(e,"x","step")},r={alpha:t};return mw.runKernel(Rb,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS=Sw({stridedSlice_:function(e,t,n,r,a=0,i=0,s=0,o=0,u=0){const l={x:Iw(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};return mw.runKernel(fb,l,c)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS=Sw({tan_:function(e){const t={x:Iw(e,"x","tan","float32")};return mw.runKernel(bb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(e,t){Vm(e);const n=xw(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Tw(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(e,t,n){if(Vm(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=xw(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Tw(e,t,r,n)}function tN(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(i+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(i+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(i+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function nN(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let s=1;for(let e=a;e<i;++e)s*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:Um(t.shape)/o,sliceSize:s,strides:[...og(n.slice(0,a)),1],outputSize:Um(n)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN=Sw({topk_:function(e,t=1,n=!0){const r=Iw(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},s={k:t,sorted:n},[o,u]=mw.runKernel(kb,i,s);return{values:o,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN=Sw({truncatedNormal_:function(e,t=0,n=1,r,a){if(pg(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new xS(t,n,r,!0,a),s=ck(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iN=Sw({unique_:function(e,t=0){const n=Iw(e,"x","unique","string_or_numeric");zm(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,s]=mw.runKernel(Sb,r,a);return{values:i,indices:s}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=Sw({unsortedSegmentSum_:function(e,t,n){const r=Iw(e,"x","unsortedSegmentSum"),a=Iw(t,"segmentIds","unsortedSegmentSum","int32");zm(Hm(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},s={numSegments:n};return mw.runKernel(Tb,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN=Sw({unstack_:function(e,t=0){const n=Iw(e,"x","unstack","string_or_numeric");zm(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return mw.runKernel(Nb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uN(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ck(e,"int32"),a=ck([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),s=t*e.length;a.values.set(i,s)}return a.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lN=Sw({transpose_:function(e,t,n){const r=Iw(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),zm(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{zm(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},i={perm:t};return"complex64"===r.dtype?gk((()=>{let e=SS(r),t=yC(r);return e=mw.runKernel(Cb,{x:e},i),t=mw.runKernel(Cb,{x:t},i),n&&(t=RC(t)),Nw(e,t)})):mw.runKernel(Cb,a,i)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN=Sw({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Iw(e,"x","dropout");if(zm("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),zm(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Xx?a.clone():a;const i=function(e,t){if(null==t)return e.shape.slice();if(Gm(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=kk(fC(xk(IS(i,0,1,"float32",r),s)),s);return Ik(a,o)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hN=Sw({conv2DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i="NHWC",s){let o=e;3===e.rank&&(o=Qk(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Qk(t,[1,t.shape[0],t.shape[1],t.shape[2]])),zm(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),zm(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),zm(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];zm(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),zm(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Yk("conv2dDerFilter",a,s);const h={x:o,dy:u},d={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,filterShape:n};return mw.runKernel(tv,h,d)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ik(e,YS(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function pN(e,t){let n=t;const r=OI(e.shape,t.shape);return r.length>0&&(n=iC(n,r)),Qk(n,e.shape)}function fN(e,t,n,r){if("linear"===t)return e;if("relu"===t)return TS(e);if("elu"===t)return UI(e);if("relu6"===t)return ES(e);if("prelu"===t)return tS(e,n);if("leakyrelu"===t)return kC(e,r);if("sigmoid"===t)return nI(e);throw new Error(`Unknown fused activation ${t}.`)}const mN=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gN=Sw({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===mN(mw.state.gradientDepth,u)){zm("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=bI(e,t,n,r,a,i,s);return null!=o&&(h=xk(h,o)),fN(h,u,l,c)}const h=Iw(e,"x","conv2d","float32"),d=Iw(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Qk(h,[1,h.shape[0],h.shape[1],h.shape[2]])),zm(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),zm(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Yk("fused conv2d",r,s);const m="NHWC"===a?p.shape[3]:p.shape[1];zm(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),zm(qk(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const g=Bk(p.shape,d.shape,n,i,r,s);let v,y;if(null!=o&&(v=Iw(o,"bias","fused conv2d"),[v]=uw(v,h),"NHWC"===a?MI(g.outShape,v.shape):(zm(v.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`)),zm(0===v.shape.length||v.shape[0]===g.outChannels||1===v.shape[0],(()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(zm(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)zm(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{MI(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=Iw(l,"prelu weights","fused conv2d")}const b=(e,t)=>{zm("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[s,o,l,c]=t,h=dN(e,l,u);zm(jk(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[wI(o.shape,h,s,n,r),hN(o,h,s.shape,n,r)];if(null!=c){const e=pN(c,h);d.push(e)}return d},x={x:p,filter:d,bias:v,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:c};if(null==o){const e=EC(((e,t,n)=>{let r=mw.runKernel(Fb,x,w);return n([t,e,r]),f&&(r=Qk(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=EC(((e,t,n,r)=>{let a=mw.runKernel(Fb,x,w);return r([t,e,a,n]),f&&(a=Qk(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(p,d,v)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN=Sw({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],s){let o=e;3===e.rank&&(o=Qk(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=Qk(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:s,dilations:i,filterShape:n};return mw.runKernel(fv,l,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN=Sw({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],s){let o=t,u=!1;3===t.rank&&(u=!0,o=Qk(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:s,dilations:i,inputShape:e},h=mw.runKernel(mv,l,c);return u?Qk(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN=Sw({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){if(!1===mN(mw.state.gradientDepth,i)){let u=tI(e,t,n,r);return null!=a&&(u=xk(u,a)),fN(u,i,s,o)}let u=Iw(e,"a","fused matMul"),l=Iw(t,"b","fused matMul");[u,l]=uw(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=Um(f),v=Um(m);zm(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=MI(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),b=Qk(u,n?[g,c,d]:[g,d,c]),x=Qk(l,r?[v,p,h]:[v,h,p]);let w,k;null!=a&&(w=Iw(a,"bias","fused matMul"),[w]=uw(w,u),MI(y,w.shape)),null!=s&&(k=Iw(s,"prelu weights","fused matMul"));const I=(e,t)=>{const[s,o,u,l]=t,c=dN(Qk(e,u.shape),u,i);let h,d;if(n||r?!n&&r?(h=tI(c,o,!1,!1),d=tI(c,s,!0,!1)):n&&!r?(h=tI(o,c,!1,!0),d=tI(s,c,!1,!1)):(h=tI(o,c,!0,!0),d=tI(c,s,!0,!0)):(h=tI(c,o,!1,!0),d=tI(s,c,!0,!1)),null!=a){return[h,d,pN(l,c)]}return[h,d]},C={a:b,b:x,bias:w,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==a){const e=EC(((e,t,n)=>{const r=mw.runKernel(Db,C,S);return n([e,t,r]),{value:Qk(r,y),gradFunc:I}}));return e(b,x)}{const e=EC(((e,t,n,r)=>{const a=mw.runKernel(Db,C,S);return r([e,t,a,n]),{value:Qk(a,y),gradFunc:I}}));return e(b,x,w)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xN=Sw({cropAndResize_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a="bilinear",i=0){const s=Iw(e,"image","cropAndResize"),o=Iw(t,"boxes","cropAndResize","float32"),u=Iw(n,"boxInd","cropAndResize","int32"),l=o.shape[0];zm(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),zm(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),zm(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),zm(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),zm(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),zm("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:s,boxes:o,boxInd:u},h={method:a,extrapolationValue:i,cropSize:r};return mw.runKernel(cv,c,h)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN=Sw({flipLeftRight_:function(e){const t=Iw(e,"image","flipLeftRight","float32");zm(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return mw.runKernel(Dv,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN=Sw({grayscaleToRGB_:function(e){const t=Iw(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];zm(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),zm(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,dC(t,a)}});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IN=Sw({rgbToGrayscale_:function(e){const t=Iw(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];zm(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),zm(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,i=hk(t,"float32"),s=ZS([.2989,.587,.114]);let o;switch(t.rank){case 2:o=VI("ij,j->i",i,s);break;case 3:o=VI("ijk,k->ij",i,s);break;case 4:o=VI("ijkl,l->ijk",i,s);break;case 5:o=VI("ijklm,m->ijkl",i,s);break;case 6:o=VI("ijklmn,n->ijklm",i,s);break;default:throw new Error("Not a valid tensor rank.")}return o=cC(o,-1),hk(o,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN=Sw({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Iw(e,"image","rotateWithOffset","float32");zm(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const i={image:a},s={radians:t,fillValue:n,center:r};return mw.runKernel(Ab,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const s=e.shape[0];return n=Math.min(n,s),zm(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),zm(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),zm(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),zm(1===t.rank,(()=>"scores must be a 1D tensor")),zm(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),zm(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN=Sw({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=Iw(e,"boxes","nonMaxSuppression","float32"),s=Iw(t,"scores","nonMaxSuppression","float32"),o=SN(i,s,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return mw.runKernel(yy,{boxes:i,scores:s},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,i=0,s=!1;for(;r<a;){i=r+(a-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||EN)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function EN(e,t){return e>t?1:e<t?-1:0}function RN(e,t,n,r,a){return FN(e,t,n,r,a,0)}function AN(e,t,n,r,a,i){return FN(e,t,n,r,a,0,!1,i,!0)}function DN(e,t,n,r,a,i){return FN(e,t,n,r,a,i,!0)}function FN(e,t,n,r,a,i,s=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(ON);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=s;--n){const s=_N(e,i,h[n]);if(s>=r){o=!0;break}if(t.score=t.score*$N(r,c,s),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>a&&TN(l,t,ON))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return s&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function _N(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(u-s),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(s,c),v=Math.min(o,h),y=Math.min(u,d),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(p+f-b)}function $N(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function ON(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=Iw(e,"boxes","nonMaxSuppressionAsync"),s=Iw(t,"scores","nonMaxSuppressionAsync"),o=SN(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([i.data(),s.data()]),l=u[0],c=u[1],{selectedIndices:h}=RN(l,c,n,r,a);return i!==e&&i.dispose(),s!==t&&s.dispose(),ZS(h,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN=Sw({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=Iw(e,"boxes","nonMaxSuppression"),o=Iw(t,"scores","nonMaxSuppression"),u=SN(s,o,n,r,a,i),l={boxes:s,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},h=mw.runKernel(xy,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PN=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=Iw(e,"boxes","nonMaxSuppressionAsync"),o=Iw(t,"scores","nonMaxSuppressionAsync"),u=SN(s,o,n,r,a,i);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([s.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=DN(c,h,n,r,a,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:ZS(d,"int32"),selectedScores:ZS(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN=Sw({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=Iw(e,"boxes","nonMaxSuppression"),o=Iw(t,"scores","nonMaxSuppression"),u=SN(s,o,n,r,a,null),l={boxes:s,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},h=mw.runKernel(by,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=Iw(e,"boxes","nonMaxSuppressionAsync"),o=Iw(t,"scores","nonMaxSuppressionAsync"),u=SN(s,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=AN(d,p,l,c,h,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:ZS(f,"int32"),validOutputs:nC(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WN=Sw({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Iw(e,"images","resizeBilinear");zm(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),zm(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),zm(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=Qk(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=mw.runKernel(Py,o,u);return s?Qk(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VN=Sw({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Iw(e,"images","resizeNearestNeighbor");zm(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),zm(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),zm("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),zm(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=Qk(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=mw.runKernel(My,o,u);return s?Qk(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UN=Sw({threshold_:function(e,t="binary",n=!1,r=.5){const a=Iw(e,"image","threshold"),i=a.shape[0]*a.shape[1];let s,o,u,l,c=Ik(ZS([r]),255);if(zm(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),zm(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),zm("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),zm("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[s,o,u]=HS(a,[1,1,1],-1);const e=Ik(s,.2989),t=Ik(o,.587),n=Ik(u,.114);l=xk(xk(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,a,i,s,o,u=ZS([-1]),l=ZS([0]),c=ZS([0]);for(let h=0;h<e.size-1;h++){n=rI(e,0,h+1),r=rI(e,h+1),s=kk(iC(n),t),o=kk(iC(r),t);const d=iC(Ik(n,CS(0,n.size)));a=kk(d,iC(n));const p=pI(r.shape,n.size),f=xk(CS(0,r.size),p),m=Ik(r,f);i=kk(iC(m),iC(r));const g=FC(a,i),v=FC(a,i),y=Ik(s,o);c=Ik(Ik(y,g),v);const b=gC(c,l);l=PI(b,c,l),u=PI(b,ZS([h]),u)}return u}(cI(hk(AS(l),"int32"),Ew([]),256),i)}const h=n?CC(l,c):gC(l,c);return hk(Ik(h,255),"int32")}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN=Sw({transform_:function(e,t,n="nearest",r="constant",a=0,i){const s=Iw(e,"image","transform","float32"),o=Iw(t,"transforms","transform","float32");zm(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),zm(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),zm(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:s,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:i};return mw.runKernel(Ib,u,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN=Sw({bandPart_:function(e,t,n){const r=Iw(e,"a","bandPart");zm(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[i,s]=r.shape.slice(-2);let o,u;"number"==typeof t?(zm(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),zm(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=Iw(t<0?i:t,"numLower","bandPart")):(zm("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=PI(IC(t,0),i,HC(t,i))),"number"==typeof n?(zm(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),zm(n<=s,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`)),u=Iw(n<0?s:n,"numUpper","bandPart")):(zm("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=PI(IC(n,0),s,HC(n,s)));const l=Qk(CS(0,i,1,"int32"),[-1,1]),c=CS(0,s,1,"int32"),h=FC(l,c),d=OC(CC(h,o),vC(h,RC(u))),p=UC([i,s],r.dtype);return Qk(XS(oN(Qk(r,[-1,i,s])).map((e=>PI(d,e,p)))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN=Sw({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,zm(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)zm(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=HS(e,e.shape[0],0).map((e=>KS(e,[0])));zm(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(mw.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Ik(iC(Ik(n[r],e)),n[r]);e=FC(e,t)}return kk(e,oC(e,"euclidean"))})));return t?XS(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(e,t=!1){return mw.tidy((()=>{zm(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=pC(n),i=dk(e);const s=eN([[1]],[1,1]);let o=dk(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=o,l=a;[o,i,a]=mw.tidy((()=>{const t=rI(i,[e,e],[n-e,1]),u=oC(t),l=rI(i,[e,e],[1,1]),c=PI(gC(l,0),eN([[-1]]),eN([[1]])),h=FC(l,Ik(c,u)),d=kk(t,h);o=1===d.shape[0]?dk(s):eI([s,rI(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=RC(kk(tI(c,h),u)),f=rI(i,[e,0],[n-e,r]),m=Ik(p,o),g=lN(o);if(0===e)i=FC(f,tI(m,tI(g,f)));else{const t=FC(f,tI(m,tI(g,f)));i=eI([rI(i,[0,0],[e,r]),t],0)}const v=lN(m),y=rI(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=FC(y,tI(tI(y,o),v));else{const t=FC(y,tI(tI(y,o),v));a=eI([rI(a,[0,0],[n,e]),t],1)}return[o,i,a]})),vk([t,u,l])}return!t&&n>r&&(a=rI(a,[0,0],[n,r]),i=rI(i,[0,0],[r,r])),[a,i]}))}const KN=Sw({qr_:function(e,t=!1){if(zm(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return qN(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=oN(Qk(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];r.forEach((e=>{const[n,r]=qN(e,t);a.push(n),i.push(r)}));return[Qk(XS(a,0),e.shape),Qk(XS(i,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var XN;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(XN||(XN={}));const YN={flipLeftRight:wN,grayscaleToRGB:kN,resizeNearestNeighbor:VN,resizeBilinear:WN,rgbToGrayscale:IN,rotateWithOffset:CN,cropAndResize:xN,nonMaxSuppression:NN,nonMaxSuppressionAsync:MN,nonMaxSuppressionWithScore:LN,nonMaxSuppressionWithScoreAsync:PN,nonMaxSuppressionPadded:BN,nonMaxSuppressionPaddedAsync:zN,threshold:UN,transform:GN},QN={bandPart:HN,gramSchmidt:jN,qr:KN},JN=new Map,ZN=new Map;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eT{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class tT{constructor(){this.classNameMap={}}static getMap(){return null==tT.instance&&(tT.instance=new tT),tT.instance}static register(e){tT.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function nT(e,t,n){zm(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),zm("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),zm(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return tT.register(e),JN.set(r,e),ZN.set(e,r),e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rT extends eT{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return vk(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){zm(ig(e),(()=>"The f passed in variableGrads(f) must be a function")),zm(null==t||Array.isArray(t)&&t.every((e=>e instanceof Qx)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in mw.registeredVariables)t.push(mw.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),zm(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:i,grads:s}=mw.gradients(e,t,null,!0);zm(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),zm(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=s[t]&&(o[e.name]=s[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&vk(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:nC(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(rT,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aT extends rT{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=mw.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mw.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:gk((()=>BI(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:gk((()=>BI(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;gk((()=>{const e=xk(Ik(i,this.rho),Ik(aC(a),1-this.rho)),t=Ik(kk(rC(xk(s,this.epsilon)),rC(xk(i,this.epsilon))),a),n=xk(Ik(s,this.rho),Ik(aC(t),1-this.rho));i.assign(e),s.assign(n);const o=xk(Ik(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(vk(this.accumulatedGrads.map((e=>e.variable))),vk(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iT extends rT{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mw.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:gk((()=>pI(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable;gk((()=>{const e=xk(i,aC(a));i.assign(e);const t=xk(Ik(kk(a,rC(xk(e,mw.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&vk(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sT extends rT{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],gk((()=>{this.accBeta1=nC(t).variable(),this.accBeta2=nC(n).variable()})),null==r&&(this.epsilon=mw.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);gk((()=>{const n=FC(1,this.accBeta1),r=FC(1,this.accBeta2);t.forEach(((t,a)=>{const i=mw.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:gk((()=>BI(i).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:gk((()=>BI(i).variable(false)))});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=xk(Ik(o,this.beta1),Ik(s,1-this.beta1)),c=xk(Ik(u,this.beta2),Ik(aC(s),1-this.beta2)),h=kk(l,n),d=kk(c,r);o.assign(l),u.assign(c);const p=xk(Ik(kk(h,xk(rC(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(Ik(this.accBeta1,this.beta1)),this.accBeta2.assign(Ik(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&vk(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&vk(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),gk((()=>{this.accBeta1.assign(tC(this.beta1,this.iterations_+1)),this.accBeta2.assign(tC(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oT extends rT{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],gk((()=>{this.iteration=nC(0).variable(),this.accBeta1=nC(t).variable()})),null==r&&(this.epsilon=mw.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);gk((()=>{const n=FC(1,this.accBeta1),r=kk(-this.learningRate,xk(Ik(this.iteration,this.decay),1));t.forEach(((t,a)=>{const i=mw.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:BI(i).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:BI(i).variable(false)});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=xk(Ik(o,this.beta1),Ik(s,1-this.beta1)),c=Ik(u,this.beta2),h=Ck(s),d=WC(c,h);o.assign(l),u.assign(d);const p=xk(Ik(kk(r,n),kk(l,xk(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(xk(this.iteration,1)),this.accBeta1.assign(Ik(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&vk(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&vk(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uT extends rT{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=mw.registeredVariables[t];gk((()=>{const e=xk(Ik(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=yk(nC(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lT extends uT{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=nC(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mw.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:gk((()=>BI(r).variable(e)))}}const a=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&gk((()=>{let e;const t=xk(Ik(this.m,a),i);e=this.useNesterov?xk(Ik(this.c,xk(i,Ik(t,this.m))),r):xk(Ik(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&vk(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cT extends rT{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=mw.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=mw.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:gk((()=>BI(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:gk((()=>BI(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:gk((()=>BI(r).variable(a)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;gk((()=>{const e=xk(Ik(s,this.decay),Ik(aC(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=xk(Ik(t,this.decay),Ik(i,1-this.decay)),u=kk(Ik(i,this.learningRate),rC(FC(e,xk(aC(a),this.epsilon)))),l=xk(Ik(o,this.momentum),u);s.assign(e),t.assign(a),o.assign(l);const c=FC(r,l);r.assign(c)}else{const e=xk(Ik(s,this.decay),Ik(aC(i),1-this.decay)),t=xk(Ik(o,this.momentum),kk(Ik(i,this.learningRate),rC(xk(e,this.epsilon))));s.assign(e),o.assign(t);const n=FC(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&vk(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&vk(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&vk(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT=[aT,iT,sT,oT,lT,cT,uT];function dT(e){return new Promise((e=>setTimeout(e))).then(e)}class pT{constructor(e){if(!xg().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(pT.URL_SCHEME)&&(e=e.slice(pT.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Rw.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=$w(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await dT((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await dT((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Mw(e)}}}}pT.URL_SCHEME="downloads://";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fT(e,t,n,r){!function(e){zm(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){zm(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),zm(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),zm(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((i=>(i.then((i=>{const s=n+ ++a/e.length*(r-n);return t(s),i})),i))))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Lw.registerSaveRouter((e=>xg().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pT.URL_SCHEME)?function(e="model"){return new pT(e)}(e.slice(pT.URL_SCHEME.length)):null));class mT{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(zm("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=xg().platform.fetch,zm(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&zm(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=$w(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Rw.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Mw(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ow(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,i=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);this.weightUrlConverter&&s.push(...await Promise.all(o));const u=await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?xg().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await fT(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await fT(a,t.onProgress,.5,1)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,u]}}function gT(e){return null!=e.match(mT.URL_SCHEME_REGEX)}mT.URL_SCHEME_REGEX=/^https?:\/\//;const vT=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>gT(e))):gT(e),n)return function(e,t){return new mT(e,t)}(e,t)}return null};function yT(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Um(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,i=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=i;e<n;++e)l*=o[e],u.push(o[e]);const c=[...og(e.shape).map((e=>e/l)),1].slice(0,i);return[u,s,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Lw.registerSaveRouter(vT),Lw.registerLoadRouter(vT);const bT=-2,xT=-1;function wT(e,t,n){const r=e.shape.length;zm(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),zm(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)zm(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function kT(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function IT(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function CT(e,t,n){return n<=e?n:n-(t-1)}function ST(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function NT(e,t,n,r,a){const i=[...a],s=ST(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{const s=CT(t,n,a);let o=r[s];e&1<<s&&(o=0),i[a]=o}return i}function TT(e,t,n,r,a){const i=[...a],s=ST(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=CT(t,n,a);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=Lm(0,i[e],a[e])}return i}function ET(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function RT(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=Lm(0,s,u-1),s}function AT(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=o>0?Lm(0,s,u):Lm(-1,s,u-1),s}function DT(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function FT(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function _T(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{zm(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(zm(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function $T(e,t,n,r,a,i,s,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=s&&0!=(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&s&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(bT),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(xT),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],v=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const s=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=OT(d.begin[t],0,d.strides[t],r,a,i),d.end[t]=OT(d.end[t],1,d.strides[t],r,a,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&s,f=f&&(0===t&&1===d.strides[t]||s);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):s&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?v.push(g[t]):t===bT&&v.push(1)}const y=v.filter(((e,t)=>d.finalShapeGatherIndices[t]!==bT));return{finalShapeSparse:y,finalShape:v,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function OT(e,t,n,r,a,i){if(a[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}var MT=Object.freeze({__proto__:null,assertParamsValid:wT,maskToAxes:function(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t},computeOutShape:kT,stridesWithElidedDims:IT,getNormalizedAxes:function(e,t,n,r,a,i,s,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=NT(s,u,l,r,e),h=TT(o,u,l,a,e),d=IT(i,u,l,e)}else for(let t=0;t<l;t++)c[t]=RT(s,r,i,e,t,u),h[t]=AT(o,a,i,e,t,u),d[t]=ET(i,t,u);return{begin:c,end:h,strides:d}},startIndicesWithElidedDims:NT,stopIndicesWithElidedDims:TT,stridesForAxis:ET,startForAxis:RT,stopForAxis:AT,isSliceContinous:DT,computeFlatOffset:FT,parseSliceParams:_T,sliceInfo:$T});/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const LT=
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class{static sgd(e){return new uT(e)}static momentum(e,t,n=!1){return new lT(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new cT(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new sT(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new aT(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new oT(e,t,n,r,a)}static adagrad(e,t=.1){return new iT(e,t)}},PT="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(){return new Promise((e=>PT((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(e,t){const n=e[0].length;e.forEach(((e,t)=>{zm(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),zm(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let i=0;i<n;i++)zm(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function WT(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var VT;function UT(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const i=n[a],s=r[r.length-n.length+a],o=r[s];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${i} but shape[${a+e}] = ${o}`)}else r[s]=i}return r}function GT(e){const t={FIRST_DIM_SIZE:VT.FIRST_DIM_SIZE,VALUE_ROWIDS:VT.VALUE_ROWIDS,ROW_LENGTHS:VT.ROW_LENGTHS,ROW_SPLITS:VT.ROW_SPLITS,ROW_LIMITS:VT.ROW_LIMITS,ROW_STARTS:VT.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function HT(e){return 0===e.length?0:e[0]===VT.FIRST_DIM_SIZE?e.length-1:e.length}function jT(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(VT||(VT={}));const qT=30;function KT(e){return e<=qT?e:sg(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function QT(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function JT(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function ZT(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function eE(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE=1.7580993408473768,nE=1.0507009873554805,rE=.3275911,aE=.254829592,iE=-.284496736,sE=1.421413741,oE=-1.453152027,uE=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lE(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function cE(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function hE(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function dE(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function pE(e,t){return{real:e[2*t],imag:e[2*t+1]}}function fE(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function mE(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}function gE(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE="->",yE=/->/g,bE=",",xE="...";function wE(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(yE,"").length)/vE.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${vE}").`);const[r,a]=e.split(vE);zm(-1===r.indexOf(xE),(()=>`The ellipsis notation ("${xE}") is not supported yet.`));const i=r.split(bE),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==bE&&o.push(t)}const u=new Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(o.indexOf(i[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function kE(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function IE(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:zm(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function CE(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const a=NE(t,n[e]);for(const t of a)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function SE(e){return e.every(((e,t)=>e===t))}function NE(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function TE(e,t,n=0){let r=[];if("number"==typeof t)zm(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);zm(a<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}zm(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function RE(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function AE(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function FE(e,t){return`size ${e} must be non-negative, not ${t}`}function _E(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function $E(e,t){return`Input to reshape is a SparseTensor with ${Um(e)}\n  dense values, but the requested shape requires a multiple of ${Um(t)}. inputShape=${e} outputShape= ${t}`}function OE(e,t){return`Input to reshape is a tensor with ${Um(e)} dense values, but the requested shape has ${Um(t)}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(){return"segment ids must be >= 0"}function LE(){return"segment ids are not increasing"}function PE(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function BE(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(e,t){let n,r=!1;for(e<=qT?(n=e,r=!0):n=sg(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=sg(e,n+1);return n}function WE(e,t,n){const r=[],a=e.length;for(let i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}function VE(e,t,n,r){const a=t.shape.length,i=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:s,outputShape:o}}var UE=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:zE,computeOutShape:WE,collectGatherOpShapeInfo:VE});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(e){try{return e.map((e=>Fx(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function HE(e){return e.map((e=>Dx(e)))}var jE=Object.freeze({__proto__:null,slice_util:MT,segment_util:UE,fromUint8ToStringArray:GE,fromStringArrayToUint8:HE,upcastType:aw,axesAreInnerMostDims:HI,combineLocations:jI,computeOutAndReduceShapes:qI,expandShapeToKeepDim:KI,assertAxesAreInnerMostDims:XI,getAxesPermutation:YI,getUndoAxesPermutation:QI,getInnerMostAxes:JI,getBroadcastDims:$I,getReductionAxes:OI,assertAndGetBroadcastShape:MI,assertParamsConsistent:zT,computeOutShape:WT,computeDilation2DInfo:Mk,computePool2DInfo:Lk,computePool3DInfo:Pk,computeConv2DInfo:Bk,computeConv3DInfo:zk,computeDefaultPad:Wk,tupleValuesAreOne:jk,eitherStridesOrDilationsAreOne:qk,stridesOrDilationsArePositive:Kk,convertConv2DDataFormat:Xk,checkPadOnDimRoundingMode:Yk,getFusedDyActivation:dN,getFusedBiasGradient:pN,applyActivation:fN,shouldFuse:mN,get RowPartitionType(){return VT},combineRaggedTensorToTensorShapes:UT,getRowPartitionTypesHelper:GT,getRaggedRank:HT,validateDefaultValueShape:jT,PARALLELIZE_THRESHOLD:qT,computeOptimalWindowSize:KT,getImageCenter:XT,getReshaped:YT,getPermuted:QT,getReshapedPermuted:JT,getSliceBeginCoords:ZT,getSliceSize:eE,prepareAndValidate:yT,validateUpdateShape:tN,validateInput:function(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}tN(n,t,e)},calculateShapes:nN,SELU_SCALEALPHA:tE,SELU_SCALE:nE,ERF_P:rE,ERF_A1:aE,ERF_A2:iE,ERF_A3:sE,ERF_A4:oE,ERF_A5:uE,warn:$b,log:function(...e){xg().getBool("IS_TEST")||xg().getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:lE,splitRealAndImagArrays:cE,complexWithEvenIndex:hE,complexWithOddIndex:dE,getComplexWithIndex:pE,assignToTypedArray:fE,exponents:mE,exponent:gE,decodeEinsumEquation:wE,getEinsumPermutation:kE,checkEinsumDimSizes:IE,getEinsumComputePath:CE,isIdentityPermutation:SE,prepareSplitSize:TE,getSparseFillEmptyRowsIndicesDenseShapeMismatch:EE,getSparseFillEmptyRowsNegativeIndexErrorMessage:RE,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:AE,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:DE,getSparseReshapeNegativeOutputDimErrorMessage:FE,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:_E,getSparseReshapeInputOutputMultipleErrorMessage:$E,getSparseReshapeInputOutputMismatchErrorMessage:OE,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ME,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:LE,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:PE,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:BE});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(){for(const e of hT)nT(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const qE={kernelName:Sg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,YS(hk(n,"float32"),-1))}}},KE={kernelName:Ng,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=aC(hk(n,"float32")),r=rC(FC(nC(1),t));return RC(kk(e,r))}}}},XE={kernelName:Tg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=rC(FC(aC(hk(n,"float32")),1));return kk(e,t)}}}},YE={kernelName:Eg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{let t=e;const r=OI(n.shape,a);return r.length>0&&(t=iC(t,r)),Qk(t,n.shape)},b:()=>{let t=e;const n=OI(r.shape,a);return n.length>0&&(t=iC(t,n)),Qk(t,r.shape)}}}},QE={kernelName:Rg,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},JE={kernelName:Fg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>BI(n)}}},ZE={kernelName:_g,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>BI(n)}}},eR={kernelName:$g,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,rC(FC(nC(1),aC(hk(n,"float32")))))}}},tR={kernelName:Og,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=rC(xk(nC(1),aC(hk(n,"float32"))));return kk(e,t)}}}},nR={kernelName:Pg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{const t=xk(aC(n),aC(r));let i=Ik(e,kk(r,t));const s=OI(n.shape,a);return s.length>0&&(i=iC(i,s)),Qk(i,n.shape)},b:()=>{const t=xk(aC(n),aC(r));let i=RC(Ik(e,kk(n,t)));const s=OI(r.shape,a);return s.length>0&&(i=iC(i,s)),Qk(i,r.shape)}}}},rR={kernelName:Mg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,xk(aC(hk(n,"float32")),1))}}},aR={kernelName:Lg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,FC(nC(1),aC(hk(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Sw({avgPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){const s=Iw(e,"dy","avgPool3dGrad"),o=Iw(t,"input","avgPool3dGrad");let u=s,l=o,c=!1;4===o.rank&&(c=!0,u=Qk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),l=Qk(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),zm(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),zm(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),Yk("avgPool3dGrad",a,i);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:a,dimRoundingMode:i},p=mw.runKernel(Vg,h,d);return c?Qk(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),sR={kernelName:Wg,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s,dimRoundingMode:o}=n;return{x:()=>iR(e,r,a,i,s,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=Sw({avgPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a){const i=Iw(e,"dy","avgPoolGrad"),s=Iw(t,"input","avgPoolGrad");zm(s.rank===i.rank,(()=>`Rank of input (${s.rank}) does not match rank of dy (${i.rank})`));let o=s,u=i,l=!1;3===s.rank&&(l=!0,o=Qk(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=Qk(i,[1,i.shape[0],i.shape[1],i.shape[2]])),zm(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),zm(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},d=mw.runKernel(zg,c,h);return l?Qk(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),uR={kernelName:Bg,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s}=n;return{x:()=>oR(e,r,a,i,s)}}},lR={kernelName:Ug,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:i,transposeB:s}=n;return i||s?!i&&s?{a:()=>tI(e,a,!1,!1),b:()=>tI(e,r,!0,!1)}:i&&!s?{a:()=>tI(a,e,!1,!0),b:()=>tI(r,e,!1,!1)}:{a:()=>tI(a,e,!0,!0),b:()=>tI(e,r,!0,!0)}:{a:()=>tI(e,a,!1,!0),b:()=>tI(r,e,!0,!1)}}},cR={kernelName:Gg,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>ZC(e,r,a)}}},hR={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,i=r.shape,s=Array.from(i);for(let e=a.length-1;e>=0;e--)if(a[e]===i[e])s[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<s.length;e++)s[e]>1&&o.push(e);return{x:()=>iC(e,o,!0)}}},dR={kernelName:Kg,gradFunc:e=>({x:()=>e.clone()})},pR={kernelName:Xg,gradFunc:e=>({x:()=>BI(e)})},fR={kernelName:Yg,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:i}=n;return{x:()=>PI(OC(vC(r,a),CC(r,i)),e,BI(e))}}},mR={kernelName:Jg,inputsToSave:["x"],gradFunc:qE.gradFunc},gR={kernelName:Zg,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,i=Ym(a,t[0].shape)[0],s=r.map((e=>e[i]));return HS(e,s,i).map((e=>()=>e))}},vR={kernelName:ev,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:i,strides:s,pad:o,dataFormat:u}=n;return zm(jk(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>wI(r.shape,e,a,s,o,u),filter:()=>hN(r,e,a.shape,s,o,u)}}},yR={kernelName:nv,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:i,pad:s,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>bI(e,a,i,s,o,1,u),filter:()=>hN(e,r,a.shape,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR=Sw({conv3DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a){let i=e;4===e.rank&&(i=Qk(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=Qk(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),zm(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),zm(5===s.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`)),zm(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),zm(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),zm(s.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:s},u={strides:r,pad:a,filterShape:n};return mw.runKernel(av,o,u)}}),xR={kernelName:rv,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i}=n;zm(jk(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[s,o]=t;return{x:()=>CI(s.shape,e,o,a,i),filter:()=>bR(s,e,o.shape,a,i)}}},wR={kernelName:sv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(RC(OS(hk(n,"float32"))),e)}}},kR={kernelName:ov,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(MS(hk(n,"float32")),e)}}},IR={kernelName:lv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:i,reverse:s}=n;return{x:()=>{const t=YI([a],r.rank);let n=RI(e,a,i,!s);return null!=t&&(n=lN(n,t)),n}}}},CR={kernelName:pv,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i,dimRoundingMode:s}=n,o=null==r?[1,1]:r;zm(jk(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return zm(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),zm(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),zm(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),zm(qk(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Yk("depthwiseConv2d",i,s),{x:()=>yN(u.shape,e,l,a,i,o,s),filter:()=>vN(u,e,l.shape,a,i,o,s)}}},SR={kernelName:vv,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},s={x:r,filter:a,dy:e};return{x:()=>mw.runKernel(yv,i,n),filter:()=>mw.runKernel(bv,s,n)}}},NR={kernelName:kv,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>mw.runKernel(Iv,r)}}},TR={kernelName:Cv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ik(lC(RC(aC(n))),2/Math.sqrt(Math.PI));return{x:()=>Ik(e,r)}}},ER={kernelName:Nv,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,n)}}},RR={kernelName:Tv,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Qk(e,n.shape)}}},AR={kernelName:Ev,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,lC(n))}}},DR={kernelName:Fv,gradFunc:e=>({x:()=>BI(e)})},FR={kernelName:_v,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{const t=kk(e,hk(r,"float32")),i=OI(n.shape,a);return i.length>0?Qk(iC(t,i),n.shape):t},b:()=>{let t=Ik(e,hk(n,"float32"));const i=OI(r.shape,a);i.length>0&&(t=Qk(iC(t,i),r.shape));const s=aC(r);return RC(kk(t,hk(s,"float32")))}}}},_R={kernelName:$v,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,i,s,o]=t,u=null==o?nC(1):o,l=OI(i.shape,a.shape),c=[];if(1===i.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=FC(a,i),d=Ik(e,u),p=DS(xk(s,nC(r))),f=Ik(Ik(Ik(p,p),p),nC(-.5));return{x:()=>1===i.rank?Qk(Ik(Ik(e,dC(Qk(p,[1,1,1,i.shape[0]]),c)),u),a.shape):Qk(Ik(Ik(e,p),u),a.shape),mean:()=>{let e=Ik(Ik(p,nC(-1)),d);return 1===i.rank&&(e=iC(e,l)),Qk(e,i.shape)},variance:()=>{let e=Ik(Ik(f,h),d);return 1===i.rank&&(e=iC(e,l)),Qk(e,i.shape)},scale:()=>{const t=Ik(h,p);let n=Ik(e,t);return 1===i.rank&&(n=iC(n,l)),Qk(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=iC(t,l)),Qk(t,i.shape)}}}},$R={kernelName:Ov,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:i,batchDims:s}=n,o=Ym(i,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,a=t.size,s=r.slice(0,o),u=s.length,l=r.slice(i,r.length).slice(1),c=l.length,h=OR(0,u),d=OR(u+1,u+1+c),p=MR([s,[a],l]),f=Qk(n,p),m=Qk(t,[a]),g=MR([[u],h,d]),v=lN(f,g);let y=sN(v,m,e.shape[o]);const b=QI(g);return y=lN(y,b),y};if(1===s){const t=r.shape[0],n=r.split(t,0),i=()=>{const t=XS(n.map(((t,n)=>u(t,a.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)};return{x:i,indices:()=>a}}return{x:u(r,a,e),indices:()=>a}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function MR(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LR={kernelName:Pv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>BI(n),b:()=>BI(r)}}},PR={kernelName:Bv,gradFunc:e=>({x:()=>hk(e,"float32")})},BR={kernelName:Vv,gradFunc:e=>({x:()=>BI(e)})},zR={kernelName:Uv,gradFunc:e=>({x:()=>BI(e)})},WR={kernelName:Gv,gradFunc:e=>({x:()=>BI(e)})},VR={kernelName:Hv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,i=gC(r,0);return{x:()=>PI(i,e,Ik(e,a))}}},UR={kernelName:Yv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,xk(n,1))}}},GR={kernelName:Xv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,hk(n,"float32"))}}},HR={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=lC(r);return FC(e,Ik(iC(e,a,!0),t))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jR=Sw({localResponseNormalizationBackprop_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=5,a=1,i=1,s=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:i,beta:s};return mw.runKernel(ty,o,u)}}),qR={kernelName:ey,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:i,bias:s,alpha:o,beta:u}=n;return{x:()=>jR(r,a,e,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KR(e,t,n,r){return t.rank<n.rank&&(t=Qk(t,KI(t.shape,r))),e.rank<n.rank&&(e=Qk(e,KI(e.shape,r))),{x:()=>Ik(e,hk(LI(n,t),e.dtype))}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR={kernelName:ny,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,i=t[0],s=KR(e,t[1],i,Ym(a,i.shape));return{x:()=>s.x()}}},YR={kernelName:ry,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ik(e,hk(vC(n,r),"float32")),b:()=>Ik(e,hk(IC(n,r),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QR=Sw({maxPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i,s){const o=Iw(e,"dy","maxPool3dGrad"),u=Iw(t,"input","maxPool3dGrad"),l=Iw(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=Qk(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Qk(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=Qk(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),zm(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),zm(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),zm(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Yk("maxPool3dGrad",i,s);const f={dy:c,input:h,output:d},m={filterSize:r,strides:a,pad:i,dimRoundingMode:s},g=mw.runKernel(oy,f,m);return p?Qk(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),JR={kernelName:sy,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n;return{x:()=>QR(e,r,a,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZR=Sw({maxPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i,s){const o=Iw(e,"dy","maxPoolGrad"),u=Iw(t,"input","maxPoolGrad"),l=Iw(n,"output","maxPoolGrad");zm(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),zm(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),zm(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),Yk("maxPoolGrad",i,s);const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:i,dimRoundingMode:s};return mw.runKernel(iy,c,h)}}),eA={kernelName:ay,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o}=n;return{x:()=>ZR(e,r,a,i,s,o)}}},tA={kernelName:ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,i=Ym(a,r.shape),s=Um(qI(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=Qk(e,t);return kk(Ik(n,GC(r.shape,"float32")),s)}}}},nA={kernelName:cy,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[i,s]=t,o=KR(e,s,i,Ym(a,i.shape));return{x:()=>o.x()}}},rA={kernelName:hy,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ik(e,hk(CC(n,r),"float32")),b:()=>Ik(e,hk(gC(n,r),"float32"))}}},aA={kernelName:dy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>rI(e,i,r.shape)}}},iA={kernelName:py,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{const t=OI(n.shape,a);return t.length>0?Qk(iC(e,t),n.shape):e},b:()=>{const t=Ik(e,RC(fC(kk(n,r)))),i=OI(r.shape,a);return i.length>0?Qk(iC(t,i),r.shape):t}}}},sA={kernelName:my,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{const t=Ik(e,hk(r,"float32")),i=OI(n.shape,a);return i.length>0?Qk(iC(t,i),n.shape):t},b:()=>{const t=Ik(e,hk(n,"float32")),i=OI(r.shape,a);return i.length>0?Qk(iC(t,i),r.shape):t}}}},oA={kernelName:ky,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>UC(n.shape,"float32")}}},uA={kernelName:Iy,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return oN(e,r).map((e=>()=>e))}},lA={kernelName:Cy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>rI(e,i,r.shape)}}},cA={kernelName:Sy,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,i=n,s=r,o=MI(i.shape,s.shape);return{a:()=>{const t=hk(s,"float32");let n=Ik(e,Ik(t,tC(i,FC(t,nC(1)))));const r=OI(i.shape,o);return r.length>0&&(n=iC(n,r)),Qk(n,i.shape)},b:()=>{const t=gC(i,0),n=PI(t,NC(i),BI(i));let r=Ik(e,Ik(a,n));const u=OI(s.shape,o);return u.length>0&&(r=iC(r,u)),Qk(r,s.shape)}}}},hA={kernelName:Ny,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=gC(n,0);return{x:()=>PI(a,e,Ik(e,r)),alpha:()=>{let t=PI(a,BI(e),Ik(e,n));const i=OI(r.shape,e.shape);return i.length>0&&(t=iC(t,i)),Qk(t,r.shape)}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(e,t,n){const r=e.shape.length,a=r-n.length,i=YI(n,r);let s=e;null!=i&&(s=lN(e,i));const o=s.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n){const r=e.shape.slice();r[n]=1;const a=Qk(t,r),i=EI(e,n,!0,!1),s=EI(e,n,!0,!0),o=Ik(i,s);return Ik(a,o)}(s.reshape(o),t,a);if(l=l.reshape(s.shape),null!=i){const e=QI(i);l=lN(l,e)}return l}const pA={kernelName:Ty,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let i=[];return i=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>dA(r,e,i)}}},fA={kernelName:xv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{const t=kk(e,hk(r,"float32")),i=OI(n.shape,a);return i.length>0?Qk(iC(t,i),n.shape):t},b:()=>{let t=Ik(e,hk(n,"float32"));const i=OI(r.shape,a);i.length>0&&(t=Qk(iC(t,i),r.shape));const s=aC(r);return RC(kk(t,hk(s,"float32")))}}}},mA={kernelName:_y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,RC(aC(n)))}}},gA={kernelName:zy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Ik(CC(n,6),YS(n));return{x:()=>Ik(e,hk(r,"float32"))}}},vA={kernelName:$y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,hk(YS(n),"float32"))}}},yA={kernelName:Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Qk(e,n.shape)}}},bA={kernelName:Py,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>mw.runKernel(By,a,n)}}},xA={kernelName:My,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>mw.runKernel(Ly,a,n)}}},wA={kernelName:Uy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>RC(kk(e,Ik(tC(n,1.5),2)))}}},kA={kernelName:qy,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>hk(BI(n),"float32"),t:()=>Ik(e,hk(n,e.dtype)),e:()=>Ik(e,hk(MC(n),e.dtype))}}},IA={kernelName:Ky,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=gC(n,nC(0)),r=nC(tE),a=nC(nE),i=Ik(e,a),s=Ik(Ik(e,r),lC(hk(n,"float32")));return PI(t,i,s)}}}},CA={kernelName:Zy,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,Ik(n,FC(nC(1),n)))}}},SA={kernelName:Yy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(NI(hk(n,"float32")),e)}}},NA={kernelName:Qy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(TI(hk(n,"float32")),e)}}},TA={kernelName:Xy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:i}=n,s=r.shape,[o,u]=_T(r,a,i),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],s[t]-o[t]-u[t]]);return{x:()=>JC(e,l)}}},EA={kernelName:ib,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,i=Ik(e,r);return{logits:()=>FC(i,Ik(iC(i,[a],true),r))}}},RA={kernelName:eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,nI(n))}}},AA={kernelName:rb,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>iI(e,r,a)}}},DA={kernelName:ab,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>eI(e,r)}}},FA={kernelName:tb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,Ik(rC(hk(n,"float32")),2))}}},_A={kernelName:db,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(e,Ik(hk(n,"float32"),2))}}},$A={kernelName:hb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=nC(2);return{a:()=>Ik(e,Ik(a,FC(n,r))),b:()=>Ik(e,Ik(a,FC(r,n)))}}},OA={kernelName:yb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=MI(n.shape,r.shape);return{a:()=>{let t=e;const r=OI(n.shape,a);return r.length>0&&(t=iC(t,r)),Qk(t,n.shape)},b:()=>{let t=e;const n=OI(r.shape,a);return n.length>0&&(t=iC(t,n)),Qk(RC(t),r.shape)}}}},MA={kernelName:nb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:i}=n;Ym(i,r.shape).forEach((e=>{a[e]=1}));const s=Qk(e,a),o=Ik(s,GC(r.shape,"float32"));return{x:()=>o}}},LA={kernelName:bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kk(e,aC(NI(n)))}}},PA={kernelName:xb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ik(FC(nC(1),aC(n)),e)}}},BA={kernelName:wb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=BI(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=xk(t,rI(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)t=xk(t,rI(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)t=xk(t,rI(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)for(let o=0;o<a[3];++o)t=xk(t,rI(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},zA={kernelName:Tb,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=WC(t,BI(t)),r=mC(e,n);let a=vC(t,nC(0,"int32"));const i=r.rank-a.rank;for(let e=0;e<i;++e)a=cC(a,e+1);a=OC(a,GC(r.shape,"bool"));const s=BI(r);return PI(a,r,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,n)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA=[qE,KE,XE,YE,QE,JE,ZE,eR,tR,nR,rR,aR,sR,uR,lR,cR,hR,dR,pR,fR,mR,gR,yR,vR,xR,wR,kR,IR,CR,SR,fA,NR,TR,ER,RR,AR,FR,DR,_R,$R,LR,PR,BR,zR,WR,VR,UR,GR,HR,qR,XR,XR,YR,JR,eA,tA,nA,rA,aA,iA,sA,{kernelName:gy,gradFunc:e=>({x:()=>RC(e)})},oA,{kernelName:wy,gradFunc:e=>({x:()=>BI(e)})},uA,lA,lA,cA,hA,pA,mA,gA,vA,yA,bA,xA,{kernelName:Wy,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Ym(r,e.shape);return{x:()=>RS(e,a)}}},{kernelName:Vy,gradFunc:e=>({x:()=>BI(e)})},wA,kA,IA,CA,{kernelName:Jy,gradFunc:e=>({x:()=>BI(e)})},SA,NA,TA,EA,RA,AA,AA,DA,DA,FA,$A,_A,{kernelName:Rb,gradFunc:e=>({x:()=>BI(e)})},OA,MA,LA,PA,BA,{kernelName:Cb,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,i=QI(a);return{x:()=>lN(e,i)}}},{kernelName:Nb,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>XS(e,a)}}},zA,{kernelName:Eb,gradFunc:e=>({x:()=>BI(e)})}];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of WA)Wb(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yx().prototype.abs=function(){return this.throwIfDisposed(),Ck(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.acos=function(){return this.throwIfDisposed(),Sk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.acosh=function(){return this.throwIfDisposed(),Nk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.add=function(e){return this.throwIfDisposed(),xk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.all=function(e,t){return this.throwIfDisposed(),Tk(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.any=function(e,t){return this.throwIfDisposed(),Ek(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.argMax=function(e){return this.throwIfDisposed(),Rk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.argMin=function(e){return this.throwIfDisposed(),Ak(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.asScalar=function(){return this.throwIfDisposed(),zm(1===this.size,(()=>"The array must have only 1 element.")),Qk(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.asType=function(e){return this.throwIfDisposed(),hk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.as1D=function(){return this.throwIfDisposed(),Qk(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.as2D=function(e,t){return this.throwIfDisposed(),Qk(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Qk(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Qk(this,[e,t,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Qk(this,[e,t,n,r,a])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.asin=function(){return this.throwIfDisposed(),Dk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.asinh=function(){return this.throwIfDisposed(),Fk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.atan=function(){return this.throwIfDisposed(),_k(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.atan2=function(e){return this.throwIfDisposed(),$k(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.atanh=function(){return this.throwIfDisposed(),Ok(this)},Yx().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Jk(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),iI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),sI(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.broadcastTo=function(e){return this.throwIfDisposed(),hI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.cast=function(e){return this.throwIfDisposed(),hk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.ceil=function(){return this.throwIfDisposed(),dI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),fI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Xx&&(e=[e]),eI([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.conv1d=function(e,t,n,r,a,i){return this.throwIfDisposed(),xI(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),kI(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.conv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),bI(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.cos=function(){return this.throwIfDisposed(),NI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.cosh=function(){return this.throwIfDisposed(),TI(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),EI(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),RI(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),DI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.depthwiseConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),FI(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),_I(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.divNoNan=function(e){return this.throwIfDisposed(),zI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.div=function(e){return this.throwIfDisposed(),kk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.dot=function(e){return this.throwIfDisposed(),WI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.elu=function(){return this.throwIfDisposed(),UI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.equal=function(e){return this.throwIfDisposed(),LI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.erf=function(){return this.throwIfDisposed(),GI(this)},
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),uC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.exp=function(){return this.throwIfDisposed(),lC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.expandDims=function(e){return this.throwIfDisposed(),cC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.expm1=function(){return this.throwIfDisposed(),hC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.fft=function(){return this.throwIfDisposed(),VS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.flatten=function(){return this.throwIfDisposed(),Qk(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.floor=function(){return this.throwIfDisposed(),fC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.floorDiv=function(e){return this.throwIfDisposed(),wk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.gather=function(e,t,n){return this.throwIfDisposed(),mC(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.greaterEqual=function(e){return this.throwIfDisposed(),vC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.greater=function(e){return this.throwIfDisposed(),gC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.ifft=function(){return this.throwIfDisposed(),US(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.irfft=function(){return this.throwIfDisposed(),GS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.isFinite=function(){return this.throwIfDisposed(),bC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.isInf=function(){return this.throwIfDisposed(),xC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.isNaN=function(){return this.throwIfDisposed(),wC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.leakyRelu=function(e){return this.throwIfDisposed(),kC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.lessEqual=function(e){return this.throwIfDisposed(),CC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.less=function(e){return this.throwIfDisposed(),IC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),SC(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logSigmoid=function(){return this.throwIfDisposed(),DC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logSoftmax=function(e){return this.throwIfDisposed(),_C(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),$C(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.log=function(){return this.throwIfDisposed(),NC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.log1p=function(){return this.throwIfDisposed(),TC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logicalAnd=function(e){return this.throwIfDisposed(),OC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logicalNot=function(){return this.throwIfDisposed(),MC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logicalOr=function(e){return this.throwIfDisposed(),LC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.logicalXor=function(e){return this.throwIfDisposed(),PC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),tI(this,e,t,n)},Yx().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),BC(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.max=function(e,t){return this.throwIfDisposed(),ZI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.maximum=function(e){return this.throwIfDisposed(),WC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.mean=function(e,t){return this.throwIfDisposed(),VC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.min=function(e,t){return this.throwIfDisposed(),eC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.minimum=function(e){return this.throwIfDisposed(),HC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),jC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.mod=function(e){return this.throwIfDisposed(),qC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.mul=function(e){return this.throwIfDisposed(),Ik(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.neg=function(){return this.throwIfDisposed(),RC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.norm=function(e,t,n){return this.throwIfDisposed(),oC(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.notEqual=function(e){return this.throwIfDisposed(),XC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),YC(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.onesLike=function(){return this.throwIfDisposed(),QC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.pad=function(e,t){return this.throwIfDisposed(),JC(this,e,t)},Yx().prototype.pool=function(e,t,n,r,a,i){return this.throwIfDisposed(),eS(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.pow=function(e){return this.throwIfDisposed(),tC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.prelu=function(e){return this.throwIfDisposed(),tS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.prod=function(e,t){return this.throwIfDisposed(),nS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.reciprocal=function(){return this.throwIfDisposed(),NS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.relu=function(){return this.throwIfDisposed(),TS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.relu6=function(){return this.throwIfDisposed(),ES(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Qk(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.reshape=function(e){return this.throwIfDisposed(),Qk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),WN(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),VN(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.reverse=function(e){return this.throwIfDisposed(),RS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.rfft=function(){return this.throwIfDisposed(),jS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.round=function(){return this.throwIfDisposed(),AS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.rsqrt=function(){return this.throwIfDisposed(),DS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.selu=function(){return this.throwIfDisposed(),FS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.separableConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),_S(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sigmoid=function(){return this.throwIfDisposed(),nI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sign=function(){return this.throwIfDisposed(),$S(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sin=function(){return this.throwIfDisposed(),OS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sinh=function(){return this.throwIfDisposed(),MS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.slice=function(e,t){return this.throwIfDisposed(),rI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.softmax=function(e){return this.throwIfDisposed(),WS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.softplus=function(){return this.throwIfDisposed(),AC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ZC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.split=function(e,t){return this.throwIfDisposed(),HS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sqrt=function(){return this.throwIfDisposed(),rC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.square=function(){return this.throwIfDisposed(),aC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.squaredDifference=function(e){return this.throwIfDisposed(),qS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.squeeze=function(e){return this.throwIfDisposed(),KS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Xx?[this,e]:[this,...e];return XS(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.step=function(e){return this.throwIfDisposed(),YS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return this.throwIfDisposed(),QS(this,e,t,n,r,a,i,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sub=function(e){return this.throwIfDisposed(),FC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.sum=function(e,t){return this.throwIfDisposed(),iC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.tan=function(){return this.throwIfDisposed(),JS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.tanh=function(){return this.throwIfDisposed(),aI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.tile=function(e){return this.throwIfDisposed(),dC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.toBool=function(){return this.throwIfDisposed(),hk(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.toFloat=function(){return this.throwIfDisposed(),hk(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.toInt=function(){return this.throwIfDisposed(),hk(this,"int32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.topk=function(e,t){return this.throwIfDisposed(),rN(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.transpose=function(e){return this.throwIfDisposed(),lN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.unique=function(e){return this.throwIfDisposed(),iN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),sN(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.unstack=function(e){return this.throwIfDisposed(),oN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.where=function(e,t){return this.throwIfDisposed(),PI(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Yx().prototype.zerosLike=function(){return this.throwIfDisposed(),BI(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class VA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,VA.prototype)}}class UA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,UA.prototype)}}class GA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,GA.prototype)}}class HA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,HA.prototype)}}class jA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jA.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qA{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KA(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function XA(e,t){if(!e)throw new jA(t)}function YA(e,t){let n=0;for(const r of e)r===t&&n++;return n}function QA(e){return 1===e.length?e[0]:e}function JA(e){return Array.isArray(e)?e:[e]}function ZA(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function eD(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let tD={};function nD(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function rD(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>rD(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?rD(t):e[n]=t.value)}}}function aD(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let i;if(a in n)i=n[a];else if(a in tD)i=tD[a];else if(i=t[a],null==i)throw new GA(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new GA(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const s=i.className;let o,u;if(s in n?[o,u]=n[s]:s in tD?[o,u]=tD.className:s in t&&([o,u]=t[s]),null==o)throw new GA(`Unknown ${r}: ${s}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(tD))e[t]=tD[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},tD);for(const e of Object.keys(n))tD[e]=n[e];rD(i.config);const r=u(o,i.config,n,a);return tD=Object.assign({},t),r}{const e=Object.assign({},tD);for(const e of Object.keys(n))tD[e]=n[e];const t=new o(i.config);return tD=Object.assign({},e),t}}}function iD(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function sD(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function oD(e){if(null==e)throw new GA(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function uD(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new GA(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function lD(e,t,n=0,r=1/0){return XA(n>=0),XA(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function cD(e,t){Array.isArray(e)?(zm(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>cD(e,`element ${n+1} of ${t}`)))):zm(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${hD(e)}.`))}function hD(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>hD(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function dD(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let pD=0;function fD(){return pD++}const mD={};function gD(e=""){return e in mD||(mD[e]=0),mD[e]+=1,e+mD[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const vD=["channelsFirst","channelsLast"],yD=["nearest","bilinear"],bD=["valid","same","causal"],xD=["max","avg"],wD=["sum","mul","concat","ave"],kD=new Map;function ID(e){uD(vD,"DataFormat",e)}function CD(e){uD(bD,"PaddingMode",e)}function SD(e){uD(xD,"PoolMode",e)}const ND=[],TD="/";function ED(e,t){ND.push(e);try{const e=t();return ND.pop(),e}catch(e){throw ND.pop(),e}}function RD(e){if(!FD(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ND.length?"":ND.join(TD)+TD)+e}function AD(e){if(!FD(e))throw new Error("Not a valid tensor name: '"+e+"'");kD.has(e)||kD.set(e,0);const t=kD.get(e);if(kD.set(e,kD.get(e)+1),t>0){const n=`${e}_${t}`;return kD.set(n,1),n}return e}const DD=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function FD(e){return!!e.match(DD)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _D(e){return e===parseInt(e.toString(),10)}function $D(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function OD(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function MD(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function LD(e,t){if(t<e)throw new GA(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let PD;function BD(){return null==PD&&(PD=mw.backend.epsilon()),PD}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function zD(e,t){return hk(e,t)}function WD(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Qk(e,n)}function VD(e,t,n){return gk((()=>{switch(e.rank){case 1:return LS(e,t,n);case 2:return PS(e,[t,0],[n,e.shape[1]]);case 3:return BS(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return zS(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return rI(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return rI(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new GA(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function UD(e,t,n){return gk((()=>{switch(e.rank){case 1:return LS(e,t,n);case 2:return PS(e,[0,t],[e.shape[0],n]);case 3:return BS(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return zS(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new GA(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function GD(e,t,n,r){return gk((()=>{switch(e.rank){case 1:return LS(e,t,n);case 2:switch(r){case 1:return VD(e,t,n);case 2:return UD(e,t,n);default:throw new GA(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return VD(e,t,n);case 2:return BS(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return UD(e,t,n);default:throw new GA(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return VD(e,t,n);case 2:return zS(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return zS(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return UD(e,t,n);default:throw new GA(`The axis is not within the rank of the tensor ${r}`)}default:throw new GA(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function HD(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),eI(e,t)}function jD(e,t){switch(e.rank){case 1:return mI([e,t]);case 2:return gI([e,t],0);case 3:return vI([e,t],0);case 4:return yI([e,t],0);default:throw new GA(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function qD(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new GA(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return dC(e,t)}function KD(e,t=0,n=1,r,a){return kS(e,t,n,r,a)}function XD(e,t,n,r){if(e.rank<2||t.rank<2)throw new HA(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new HA(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return bN({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?JD(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=Qk(e,[-1,i]);const s=t.shape.slice(),o=s.pop(),u=s.pop(),l=[...s,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Qk(lN(t,c),[u,-1]);const h=[...a,...l];return Qk(bN({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?JD(e.rank,r,"channelsLast"):null,activation:n}),h)}}function YD(e,t,n){return gk((()=>(t=Array.isArray(t)?ZS(t,"int32"):hk(t,"int32"),mC(e,t,n))))}function QD(e){return Ik(e,e)}function JD(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new GA(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Qk(t,[1,r[0],1,1,1]):Qk(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Qk(t,[1,1,1,1,r[0]]):Qk(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Qk(t,[1,r[0],1,1]):Qk(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Qk(t,[1,1,1,r[0]]):Qk(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Qk(t,[1,r[0],1]):Qk(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Qk(t,[1,1,r[0]]):Qk(t,[1].concat(r))}else if(e<3)return t;throw new GA(`Unsupported input rank by biasAdd: ${t.rank}`)}function ZD(e,t,n){return gk((()=>(null==n&&(n="channelsLast"),ID(n),xk(e,JD(e.rank,t,n)))))}function eF(e,t,n,r){return gk((()=>cN(e,t,n,r)))}function tF(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nF=["fanIn","fanOut","fanAvg"],rF=["normal","uniform","truncatedNormal"];class aF extends eT{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class iF extends aF{apply(e,t){return UC(e,t)}}iF.className="Zeros",nT(iF);class sF extends aF{apply(e,t){return GC(e,t)}}sF.className="Ones",nT(sF);class oF extends aF{constructor(e){if(super(),"object"!=typeof e)throw new GA(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new GA(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return gk((()=>Ik(nC(this.value),GC(e,t))))}getConfig(){return{value:this.value}}}oF.className="Constant",nT(oF);class uF extends aF{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return IS(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}uF.className="RandomUniform",nT(uF);class lF extends aF{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new HA(`randomNormal does not support dType ${t}.`);return KD(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}lF.className="RandomNormal",nT(lF);class cF extends aF{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new HA(`truncatedNormal does not support dType ${t}.`);return aN(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}cF.className="TruncatedNormal",nT(cF);class hF extends aF{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return gk((()=>{if(2!==e.length||e[0]!==e[1])throw new GA("Identity matrix initializer can only be used for 2D square matrices.");return Ik(this.gain,pC(e[0]))}))}getConfig(){return{gain:this.gain}}}hF.className="Identity",nT(hF);class dF extends aF{constructor(e){if(super(),e.scale<0)throw new GA(`scale must be a positive float. Got: ${e.scale}`);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,uD(nF,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){uD(rF,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(ID(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=$D(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=$D(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=$D(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new HA(`${this.getClassName()} does not support dType ${t}.`);return aN(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return IS(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}dF.className="VarianceScaling",nT(dF);class pF extends dF{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dF.className}}pF.className="GlorotUniform",nT(pF);class fF extends dF{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dF.className}}fF.className="GlorotNormal",nT(fF);class mF extends dF{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dF.className}}mF.className="HeNormal",nT(mF);class gF extends dF{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dF.className}}gF.className="HeUniform",nT(gF);class vF extends dF{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return dF.className}}vF.className="LeCunNormal",nT(vF);class yF extends dF{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return dF.className}}yF.className="LeCunUniform",nT(yF);class bF extends aF{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return gk((()=>{if(e.length<2)throw new HA("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=Um(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);const i=KD([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),s=QN.qr(i,!1);let o=s[0];const u=s[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Ik(o,u.sign()),n<r&&(o=o.transpose()),Ik(nC(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}bF.className="Orthogonal",nT(bF);const xF={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function wF(e,t={}){return aD(e,tT.getMap().classNameMap,t,"initializer")}function kF(e){return nD(e)}function IF(e){if("string"==typeof e){const t=e in xF?xF[e]:e;if("GlorotNormal"===t)return new fF;if("GlorotUniform"===t)return new pF;if("HeNormal"===t)return new mF;if("HeUniform"===t)return new gF;if("LeCunNormal"===t)return new vF;if("LeCunUniform"===t)return new yF;{const e={};return e.className=t,e.config={},wF(e)}}return e instanceof aF?e:wF(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CF(e){return Array.isArray(e)&&Array.isArray(e[0])}function SF(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function NF(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new GA(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function TF(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new GA(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function EF(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const RF="Variable";class AF{constructor(e,t="float32",n=RF,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=fD(),n=null==n?RF:n,this.originalName=RD(n),this.name=AD(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return mw.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function DF(e){return e.map((e=>e.read()))}function FF(e){e.forEach((e=>{e[0].write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class _F{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class $F{constructor(e,t,n,r,a,i,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=s,this.id=fD(),null!=i&&(this.originalName=RD(i),this.name=AD(this.originalName)),this.rank=t.length}}let OF=0;class MF{constructor(e,t){this.callArgs=t,this.id=OF++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let LF=0;class PF extends eT{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=LF++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ZA(e)+"_"+gD(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new UA(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new GA(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return QA(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return QA(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new VA(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new VA(`Layer ${this.name} is not connected, no input to return.`);return QA(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new VA(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new VA(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return QA(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=JA(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=JA(this.inputSpec);if(t.length!==n.length)throw new GA(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],a=n[e];if(null==a)continue;const i=r.rank;if(null!=a.ndim&&i!==a.ndim)throw new GA(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(null!=a.maxNDim&&i>a.maxNDim)throw new GA(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(null!=a.minNDim&&i<a.minNDim)throw new GA(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new GA(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const n in a.axes){const r=Number(n),i=a.axes[n],s=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(s))throw new GA(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],i=r.shape[t];if(null!=n&&null!=i&&n!==i)throw new GA(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=JA(e),r=function(e){let t=!0;for(const n of JA(e))if(!(n instanceof $F)){t=!1;break}return t}(e),a=function(e){let t=!0;for(const n of JA(e))if(n instanceof $F){t=!1;break}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(e);if(r===a)throw new GA("Arguments to apply() must be all SymbolicTensors or all Tensors");return ED(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of JA(e))t.push(n.shape);this.build(QA(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const a=JA(r),i=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=QA(i),null!=this.activityRegularizer)throw new HA("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=JA(e);const t=[];for(const n of e)t.push(n.shape);return QA(t)}(e),r=this.computeOutputShape(n);let a;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new $F(i,n,this,JA(e),t,this.name,r))):new $F(i,r,this,JA(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new HA("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new VA(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new VA(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new UA(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return EF(this.weights)}build(e){this.built=!0}getWeights(e=!1){return DF(e?this.trainableWeights:this.weights)}setWeights(e){gk((()=>{const t=this.weights;if(t.length!==e.length)throw new GA(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=DF(t);for(let a=0;a<r.length;++a){const i=r[a],s=t[a],o=e[a];if(!Gm(i.shape,o.shape))throw new GA(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([s,o])}FF(n)}))}addWeight(e,t,n,r,a,i,s,o){if(-1!==this._addedWeightNames.indexOf(e))throw new GA(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():IF("zeros"));const u=r.apply(t,n),l=new AF(u,n,e,i,s);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=JA(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),a=JA(t),i=JA(r);if(a.length!==i.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=i[e]}addInboundNode(e,t,n,r,a,i,s=null){const o=JA(e);t=JA(t),n=JA(n),r=JA(r),a=SF(a),i=SF(i);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new MF({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:i},s);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function BF(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=BF(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class zF extends PF{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:gD("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new GA("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new GA("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new GA("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new $F(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new MF({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new GA(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}zF.className="InputLayer",nT(zF);class WF{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof WF)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new GA(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return hk(t,e.dtype)}catch(n){throw new GA(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof $F){if(null==this.id2Value[e.id])throw new GA(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new GA(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof $F){if(null==this.id2Value[e.id])throw new GA(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new GA(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&vk(this.id2Mask)}}const VF=new qA,UF=new qA;function GF(e,t,n,r){const a=null!=n&&n.training,i=Array.isArray(e),s=i?e:[e],o=s.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=VF.get(c);if(null==d){const e=function(e,t){zm(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=jF(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const i of e){const{sorted:e,recipientMap:s}=jF(i,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in s)null==r[e]&&(r[e]=new Set),s[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:HF(r)}}(s,t);d=e.sorted,h=e.recipientCounts,VF.put(c,d),UF.put(c,h)}h={},a||Object.assign(h,UF.get(c));const p=new WF(t);for(let e=0;e<d.length;++e){if(null!=r){const e=mk().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=d[e],s=i.sourceLayer;if(s instanceof zF)continue;const l=[],c=[],f=[];let m=!1;for(const e of i.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=JA(s.apply(l,n));let v=null;s.supportsMasking&&(v=s.computeMask(l,c));const y=qF(i),b=Array.isArray(y)?y:[y];for(let e=0;e<b.length;++e){p.hasKey(b[e])||p.add(b[e],g[e],Array.isArray(v)?v[0]:v);const t=o.indexOf(b[e].name);-1!==t&&(u[t]=g[e])}a||vk(f)}return p.disposeMasks(),i?u:u[0]}function HF(e){const t={};for(const n in e)t[n]=e[n].size;return t}function jF(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const i=[],s=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=s[s.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&s.pop();else{s.push(i.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:a}}function qF(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function KF(e,t){return gk((()=>rC(iC(Ik(e,e),t,!0))))}xg().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=VF&&VF.setMaxEntries(e),null!=UF&&UF.setMaxEntries(e)}));class XF extends eT{getConfig(){return{}}}class YF extends XF{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return gk((()=>{const t=KF(e,this.axis),n=fI(t,0,this.maxValue);return Ik(e,kk(n,xk(BD(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}YF.className="MaxNorm",nT(YF);class QF extends XF{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return gk((()=>kk(e,xk(BD(),KF(e,this.axis)))))}getConfig(){return{axis:this.axis}}}QF.className="UnitNorm",nT(QF);class JF extends XF{apply(e){return TS(e)}}JF.className="NonNeg",nT(JF);class ZF extends XF{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return gk((()=>{const t=KF(e,this.axis),n=xk(Ik(this.rate,fI(t,this.minValue,this.maxValue)),Ik(1-this.rate,t));return Ik(e,kk(n,xk(BD(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ZF.className="MinMaxNorm",nT(ZF);const e_={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function t_(e){return nD(e)}function n_(e,t={}){return aD(e,tT.getMap().classNameMap,t,"constraint")}function r_(e){if(null==e)return null;if("string"==typeof e){return n_({className:e in e_?e_[e]:e,config:{}})}return e instanceof XF?e:n_(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function a_(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const i=e[a];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];vk(r)}}function i_(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var s_;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(s_||(s_={}));class o_{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class u_{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class l_ extends o_{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=gk((()=>xk(this.totals[e],Ik(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:gk((()=>{const n=Ik(kk(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),yk(t[e])})))}}class c_ extends o_{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let i=0;i<a.length;++i)if("number"!=typeof a[i]){const s=a[i];e.push(s.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class h_ extends o_{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||BT,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");rg(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Ax();return(...i)=>{const s=null!=n?n():Ax();return s-a<t||(a=s,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await a_(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await a_(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await a_(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await a_(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await a_(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):rg(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await a_(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await a_(e),await this.trainEnd(e))}}function d_(e,t){if(null==e&&(e={}),e instanceof o_)return[e];if(Array.isArray(e)&&e[0]instanceof o_)return e;return JA(e).map((e=>new h_(e,t)))}class p_{constructor(){}static registerCallbackConstructor(e,t){zm(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),p_.checkForDuplicate(t),null==p_.constructors[e]&&(p_.constructors[e]=[]),p_.constructors[e].push(t)}static checkForDuplicate(e){for(const t in p_.constructors){p_.constructors[+t].forEach((t=>{if(t===e)throw new GA("Duplicate callback constructor.")}))}}static clear(){p_.constructors={}}static createCallbacks(e){const t=[];for(const n in p_.constructors){const r=+n;e>=r&&t.push(...p_.constructors[r])}return t.map((e=>new e))}}function f_(e,t,n,r,a,i,s,o,u){const l=new c_,c=[new l_,...p_.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new u_(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:i,batchSize:s,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function m_(e,t={},n=!1){return aD(e,tT.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g_(e,t){return gk((()=>{"float32"!==e.dtype&&(e=hk(e,"float32"));const n=iC(QD(e),t,!0),r=pI(n.shape,BD()),a=rC(WC(n,r));return kk(e,a)}))}function v_(e,t){return gk((()=>VC(QD(FC(t,e)),-1)))}function y_(e,t){return gk((()=>VC(Ck(FC(t,e)),-1)))}function b_(e,t){return gk((()=>{const n=FC(e,t),r=fI(Ck(e),BD(),Number.MAX_VALUE),a=Ck(kk(n,r));return Ik(100,VC(a,-1))}))}function x_(e,t,n=!1){return gk((()=>{if(n)t=WS(t);else{const e=iC(t,t.shape.length-1,!0);t=kk(t,e)}return t=fI(t,BD(),1-BD()),RC(iC(Ik(hk(e,"float32"),NC(t)),t.shape.length-1))}))}function w_(e,t,n=!1){return gk((()=>{const r=hk(fC(function(e){const t=[$D(e.shape)];return Qk(e,t)}(e)),"int32"),a=(t=fI(t,BD(),1-BD())).shape;return x_(Qk(YC(r,a[a.length-1]),a),t,n)}))}function k_(e,t){return gk((()=>{let n;return n=fI(t,BD(),1-BD()),n=NC(kk(n,FC(1,n))),VC(function(e,t){if(!Gm(e.shape,t.shape))throw new GA(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return gk((()=>{const n=TS(t),r=RC(Ck(t));return xk(FC(n,Ik(t,e)),TC(lC(r)))}))}(e,n),-1)}))}function I_(e,t){return gk((()=>{const n=g_(e,-1),r=g_(t,-1),a=Ik(n,r);return RC(iC(a,-1))}))}p_.constructors={};const C_={meanSquaredError:v_,meanAbsoluteError:y_,meanAbsolutePercentageError:b_,meanSquaredLogarithmicError:function(e,t){return gk((()=>{const n=fI(t,BD(),Number.MAX_VALUE),r=NC(xk(1,n)),a=fI(e,BD(),Number.MAX_VALUE),i=NC(xk(1,a));return VC(QD(FC(r,i)),-1)}))},squaredHinge:function(e,t){return gk((()=>{const n=WC(0,FC(1,Ik(e,t)));return VC(QD(n),-1)}))},hinge:function(e,t){return gk((()=>{const n=WC(0,FC(1,Ik(e,t)));return VC(n,-1)}))},categoricalHinge:function(e,t){return gk((()=>{const n=iC(Ik(e,t),-1),r=ZI(Ik(FC(1,e),t),-1);return WC(0,xk(1,FC(r,n)))}))},logcosh:function(e,t){return gk((()=>{const n=Math.log(2),r=FC(t,e),a=FC(xk(r,AC(Ik(-2,r))),n);return VC(a,-1)}))},categoricalCrossentropy:x_,sparseCategoricalCrossentropy:w_,binaryCrossentropy:k_,kullbackLeiblerDivergence:function(e,t){return gk((()=>{const n=fI(e,BD(),1),r=fI(t,BD(),1);return iC(Ik(e,NC(kk(n,r))),-1)}))},poisson:function(e,t){return gk((()=>{const n=NC(xk(BD(),t));return VC(FC(t,Ik(e,n)),-1)}))},cosineProximity:I_};function S_(e){if("string"==typeof e){if(e in C_)return C_[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new GA(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N_(e,t){return gk((()=>{const n=Ik(.5,QC(t)),r=zD(gC(t,n),e.dtype);return VC(LI(e,r),-1)}))}function T_(e,t){return gk((()=>zD(LI(Rk(e,-1),Rk(t,-1)),"float32")))}function E_(e,t){return k_(e,t)}function R_(e,t){return e.rank===t.rank&&(e=KS(e,[e.rank-1])),(t=Rk(t,-1)).dtype!==e.dtype&&(t=hk(t,e.dtype)),hk(LI(e,t),"float32")}const A_=x_,D_=w_,F_={binaryAccuracy:N_,categoricalAccuracy:T_,precision:function(e,t){return gk((()=>{const n=function(e,t){return gk((()=>hk(iC(OC(LI(e,1),LI(t,1))),"float32")))}(e,t),r=function(e,t){return gk((()=>hk(iC(OC(LI(e,0),LI(t,1))),"float32")))}(e,t),a=xk(n,r);return hk(PI(gC(a,0),kk(n,a),0),"float32")}))},categoricalCrossentropy:A_,sparseCategoricalCrossentropy:D_,mse:v_,MSE:v_,mae:y_,MAE:y_,mape:b_,MAPE:b_,cosine:I_};function __(e){if("string"==typeof e&&e in F_)return F_[e];if("string"!=typeof e&&null!=e)return e;throw new GA(`Unknown metric ${e}`)}function $_(e){if(XA(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(C_))if(C_[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(F_))if(F_[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const O_=1048576;function M_(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!L_(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>O_&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function L_(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!L_(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!L_(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function P_(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let s;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){i.push("Receives inputs"),s=[];for(const t in e.nodesByDepth)s.push(...e.nodesByDepth[t])}r("_".repeat(t)),B_(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?z_(o[e],n,r):W_(o[e],n,s,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?EF(e.collectedTrainableWeights):EF(e.trainableWeights);return t}(e),l=EF(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function B_(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function z_(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}B_([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function W_(e,t,n,r){let a,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){i="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const o=e.name,u=e.getClassName(),l=0===s.length?"":s[0];B_([`${o} (${u})`,i,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)B_(["","","","",s[e]],t,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function V_(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function U_(e,t){if(null===e)return null;if("string"==typeof e)return eD(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];V_(t,a,r)?n.push(r):n.push(U_(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=eD(n);t[e]=U_(r,e)}}return t}}function G_(e,t){if(null==e)return null;if("string"==typeof e)return ZA(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];V_(t,a,r)?n.push(r):n.push(G_(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=ZA(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?G_(r,n):r}return t}}/** @license See the LICENSE file. */const H_="4.13.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class j_ extends PF{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=gD(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],sD(this.inputs).length!==this.inputs.length)throw new GA(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);sD(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;XA(0===n,"input layer has >1 nodes"),XA(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof zF))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},i={},s=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new UA(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(j_.nodeKey(r,a)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],i=l.nodeIndices[e],s=l.tensorIndices[e];o(r,t,n,a,i,s)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=s.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const s=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,s),r[e.outboundLayer.id]=i,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],o=a.inboundNodes[s],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(iD);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof j_&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(iD);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new UA(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new UA(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new MF({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new GA("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const a=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(const e of this.layers)for(const[t,i]of e.weights.entries()){const e=a?`${i.name.split("/").slice(0,-1).join("/")+"/"}${t}`:i.originalName;if(null!=n[e])throw new GA(`Duplicate weight name: ${e}`);n[e]=i,r++}const i=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])i.push([n[a],e[r]]);else if(t)throw new GA(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new GA(`${e.length} of ${r} weights are not set: ${e}`)}FF(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${H_}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=G_(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return gk((()=>{e=JA(e);const n=new WF;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return GF(this.outputs,n,t)}))}computeMask(e,t){return gk((()=>{let n;return e=JA(e),n=null==t?KA(null,e.length):JA(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=SF(e);if(t.length!==this.inputLayers.length)throw new GA(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(iD);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],i=e.nodeIndices[t],s=e.tensorIndices[t],o=n[`${a.name}_${i}_${s}`];r.push(o)}const a=SF(t.computeOutputShape(QA(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${i}_${e}`]=a[e]}}}const a=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;i.push(a)}for(let e=0;e<i.length;e++){const t=i[e];XA(t in n),a.push(n[t])}return QA(a)}runInternalGraph(e,t){null==t&&(t=KA(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],i=e[r],s=t[r];n[a.id]=[i,s]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(iD);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,s,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===i.length){const[e,n]=i[0];null==l.mask&&(l.mask=n),o=JA(t.call(e,l)),u=JA(t.computeMask(e,n)),r=[e],s=[n]}else r=i.map((e=>e[0])),s=i.map((e=>e[1])),null==l.mask&&(l.mask=s),o=JA(t.call(r,l)),u=JA(t.computeMask(r,s));if(t.activityRegularizer)throw new HA("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],i=u[e];n[t.id]=[r,i]}}}}const a=[],i=[],s=[];for(const e of this.outputs){XA(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];s.push(t.shape),a.push(t),i.push(r)}return[a,i,s]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof j_?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=j_.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new GA("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new GA(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new GA(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return gk((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=j_.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=j_.nodeKey(e,n);let s={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),s=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),s={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[j_.nodeKey(a,i)];null==u&&(u=0),e.push([a.name,u,o,s])}i.push(e)}}}const s={};s.name=e.name,s.className=r,s.config=a,s.inboundNodes=i,n.push(s)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],i=j_.nodeKey(n,a);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,s,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=j_.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},i={};function s(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void s(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(QA(n),r)}function u(e){const n=e.name,i=m_(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),a[n]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new GA(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!oD(i);)for(const e of c){const t=a[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];XA(t in a);const i=a[t].inboundNodes[n].outputTensors;h.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];XA(t in a);const i=a[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new GA("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){gk((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function q_(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function K_(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=gk((()=>{if(1===e.shape.length)return dk(e);if(2===e.shape.length){if(e.shape[1]>1){return Rk(e,1)}if(1===e.shape[1])return Qk(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());vk(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),ZS(a,"float32")}return null}function X_(e,t){return Ik(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Y_(e,t){let n,r;const a=t;n=a.xs,r=a.ys,zm(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=Q_("input",e.inputNames,n),s=Q_("output",e.outputNames,r),o=i[0].shape[0];zm(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),zm(s.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)zm(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<s.length;t++)zm(s[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:s}}function Q_(e,t,n){if(n instanceof Xx)return[n];if(Array.isArray(n))return zm(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new GA(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function J_(e,t,n){const r=null!=n.batchesPerEpoch;if(zm(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),zm(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),zm(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),zm(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),zm(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,s;if(a)if(Z_(n.validationData))zm(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new HA("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,s=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=d_(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=f_(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Y_(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const s=[];if(null!=n.classWeight){const t=q_(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await K_(a[e],null,t[e]))}const l=r.concat(a).concat(s),p=o(l);vk(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];i[t]=n,yk(n)}await d.onBatchEnd(h,i),i_(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Z_(n.validationData)?JA(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):JA(e.evaluate(i,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Z_(e){return"function"==typeof e.iterator}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function e$(e){zm(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function t$(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>VD(e,t,n-t))):VD(e,t,n-t)}function n$(e,t){return gk((()=>null==e?null:Array.isArray(e)?e.map((e=>n$(e,t))):YD(e,"int32"===t.dtype?t:hk(t,"int32"))))}function r$(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function a$(e){const t=[];e instanceof Xx&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(WD(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function i$(e,t){if(null==e)return;const n=[];if(t instanceof Xx)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Xx)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s$(e){return Array.isArray(e)}function o$(e){return!function(e){return e instanceof Xx}(e)&&!s$(e)}function u$(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(s$(e)&&e.length>0)t=!0;else if(o$(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new GA(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(o$(e)){i=[];for(const n of t){if(null==e[n])throw new GA(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(s$(e)){if(e.length!==t.length)throw new GA(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new GA(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=a$(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new GA(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${s.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const i=s.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new GA(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${s.shape[0]} examples, each with shape [${s.shape.slice(1,s.shape.length)}] (tensor shape [${s.shape}])`)}}return i}function l$(e,t,n,r=!0,a=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new GA(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new GA(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new GA(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(s.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=s.shape[i],u=n[e][i];if(null!=u&&u!==o)throw new GA(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(s.shape)}.`)}}}class c$ extends j_{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new GA("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");P_(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>LT.adagrad(.01),Adadelta:()=>LT.adadelta(1,.95,BD()),Adam:()=>LT.adam(.001,.9,.999,BD()),Adamax:()=>LT.adamax(.002,.9,.999,BD(),0),RMSProp:()=>LT.rmsprop(.001,.9,0,BD()),SGD:()=>LT.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new GA(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof rT))throw new GA("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new GA(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>S_(e)))}else{const n=S_(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new GA(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(S_(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ED("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};ED("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,i;for(const s of t){if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===k_?-1!==["accuracy","acc"].indexOf(s)?r=N_:-1!==["crossentropy","ce"].indexOf(s)&&(r=E_):this.lossFunctions[e]===w_?-1!==["accuracy","acc"].indexOf(s)?r=R_:-1!==["crossentropy","ce"].indexOf(s)&&(r=D_):-1!==["accuracy","acc"].indexOf(s)?r=T_:-1!==["crossentropy","ce"].indexOf(s)&&(r=A_),-1!==["accuracy","acc"].indexOf(s)?a="acc":-1!==["crossentropy","ce"].indexOf(s)&&(a="ce"),i=r,n=""+a}else{const e=__(s);i=e,n=""+$_(s)}let t;ED(n,(()=>{t=i})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;e$(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return QA(this.testLoop(t,e,r,n.verbose,n.steps))}finally{i$(a[0],e),i$(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new HA("Verbose mode is not implemented yet.");zm(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const s="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await s.next();if(i=gk((()=>{if(t.value){const{xs:n,ys:r}=Y_(e,t.value),s=n.concat(r),l=gk((()=>a(s)));if(vk(s),0===u)for(let e=0;e<l.length;++e)i.push(nC(0));const c=s[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=i[e];i[e]=gk((()=>xk(i[e],Ik(c,t)))),u>0&&vk(n)}vk(l),o+=c,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=kk(i[e],o),vk(t)}return QA(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new GA(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new GA(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new GA("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),i=new WF;if(e instanceof Xx&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new GA(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new GA(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const s=GF(a,i);return n?s:s[0]}retrieveSymbolicTensors(e){const t=KA(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],i=a.map((e=>e.name));for(let r=0;r<e.length;++r){const s=i.indexOf(e[r]);if(-1!==s&&(t[r]=a[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new GA(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return gk((()=>{const r=this.checkNumSamples(e);if(n)throw new HA("Verbose predictLoop() is not implemented yet.");const a=r$(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){const n=gk((()=>{const n=a[t][0],r=a[t][1],i=t$(e,n,r),s=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)s.push({key:this.inputs[e],value:i[e]});else s.push({key:this.inputs[0],value:i});const o=new WF(s);return GF(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return QA(i.map((e=>eI(e,0))))}))}predict(e,t={}){const n=a$(e);l$(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return e$(e),this.predictLoop(n,e)}finally{i$(n,e)}}predictOnBatch(e){l$(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new UA("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===w_?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=sD(e.map((e=>e.shape[0])));r.sort();const a=sD(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new GA(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new GA(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!Gm(r,a))throw new GA(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=u$(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=u$(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[v_,k_,x_];for(let a=0;a<e.length;++a){const i=e[a],s=t[a],o=n[a];if(null!=s){if(s===x_&&1===i.shape[i.shape.length-1])throw new GA(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(s)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new GA(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new GA(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,i){const[s,o]=this.standardizeUserDataXY(e,t,a,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=q_(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await K_(o[t],null,e[t]))}return[s,o,u]}testLoop(e,t,n,r=0,a){return gk((()=>{const i=this.checkNumSamples(t,n,a,"steps"),s=[];if(r>0)throw new HA("Verbose mode is not implemented yet.");if(null!=a)throw new HA("steps mode in testLoop() is not implemented yet");{const r=r$(i,n),a=ZS(LD(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],u=VD(a,i,o-i),l=n$(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)s.push(nC(0));for(let e=0;e<c.length;++e){const t=c[e];s[e]=xk(s[e],Ik(o-i,t))}}for(let e=0;e<s.length;++e)s[e]=kk(s[e],i)}return s}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(YA(e,r)>1){a+=`_${YA(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],s=this.collectedTrainableWeights.map((e=>e.read())),o=this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const s=new WF(e),o=GF(this.outputs,s,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=X_(n,a[e]));const i=VC(n);t.push(i),u=0===e?n:xk(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=VC(t(r[a],o[a]))}yk(n),i.push(n)}return u=VC(u),this.calculateLosses().forEach((e=>{u=xk(u,e)})),u}),!0,s);return[o].concat(i)}}makeTestFunction(){this.testFunction=e=>gk((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const s=new WF(i),o=GF(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=VC(r(a[e],o[e]));n=0===e?i:xk(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=VC(n(a[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,s,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;e$(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new HA("validationData including sample weights is not supported yet."):new GA(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=t$(r,e,t),i=r,r=t$(r,0,e),c=t$(a,e,t),s=a,a=t$(a,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const v=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,m=[],w=b.slice());const k=d_(n.callbacks,n.yieldEvery);return await this.fitLoop(y,v,b,d,n.epochs,n.verbose,k,x,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,i$(r,e),i$(a,t),i$(i,e),i$(s,t),i$(l,o),i$(c,u),null!=h&&vk(h)}}async fitLoop(e,t,n,r,a,i,s,o,u,l,c,h,d,p){null==r&&(r=32),null==a&&(a=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new GA("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=LD(0,m)),null==i&&(i=1);const{callbackList:v,history:y}=f_(s,i,a,h,m,d,r,f,c);v.setModel(this),this.history=y,await v.onTrainBegin(),this.stopTraining_=!1;for(let i=h;i<a;++i){await v.onEpochBegin(i);const a={};if(null!=d)throw new HA("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new HA("batch shuffling is not implemneted yet");l&&Mm(g);const i=ZS(g),s=r$(m,r);for(let l=0;l<s.length;++l){const c={};if(await v.onBatchBegin(l,c),gk((()=>{const h=s[l][0],d=s[l][1],p=VD(i,h,d-h);c.batch=l,c.size=d-h;const m=n$(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,yk(r)}if(l===s.length-1&&f){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];yk(i),a["val_"+r]=i}}})),await v.onBatchEnd(l,c),i_(c),this.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(i,a),this.stopTraining_)break}return await v.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return J_(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],i=this.makeTrainFunction()(r.concat(a)),s=[];for(const e of i){const t=await e.data();s.push(t[0])}return vk(i),i$(n[0],e),i$(n[1],t),QA(s)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=mk().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-mk().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ZA(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ZA(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ZA(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ZA($_(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ZA($_(e))));{const e={};for(const t in this.metrics)e[t]=ZA($_(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=m_(U_(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=eD(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>eD(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=eD(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>eD(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=eD(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Lw.getSaveHandlers(n));if(0===t.length)throw new GA(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new GA(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new GA("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Aw(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${H_}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Aw(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=(i=[r.data,t],Rw.join(i))}var i;if(null!=this.userDefinedMetadata){const e=!0;M_(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=r.data,a.weightSpecs=r.specs,e.save(a)}setUserDefinedMetadata(e){M_(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}c$.className="Model",nT(c$);class h$ extends c${}h$.className="Functional",nT(h$);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class d$ extends c${constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:gD("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new GA(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof d$||e instanceof c$;let n;if(t){if(n=e,1!==n.outputs.length)throw new GA("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new GA("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new GA("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new GA("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new zF({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new GA(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new GA("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=BF(this.outputs[0])}this.inboundNodes=[],new MF({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:KA(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(TF(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new c$({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new UA("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new UA("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new UA("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new UA("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new GA("Legacy serialization format not supported yet.");a=t}else zm(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const s=new e(i);if(!(s instanceof d$))throw new HA(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const e of a){const t=m_(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new GA("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new GA("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}d$.className="Sequential",nT(d$);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class p$ extends eT{getConfig(){return{}}}class f$ extends p${apply(e,t=1){return function(e,t=1){if(1!==t)throw new HA(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return UI(e)}(e,t)}}f$.className="elu",nT(f$);class m$ extends p${apply(e){return FS(e)}}m$.className="selu",nT(m$);class g$ extends p${apply(e){return TS(e)}}g$.className="relu",nT(g$);class v$ extends p${apply(e){return gk((()=>HC(6,TS(e))))}}v$.className="relu6",nT(v$);class y$ extends p${apply(e){return e}}y$.className="linear",nT(y$);class b$ extends p${apply(e){return nI(e)}}b$.className="sigmoid",nT(b$);class x$ extends p${apply(e){return function(e){return gk((()=>{const t=xk(.5,Ik(.2,e));return fI(t,0,1)}))}(e)}}x$.className="hardSigmoid",nT(x$);class w$ extends p${apply(e){return AC(e)}}w$.className="softplus",nT(w$);class k$ extends p${apply(e){return function(e){return gk((()=>kk(e,xk(Ck(e),1))))}(e)}}k$.className="softsign",nT(k$);class I$ extends p${apply(e){return aI(e)}}I$.className="tanh",nT(I$);class C$ extends p${apply(e,t=-1){return WS(e,t)}}C$.className="softmax",nT(C$);class S$ extends p${apply(e,t=-1){return _C(e,t)}}S$.className="logSoftmax",nT(S$);class N$ extends p${apply(e,t=1){return gk((()=>Ik(nI(Ik(e,t)),e)))}}N$.className="swish",nT(N$);class T$ extends p${apply(e){return gk((()=>Ik(e,aI(AC(e)))))}}function E$(e){return e.getClassName()}function R$(e,t={}){return aD(e,tT.getMap().classNameMap,t,"activation")}function A$(e){if(null==e){const e={className:"linear",config:{}};return R$(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},R$(t)}return e instanceof p$?e:R$(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */T$.className="mish",nT(T$);class D$ extends eT{}class F$ extends D${constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return gk((()=>{let t=UC([1]);return this.hasL1&&(t=xk(t,iC(Ik(this.l1,Ck(e))))),this.hasL2&&(t=xk(t,iC(Ik(this.l2,QD(e))))),Qk(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}F$.className="L1L2",nT(F$);const _$={l1l2:"L1L2"};function $$(e){return nD(e)}function O$(e,t={}){return aD(e,tT.getMap().classNameMap,t,"regularizer")}function M$(e){if(null==e)return null;if("string"==typeof e){return O$({className:e in _$?_$[e]:e,config:{}})}return e instanceof D$?e:O$(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class L$ extends PF{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=NF(e);let n=TS(e);return null!=this.maxValue&&(n=fI(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}L$.className="ReLU",nT(L$);class P$ extends PF{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=NF(e);return kC(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}P$.className="LeakyReLU",nT(P$);class B$ extends PF{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=IF(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=M$(e.alphaRegularizer),this.alphaConstraint=r_(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new GA(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=TF(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new _F({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=NF(e),tS(e,this.alpha.read())}getConfig(){const e={alphaInitializer:kF(this.alphaInitializer),alphaRegularizer:$$(this.alphaRegularizer),alphaConstraint:t_(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}B$.className="PReLU",nT(B$);class z$ extends PF{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new HA(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=NF(e);return UI(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}z$.className="ELU",nT(z$);class W$ extends PF{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=NF(e);return Ik(n,hk(gC(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}W$.className="ThresholdedReLU",nT(W$);class V$ extends PF{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new C$).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return gk((()=>{let n=NF(e);const r=t.mask;if(null!=r){const e=Ik(FC(GC(n.shape),hk(r,n.dtype)),nC(-1e9));n=xk(n,e)}return this.axis instanceof Array?this.axis.length>1?lC(FC(n,$C(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function U$(e,t,n){if("number"==typeof e)return KA(e,t);if(e.length!==t)throw new GA(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if(!_D(a))throw new GA(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function G$(e,t,n,r,a=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((i+r-1)/r)}function H$(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+MD([n-t,0]);else{if("same"!==r)throw new GA(`Unsupport padding mode: ${r}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function j$(e,t){return gk((()=>(ID(t),"channelsFirst"===t?lN(e,[0,2,3,1]):e)))}function q$(e,t){return gk((()=>(ID(t),"channelsFirst"===t?lN(e,[0,2,3,4,1]):e)))}function K$(e,t,n,r=[1,1],a="valid",i,s,o=null){return gk((()=>{if(null==i&&(i="channelsLast"),ID(i),3!==e.rank&&4!==e.rank)throw new GA(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new GA(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=j$(e,i);if("causal"===a)throw new HA("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=gN({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(u=lN(u,[0,3,1,2])),u}))}V$.className="Softmax",nT(V$);class X$ extends PF{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",X$.verifyArgs(t),this.rank=e,cD(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new HA(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=U$(t.kernelSize,e,"kernelSize"),this.strides=U$(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,CD(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ID(this.dataFormat),this.activation=A$(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=IF(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=r_(t.biasConstraint),this.biasRegularizer=M$(t.biasRegularizer),this.activityRegularizer=M$(t.activityRegularizer),this.dilationRate=U$(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new GA(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new GA(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new GA(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(XA("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!lD(e.kernelSize,"number",1,3))throw new GA(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:E$(this.activation),useBias:this.useBias,biasInitializer:kF(this.biasInitializer),biasRegularizer:$$(this.biasRegularizer),activityRegularizer:$$(this.activityRegularizer),biasConstraint:t_(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Y$ extends X${constructor(e,t){super(e,t),this.kernel=null,Y$.verifyArgs(t),this.filters=t.filters,cD(this.filters,"filters"),this.kernelInitializer=IF(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=r_(t.kernelConstraint),this.kernelRegularizer=M$(t.kernelRegularizer)}build(e){e=TF(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new GA(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return gk((()=>{let t;e=NF(e);const n=null==this.bias?null:this.bias.read(),r=dD(this.activation.getClassName());if(null!=r&&2===this.rank)t=K$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",i,s=1){return gk((()=>{if(null==i&&(i="channelsLast"),ID(i),3!==e.shape.length)throw new GA(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new GA(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new GA(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=lN(e,[0,2,1])),"causal"===a)throw new HA("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=xI(e,t,r,"same"===a?"same":"valid","NWC",s);return null!=n&&(o=ZD(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=K$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new HA("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",i,s){return gk((()=>{if(null==i&&(i="channelsLast"),ID(i),4!==e.rank&&5!==e.rank)throw new GA(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new GA(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=q$(e,i);if("causal"===a)throw new HA("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=II(o,t,r,"same"===a?"same":"valid","NDHWC",s),null!=n&&(o=ZD(o,n)),"channelsFirst"===i&&(o=lN(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=TF(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=G$(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:kF(this.kernelInitializer),kernelRegularizer:$$(this.kernelRegularizer),kernelConstraint:t_(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new GA(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Q$ extends Y${constructor(e){super(2,e),Q$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!lD(e.kernelSize,"number",1,2))throw new GA(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Q$.className="Conv2D",nT(Q$);class J$ extends Y${constructor(e){super(3,e),J$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new GA(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}J$.className="Conv3D",nT(J$);class Z$ extends Q${constructor(e){if(super(e),this.inputSpec=[new _F({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new GA(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=TF(e)).length)throw new GA("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new GA("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _F({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return gk((()=>{let t=NF(e);if(4!==t.shape.length)throw new GA(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const s=n[a],o=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,H$(s,c,u,this.padding),H$(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=lN(t,[0,2,3,1]));let p=kI(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=lN(p,[0,3,1,2])),null!=this.bias&&(p=ZD(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=TF(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const i=this.kernelSize[0],s=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=H$(t[r],o,i,this.padding),t[a]=H$(t[a],u,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Z$.className="Conv2DTranspose",nT(Z$);class eO extends J${constructor(e){if(super(e),this.inputSpec=[new _F({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new GA(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=TF(e)).length)throw new GA("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new GA("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _F({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return gk((()=>{let t=NF(e);if(5!==t.shape.length)throw new GA(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i,s;"channelsFirst"===this.dataFormat?(s=2,a=3,i=4):(s=1,a=2,i=3);const o=n[s],u=n[a],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,H$(o,p,c,this.padding),H$(u,f,h,this.padding),H$(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=lN(t,[0,2,3,4,1]));let v=SI(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=lN(v,[0,4,1,2,3])),null!==this.bias&&(v=ZD(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){const t=(e=TF(e)).slice();let n,r,a,i;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,i=4):(n=4,r=1,a=2,i=3);const s=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=H$(t[r],l,s,this.padding),t[a]=H$(t[a],c,o,this.padding),t[i]=H$(t[i],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}eO.className="Conv3DTranspose",nT(eO);class tO extends Y${constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new GA("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new GA("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new GA(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=IF(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=M$(t.depthwiseRegularizer),this.depthwiseConstraint=r_(t.depthwiseConstraint),this.pointwiseInitializer=IF(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=M$(t.pointwiseRegularizer),this.pointwiseConstraint=r_(t.pointwiseConstraint)}build(e){if((e=TF(e)).length<this.rank+2)throw new GA(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new GA(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new _F({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return gk((()=>{let t;if(e=NF(e),1===this.rank)throw new HA("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=lN(e,[0,2,3,1])),t=_S(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ZD(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=lN(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=kF(this.depthwiseInitializer),e.pointwiseInitializer=kF(this.pointwiseInitializer),e.depthwiseRegularizer=$$(this.depthwiseRegularizer),e.pointwiseRegularizer=$$(this.pointwiseRegularizer),e.depthwiseConstraint=t_(this.depthwiseConstraint),e.pointwiseConstraint=t_(this.pointwiseConstraint),e}}tO.className="SeparableConv";class nO extends tO{constructor(e){super(2,e)}}nO.className="SeparableConv2D",nT(nO);class rO extends Y${constructor(e){super(1,e),rO.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!lD(e.kernelSize,"number",1,1))throw new GA(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}rO.className="Conv1D",nT(rO);class aO extends PF{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return gk((()=>{if(e=NF(e),"channelsLast"===this.dataFormat){const t=GD(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return GD(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=GD(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return GD(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}aO.className="Cropping2D",nT(aO);class iO extends PF{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ID(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,uD(yD,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return gk((()=>{let t=NF(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=lN(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?YN.resizeNearestNeighbor(t,[e,r]):YN.resizeBilinear(t,[e,r]);return lN(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?YN.resizeNearestNeighbor(t,[e,r]):YN.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}iO.className="UpSampling2D",nT(iO);class sO extends X${constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=IF(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=r_(e.depthwiseConstraint),this.depthwiseRegularizer=M$(e.depthwiseRegularizer)}build(e){if((e=TF(e)).length<4)throw new GA(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new GA(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return gk((()=>{let t=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t,n=[1,1],r="valid",a,i){return gk((()=>{null==a&&(a="channelsLast"),ID(a);let s=j$(e,a);if(4!==e.rank)throw new GA(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new GA(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=FI(s,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===a&&(s=lN(s,[0,3,1,2])),s}))}(e=NF(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ZD(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=TF(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=G$(t,this.kernelSize[0],this.padding,this.strides[0]),i=G$(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,i]:[e[0],a,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=kF(this.depthwiseInitializer),e.depthwiseRegularizer=$$(this.depthwiseRegularizer),e.depthwiseConstraint=t_(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function oO(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new GA("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function uO(e,t,n,r=!1,a,i,s=!1,o=!1){return gk((()=>{const u=t.shape.length;if(u<3)throw new GA(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(LD(2,u));if(t=lN(t,l),null!=i)throw new HA("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=hk(hk(a,"bool"),"float32")).rank===u-1&&(a=cC(a,-1)),a=lN(a,l)),r&&(t=RS(t,0),null!=a&&(a=RS(a,0)));const c=[];let h,d=n;const p=t.shape[0],f=oN(t);let m,g;null!=a&&(m=oN(a));for(let t=0;t<p;++t){const n=f[t],r=gk((()=>e(n,d)));if(null==a)h=r[0],d=r[1];else{const e=gk((()=>{const e=m[t],n=FC(QC(e),e),a=xk(Ik(r[0],e),Ik(d[0],n)),i=d.map(((t,a)=>xk(Ik(r[1][a],e),Ik(t,n))));return{output:a,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=XS(c,1)}return[h,g,d]}))}sO.className="DepthwiseConv2D",nT(sO);class lO extends PF{constructor(e){let t;if(super(e),null==e.cell)throw new GA("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new vO({cells:e.cell}):e.cell,null==t.stateSize)throw new GA("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new _F({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return LD(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){CF(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return gk((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new HA("Constants support is not implemented in RNN yet.");CF(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new _F({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Gm(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new GA(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new _F({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){gk((()=>{if(!this.stateful)throw new VA("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new GA("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>UC([n,e]))):this.states_=[UC([n,this.cell.stateSize])];else if(null==e)vk(this.states_),null!=this.keptStates&&(vk(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>UC([n,e]))):this.states_[0]=UC([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new GA(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):vk(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!Gm(r.shape,i))throw new GA(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>yk(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=oO(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let i=[],s=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new _F({shape:e.shape}));s=s.concat(this.stateSpec)}null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length);if(i[0]instanceof $F){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return gk((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=NF(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new GA(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:r},o=uO(((e,t)=>{const n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return gk((()=>{let t=UC(e.shape);return t=iC(t,[1,2]),t=WD(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?qD(t,[1,e]):t)):this.cell.stateSize>1?[qD(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===lO.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=m_(t.cell,n);return new e(Object.assign(t,{cell:r}))}}lO.className="RNN",nT(lO);class cO extends PF{}class hO extends cO{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cD(this.units,"units"),this.activation=A$(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=IF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=IF(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=IF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=M$(e.kernelRegularizer),this.recurrentRegularizer=M$(e.recurrentRegularizer),this.biasRegularizer=M$(e.biasRegularizer),this.kernelConstraint=r_(e.kernelConstraint),this.recurrentConstraint=r_(e.recurrentConstraint),this.biasConstraint=r_(e.biasConstraint),this.dropout=OD([1,MD([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=OD([1,MD([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=TF(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return gk((()=>{if(2!==e.length)throw new GA(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yO({ones:()=>QC(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yO({ones:()=>QC(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;a=XD(null!=i?Ik(e,i):e,this.kernel.read()),null!=this.bias&&(a=ZD(a,this.bias.read())),null!=s&&(n=Ik(n,s));let o=xk(a,XD(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:E$(this.activation),useBias:this.useBias,kernelInitializer:kF(this.kernelInitializer),recurrentInitializer:kF(this.recurrentInitializer),biasInitializer:kF(this.biasInitializer),kernelRegularizer:$$(this.kernelRegularizer),recurrentRegularizer:$$(this.recurrentRegularizer),biasRegularizer:$$(this.biasRegularizer),activityRegularizer:$$(this.activityRegularizer),kernelConstraint:t_(this.kernelConstraint),recurrentConstraint:t_(this.recurrentConstraint),biasConstraint:t_(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}hO.className="SimpleRNNCell",nT(hO);class dO extends lO{constructor(e){e.cell=new hO(e),super(e)}call(e,t){return gk((()=>{null!=this.cell.dropoutMask&&(vk(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(vk(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}dO.className="SimpleRNN",nT(dO);class pO extends cO{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new GA("GRUCell does not support reset_after parameter set to true.");this.units=e.units,cD(this.units,"units"),this.activation=A$(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=A$(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=IF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=IF(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=IF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=M$(e.kernelRegularizer),this.recurrentRegularizer=M$(e.recurrentRegularizer),this.biasRegularizer=M$(e.biasRegularizer),this.kernelConstraint=r_(e.kernelConstraint),this.recurrentConstraint=r_(e.recurrentConstraint),this.biasConstraint=r_(e.biasConstraint),this.dropout=OD([1,MD([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=OD([1,MD([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=TF(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return gk((()=>{if(2!==e.length)throw new GA(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yO({ones:()=>QC(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yO({ones:()=>QC(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let s,o,u;0<this.dropout&&this.dropout<1&&(e=Ik(e,a[0]));let l=XD(e,this.kernel.read());this.useBias&&(l=ZD(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ik(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=HS(c,[2*this.units,this.units],c.rank-1),p=XD(r,h),[f,m,g]=HS(l,3,l.rank-1),[v,y]=HS(p,2,p.rank-1);s=this.recurrentActivation.apply(xk(f,v)),o=this.recurrentActivation.apply(xk(m,y));const b=XD(Ik(o,r),d);u=this.activation.apply(xk(g,b));const x=xk(Ik(s,r),Ik(xk(1,RC(s)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:E$(this.activation),recurrentActivation:E$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:kF(this.kernelInitializer),recurrentInitializer:kF(this.recurrentInitializer),biasInitializer:kF(this.biasInitializer),kernelRegularizer:$$(this.kernelRegularizer),recurrentRegularizer:$$(this.recurrentRegularizer),biasRegularizer:$$(this.biasRegularizer),activityRegularizer:$$(this.activityRegularizer),kernelConstraint:t_(this.kernelConstraint),recurrentConstraint:t_(this.recurrentConstraint),biasConstraint:t_(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}pO.className="GRUCell",nT(pO);class fO extends lO{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pO(e),super(e)}call(e,t){return gk((()=>{null!=this.cell.dropoutMask&&(vk(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(vk(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}fO.className="GRU",nT(fO);class mO extends cO{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cD(this.units,"units"),this.activation=A$(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=A$(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=IF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=IF(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=IF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=M$(e.kernelRegularizer),this.recurrentRegularizer=M$(e.recurrentRegularizer),this.biasRegularizer=M$(e.biasRegularizer),this.kernelConstraint=r_(e.kernelConstraint),this.recurrentConstraint=r_(e.recurrentConstraint),this.biasConstraint=r_(e.biasConstraint),this.dropout=OD([1,MD([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=OD([1,MD([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=TF(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends aF{apply(t,r){const a=e.apply([n]),i=(new sF).apply([n]),s=e.apply([2*n]);return jD(jD(a,i),s)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return gk((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new GA(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yO({ones:()=>QC(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yO({ones:()=>QC(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Ik(e,i[0]));let h=XD(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Ik(r,s[0])),h=xk(h,XD(r,this.recurrentKernel.read())),this.useBias&&(h=ZD(h,this.bias.read()));const[d,p,f,m]=HS(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=xk(Ik(u,a),Ik(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Ik(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:E$(this.activation),recurrentActivation:E$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:kF(this.kernelInitializer),recurrentInitializer:kF(this.recurrentInitializer),biasInitializer:kF(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$$(this.kernelRegularizer),recurrentRegularizer:$$(this.recurrentRegularizer),biasRegularizer:$$(this.biasRegularizer),activityRegularizer:$$(this.activityRegularizer),kernelConstraint:t_(this.kernelConstraint),recurrentConstraint:t_(this.recurrentConstraint),biasConstraint:t_(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}mO.className="LSTMCell",nT(mO);class gO extends lO{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mO(e),super(e)}call(e,t){return gk((()=>{null!=this.cell.dropoutMask&&(vk(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(vk(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}gO.className="LSTM",nT(gO);class vO extends cO{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return gk((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let i;for(let s=0;s<this.cells.length;++s){const o=this.cells[s];n=r[s],i=0===s?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),a.push(i.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;CF(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{ED(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(m_(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return DF(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}FF(t)}}function yO(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:i}=e,s=()=>null!=i?i(t(),n):eF(t(),n),o=()=>tF(s,t,r);if(!a||a<=1)return yk(o().clone());return Array(a).fill(void 0).map(o).map((e=>yk(e.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */vO.className="StackedRNNCells",nT(vO);var bO=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class xO extends lO{constructor(e){if(e.unroll)throw new HA("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new HA("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new _F({ndim:5})]}call(e,t){return gk((()=>{if(null!=this.cell.dropoutMask&&(vk(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(vk(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new GA("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return gk((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=UC([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){gk((()=>{if(!this.stateful)throw new VA("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new GA("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>UC(a))):this.states_=[UC(a)];else if(null==e)vk(this.states_),null!=this.keptStates&&(vk(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>UC(a))):this.states_[0]=UC(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new GA(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):vk(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!Gm(n.shape,r))throw new GA(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>yk(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:i,dilationRate:s}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=G$(u,r[0],a,i[0],s[0]),h=G$(l,r[1],a,i[1],s[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}xO.className="ConvRNN2D";class wO extends mO{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:i,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,cD(this.filters,"filters"),this.kernelSize=U$(n,2,"kernelSize"),this.kernelSize.forEach((e=>cD(e,"kernelSize"))),this.strides=U$(r||1,2,"strides"),this.strides.forEach((e=>cD(e,"strides"))),this.padding=a||"valid",CD(this.padding),this.dataFormat=i||"channelsLast",ID(this.dataFormat),this.dilationRate=U$(s||1,2,"dilationRate"),this.dilationRate.forEach((e=>cD(e,"dilationRate")))}build(e){var t;e=TF(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new GA(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends aF{apply(e,t){return HD([n.apply([r]),GC([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return gk((()=>{if(3!==e.length)throw new GA(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yO({ones:()=>QC(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Ik(t[n],e):e;let u=o(r,s,0),l=o(r,s,1),c=o(r,s,2),h=o(r,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yO({ones:()=>QC(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[v,y,b,x]=HS(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?HS(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,v,w,this.padding),l=this.inputConv(l,y,k,this.padding),c=this.inputConv(c,b,I,this.padding),h=this.inputConv(h,x,C,this.padding);const[S,N,T,E]=HS(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,E);const R=this.recurrentActivation.apply(xk(u,p)),A=this.recurrentActivation.apply(xk(l,f)),D=xk(Ik(A,i),Ik(R,this.activation.apply(xk(c,m)))),F=Ik(this.recurrentActivation.apply(xk(h,g)),this.activation.apply(D));return[F,F,D]}))}getConfig(){const e=super.getConfig(),t=bO(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){const a=bI(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ZD(a,n,this.dataFormat):a}recurrentConv(e,t){return bI(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}wO.className="ConvLSTM2DCell",nT(wO);class kO extends xO{constructor(e){const t=new wO(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}kO.className="ConvLSTM2D",nT(kO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class IO extends PF{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return tF((()=>eF(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}IO.className="Dropout",nT(IO);class CO extends IO{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}CO.className="SpatialDropout1D",nT(CO);class SO extends PF{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,cD(this.units,"units"),this.activation=A$(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=IF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=IF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=r_(e.kernelConstraint),this.biasConstraint=r_(e.biasConstraint),this.kernelRegularizer=M$(e.kernelRegularizer),this.biasRegularizer=M$(e.biasRegularizer),this.activityRegularizer=M$(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=TF(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=TF(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e),r=dD(this.activation.getClassName());let a;return null!=r?a=XD(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=XD(n,this.kernel.read()),null!=this.bias&&(a=ZD(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:E$(this.activation),useBias:this.useBias,kernelInitializer:kF(this.kernelInitializer),biasInitializer:kF(this.biasInitializer),kernelRegularizer:$$(this.kernelRegularizer),biasRegularizer:$$(this.biasRegularizer),activityRegularizer:$$(this.activityRegularizer),kernelConstraint:t_(this.kernelConstraint),biasConstraint:t_(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}SO.className="Dense",nT(SO);class NO extends PF{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=TF(e);for(const t of e.slice(1))if(null==t)throw new GA(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$D(e,1)]}call(e,t){return gk((()=>{this.invokeCallHook(e,t);let n=NF(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=lN(n,e)}return function(e){if(e.rank<=1)throw new GA(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],$D(e.shape,1)];return Qk(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}NO.className="Flatten",nT(NO);class TO extends PF{constructor(e){super(e),this.supportsMasking=!0,this.activation=A$(e.activation)}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e);return this.activation.apply(n)}))}getConfig(){const e={activation:E$(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}TO.className="Activation",nT(TO);class EO extends PF{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return gk((()=>function(e,t){return gk((()=>{if(2!==e.shape.length)throw new GA(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return qD(WD(e,1),[1,t,1])}))}(e=NF(e),this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}EO.className="RepeatVector",nT(EO);class RO extends PF{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new GA("Can only specifiy one unknown dimension.");i=e}else a*=t}const s=$D(e);if(null!==i){if(0===a||s%a!=0)throw new GA(n);r[i]=s/a}else if(s!==a)throw new GA(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Qk(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}RO.className="Reshape",nT(RO);class AO extends PF{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=LD(1,e.dims.length+1);if(!Gm(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _F({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=TF(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return lN(NF(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}AO.className="Permute",nT(AO);class DO extends PF{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=NF(e);return Ek(XC(n,this.maskValue),-1)}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e),r=Ek(XC(n,this.maskValue),-1,!0);return Ik(n,hk(r,n.dtype))}))}}DO.className="Masking",nT(DO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class FO extends PF{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(JA(e.inputLength))}this.inputDim=e.inputDim,cD(this.inputDim,"inputDim"),this.outputDim=e.outputDim,cD(this.outputDim,"outputDim"),this.embeddingsInitializer=IF(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=M$(e.embeddingsRegularizer),this.activityRegularizer=M$(e.activityRegularizer),this.embeddingsConstraint=r_(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return gk((()=>this.maskZero?(e=NF(e),XC(e,BI(e))):null))}computeOutputShape(e){if(e=TF(e),null==this.inputLength)return[...e,this.outputDim];const t=JA(this.inputLength);if(t.length!==e.length-1)throw new GA(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],i=e[r+1];if(null!=a&&null!=i&&a!==i)throw new GA(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return gk((()=>{this.invokeCallHook(e,t);let n=NF(e);"int32"!==n.dtype&&(n=zD(n,"int32"));const r=YD(this.embeddings.read(),Qk(n,[n.size]));return Qk(r,TF(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:kF(this.embeddingsInitializer),embeddingsRegularizer:$$(this.embeddingsRegularizer),activityRegularizer:$$(this.activityRegularizer),embeddingsConstraint:t_(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}FO.className="Embedding",nT(FO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class _O extends PF{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new HA}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],i=t[r];if(null==a||null==i||a<0||i<0)n.push(null);else if(1===a)n.push(i);else if(1===i)n.push(a);else{if(a!==i)throw new GA("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[TF(e)]),e.length<2)throw new GA(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=sD(t),t.length>1)throw new GA(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===sD(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return gk((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=MD(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=WD(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],i=e.slice(1).concat([a]);let s=Qk(r,[a].concat($D(e.slice(1))));s=lN(s,[1,0]),s=Qk(s,i),t.push(s),n=!0}else if(e>1){const a=LD(1,e).concat([0]);t.push(lN(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Qk(lN(Qk(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(LD(0,a-1));r=lN(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=sD(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return gk((()=>{if(null==t)return null;if(!Array.isArray(t))throw new GA("`mask` should be an Array");if(!Array.isArray(e))throw new GA("`inputs` should be an Array");if(t.length!==e.length)throw new GA(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:cC(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=OC(n,t[e]);return n}))}}class $O extends _O{constructor(e){super(e)}mergeFunction(e){return gk((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xk(t,e[n]);return t}))}}$O.className="Add",nT($O);class OO extends _O{constructor(e){super(e)}mergeFunction(e){return gk((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ik(t,e[n]);return t}))}}OO.className="Multiply",nT(OO);class MO extends _O{constructor(e){super(e)}mergeFunction(e){return gk((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=xk(t,e[n]);return Ik(1/e.length,t)}))}}MO.className="Average",nT(MO);class LO extends _O{constructor(e){super(e)}mergeFunction(e){return gk((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=WC(t,e[n]);return t}))}}LO.className="Maximum",nT(LO);class PO extends _O{constructor(e){super(e)}mergeFunction(e){return gk((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=HC(t,e[n]);return t}))}}PO.className="Minimum",nT(PO);class BO extends _O{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new GA("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(Gm(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new GA("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return gk((()=>HD(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new GA("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new GA("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new GA("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new GA(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return gk((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(hk(QC(e[n]),"bool")):t[n].rank<e[n].rank?r.push(cC(t[n],-1)):r.push(t[n]);const a=eI(r,this.axis);return Tk(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function zO(e,t){for(;e<0;)e+=t;return e}BO.className="Concatenate",nT(BO);class WO extends _O{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){zm(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new HA("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new GA(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new GA(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>zO(t,e[n].shape.length))):[zO(this.axes,n.shape.length),zO(this.axes,r.shape.length)],this.normalize&&(n=g_(n,t[0]),r=g_(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new HA("batchDot is not implemented for tensors of 4D or higher rank yet");if(zm(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),zm(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new HA("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const i=n;return gk((()=>{let n,s;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Qk(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Qk(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=i[0]===i[1]?iC(Ik(e,t),i[0]):iC(Ik(lN(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;s=tI(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);s=KS(s,t)}return 1===s.shape.length&&(s=cC(s,1)),s}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[zO(this.axes,e.length),zO(this.axes,t.length)],n}computeOutputShape(e){zm(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new HA("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}WO.className="Dot",nT(WO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class VO extends PF{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e);return tF((()=>xk(KD(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}VO.className="GaussianNoise",nT(VO);class UO extends PF{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return gk((()=>{this.invokeCallHook(e,t);const n=NF(e);if(this.rate>0&&this.rate<1){return tF((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ik(n,KD(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}UO.className="GaussianDropout",nT(UO);class GO extends PF{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||NF(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return gk((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=NF(e),r=-1.7580993408473766;let a=vC(IS(n),this.rate);a=zD(a,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,s=-i*r*this.rate,o=xk(Ik(t,a),Ik(xk(a,-1),r));return xk(Ik(o,i),s)};return tF(r,(()=>NF(e)),t.training||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function HO(e,t,n,r,a,i=.001){let s;if(2===e.rank)s=oI(e,t,n,r,a,i);else if(3===e.rank)s=uI(e,t,n,r,a,i);else{if(4!==e.rank)throw new HA(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=lI(e,t,n,r,a,i)}return s}function jO(e,t,n,r,a=.001){return Gm(r.slice().sort(),LD(0,e.rank-1))?function(e,t,n,r,a=.001){return gk((()=>{const i=KC(e,r),s=i.mean,o=i.variance;return[HO(e,s,o,n,t,a),s,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return gk((()=>{const i=KC(e,r),s=i.mean,o=i.variance,u=[];for(const t of LD(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=Qk(s,u),c=Qk(o,u),h=null==t?null:Qk(t,u),d=null==n?null:Qk(n,u);return[HO(e,l,c,d,h,a),s,o]}))}(e,t,n,r,a)}GO.className="AlphaDropout",nT(GO);class qO extends PF{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=IF(e.betaInitializer||"zeros"),this.gammaInitializer=IF(e.gammaInitializer||"ones"),this.movingMeanInitializer=IF(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=IF(e.movingVarianceInitializer||"ones"),this.betaConstraint=r_(e.betaConstraint),this.gammaConstraint=r_(e.gammaConstraint),this.betaRegularizer=M$(e.betaRegularizer),this.gammaRegularizer=M$(e.gammaRegularizer)}build(e){e=TF(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new GA(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new _F({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return gk((()=>{const n=null!=t.training&&t.training,r=NF(e),a=r.shape,i=a.length,s=LD(0,i),o=this.axis>=0?this.axis:this.axis+i;s.splice(o,1);const u=KA(1,i);u[o]=a[o];const l=s.slice();l.sort();const c=!Gm(l,LD(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=Qk(this.movingMean.read(),u),t=Qk(this.movingVariance.read(),u),n=this.center?Qk(this.beta.read(),u):null,a=this.scale?Qk(this.gamma.read(),u):null;return HO(r,e,t,n,a,this.epsilon)}return HO(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=jO(r,this.gamma.read(),this.beta.read(),s,this.epsilon),f=(e,t,n)=>{gk((()=>{const r=1-n,a=e.read(),i=Ik(FC(a,t),r);e.write(FC(a,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:kF(this.betaInitializer),gammaInitializer:kF(this.gammaInitializer),movingMeanInitializer:kF(this.movingMeanInitializer),movingVarianceInitializer:kF(this.movingVarianceInitializer),betaRegularizer:$$(this.betaRegularizer),gammaRegularizer:$$(this.gammaRegularizer),betaConstraint:t_(this.betaConstraint),gammaConstraint:t_(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}qO.className="BatchNormalization",nT(qO);class KO extends PF{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=IF(e.betaInitializer||"zeros"),this.gammaInitializer=IF(e.gammaInitializer||"ones"),this.betaRegularizer=M$(e.betaRegularizer),this.gammaRegularizer=M$(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=TF(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==sD(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=NF(e),r=n.shape,a=r.length;return gk((()=>{let{mean:e,variance:t}=KC(n,this.axis,!0);const i=KA(1,a);for(const e of this.axis)i[e]=r[e];const s=e=>null!=e&&e.shape.length!==a?Qk(e,i):e;let o=this.scale?s(this.gamma.read()):null,u=this.center?s(this.beta.read()):null;const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=dC(e,l),t=dC(t,l),null!=o&&(o=dC(o,c)),null!=u&&(u=dC(u,c)),HO(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:kF(this.betaInitializer),gammaInitializer:kF(this.gammaInitializer),betaRegularizer:$$(this.betaRegularizer),gammaRegularizer:$$(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}KO.className="LayerNormalization",nT(KO);class XO extends PF{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new GA(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new GA(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new GA(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new _F({ndim:4})]}computeOutputShape(e){let t,n;return e=TF(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return gk((()=>
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t,n){return gk((()=>{if(4!==e.rank)throw new GA(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new GA("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new GA(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],JC(e,r)}))}(NF(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function YO(e,t,n,r,a,i){return gk((()=>{let s;ID(a),SD(i),CD(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=j$(e,a);const o="same"===r?"same":"valid";return s="max"===i?BC(e,t,n,o):Jk(e,t,n,o),"channelsFirst"===a&&(s=lN(s,[0,3,1,2])),s}))}function QO(e,t,n,r,a,i){return gk((()=>{let s;ID(a),SD(i),CD(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=q$(e,a);const o="same"===r?"same":"valid";return s="max"===i?zC(e,t,n,o):Zk(e,t,n,o),"channelsFirst"===a&&(s=lN(s,[0,4,1,2,3])),s}))}XO.className="ZeroPadding2D",nT(XO);class JO extends PF{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new GA(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(cD(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new GA(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}cD(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,CD(this.padding),this.inputSpec=[new _F({ndim:3})]}computeOutputShape(e){const t=G$((e=TF(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return gk((()=>{this.invokeCallHook(e,t),e=WD(NF(e),2);const n=this.poolingFunction(NF(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return KS(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ZO extends JO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ID(a),CD(r),YO(e,t,n,r,a,"max")}}ZO.className="MaxPooling1D",nT(ZO);class eM extends JO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ID(a),CD(r),YO(e,t,n,r,a,"avg")}}eM.className="AveragePooling1D",nT(eM);class tM extends PF{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new GA(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];cD(this.poolSize,"poolSize"),cD(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ID(this.dataFormat),CD(this.padding),this.inputSpec=[new _F({ndim:4})]}computeOutputShape(e){e=TF(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=G$(t,this.poolSize[0],this.padding,this.strides[0]),n=G$(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return gk((()=>(this.invokeCallHook(e,t),this.poolingFunction(NF(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class nM extends tM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ID(a),CD(r),YO(e,t,n,r,a,"max")}}nM.className="MaxPooling2D",nT(nM);class rM extends tM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ID(a),CD(r),YO(e,t,n,r,a,"avg")}}rM.className="AveragePooling2D",nT(rM);class aM extends PF{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new GA(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];cD(this.poolSize,"poolSize"),cD(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ID(this.dataFormat),CD(this.padding),this.inputSpec=[new _F({ndim:5})]}computeOutputShape(e){e=TF(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=G$(t,this.poolSize[0],this.padding,this.strides[0]),n=G$(n,this.poolSize[1],this.padding,this.strides[1]),r=G$(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return gk((()=>(this.invokeCallHook(e,t),this.poolingFunction(NF(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class iM extends aM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ID(a),CD(r),QO(e,t,n,r,a,"max")}}iM.className="MaxPooling3D",nT(iM);class sM extends aM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return ID(a),CD(r),QO(e,t,n,r,a,"avg")}}sM.className="AveragePooling3D",nT(sM);class oM extends PF{constructor(e){super(e),this.inputSpec=[new _F({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new HA}}class uM extends oM{constructor(e){super(e||{})}call(e,t){return gk((()=>{const t=NF(e);return VC(t,1)}))}}uM.className="GlobalAveragePooling1D",nT(uM);class lM extends oM{constructor(e){super(e||{})}call(e,t){return gk((()=>{const t=NF(e);return ZI(t,1)}))}}lM.className="GlobalMaxPooling1D",nT(lM);class cM extends PF{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ID(this.dataFormat),this.inputSpec=[new _F({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new HA}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class hM extends cM{call(e,t){return gk((()=>{const t=NF(e);return"channelsLast"===this.dataFormat?VC(t,[1,2]):VC(t,[2,3])}))}}hM.className="GlobalAveragePooling2D",nT(hM);class dM extends cM{call(e,t){return gk((()=>{const t=NF(e);return"channelsLast"===this.dataFormat?ZI(t,[1,2]):ZI(t,[2,3])}))}}dM.className="GlobalMaxPooling2D",nT(dM);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class pM extends PF{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=m_(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class fM extends pM{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=TF(e)).length<3)throw new GA(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=TF(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return gk((()=>uO(((e,n)=>[NF(this.layer.call(e,t)),[]]),e=NF(e),[],!1,null,null,!1,!0)[1]))}}fM.className="TimeDistributed",nT(fM);class mM extends pM{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=m_(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=m_(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,uD(wD,"BidirectionalMergeMode",a),e.weights)throw new HA("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):QA(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=oO(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],s=[];if(null!=n){const e=n.length;if(e%2>0)throw new GA("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new _F({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),s.push(...r)}if(null!=r)throw new HA("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof $F;for(const e of i)if(e instanceof $F!==o)throw new GA("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return gk((()=>{const n=t.initialState;let r,a,i,s;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),s=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=RS(a,1)),"concat"===this.mergeMode?s=HD([r,a]):"sum"===this.mergeMode?s=xk(r,a):"ave"===this.mergeMode?s=Ik(.5,xk(r,a)):"mul"===this.mergeMode?s=Ik(r,a):null==this.mergeMode&&(s=[r,a]),this.returnState?null==this.mergeMode?s.concat(i):[s].concat(i):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ED(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),ED(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=m_(t.layer);if(delete t.layer,null!=t.numConstants)throw new HA("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}mM.className="Bidirectional",nT(mM);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class gM extends PF{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return gk((()=>("float32"!==(e=NF(e)).dtype&&(e=zD(e,"float32")),xk(Ik(e,this.scale),this.offset))))}}gM.className="Rescaling",nT(gM);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:vM,cropAndResize:yM}=YN;class bM extends PF{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,i,s,o){return gk((()=>{let u,l=!1;const c=[t/i,n/s,(r+t)/i,(a+n)/s],h=[];3===e.rank?(l=!0,u=XS([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=Ew(h,[h.length,4]),p=CS(0,h.length,1,"int32"),f=yM(u,d,p,[r,a],"nearest");return zD(l?NF(oN(f)):f,o)}))}upsize(e,t,n,r){return gk((()=>zD(vM(e,[t,n]),r)))}call(e,t){return gk((()=>{const t=NF(e),n=t.dtype,r=t.shape,a=r[r.length-3],i=r[r.length-2];let s=0;a!==this.height&&(s=Math.floor((a-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),s>=0&&o>=0?this.centerCrop(t,s,o,this.height,this.width,a,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=TF(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}bM.className="CenterCrop",nT(bM);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class xM extends PF{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=TF(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return gk((()=>{let n;if("int32"!==(e=NF(e)).dtype&&(e=zD(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new GA(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=NF(t.countWeights)}const r=ZI(e),a=eC(e),i=gC(this.numTokens,r).bufferSync().get(0),s=vC(a,0).bufferSync().get(0);if(!i||!s)throw new GA(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
return function(e,t,n,r){let a=NF(e);if("int32"!==a.dtype&&(a=zD(a,"int32")),"int"===t)return a;const i=a.shape;if(0===a.rank&&(a=cC(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=cC(a,-1)),a.rank>2)throw new GA(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${a.rank}.`);const s=["multiHot","oneHot"].includes(t);let o;if(o=AI(a,void 0!==r&&"count"===t?r:[],n,s),"tfIdf"!==t)return o;if(r)return Ik(o,r);throw new GA("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}xM.className="CategoryEncoding",nT(xM);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const wM=new Set(["bilinear","nearest"]);class kM extends PF{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!wM.has(e.interpolation))throw new GA(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=TF(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return gk((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return YN.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return YN.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...wM]} are supported`)}))}}kM.className="Resizing",nT(kM);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class IM{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}IM.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class CM extends PF{constructor(e){super(e),this.randomGenerator=new IM(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}CM.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const SM=new Set(["bilinear","nearest"]);class NM extends CM{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new GA(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new GA(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new GA(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!SM.has(n))throw new GA(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=TF(e))[2];return[this.imgHeight,-1,t]}call(e,t){return gk((()=>{const t=NF(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=IS([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return YN.resizeBilinear(e,a);case"nearest":return YN.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...SM]} are supported`)}}))}}NM.className="RandomWidth",nT(NM);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class TM extends o_{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof c$))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function EM(e,t){return e<t}function RM(e,t){return e>t}class AM extends TM{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new HA("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=EM:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=RM:this.monitorFunc=EM,this.monitorFunc===EM&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===EM?1/0:-1/0}async onEpochEnd(e,t){await a_(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const DM={earlyStopping:function(e){return new AM(e)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var FM,_M;xg().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(FM||(FM={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(_M||(_M={}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var $M;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}($M||($M={}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&zm("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM=uN;class LM extends $m{nextDataId(){return LM.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new _m(this,fk())}write(e,t,n){this.firstUse&&(this.firstUse=!1,xg().get("IS_NODE")&&$b("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ng(n[0])){const a=n.map((e=>Dx(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return lE(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Fx(e)));return ck(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ck(e.shape,e.dtype,t)}makeOutput(e,t,n){return fk().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ax();e();return{kernelMs:Ax()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){OM([e],"where");const t=this.readSync(e.dataId);return MM(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PM(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}LM.nextDataId=0;const BM={kernelName:Sg,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;OM(t,"abs");let r=new Float32Array(Um(t.shape));return r=PM(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zM(e){return(t,n,r,a,i)=>{const s=MI(t,n),o=s.length,u=og(s),l=Jm(i,Um(s)),c=t.length,h=n.length,d=og(t),p=og(n),f=$I(t,s),m=$I(n,s);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=mg(t,o,u),i=n.slice(-c);f.forEach((e=>i[e]=0));const s=fg(i,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const v=fg(g,h,p);l[t]=e(r[s],a[v])}return[l,s]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(a.shape,"float32",s)},o}const VM={kernelName:Qg,backendName:"cpu",kernelFunc:WM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(e,t,n="float32"){if("complex64"===n){return WM({inputs:{real:UM(e,t,"float32"),imag:UM(e,t,"float32")},backend:e})}const r=hg(Um(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const HM={kernelName:Bv,backendName:"cpu",kernelFunc:GM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const qM={kernelName:Fy,backendName:"cpu",kernelFunc:jM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=Rx([0],n),[a,i]=zM(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function XM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return GM({inputs:{x:a},backend:n});const e=UM(n,a.shape,a.dtype),t=XM({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=WM({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=jM({inputs:{input:a},backend:n}),t=XM({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!eg(a.dtype,i)){const e=GM({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const s=n.data.get(a.dataId).values,[o,u,l]=KM(s,a.shape,a.dtype,i);return n.makeTensorInfo(o,u,l)}const YM={kernelName:Kg,backendName:"cpu",kernelFunc:XM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:i,b:s}=n,o=a;OM([i,s],e);const u=o.data.get(i.dataId).values,l=o.data.get(s.dataId).values,c="string"===i.dtype?GE(u):u,h="string"===i.dtype?GE(l):l,d=r||i.dtype,[p,f]=t(i.shape,s.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:i,b:s}=e,o=a;if("complex64"===i.dtype||"complex64"===s.dtype){const e=XM({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=XM({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,v,y]=n(i.shape,s.shape,u,l,f,m),b=o.makeTensorInfo(y,"float32",g),x=o.makeTensorInfo(y,"float32",v),w=WM({inputs:{real:b,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(x),w}{const e=o.data.get(i.dataId).values,n=o.data.get(s.dataId).values,a=r||i.dtype,[u,l]=t(i.shape,s.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function JM(e){return(t,n,r,a,i,s)=>{const o=MI(t,n),u=Um(o),l=o.length,c=og(o),h=Jm("float32",u),d=Jm("float32",u),p=$I(t,o),f=$I(n,o),m=lE(r,a),g=lE(i,s),v=t.length,y=og(t),b=n.length,x=og(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=mg(t,l,c),r=n.slice(-v);p.forEach((e=>r[e]=0));const a=fg(r,v,y),i=n.slice(-b);f.forEach((e=>i[e]=0));const s=fg(i,b,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZM=zM(((e,t)=>e+t)),eL=JM(((e,t,n,r)=>({real:e+n,imag:t+r}))),tL=QM(Eg,ZM,eL),nL={kernelName:Eg,backendName:"cpu",kernelFunc:tL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rL(e,t,n,r,a){const i=Um(r),s=hg(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(s[r]+=i>0?t[n]:1)}return s}function aL(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],s=ck([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<i;a++){const i=e.get(o,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,a),o,i):s.set(s.get(o,i)+1,o,i))}return s}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL=zM(((e,t)=>e&t)),sL={kernelName:jg,backendName:"cpu",kernelFunc:QM(jg,iL)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oL(e){return(t,n,r)=>{const a=Zm(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(e,t,n){return lL(e,oL(t),n)}function lL(e,t,n){return({inputs:r,attrs:a,backend:i})=>{const{x:s}=r;OM(s,e);const o=i,u=o.data.get(s.dataId).values;let l;if("string"===s.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=GE(u)}else l=u;const c=n||s.dtype,h=t(l,c,a);return o.makeTensorInfo(s.shape,c,h)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cL=oL((e=>Math.ceil(e))),hL=lL(Xg,cL),dL={kernelName:Xg,backendName:"cpu",kernelFunc:hL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pL(e,t,n,r){const a=Zm(n,Um(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Um(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?GE(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=i[s++]}r+=e.shape[1]}))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL=zM(((e,t)=>e===t?1:0)),mL=QM(Sv,fL,null,"bool"),gL={kernelName:Sv,backendName:"cpu",kernelFunc:mL},vL=oL((e=>Math.exp(e))),yL=lL(Nv,vL,"float32"),bL={kernelName:Nv,backendName:"cpu",kernelFunc:yL},xL=oL((e=>Math.expm1(e))),wL=lL(Ev,xL),kL={kernelName:Ev,backendName:"cpu",kernelFunc:wL},IL=oL((e=>Math.floor(e))),CL=lL(Fv,IL),SL={kernelName:Fv,backendName:"cpu",kernelFunc:CL},NL=zM(((e,t)=>Math.floor(e/t))),TL=QM(_v,NL,null,"int32"),EL={kernelName:_v,backendName:"cpu",kernelFunc:TL};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RL(e,t,n,r,a,i,s,o,u){const l=ck([r,i],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const i=e[n*a+t];c+=i*s[t],r.push(i)}if(c<0||c>=u/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<i;e++)l.values[n*i+e]=t.get(...t.indexToLoc(c*i+e))}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(e,t,n){const r=ck(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),i=a[0],s=a[2],o=t.locToIndex([i,s]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL=zM(((e,t)=>e>t?1:0)),FL=QM(Lv,DL,null,"bool"),_L={kernelName:Lv,backendName:"cpu",kernelFunc:FL},$L=zM(((e,t)=>e>=t?1:0)),OL=QM(Pv,$L,null,"bool"),ML={kernelName:Pv,backendName:"cpu",kernelFunc:OL},LL=zM(((e,t)=>e<t?1:0)),PL=QM(jv,LL,null,"bool"),BL={kernelName:jv,backendName:"cpu",kernelFunc:PL},zL=zM(((e,t)=>e<=t?1:0)),WL=QM(qv,zL,null,"bool"),VL={kernelName:qv,backendName:"cpu",kernelFunc:WL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UL(e,t,n){const r=(t-e)/(n-1),a=hg(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL=oL((e=>Math.log(e))),HL=lL(Xv,GL),jL={kernelName:Xv,backendName:"cpu",kernelFunc:HL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qL(e,t,n,r){const a=Jm(r,Um(n));for(let n=0;n<a.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>i)&&(i=t)}a[n]=i}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL=zM(((e,t)=>Math.max(e,t))),XL=QM(ry,KL),YL={kernelName:ry,backendName:"cpu",kernelFunc:XL},QL=zM(((e,t)=>Math.min(e,t))),JL=QM(hy,QL),ZL={kernelName:hy,backendName:"cpu",kernelFunc:JL},eP=zM(((e,t)=>e*t)),tP=JM(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),nP=QM(my,eP,tP),rP={kernelName:my,backendName:"cpu",kernelFunc:nP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aP(e,t,n){const r=Ex(-1,n);return eP([],t,r,e,n)}const iP={kernelName:gy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;OM(r,"neg");const a=n.data.get(r.dataId).values,[i,s]=aP(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,i)}},sP=zM(((e,t)=>e!==t?1:0)),oP=QM(vy,sP,null,"bool"),uP={kernelName:vy,backendName:"cpu",kernelFunc:oP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lP(e,t,n,r,a){const i=t.length,s=Um(t),o=og(t),u=og(a),l=Jm(n,Um(a));for(let t=0;t<s;++t){const n=mg(t,i,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[fg(a,i,u)]=e[t]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:i}=n;OM(a,"transpose");const s=a.shape.length,o=new Array(s);for(let e=0;e<o.length;e++)o[e]=a.shape[i[e]];const u=lP(r.data.get(a.dataId).values,a.shape,a.dtype,i,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const hP={kernelName:Cb,backendName:"cpu",kernelFunc:cP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(e,t,n,r){const[a,i]=qI(e,r),s=aw(t,"int32"),o=hg(Um(a),s),u=Um(i);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:s}}const pP={kernelName:Ty,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;OM(a,"prod");const o=a.shape.length,u=Ym(i,a.shape),l=YI(u,o);let c=u,h=a;const d=[];null!=l&&(h=cP({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=JI(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=dP(h.shape,h.dtype,p,c);let v=m;return s&&(v=KI(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,g,f)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(e,t,n,r){const a=[];let i=0;const s=t.length-1+n.length,o=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let s=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-r[s];for(let e=s;e<u;++e)o[a].push(r[e+1]+t)}s=r[s],u=r[u]}u!==s&&(a.push([s,u]),i+=u-s)}return{outSplits:o,valueSlices:a,numValues:i}}function mP(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function gP(e,t,n,r,a){const i=t.slice();i[0]=a;const s=Zm(n,Um(i)),o=e.length;return function(e,t,n,r,a,i){const s=mP(t,2)[1],o=mP(i,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[u*o+t]=e[n*s+t];++u}}(e,t,r,0===o?0:o/t[0],s,i),[s,i]}function vP(e,t,n,r,a,i,s,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const a=mg(r,t.length,og(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(i,s,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=fP(i,s,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=Zm("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=gP(n,r,a,c,h);return[d,p[0],p[1]]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yP=2147483647;function bP(e,t,n,r,a,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===a.length,l=0===s.length,c=[];o||c.push(t[0]),u||c.push(a[0]),l||c.push(s[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Zm("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],a=u?r[0]:r[t],s=l?i[0]:i[t];if(0===s)throw new Error("Requires delta != 0");let c;if(s>0&&a<n||s<0&&a>n)c=0;else if(c=Math.ceil(Math.abs((a-n)/s)),c>yP)throw new Error(`Requires ((limit - start) / delta) <= ${yP}`);d[t+1]=d[t]+c}const p=Zm(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const a=l?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=r,r+=a}return[d,p]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xP=VT;class wP{constructor(e,t,n,r,a,i,s,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=GT(l),this.raggedRank=HT(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===xP.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===xP.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case xP.VALUE_ROWIDS:return wP.getMaxWidthValueRowID(t);case xP.ROW_SPLITS:return wP.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${xP[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,a=Math.max(i-n,a),n=i)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return IP(e,n)}calculateOutputSize(e){const t=this.valuesShape;jT(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=UT(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),a=[];let i=0;for(let e=0;e<r;++e,i+=t)a.push(i);for(let t=r;t<e;++t)a.push(-1);return zm(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,i=[];for(let s=0;s<a-1;++s){const a=e[s+1]-e[s];let o=Math.min(r,a),u=t[s];-1===u&&(o=0);for(let e=0;e<o;++e)i.push(u),u+=n;for(let e=0;e<a-o;++e)i.push(-1)}if(a>0&&i.length!==e[a-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,i=[];if(0===a)return[];let s=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];i.push(u);for(let l=1;l<a;++l){const a=e[l];if(a===o)u>=0&&(++s,s<r?u+=n:u=-1);else{if(s=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case xP.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case xP.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${xP[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case xP.FIRST_DIM_SIZE:return e[0];case xP.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case xP.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${xP[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=IP(t,!1),a=Zm(this.valuesDType,Um(r));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){i=this.calculateOutputIndex(e-1,i,n[e],t[e])}this.setOutput(this.raggedRank,i,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;const a=this.values,i=n;let s=r.slice();s=s.slice(e+1);const o=Um(s),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;gk((()=>{const t=Qk(l,e),n=hI(t,s);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=a.subarray(c*o);kP(i.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)i.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;){kP(i.slice(d*o),l,o),++d}r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function kP(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function IP(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function CP(e,t,n,r,a,i,s,o,u,l){return new wP(e,t,n,r,a,i,s,o,u,l).compute()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return hg(0,r);const a=hg(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NP=oL((e=>1/Math.sqrt(e))),TP=lL(Uy,NP),EP={kernelName:Uy,backendName:"cpu",kernelFunc:TP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RP(e,t,n,r,a,i,s,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return ck(n,t.dtype);const p=u instanceof jx?u:ck(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<i;e++){const i=[];let u=0;for(let t=0;t<s;t++){const n=h[e*s+t];i.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=d[e*a+n]:p.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AP=oL((e=>1/(1+Math.exp(-e)))),DP=uL(Zy,(e=>1/(1+Math.exp(-e)))),FP={kernelName:Zy,backendName:"cpu",kernelFunc:DP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _P(e,t,n,r,a){const i=DT(r,t,n),s=Um(n),o=og(r);if(i){const n=FT(t,o);return"string"===a?e.slice(n,n+s):e.subarray(n,n+s)}const u=ck(r,a,"string"===a?GE(e):e),l=ck(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?HE(l.values):l.values}function $P(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r;OM(a,"slice");const[o,u]=_T(a,i,s);wT(a,o,u);const l=_P(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const OP={kernelName:Xy,backendName:"cpu",kernelFunc:$P};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(e,t,n,r,a,i,s){const o=t[0],u=i[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(EE(o));return[Zm(n,0),[0,h],Zm(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(RE(t,n));if(n>=u)throw new Error(AE(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],i=Zm(n,t*h),d=Zm(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=p[n],s=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<h;++n)i[s*h+n]=e[t*h+n];d[s]=r[t],c[t]=s}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=s}}return[i,[t,h],d,l,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(e,t,n,r,a){const i=Um(r),s=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(DE(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(FE(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/l);if(l*e!==i)throw new Error($E(r,u));u[c]=e}if(Um(u)!==i)throw new Error(OE(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=Zm(n,s*o);for(let t=0;t<s;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[s,o],u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(e,t,n,r,a,i=!1,s=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=Zm(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(s),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=a[p];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(PE(g,c));g>m&&d.fill(s,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(BE(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(i)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(s,m*l,c*l),[d,h]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=oL((e=>Math.sqrt(e))),zP=uL(tb,(e=>Math.sqrt(e))),WP={kernelName:tb,backendName:"cpu",kernelFunc:zP},VP=zM(((e,t)=>{const n=e-t;return n*n})),UP=QM(hb,VP),GP={kernelName:hb,backendName:"cpu",kernelFunc:UP},HP=oL(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),jP=lL(pb,HP),qP={kernelName:pb,backendName:"cpu",kernelFunc:jP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KP(e,t,n,r){const a=ck(e,t.dtype);for(let e=0;e<a.size;e++){const i=a.indexToLoc(e),s=new Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*n[e]+r[e];a.set(t.get(...s),...i)}return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XP{constructor(e,t,n,r,a,i){this.separator=Dx(e),this.nGramWidths=t,this.leftPad=Dx(n),this.rightPad=Dx(r),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,i){for(let s=0;s<a;++s){const o=this.getPadWidth(i),u=Math.max(0,o-s),l=Math.max(0,o-(a-(s+1))),c=i-(u+l),h=t+(u>0?0:s-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(u+l+c-1)*this.separator.length,n[r+s]=new Uint8Array(d);const p=n[r+s];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,i=Zm("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const s=new Array(i[a]);for(let n=0;n<a;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,i);this.createNGrams(e,r,s,a,u,i),a+=u})),this.preserveShort&&a===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,u=1;this.createNGrams(e,r,s,a,u,o)}}return[s,i]}}function YP(e,t,n,r,a,i,s,o){return new XP(n,r,a,i,s,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let i=e.indexOf(a);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(a,i);n&&0===t.length||r.push(t),a=i+1}}function JP(e,t,n){const r=e.length,a=[];let i=0,s=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;QP(e[u],t,n,a);const l=a.length-r;o[u]=l,i+=l,s=Math.max(s,l)}const u=Zm("int32",2*i),l=new Array(i),c=[r,s];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(e,t){const n=Zm("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Tx(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eB=zM(((e,t)=>e-t)),tB=JM(((e,t,n,r)=>({real:e-n,imag:t-r}))),nB=QM(yb,eB,tB),rB={kernelName:yb,backendName:"cpu",kernelFunc:nB};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aB(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=ck(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const i=e.locToIndex(a);r.values[t]=e.values[i]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function sB(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,i=t-n+1,s=Math.log(a),o=.5*Math.exp(2*s/3),u=.5*Math.sqrt(s*o*(a-o)/a)*Math.sign(i-a/2);sB(e,t,Math.max(n,Math.floor(t-i*o/a+u)),Math.min(r,Math.floor(t+(a-i)*o/a+u)))}const a=e[t];let i=n,s=r;for(Bm(e,n,t),iB(e[r],a)>0&&Bm(e,n,r);i<s;){for(Bm(e,i,s),i++,s--;iB(e[i],a)<0;)i+=1;for(;iB(e[s],a)>0;)s-=1}0===iB(e[n],a)?Bm(e,n,s):(s+=1,Bm(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}function oB(e,t,n,r,a){const i=t[t.length-1],[s,o]=[e.length/i,i],u=Jm(n,s*r),l=Jm("int32",s*r);for(let t=0;t<s;t++){const n=t*o,i=e.subarray(n,n+o);let s=new Array(i.length);i.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(sB(s,r),s=s.slice(0,r)),a&&s.sort(iB);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=s[e].value,d[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[ck(c,n,u),ck(c,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(e,t,n,r){const a=Ym(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const s=new Map,o=new Int32Array(n[a]),u=new jx(i,r,e),l=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=s.get(n);if(null!=r)o[t]=r;else{const e=s.size;s.set(n,e),o[t]=e,l.push(t)}}const h=i.slice();h[1]=s.size;const d=new jx(h,r);l.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lB=Object.freeze({__proto__:null,simpleAbsImpl:PM,addImpl:ZM,bincountImpl:rL,bincountReduceImpl:aL,bitwiseAndImpl:iL,castImpl:KM,ceilImpl:cL,concatImpl:pL,equalImpl:fL,expImpl:vL,expm1Impl:xL,floorImpl:IL,floorDivImpl:NL,gatherNdImpl:RL,gatherV2Impl:AL,greaterImpl:DL,greaterEqualImpl:$L,lessImpl:LL,lessEqualImpl:zL,linSpaceImpl:UL,logImpl:GL,maxImpl:qL,maximumImpl:KL,minimumImpl:QL,multiplyImpl:eP,negImpl:aP,notEqualImpl:sP,prodImpl:dP,raggedGatherImpl:vP,raggedRangeImpl:bP,raggedTensorToTensorImpl:CP,rangeImpl:SP,rsqrtImpl:NP,scatterImpl:RP,sigmoidImpl:AP,sliceImpl:_P,sparseFillEmptyRowsImpl:MP,sparseReshapeImpl:LP,sparseSegmentReductionImpl:PP,sqrtImpl:BP,squaredDifferenceImpl:VP,staticRegexReplaceImpl:HP,stridedSliceImpl:KP,stringNGramsImpl:YP,stringSplitImpl:JP,stringToHashBucketFastImpl:ZP,subImpl:eB,tileImpl:aB,topKImpl:oB,transposeImpl:lP,uniqueImpl:uB});/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
bk("cpu",(()=>new LM),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const cB=uL(kv,(e=>e>=0?e:Math.exp(e)-1)),hB={kernelName:kv,backendName:"cpu",kernelFunc:cB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r;OM([a],"leakyRelu");const s=Um(a.shape),o=n.data.get(a.dataId).values,u=Jm("float32",s);for(let e=0;e<o.length;e++)u[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const pB={kernelName:Hv,backendName:"cpu",kernelFunc:dB},fB=zM(((e,t)=>e<0?t*e:e));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;OM([r,a],"prelu");const i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,[o,u]=fB(r.shape,a.shape,i,s,"float32");return n.makeTensorInfo(u,"float32",o)}const gB={kernelName:Ny,backendName:"cpu",kernelFunc:mB},vB=uL($y,(e=>Math.max(0,e))),yB={kernelName:$y,backendName:"cpu",kernelFunc:vB},bB=uL(zy,(e=>Math.min(Math.max(0,e),6))),xB={kernelName:zy,backendName:"cpu",kernelFunc:bB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wB(e,t,n,r,a){if("linear"===n)return GM({inputs:{x:t},backend:e});if("relu"===n)return vB({inputs:{x:t},backend:e});if("elu"===n)return cB({inputs:{x:t},backend:e});if("relu6"===n)return bB({inputs:{x:t},backend:e});if("prelu"===n)return mB({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return dB({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return DP({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=Um(a.shape),o=Xm(i,s),u=Um(o);zm(s===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const IB={kernelName:Oy,backendName:"cpu",kernelFunc:kB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=r;OM([a,i],"matMul");const u=a.shape.length,l=i.shape.length,c=s?a.shape[u-2]:a.shape[u-1],h=o?i.shape[l-1]:i.shape[l-2],d=s?a.shape[u-1]:a.shape[u-2],p=o?i.shape[l-2]:i.shape[l-1],f=a.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Um(f),v=Um(m),y=MI(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);zm(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`));const b=o?[v,p,h]:[v,h,p],x=kB({inputs:{x:a},backend:n,attrs:{shape:s?[g,c,d]:[g,d,c]}}),w=kB({inputs:{x:i},backend:n,attrs:{shape:b}}),k=s?x.shape[1]:x.shape[2],I=s?x.shape[2]:x.shape[1],C=o?w.shape[1]:w.shape[2],S=Math.max(g,v),N=n.data.get(x.dataId).values,T=n.data.get(w.dataId).values,E=og(x.shape),R=og(w.shape),[A,D,F]=s?[E[0],1,E[1]]:[E[0],E[1],1],[_,$,O]=o?[1,R[1],R[0]]:[R[1],1,R[0]],M=I*C,L=ck([S,I,C],x.dtype),P=L.values,B=n.blockSize;for(let e=0;e<S;e++){const t=e%g,n=e%v;for(let r=0;r<I;r+=B){const a=Math.min(r+B,I);for(let i=0;i<C;i+=B){const s=Math.min(i+B,C);for(let o=0;o<k;o+=B){const u=Math.min(o+B,k);for(let l=r;l<a;l++)for(let r=i;r<s;r++){let a=0;for(let e=o;e<u;e++){a+=N[t*A+l*D+e*F]*T[e*_+r*$+n*O]}P[e*M+(l*C+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,L.dtype,L.values)}const SB={kernelName:Ug,backendName:"cpu",kernelFunc:CB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NB={kernelName:Db,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=CB({inputs:{a:a,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),s&&(p=tL({inputs:{a:d,b:s},backend:n}),m.push(d),d=p),c&&(f=wB(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},TB=uL(Ng,(e=>Math.acos(e))),EB={kernelName:Ng,backendName:"cpu",kernelFunc:TB},RB=uL(Tg,(e=>Math.acosh(e))),AB={kernelName:Tg,backendName:"cpu",kernelFunc:RB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DB={kernelName:Rg,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,r=t;OM(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),i=ck(r[0].shape,r[0].dtype),s=i.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB={kernelName:Ag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;OM(a,"all");const o=Ym(i,a.shape);let u=o;const l=YI(u,a.shape.length);let c=a;null!=l&&(c=cP({inputs:{x:a},backend:n,attrs:{perm:l}}),u=JI(u.length,a.shape.length)),XI("all",u,c.shape.length);const[h,d]=qI(c.shape,u),p=Um(d),f=hg(Um(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=kB({inputs:{x:g},backend:n,attrs:{shape:KI(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B={kernelName:Dg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;OM(a,"any");const o=Ym(i,a.shape);let u=o;const l=YI(u,a.shape.length);let c=a;null!=l&&(c=cP({inputs:{x:a},backend:n,attrs:{perm:l}}),u=JI(u.length,a.shape.length)),XI("any",u,c.shape.length);const[h,d]=qI(c.shape,u),p=Um(d),f=hg(Um(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=kB({inputs:{x:g},backend:n,attrs:{shape:KI(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $B={kernelName:Fg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;OM(a,"argMax");let s=Ym(i,a.shape);const o=YI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=cP({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=JI(s.length,u.shape.length)),s=[s[0]],XI("argMax",s,u.shape.length);const[c,h]=qI(u.shape,s),d=hg(Um(c),"int32"),p=Um(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a>n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB={kernelName:_g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;OM(a,"argMin");let s=Ym(i,a.shape);const o=YI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=cP({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=JI(s.length,u.shape.length)),s=[s[0]],XI("argMin",s,u.shape.length);const[c,h]=qI(u.shape,s),d=hg(Um(c),"int32"),p=Um(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a<n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},MB=uL($g,(e=>Math.asin(e))),LB={kernelName:$g,backendName:"cpu",kernelFunc:MB},PB=uL(Og,(e=>Math.asinh(e))),BB={kernelName:Og,backendName:"cpu",kernelFunc:PB},zB=uL(Mg,(e=>Math.atan(e))),WB={kernelName:Mg,backendName:"cpu",kernelFunc:zB},VB=zM(((e,t)=>Math.atan2(e,t))),UB=QM(Pg,VB),GB={kernelName:Pg,backendName:"cpu",kernelFunc:UB},HB=uL(Lg,(e=>Math.atanh(e))),jB={kernelName:Lg,backendName:"cpu",kernelFunc:HB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qB(e,t,n,r,a,i){const s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ck(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*v,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outHeight;++v){const x=v*s-d,w=Math.max(0,x),k=Math.min(a.inHeight,c+x),I=n+v*y;for(let n=0;n<a.outWidth;++n){const s=n*o-p,c=Math.max(0,s),d=Math.min(a.inWidth,h+s);let v=f,y=0,x=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<d;n+=l){const s=e[a+n*r[2]+t];"max"===i&&s>v?v=s:"avg"===i&&(y+=s,x++)}if(isNaN(v))break}g[I+n*b+t]="avg"===i?y/x:v}}}return m}function KB(e,t,n,r,a=!1,i=!1){const s=ck(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ck(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let v=g;for(;v<0;)v+=l;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const b=Math.min(r.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let n=v;n<y;n+=l){const s=n-g;for(let o=p;o<b;o+=c){const u=o-h,l=m.get(e,n,o,t);l>x&&(x=l,w=a?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:s*d+u)}}s.set(w,e,n,o,t)}}return s}function XB(e,t,n,r,a,i){const s=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,v=a.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=ck(a.outShape,n),x=b.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],C=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*s-m;let N=S;for(;N<0;)N+=l;const T=Math.min(a.inDepth,d+S),E=n+w*k;for(let n=0;n<a.outHeight;++n){const s=n*o-g;let d=s;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+s),w=E+n*I;for(let n=0;n<a.outWidth;++n){const s=n*u-v;let o=s;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+s),g=w+n*C;let k=y,I=0,S=0;for(let n=N;n<T;n+=l){const a=b+n*r[1];for(let n=d;n<m;n+=c){const s=a+n*r[2];for(let n=o;n<p;n+=h){const a=e[s+n*r[3]+t];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===i?I/Math.max(S,1):k}}}}return b}const YB={kernelName:Bg,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;OM(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;zm(qk(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=Lk(a.shape,i,s,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Gm(l.inShape,l.outShape))c=GM({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=og(a.shape),r=qB(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB={kernelName:Wg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r;OM(a,"avgPool3d");const c=Pk(a.shape,i,s,1,o,u,l),h=XB(n.data.get(a.dataId).values,a.shape,a.dtype,og(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB={kernelName:Vg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;OM([a,i],"avgPool3DGrad");const c=Pk(i.shape,s,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,v=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=x-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,N=ck(i.shape,"float32"),T=1/(f*m*g),E=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const i=n-I,s=r-S,o=a-C;let u=0;for(let n=0;n<x;n+=v){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const a=(s+n)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=b){const i=(o+n)/p;if(i<0||i>=c.outWidth||Math.floor(i)!==i)continue;u+=E.get(e,r,a,i,t)}}}N.set(u*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB={kernelName:zg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;OM([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Lk(s.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,v=c.effectiveFilterHeight,y=c.effectiveFilterWidth,b=y-1-c.padInfo.left,x=v-1-c.padInfo.top,w=ck(s.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,C=ck(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-x,i=r-b;let s=0;for(let n=0;n<v;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const a=(i+n)/d;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;s+=C.get(e,r,a,t)}}w.set(s*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ez={kernelName:$v,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:i,offset:s,mean:o,variance:u}=t;zm(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),zm(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),zm(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),OM([a,o,u,i,s],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,v=p.length,y=d.length,b=h.length;let x=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),x>=g&&(x=0),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz={kernelName:Gg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;OM([a],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),u=YT(a.shape,i,o),l=QT(u.length,i.length),c=JT(a.shape,i,o),h=ZT(s,i.length),d=eE(c,s,i.length),p=kB({inputs:{x:a},backend:n,attrs:{shape:u}}),f=cP({inputs:{x:p},backend:n,attrs:{perm:l}}),m=kB({inputs:{x:f},backend:n,attrs:{shape:c}}),g=$P({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nz={kernelName:Hg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=rL(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rz={kernelName:qg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=MI(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},az=uL(Yg,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),iz={kernelName:Yg,backendName:"cpu",kernelFunc:az},sz={kernelName:Jg,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Um(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,s=a.complexTensorInfos.imag,o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oz(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const uz={kernelName:Wv,backendName:"cpu",kernelFunc:oz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=Ym(a,t[0].shape)[0],s=t.map((e=>e.shape));zT(s,i);let o=WT(t.map((e=>e.shape)),i);if(0===Um(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>Um(e.shape)>0));if(1===u.length)return GM({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>jM({inputs:{input:e},backend:n}))),t=u.map((e=>oz({inputs:{input:e},backend:n}))),r=lz({inputs:e,backend:n,attrs:{axis:i}}),a=lz({inputs:t,backend:n,attrs:{axis:i}}),s=WM({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map((e=>{const t=Um(e.shape.slice(i));return kB({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=WT(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=pL(c,o,t[0].dtype,h),p=WT(u.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const cz={kernelName:Zg,backendName:"cpu",kernelFunc:lz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;OM([a,i],"conv2d");const h=Xk(u),d=Bk(a.shape,i.shape,s,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,v=d.padInfo.left,y=d.padInfo.top,b="channelsLast"===d.dataFormat,x=new jx(d.outShape,a.dtype),w=og(a.shape),k=og(i.shape),I=w[0],C=b?w[1]:w[2],S=b?w[2]:1,N=b?1:w[1],T=x.strides[0],E=b?x.strides[1]:x.strides[2],R=b?x.strides[2]:1,A=b?1:x.strides[1],D=n.data.get(a.dataId).values,F=n.data.get(i.dataId).values,_=x.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*T;for(let e=0;e<d.outHeight;++e){const r=n+e*E,a=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const i=e*k[0],s=t+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*R,n=e*d.strideWidth-v;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=s+r*S;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=D[a+e*N];for(let e=0;e<d.outChannels;++e)_[t+e*A]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,_)}const dz={kernelName:ev,backendName:"cpu",kernelFunc:hz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz={kernelName:tv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;OM([a,i],"conv2dBackpropFilter");const h=Xk(u),d=Bk(a.shape,c,s,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,v="channelsLast"===d.dataFormat,y=new jx(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=new jx(a.shape,a.dtype,w),C=new jx(i.shape,i.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(d.outHeight,(d.inHeight+x-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),i=Math.min(d.outWidth,(d.inWidth+b-r)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=a;e<i;++e){const n=r+e*f-b;u+=v?I.get(l,t,n,s)*C.get(l,c,e,o):I.get(l,s,t,n)*C.get(l,o,c,e)}}y.set(u,e,r,s,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fz={kernelName:nv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;OM([a,i],"conv2dBackpropInput");const h=og(i.shape),d=og(a.shape);let p=Xk(l);const f=Bk(s,i.shape,o,1,u,c,!1,p),m=new jx(f.inShape,"float32"),g=m.values,v=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,[b,x,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:N,inWidth:T,outChannels:E,outHeight:R,outWidth:A,strideHeight:D,strideWidth:F}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,$=C-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,B=O?1:m.strides[1],z=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){const r=n-_,a=Math.max(0,Math.ceil(r/D)),i=Math.min(R,(I+r)/D);for(let s=0;s<T;++s){const o=s-$,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(C+o)/F);let c=0;for(let n=a;n<i;++n){const a=n*D-r;for(let r=u;r<l;++r){const i=z*e+W*n+V*r,s=b*(I-1-a)+x*(C-1-(r*F-o))+w*t;for(let e=0;e<E;++e){c+=v[i+U*e]*y[s+e]}}}g[M*e+L*n+P*s+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz={kernelName:rv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r;OM([a,i],"conv3d");const l=zk(a.shape,i.shape,s,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,v=g.front,y=g.left,b=g.top,x=new jx(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=x.values,C=og(a.shape),S=og(i.shape);for(let e=0;e<l.batchSize;++e){const t=e*C[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],a=e*l.strideDepth-v;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const i=e*S[0],s=t+n*C[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-b;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=i+e*S[1],o=s+r*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const i=a+e*S[2],s=o+t*l.inChannels;let u=i;for(let e=0;e<l.inChannels;++e){const t=w[s+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gz={kernelName:av,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r;OM([a,i],"conv3dBackpropFilterV2");const l=og(a.shape),c=og(i.shape),h=zk(a.shape,u,s,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,v=h.filterWidth,y=new jx(h.filterShape,"float32"),b=y.values,[x,w,k,I]=y.strides,C=n.data.get(i.dataId).values,[S,N,T,E]=c,R=n.data.get(a.dataId).values,[A,D,F,_]=l,$=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil(($-e)/d)),n=Math.min(h.outDepth,(h.inDepth+$-e)/d),r=e*x;for(let a=0;a<g;++a){const i=Math.max(0,Math.ceil((M-a)/p)),s=Math.min(h.outHeight,(h.inHeight+M-a)/p),o=a*w+r;for(let r=0;r<v;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,v=m*S;for(let m=t;m<n;++m){const t=(e+m*d-$)*D+h,n=m*N+v;for(let e=i;e<s;++e){const i=(a+e*p-M)*F+t,s=e*T+n;for(let e=u;e<l;++e){const t=e*E+s;g+=R[(r+e*f-O)*_+i+o]*C[t+c]}}}}b[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz={kernelName:iv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r;OM([a],"conv3dBackpropInputV2");const l=og(a.shape),c=og(i.shape),h=zk(u,i.shape,o,1,s),d=new jx(h.inShape,"float32"),p=d.values,[f,m,g,v]=d.strides,y=n.data.get(a.dataId).values,[b,x,w,k]=l,I=n.data.get(i.dataId).values,[C,S,N,T]=c,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:D,inChannels:F,inDepth:_,inHeight:$,inWidth:O,outChannels:M,outDepth:L,outHeight:P,outWidth:B,strideDepth:z,strideHeight:W,strideWidth:V}=h,U=R-1-h.padInfo.front,G=A-1-h.padInfo.top,H=D-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<F;++t)for(let n=0;n<_;++n){const r=n-U,a=Math.max(0,Math.ceil(r/z)),i=Math.min(L,(R+r)/z);for(let s=0;s<$;++s){const o=s-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(P,(A+o)/W);for(let c=0;c<O;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(D+h)/V);let F=0;for(let n=a;n<i;++n){const a=n*z-r;for(let r=u;r<l;++r){const i=r*W-o;for(let s=d;s<E;++s){const o=b*e+x*n+w*r+k*s,u=C*(R-1-a)+S*(A-1-i)+N*(D-1-(s*V-h))+T*t;for(let e=0;e<M;++e){F+=y[o+e]*I[u+e]}}}}p[f*e+m*n+g*s+v*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},yz=uL(sv,(e=>Math.cos(e))),bz={kernelName:sv,backendName:"cpu",kernelFunc:yz},xz=uL(ov,(e=>Math.cosh(e))),wz={kernelName:ov,backendName:"cpu",kernelFunc:xz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kz={kernelName:cv,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=i.shape[0],[m,g]=o,v=ck([f,m,g,p],"float32"),y=n.data.get(i.dataId).values,b=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,w=og(a.shape),k=og(v.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],i=y[t+3],s=b[e];if(s>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];v.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let i=r+h*w[2]+n*w[1]+s*w[0];const l=x[i];i=r+m*w[2]+n*w[1]+s*w[0];const c=x[i];i=r+h*w[2]+a*w[1]+s*w[0];const d=x[i];i=r+m*w[2]+a*w[1]+s*w[0];const p=l+(c-l)*y,f=d+(x[i]-d)*y;i=r+u*k[2]+t*k[1]+e*k[0],v.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(a<0||a>d-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*w[2]+u*w[1]+s*w[0],i=r+n*k[2]+t*k[1]+e*k[0];v.values[i]=x[a]}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz={kernelName:uv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;OM(a,"cumprod");const u=YI([i],a.shape.length);let l=a;null!=u&&(l=cP({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=JI(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=aw(l.dtype,"int32"),d=cg(Um(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?1:p[n];else{const r=m(e,t-1);d[n]=s?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=cP({inputs:{x:g},backend:n,attrs:{perm:QI(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz={kernelName:lv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;OM(a,"cumsum");const u=YI([i],a.shape.length);let l=a;null!=u&&(l=cP({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=JI(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=aw(l.dtype,"int32"),d=hg(Um(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?0:p[n];else{const r=m(e,t-1);d[n]=s?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=cP({inputs:{x:g},backend:n,attrs:{perm:QI(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sz={kernelName:hv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=rL(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===a.shape.length){const e=aL(n.bufferSync(a),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz={kernelName:dv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r;zm("NHWC"===s,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*i,d=l*i,p=c/(i*i),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const a=Math.floor(t/i),s=(r*i+t%i)*p;for(let t=0;t<p;++t){const r=t+s+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:l}=r;OM([a,i],"depthwiseConv2DNative");const c=og(a.shape),h=og(i.shape);let d=u;null==d&&(d=[1,1]),zm(qk(s,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`));const p=Bk(a.shape,i.shape,s,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:v,padInfo:y}=p,b=y.left,x=y.top,w=p.outChannels/p.inChannels,k=new jx(p.outShape,a.dtype),I=n.data.get(a.dataId).values,C=n.data.get(i.dataId).values,S=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const i=e*h[0],s=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*v;if(r<0||r>=p.inWidth)continue;const a=i+e*h[1],o=s+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)S[u+e]+=t*C[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Ez={kernelName:pv,backendName:"cpu",kernelFunc:Tz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz={kernelName:fv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;OM([a,i],"depthwiseConv2dNativeBackpropFilter");const h=Bk(a.shape,c,s,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new jx(h.filterShape,"float32"),v=h.padInfo.left,y=h.padInfo.top,b=h.outChannels/h.inChannels,x=n.data.get(a.dataId).values,w=new jx(a.shape,a.dtype,x),k=n.data.get(i.dataId).values,I=new jx(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((v-r)/p)),i=Math.min(h.outWidth,(h.inWidth+v-r)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/b),u=s%b;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=a;e<i;++e){const n=r+e*p-v;l+=w.get(u,t,n,o)*I.get(u,c,e,s)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az={kernelName:mv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;OM([a,i],"depthwiseConv2DNativeBackpropInput");const h=og(a.shape),d=og(i.shape),p=Bk(c,i.shape,s,o,u,l,!0),f=new jx(p.inShape,"float32"),m=f.values,[g,v,y]=f.strides,b=n.data.get(a.dataId).values,[x,w,k]=h,I=n.data.get(i.dataId).values,[C,S,N]=d,{batchSize:T,filterHeight:E,filterWidth:R,inChannels:A,inHeight:D,inWidth:F,outChannels:_,outHeight:$,outWidth:O,strideHeight:M,strideWidth:L}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,z=_/A;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<D;++n){const r=n-P,a=Math.max(0,Math.ceil(r/M)),i=Math.min($,(E+r)/M);for(let s=0;s<F;++s){const o=s-B,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(R+o)/L);let c=0;for(let n=a;n<i;++n){const a=n*M-r;for(let r=u;r<l;++r){const i=x*e+w*n+k*r,s=C*(E-1-a)+S*(R-1-(r*L-o))+N*t;for(let e=0;e<z;++e){c+=b[i+(t*z+e)]*I[s+e]}}}m[g*e+v*n+y*s+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dz={kernelName:gv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=Um(r.shape),i=n.data.get(r.dataId).values,s=ck([a,a],r.dtype),o=s.values;for(let e=0;e<i.length;e++)o[e*a+e]=i[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,s.dtype,s.values)}},Fz={kernelName:vv,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:i,pad:s,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:v,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:N}=Mk(r.shape,a.shape,i,s,"NHWC",o),T=Um(N),E=N.length,R=Zm(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<v;++t){const n=t*x-b.top;for(let i=0;i<y;++i){const s=i*w-b.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const i=n+t*C;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=s+n*S;if(p>=0&&p<m){const s=fg([e,i,p,o],c,og(r.shape)),f=fg([t,n,o],d,og(a.shape)),m=l[s]+h[f];m>u&&(u=m)}}}R[fg([e,t,i,o],E,og(N))]=u}}}return{dataId:u.write(Rx(R,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},_z={kernelName:bv,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,l=t,c=lg(r.shape,l.data.get(r.dataId).values),h=lg(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:v,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:S}=Mk(r.shape,a.shape,s,o,"NHWC",u);zm(i.rank===S.length,(()=>`Error in ${bv}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=lg(S,l.data.get(i.dataId).values),T=dg(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-y.top;for(let r=0;r<v;++r){const a=r*x-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*C;if(l>=0&&l<f){const a=c[e][r][l][i]+h[t][n][i];a>s&&(s=a,o=t,u=n)}}}T[o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(Rx(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},$z={kernelName:yv,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,l=t,c=lg(r.shape,l.data.get(r.dataId).values),h=lg(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:v,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:S}=Mk(r.shape,a.shape,s,o,"NHWC",u);zm(i.rank===S.length,(()=>`Error in ${yv}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=lg(S,l.data.get(i.dataId).values),T=dg(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-y.top;for(let r=0;r<v;++r){const a=r*x-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*C;if(l>=0&&l<f){const a=c[e][r][l][i]+h[t][n][i];a>s&&(s=a,o=r,u=l)}}}T[e][o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(Rx(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oz={kernelName:"Draw",backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:i,options:s}=r,{contextOptions:o,imageOptions:u}=s||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,v=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===a.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;v[n+0]=Math.round(t[0]),v[n+1]=Math.round(t[1]),v[n+2]=Math.round(t[2]),v[n+3]=Math.round(t[3])}i.width=p,i.height=d;const y=new ImageData(v,p,d);return h.putImageData(y,0,0),a}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;let o;OM(a,"sum"),o="bool"===a.dtype?XM({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):GM({inputs:{x:a},backend:n});const u=o.shape.length,l=Ym(i,o.shape),c=YI(l,u);let h=l,d=o;null!=c&&(d=cP({inputs:{x:o},backend:n,attrs:{perm:c}}),h=JI(h.length,u)),XI("sum",h,d.shape.length);const[p,f]=qI(d.shape,h);let m=UM(n,p,aw(d.dtype,"int32"));const g=Um(f),v=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<v.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];v[e]=n}if(s){const e=m;m=kB({inputs:{x:m},backend:n,attrs:{shape:KI(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Lz={kernelName:nb,backendName:"cpu",kernelFunc:Mz};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pz={kernelName:wv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=wE(a,i.length);IE(s.length,u,i);const{path:l,steps:c}=CE(o,u),h=c.length;let d=null,p=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=kE(p,u[t]);let a;SE(e)?a=i[t]:(a=cP({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Gm(a.shape,s)||(a=kB({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=nP({inputs:{a:a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=Mz({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bz={kernelName:Iv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;OM([r,a],"eluGrad");const i=new Float32Array(Um(a.shape)),s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<s.length;++e){const t=s[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",i)}},zz=uL(Cv,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+.3275911*n);return t*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))})),Wz={kernelName:Cv,backendName:"cpu",kernelFunc:zz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vz(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:i}=r,s=a.shape.length,o=a.shape.slice();let u=i;return i<0&&(zm(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+i+1),o.splice(u,0,1),kB({inputs:{x:a},backend:n,attrs:{shape:o}})}const Uz={kernelName:Tv,backendName:"cpu",kernelFunc:Vz},Gz=zM(((e,t)=>e/t)),Hz=QM(xv,Gz),jz={kernelName:xv,backendName:"cpu",kernelFunc:Hz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qz(e,t,n){const r=e.shape,a=r[0],i=r[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,u=s.complexTensorInfos.imag,l=[a,i],c=Um(l),h=Jm("float32",c),d=Jm("float32",c);for(let e=0;e<a;e++){const r=$P({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=$P({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=WM({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=Kz(s,t,n),p=lE(l,c);for(let t=0;t<i;t++){const n=pE(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=WM({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Kz(e,t,n){const r=Um(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,s=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=Xz(i,s,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),i=n.makeTensorInfo([],"float32",Ex(r,"float32")),s=GM({inputs:{x:i},backend:n}),u=jz.kernelFunc({inputs:{a:e,b:i},backend:n}),l=jz.kernelFunc({inputs:{a:t,b:s},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,s=0;for(let r=0;r<t;r++){const o=gE(a*r,t,n),u=pE(e,r);i+=u.real*o.real-u.imag*o.imag,s+=u.real*o.imag+u.imag*o.real}n&&(i/=t,s/=t),fE(r,i,s,a)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(lE(i,s),r,t);return cE(e)}var o}function Xz(e,t,n,r,a){if(1===n)return{real:e,imag:t};const i=lE(e,t),s=n/2,o=hE(i),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=WM({inputs:{real:h,imag:d},backend:a}),f=dE(i),m=f.real,g=f.imag,v=[m.length],y=a.makeTensorInfo(v,"float32",m),b=a.makeTensorInfo(v,"float32",g),x=WM({inputs:{real:y,imag:b},backend:a}),w=Xz(u,l,s,r,a),k=w.real,I=w.imag,C=[k.length],S=a.makeTensorInfo(C,"float32",k),N=a.makeTensorInfo(C,"float32",I),T=WM({inputs:{real:S,imag:N},backend:a}),E=Xz(m,g,s,r,a),R=E.real,A=E.imag,D=[R.length],F=a.makeTensorInfo(D,"float32",R),_=a.makeTensorInfo(D,"float32",A),$=WM({inputs:{real:F,imag:_},backend:a}),O=mE(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),P=a.makeTensorInfo(M,"float32",O.imag),B=WM({inputs:{real:L,imag:P},backend:a}),z=nP({inputs:{a:B,b:$},backend:a}),W=tL({inputs:{a:T,b:z},backend:a}),V=nB({inputs:{a:T,b:z},backend:a}),U=jM({inputs:{input:W},backend:a}),G=jM({inputs:{input:V},backend:a}),H=oz({inputs:{input:W},backend:a}),j=oz({inputs:{input:V},backend:a}),q=lz({inputs:[U,G],backend:a,attrs:{axis:0}}),K=lz({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Yz={kernelName:Rv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=Um(r.shape),i=r.shape[r.shape.length-1],s=kB({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=qz(s,!1,n),u=kB({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:i}=n,s=i||ag(a),o=Zm(s,Um(r));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(o,a),t.makeTensorInfo(r,s,o)}const Jz={kernelName:Av,backendName:"cpu",kernelFunc:Qz};const Zz={kernelName:Dv,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,i=Jm(r.dtype,Um(r.shape)),[s,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<s;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const s=Math.round(u-e-1),o=t+n+r+a;let h=c[o];if(s>=0&&s<u){h=c[t+n+s*l+a]}i[o]=h}}}}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW={kernelName:Fb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=hz({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(s){const e=m;if("NCHW"===c&&1===s.shape.length&&1!==s.shape[0]){const e=kB({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=tL({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=tL({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=kB({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=wB(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=wB(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:_b,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=Tz({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(s){const e=m;m=tL({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=wB(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW={kernelName:Mv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=Um(r.shape),s=a.shape,o=s[s.length-1],[u,l,c,h]=yT(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=RL(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,d.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW={kernelName:Ov,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r;OM([a,i],"gatherV2");const u=Ym(s,a.shape)[0],l=n.data.get(i.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];zm(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=Um(i.shape),p=VE(a,i,u,h),f=kB({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=kB({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],v=n.bufferSync(m),y=AL(n.bufferSync(f),v,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW={kernelName:zv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=Um(r.shape),i=r.shape[r.shape.length-1],s=kB({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=qz(s,!0,n),u=kB({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}},iW=uL(Vv,(e=>Number.isFinite(e)?1:0),"bool"),sW={kernelName:Vv,backendName:"cpu",kernelFunc:iW},oW=uL(Uv,(e=>Math.abs(e)===1/0?1:0),"bool"),uW={kernelName:Uv,backendName:"cpu",kernelFunc:oW},lW=uL(Gv,(e=>Number.isNaN(e)?1:0),"bool"),cW={kernelName:Gv,backendName:"cpu",kernelFunc:lW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW={kernelName:Kv,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=UL(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},dW=uL(Yv,(e=>Math.log1p(e))),pW={kernelName:Yv,backendName:"cpu",kernelFunc:dW},fW=zM(((e,t)=>e&&t)),mW=QM(Qv,fW,null,"bool"),gW={kernelName:Qv,backendName:"cpu",kernelFunc:mW},vW=uL(Jv,(e=>e?0:1),"bool"),yW={kernelName:Jv,backendName:"cpu",kernelFunc:vW},bW=zM(((e,t)=>e||t)),xW=QM(Zv,bW,null,"bool"),wW={kernelName:Zv,backendName:"cpu",kernelFunc:xW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW={kernelName:ey,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r;OM(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=Um(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(s+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW={kernelName:ty,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;OM(s,"LRNGrad");const h=Um(s.shape),d=s.shape[3],p=n.data.get(s.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),v=h;for(let e=0;e<v;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(s.shape,a.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=n;let u=a.shape;const l=u.length,c=Ym(i,u);let h=c;const d=YI(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=lP(p,u,a.dtype,d,e),h=JI(h.length,l),u=e}OM(a,"max"),XI("max",h,l);const[f,m]=qI(u,h),g=qL(p,Um(m),f,a.dtype),v=o.write(g,f,a.dtype);let y=f;if(s){y=KI(f,c)}return{dataId:v,shape:y,dtype:a.dtype}}const SW={kernelName:ny,backendName:"cpu",kernelFunc:CW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW={kernelName:ay,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;OM(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;zm(qk(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=Lk(a.shape,i,s,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Gm(l.inShape,l.outShape))c=GM({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=og(a.shape),r=qB(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TW={kernelName:sy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r;OM(a,"maxPool3d");const c=Pk(a.shape,i,s,1,o,u,l),h=XB(n.data.get(a.dataId).values,a.shape,a.dtype,og(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW={kernelName:oy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;OM([a,i],"maxPool3DGrad");const c=Pk(i.shape,s,o,1,u,l),h=function(e,t){const n=ck(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let v=0;v<t.outDepth;++v){const y=v*r-d;let b=y;for(;b<0;)b+=s;const x=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*i-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<x;t+=s){const n=t-y;for(let r=d;r<w;r+=o){const a=r-l;for(let i=k;i<I;i+=u){const s=i-p,o=e.get(m,t,r,i,g);o>=C&&(C=o,S=n*c*h+a*c+s)}}}n.set(S,m,v,r,a,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,v=c.dilationWidth,y=c.effectiveFilterDepth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=x-1-c.padInfo.left,I=b-1-c.padInfo.top,C=ck(i.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const i=n-w,s=r-I,o=a-k;let u=0;for(let n=0;n<y;n+=m){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){const i=(s+a)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let s=0;s<x;s+=v){const l=(o+s)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=y*b*x-1-h.get(e,r,i,l,t)===n*b*x+a*x+s?1:0;if(0===d)continue;u+=S.get(e,r,i,l,t)*d}}}C.set(u,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW={kernelName:iy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;OM([i,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Lk(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=ck(d.outShape,o.dtype,KB(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,v=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,k=b-1-d.padInfo.top,I=ck(o.shape,"float32"),C=n.data.get(a.dataId).values,S=ck(a.shape,"float32",C);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-k,i=r-w;let s=0;for(let n=0;n<b;n+=v){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=y){const o=(i+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;if(0===u)continue;s+=S.get(e,r,o,t)*u}}I.set(s,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const AW={kernelName:uy,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;OM(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Lk(r.shape,a,i,[1,1],s),[h,d]=function(e,t,n,r,a){const i=qB(e,0,n,og(t),a,"max"),s=KB(e,t,n,a,!0,r);return[i.values,s.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DW={kernelName:ly,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=Ym(i,a.shape),u=Um(qI(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=XM({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=Hz({inputs:{a:h,b:c},backend:n});l.push(d);const p=Mz({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={kernelName:cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;OM(a,"min");const o=Ym(i,a.shape);let u=o;const l=YI(u,a.shape.length);let c=a;null!=l&&(c=cP({inputs:{x:a},backend:n,attrs:{perm:l}}),u=JI(u.length,a.shape.length)),XI("min",u,c.shape.length);const[h,d]=qI(c.shape,u),p=Um(d),f=hg(Um(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=kB({inputs:{x:g},backend:n,attrs:{shape:KI(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:dy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,mode:s}=r;OM(a,"mirrorPad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),l=i.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===s?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=og(a.shape),f=Um(o),m=o.length,g=og(o),v=Jm(a.dtype,f);for(let e=0;e<f;e++){let t=mg(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=fg(t,d,p);v[e]=h[n]}return{dataId:n.write(v,o,a.dtype),shape:o,dtype:a.dtype}}},$W=zM(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),OW=QM(py,$W),MW={kernelName:py,backendName:"cpu",kernelFunc:OW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LW(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=a.shape.length;let o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);const u=Ym([o],a.shape),l=CW({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=KI(l.shape,u),h=kB({inputs:{x:l},backend:n,attrs:{shape:c}}),d=nB({inputs:{a:a,b:h},backend:n}),p=yL({inputs:{x:d},backend:n}),f=Mz({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=kB({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Hz({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const PW={kernelName:ib,backendName:"cpu",kernelFunc:LW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW={kernelName:fy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r;OM(a,"multinomial");const u=o?a:LW({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=hg(Um(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=bS.alea(s.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},zW=RN;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW={kernelName:yy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r;OM(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=zW(l,c,s,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},VW=AN;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW={kernelName:by,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;OM(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=VW(c,h,s,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},GW=DN;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW={kernelName:xy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;OM(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=s,p=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=GW(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jW={kernelName:ky,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=r;OM(a,"oneHot");const l=Um(a.shape),c=new Float32Array(l*s);c.fill(u);const h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(c[e*s+h[e]]=o);return n.makeTensorInfo([...a.shape,s],i,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qW(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=jM({inputs:{input:r},backend:n}),t=qW({inputs:{x:e},backend:n}),a=oz({inputs:{input:r},backend:n}),i=qW({inputs:{x:a},backend:n}),s=WM({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return Qz({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const KW={kernelName:Eb,backendName:"cpu",kernelFunc:qW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW={kernelName:wy,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=jM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=oz({inputs:{input:a},backend:r}),s=qW({inputs:{x:i},backend:r}),o=WM({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return Qz({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YW(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Vz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{Wm(i,e.shape,"All tensors passed to stack must have matching shapes"),zm(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=Vz({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),l=lz({inputs:u,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const QW={kernelName:Iy,backendName:"cpu",kernelFunc:YW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW={kernelName:Cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;OM(a,"pad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),l=n.data.get(a.dataId).values,c=Um(a.shape),h=a.shape.length,d=og(a.shape),p=Um(o),f=o.length,m=og(o),g=Jm(a.dtype,p);0!==s&&g.fill(s);for(let e=0;e<c;e++){const t=mg(e,h,d).map(((e,t)=>e+u[t]));g[fg(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},ZW=zM(((e,t)=>Math.pow(e,t))),eV=QM(Sy,ZW),tV={kernelName:Sy,backendName:"cpu",kernelFunc:eV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV={kernelName:Ey,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,o=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),l=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,[h,d,p]=vP(o,u,l,i.shape,i.dtype,c,s.shape),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(p,i.dtype,d);return f.concat([m])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV={kernelName:Ry,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:i}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=bP(s,r.shape,r.dtype,o,a.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aV={kernelName:Ay,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=CP(l,a.shape,c,i.shape,i.dtype,h,s.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iV={kernelName:Dy,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:i,step:s}=n,o=SP(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},sV=uL(_y,(e=>1/e)),oV={kernelName:_y,backendName:"cpu",kernelFunc:sV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uV={kernelName:Py,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;OM(a,"resizeBilinear");const u=og(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Um([h,l,c,f])),v=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c];let b=0;const x=v[0]/y[0],w=v[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=s?x*(t+.5)-.5:x*t;const r=Math.max(0,Math.floor(n)),a=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+i*u[1];for(let e=0;e<c;e++){let t;t=s?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+i*u[2],v=l+i*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],i=t+(m[d+e]-t)*r,s=i+(n+(m[v+e]-n)*r-i)*a;g[b++]=s}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV={kernelName:By,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;OM([i,a],"resizeBilinearGrad");const o=og(a.shape),[u,l,c,h]=a.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),m=[s&&d>1?l-1:l,s&&p>1?c-1:c],g=[s&&d>1?d-1:d,s&&p>1?p-1:p],v=m[0]/g[0],y=m[1]/g[1],b=n.data.get(i.dataId).values;let x=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),i=t+r*o[1],s=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=i+n*o[2],m=i+r*o[2],g=s+n*o[2],v=s+r*o[2],w=d*l,k=d*a,I=u*l,C=u*a;for(let e=0;e<h;e++){const t=b[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[v+e]+=t*C}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV={kernelName:My,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;OM(a,"resizeNearestNeighbor");const u=og(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),v=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c],b=v[0]/y[0],x=v[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=s?b*(e+.5):b*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));s&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=s?x*(e+.5):x*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hV={kernelName:Ly,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;OM([i,a],"resizeNearestNeighborGrad");const o=og(a.shape),u=og(i.shape),[l,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=n.data.get(i.dataId).values,v=[s&&p>1?c-1:c,s&&f>1?h-1:h],y=[s&&p>1?p-1:p,s&&f>1?f-1:f],b=v[0]/y[0],x=v[1]/y[1],w=1/b,k=1/x,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],l=Math.floor(r*k),v=Math.floor(l-C/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const l=i+a;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*b;if(e===Math.min(c-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+v;if(t<0||t>=f)continue;const a=d+t*u[2],i=t*x;r===Math.min(h-1,s?Math.round(i):Math.floor(i))&&(o+=g[a+n])}}m[i+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV={kernelName:Wy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r;OM(a,"reverse");const s=a.shape.length,o=Ym(i,a.shape);if(0===s)return GM({inputs:{x:a},backend:n});const u=new jx(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},pV={kernelName:Ab,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=Jm(r.dtype,Um(r.shape)),[l,c,h,d]=r.shape,[p,f]=XT(s,c,h),m=Math.sin(a),g=Math.cos(a),v=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const a=r*d;for(let s=0;s<d;s++){const o=[l,e,r,s],y=o[2],b=o[1];let x=(y-p)*g-(b-f)*m,w=(y-p)*m+(b-f)*g;x=Math.round(x+p),w=Math.round(w+f);let k=i;if("number"!=typeof i&&(k=3===s?255:i[s]),x>=0&&x<h&&w>=0&&w<c){k=v[t+w*(h*d)+x*d+s]}u[t+n+a+s]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},fV=uL(Vy,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),mV={kernelName:Vy,backendName:"cpu",kernelFunc:fV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV={kernelName:Gy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=nN(0,a,s),d=RP(n.bufferSync(a),n.bufferSync(i),s,h,l,u,o,c,0,!0);return n.makeTensorInfo(s,d.dtype,d.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function yV(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const bV={kernelName:jy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:s}=r,o=function(e,t,n,r,a,i){const s=Zm("int32",n*a);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*a;for(let e=0;e<a;++e)s[u+e]="left"===i?vV(n,t[e+u]):yV(n,t[e+u])}return s}(n.data.get(a.dataId).values,n.data.get(i.dataId).values,a.shape[0],a.shape[1],i.shape[1],s);return n.makeTensorInfo(i.shape,"int32",o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV={kernelName:qy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t;OM([r,a,i],"select");const s=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,c=aw(a.dtype,i.dtype),h=hg(Um(a.shape),c);let d=0;const p=0===s||s>1||1===a.shape.length?1:Um(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},wV=uL(Ky,(e=>e>=0?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1))),kV={kernelName:Ky,backendName:"cpu",kernelFunc:wV},IV=uL(Jy,(e=>e<0?-1:e>0?1:0)),CV={kernelName:Jy,backendName:"cpu",kernelFunc:IV},SV=uL(Yy,(e=>Math.sin(e))),NV={kernelName:Yy,backendName:"cpu",kernelFunc:SV},TV=uL(Qy,(e=>Math.sinh(e))),EV={kernelName:Qy,backendName:"cpu",kernelFunc:TV},RV=Math.log(1.1920928955078125e-7)+2,AV=uL(eb,(e=>{const t=e>-RV,n=e<RV,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),DV={kernelName:eb,backendName:"cpu",kernelFunc:AV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FV={kernelName:rb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;OM([a],"spaceToBatchND");const o=Um(i),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const l=JW.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=YT(l.shape,i,o,!1),h=QT(c.length,i.length,!1),d=JT(l.shape,i,o,!1),p=kB({inputs:{x:l},backend:n,attrs:{shape:c}}),f=cP({inputs:{x:p},backend:n,attrs:{perm:h}}),m=kB({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V={kernelName:sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values[0],[h,d,p,f,m]=MP(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $V={kernelName:ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=LP(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV={kernelName:ub,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=PP(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV={kernelName:lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=PP(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LV={kernelName:cb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=nN(0,a,o),p=!1,f=n.bufferSync(a);let m;switch(i.dtype){case"bool":m=RP(f,n.bufferSync(i),o,d,c,l,u,h,Boolean(n.data.get(s.dataId).values[0]),p);break;case"float32":m=RP(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(s.dataId).values[0],p);break;case"int32":m=RP(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(s.dataId).values[0],p);break;case"string":m=RP(f,n.bufferSync(i),o,d,c,l,u,h,Fx(n.data.get(s.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV={kernelName:ab,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=Ym(s,a.shape)[0],u=TE(a,i,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=$P({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},BV={kernelName:db,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;OM(n,"square");const a=r.data.get(n.dataId).values,i=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},zV=uL(Rb,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),WV={kernelName:Rb,backendName:"cpu",kernelFunc:zV};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VV={kernelName:fb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;OM(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:v,begin:y,end:b,strides:x}=$T(a.shape,i,s,o,u,l,c,h,d);let w;if(m)w=kB({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||v){zm(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=kT(y,b,x),t=$P({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=kB({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=KP(p,n.bufferSync(a),x,y);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UV={kernelName:mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=YP(d,p,a,i,s,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:gb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values[0],[l,c,h]=JP(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV={kernelName:vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=ZP(n.data.get(i.dataId).values,a);return n.makeTensorInfo(i.shape,"int32",s)}},jV=uL(bb,(e=>Math.tan(e))),qV={kernelName:bb,backendName:"cpu",kernelFunc:jV},KV=uL(xb,(e=>Math.tanh(e)));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XV={kernelName:Hy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:i}=t,{sliceRank:s,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=nN(0,a,r.shape),h=n.bufferSync(a),d=n.bufferSync(i),p=n.bufferSync(r),f=RP(h,d,r.shape,c,u,o,s,l,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YV={kernelName:wb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;OM(a,"tile");const s=aB(n.bufferSync(a),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV={kernelName:kb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r;OM(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=oB(o,a.shape,a.dtype,i,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV={kernelName:Ib,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],v=og(a.shape),y=v[0],b=v[1],x=v[2],w=og(g),k=w[0],I=w[1],C=w[2],S=Jm(a.dtype,Um(g));S.fill(u);const N=r.data.get(a.dataId).values,T=r.data.get(i.dataId).values;for(let e=0;e<c;++e){const t=1===i.shape[0]?T:T.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let i;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=ZV(c,d,o),m=ZV(p,h,o);switch(s){case"nearest":i=tU(N,h,d,y,b,x,e,m,f,a,u);break;case"bilinear":i=nU(N,h,d,y,b,x,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}S[e*k+n*I+r*C+a]=i}return r.makeTensorInfo(g,a.dtype,S)}return{dataId:r.write(S,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function ZV(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Lm(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Lm(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Lm(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function eU(e,t,n,r,a,i,s,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[s*r+o*a+u*i+l]:c}function tU(e,t,n,r,a,i,s,o,u,l,c){return eU(e,t,n,r,a,i,s,Math.round(o),Math.round(u),l,c)}function nU(e,t,n,r,a,i,s,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*eU(e,t,n,r,a,i,s,h,d,l,c)+(u-d)*eU(e,t,n,r,a,i,s,h,f,l,c))+(o-h)*((f-u)*eU(e,t,n,r,a,i,s,p,d,l,c)+(u-d)*eU(e,t,n,r,a,i,s,p,f,l,c))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU={kernelName:Sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;OM(i,"unique");const s=r.data.get(i.dataId).values,{outputValues:o,outputShape:u,indices:l}=uB(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU={kernelName:Nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a.shape.length,o=a.shape[i],u=new Array(s-1);let l=0;for(let e=0;e<s;e++)e!==i&&(u[l++]=a.shape[e]);const c=new Array(s).fill(0),h=a.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=$P({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[e]=kB({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU={kernelName:Tb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r;OM(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-i.shape.length;let c=i;for(let e=0;e<l;++e){const t=Vz({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<s;++e){const t=Ex(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=mL({inputs:{a:r,b:c},backend:n}),s=XM({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),l=nP({inputs:{a:s,b:a},backend:n}),h=Mz({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(i),u.push(s),u.push(l),u.push(h)}const h=YW({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},sU=[NB,BM,EB,AB,nL,DB,FB,_B,$B,OB,LB,BB,WB,GB,jB,YB,QB,JB,ZB,SB,ez,tz,nz,sL,rz,YM,dL,iz,VM,sz,cz,dz,pz,fz,mz,gz,vz,bz,wz,kz,Iz,Cz,Sz,Nz,Ez,Rz,Az,Dz,Fz,_z,$z,Oz,Pz,hB,Bz,gL,Wz,bL,Uz,kL,Yz,Jz,Zz,SL,EL,eW,tW,nW,rW,_L,ML,HM,aW,uz,sW,uW,cW,pB,BL,VL,hW,jL,pW,gW,yW,wW,kW,IW,SW,YL,NW,TW,EW,RW,AW,DW,FW,ZL,_W,MW,BW,rP,iP,WW,UW,HW,uP,jW,XW,QW,JW,tV,gB,pP,nV,rV,aV,iV,qM,jz,oV,yB,xB,IB,uV,lV,cV,hV,dV,pV,mV,EP,gV,bV,xV,kV,FP,CV,NV,EV,OP,PW,DV,FV,_V,$V,OV,MV,LV,PV,WP,BV,GP,qP,WV,VV,UV,GV,HV,rB,Lz,qV,{kernelName:xb,backendName:"cpu",kernelFunc:KV},XV,YV,QV,JV,hP,rU,aU,iU,KW];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of sU)zb(e);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU={},uU={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function lU(e,t){if(!(e in oU)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(xg().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete oU[e]}),!1),xg().getBool("SOFTWARE_WEBGL_ENABLED")&&(uU.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",uU)||n.getContext("experimental-webgl",uU);return n.getContext("webgl2",uU)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;oU[e]=n}const n=oU[e];return null==n||n.isContextLost()?(delete oU[e],lU(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),oU[e])}var cU,hU,dU;function pU(e,t){return[t,e]}function fU(e){const t=Um(e);return jm(Math.ceil(t/4))}function mU(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function gU(e,t){const n=e;let r,a,i,s,o,u,l,c,h,d;return 2===xg().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,s=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,i=e.RGBA,s=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(e,t){const n=t();return xg().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(cU||(cU={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(hU||(hU={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(dU||(dU={}));function yU(e){return!!(xg().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function bU(e,t){return EU(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const xU=/ERROR: [0-9]+:([0-9]+):/g;function wU(e,t){const n=xU.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map(((e,t)=>qm((t+1).toString(),i)+e));let o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);const u=s.slice(0,r-1),l=s.slice(r-1,r),c=s.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${qm(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function kU(e,t){if(vU(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function IU(e,t,n,r,a,i,s){const o=e.getAttribLocation(t,n);return-1!==o&&(vU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),vU(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,i,s))),vU(e,(()=>e.enableVertexAttribArray(o))),!0)}function CU(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(e,n),vU(e,(()=>e.activeTexture(e.TEXTURE0+n))),vU(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function SU(e,t,n){vU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),vU(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function NU(e,t){vU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),vU(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function TU(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function EU(e,t,n){const r=vU(e,(()=>t()));if(null==r)throw new Error(n);return r}function RU(e,t=2){return Um(e.slice(0,e.length-t))}function AU(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function DU(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[RU(e),...AU(e)]),t}function FU(e){return e%2==0}function _U(e,t){if(Gm(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(FU(n)&&FU(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&FU(e[0])&&FU(t[0])}let $U,OU;function MU(e,t){return null!=e.getExtension(t)}function LU(e){try{if(null!=lU(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function PU(e){if(0===e)return!1;const t=lU(e);if(1!==e){if(MU(t,"EXT_color_buffer_float"))return BU(t);const e="EXT_color_buffer_half_float";if(MU(t,e)){const n=t.getExtension(e);return function(e,t){const n=gU(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),o}(t,n)}return!1}if(!MU(t,"OES_texture_float"))return!1;if(!MU(t,"WEBGL_color_buffer_float"))return!1;return BU(t)}function BU(e){const t=gU(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function zU(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&zm("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU=xg();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VU(){let e,t,n,r,a,i,s,o,u,l;return 2===xg().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o=xg().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(e,t,n="index"){const r=og(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function GU(e,t,n="index"){const r=og(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function HU(e,t,n="index"){const r=e.map(((e,t)=>t)),a=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(r,t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${a[r]}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}function jU(e){const t=og(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}WU.registerFlag("HAS_WEBGL",(()=>WU.getNumber("WEBGL_VERSION")>0)),WU.registerFlag("WEBGL_VERSION",(()=>LU(2)?2:LU(1)?1:0)),WU.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),WU.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===WU.get("WEBGL_VERSION"))),WU.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),WU.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),WU.registerFlag("WEBGL_PACK",(()=>WU.getBool("HAS_WEBGL"))),WU.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_CLIP",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_REDUCE",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_LAZILY_UNPACK",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_CONV_IM2COL",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>WU.getBool("WEBGL_PACK"))),WU.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==$U){const t=lU(e);$U=t.getParameter(t.MAX_TEXTURE_SIZE)}return $U}(WU.getNumber("WEBGL_VERSION")))),WU.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==OU){const t=lU(e);OU=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,OU)}(WU.getNumber("WEBGL_VERSION")))),WU.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=WU.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=lU(e);return t=MU(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:MU(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),WU.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>WU.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!vw())),WU.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=lU(e);if(1===e){if(!MU(t,"OES_texture_float"))return!1}else if(!MU(t,"EXT_color_buffer_float"))return!1;return BU(t)}(WU.getNumber("WEBGL_VERSION")))),WU.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!WU.getBool("WEBGL_FORCE_F16_TEXTURES")&&WU.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),WU.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>PU(WU.getNumber("WEBGL_VERSION")))),WU.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=WU.getNumber("WEBGL_VERSION"))&&null!=lU(e).fenceSync;var e})),WU.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>WU.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),WU.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),WU.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>vw()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),WU.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),WU.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),WU.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),WU.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),WU.registerFlag("WEBGL_EXP_CONV",(()=>!1)),WU.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>WU.getBool("IS_TEST"))),WU.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),WU.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),WU.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),WU.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const qU="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:KU}=jE;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(e,t,n){const r=[];if(e.forEach((e=>{const t=Um(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=sG(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?QU(e,r):YU(e,r);const i=e.shapeInfo.logicalShape,s=t.logicalShape;i.length<=s.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=KU(e.shapeInfo.logicalShape,t.logicalShape),u=iG(s),l=s-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":s<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===Um(e.shapeInfo.logicalShape),m=Um(t.logicalShape),g=1===m;if(1!==i||f||g){if(f&&!g)p=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&Gm(s,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=iG(u),c=KU(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,o=VU(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${JU}\n    ${ZU}\n    ${eG}\n  `;return t}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return nG();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Gm(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),i=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),i=a*Math.ceil(e[e.length-2]/2);let s=i,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return nG();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(Gm(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${GU(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=UU(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${GU(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=UU(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=UU(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=UU(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=tG);return[h,u,c,a,l,i,n.userCode].join("\n")}function YU(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,i]=e.shapeInfo.texShape;if(1===a&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=rG(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${aG(e)}\n      }\n    `;const a=e.shapeInfo.texShape,i=a[0],s=a[1];if(1===s&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=rG(n);if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&Gm(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=Qm(n),u=s;if(u.length<n.length){const n=["row","col"];return`\n      ${YU(oG(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${uG(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${aG(e)}\n      }\n    `;const l=i[0],c=i[1],h=rG(r);if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],s=n[2],{newShape:o,keptDims:u}=Qm(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${YU(oG(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${uG(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${aG(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=rG(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],s=n[2]*i,o=n[1]*s,{newShape:u,keptDims:l}=Qm(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${YU(oG(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${uG(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${i}, 1)));\n        ${aG(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const v=rG(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,{newShape:u,keptDims:l}=Qm(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${YU(oG(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${uG(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${i}, ${a})) +\n          depth3;\n        ${aG(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=rG(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=Qm(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${YU(oG(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${uG(t,i)});\n      }\n    `}const s=t[5],o=t[4]*s,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${aG(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=rG(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function QU(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=VU();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=VU();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],u=VU();if(null!=i&&Gm(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${QU(oG(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${uG(i,r)});\n        }\n      `}const o=VU();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=s[0],l=s[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=VU();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[s-1]/2);let d=h*Math.ceil(i[s-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<s-1;e++)p=`int b${e}, `+p,d*=i[s-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const JU="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ZU="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",eG="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tG="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function nG(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function rG(e){return`offset${e}`}function aG(e){const t=e.name,n=Um(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function iG(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function sG(e,t,n){const{newShape:r,keptDims:a}=Qm(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):r,u=!e&&i>1&&!Gm(t,n)&&r.length<i||s;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function oG(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uG(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=XU(a,s,t),u=function(e,t){const n=EU(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(vU(e,(()=>e.shaderSource(n,t))),vU(e,(()=>e.compileShader(n))),xg().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw wU(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return xg().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s},cG(e,t,l)))}function cG(e,t,n){const r=[],a=[];let i,s,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===xg().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const a of t.variableNames){const i={name:a,uniform:e.getUniformLocation(n,a,c),offset:e.getUniformLocation(n,`offset${a}`,c)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${a}Shape`,c),i.texShape=e.getUniformLocation(n,`${a}TexShape`,c)),r.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),s=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:l,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:s}}function hG(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],i=a.shape;if(!Gm(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Gm(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function dG(e){return xg().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pG{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=cU.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VU();this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?GU(["r","c","d"],e):UU(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fG{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=cU.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=VU();this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?GU(["r","c","d"],e):UU(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mG{constructor(e){this.variableNames=["A"],this.outTexUsage=hU.DOWNLOAD;const t=VU();this.outputShape=e,this.userCode=`\n      ${qU}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gG{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=hU.DOWNLOAD;const t=VU();this.outputShape=e,this.userCode=`\n      ${qU}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG={R:0,G:1,B:2,A:3};class yG{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=VU();this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${vG[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":jU(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bG{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=VU();this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const i=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":jU(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(e){const t=VU();return function(e,t){const n=EU(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(vU(e,(()=>e.shaderSource(n,t))),vU(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function wG(e){return function(e,t){const n=EU(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return vU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),vU(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function kG(e){return function(e,t){const n=EU(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return vU(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),vU(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function IG(e,t,n,r,a,i){!function(e,t){const n=xg().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return EU(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return vU(e,(()=>e.bindTexture(o,s))),vU(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),vU(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),vU(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),vU(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===xg().getNumber("WEBGL_VERSION")?vU(e,(()=>e.texImage2D(o,0,r,t,n,0,a,i,null))):vU(e,(()=>e.texStorage2D(o,1,r,t,n))),vU(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function CG(e){return e.internalFormatFloat}function SG(e){return e.internalFormatHalfFloat}function NG(e){return e.downloadTextureFormat}function TG(e){return e.internalFormatPackedFloat}function EG(e){return e.internalFormatPackedHalfFloat}function RG(e,t,n,r,a,i,s,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=mU(e,t);return n*r*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AG{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=xg().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){oU[e]=t}(t,e)):this.gl=lU(t),e=this.gl,2===xg().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>vU(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>vU(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>vU(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>vU(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>vU(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>vU(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>vU(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>vU(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===xg().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=bU(this.gl,e),MU(this.gl,t))this.textureHalfFloatExtension=bU(this.gl,t);else if(xg().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),MU(this.gl,r))this.colorBufferHalfFloatExtension=bU(this.gl,r);else if(xg().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",MU(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!MU(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=wG(this.gl),this.indexBuffer=kG(this.gl),this.framebuffer=function(e){return EU(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=gU(this.gl,this.textureHalfFloatExtension)}get debug(){return xg().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;vU(e,(()=>e.finish())),vU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),vU(e,(()=>e.deleteFramebuffer(this.framebuffer))),vU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),vU(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),vU(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=pU(t,n);return IG(e,a,i,CG(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=pU(t,n);return IG(e,a,i,SG(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=pU(t,n);return IG(e,a,i,NG(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){vU(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===xg().getNumber("WEBGL_VERSION")?vU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):vU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===xg().getNumber("WEBGL_VERSION")?vU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):vU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),vU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,i){let s,o,u;vU(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),o=e.FLOAT,u=i.internalFormatPackedFloat),s.set(a),2===xg().getNumber("WEBGL_VERSION")?vU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,s))):vU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,s))),vU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=mU(t,n);return IG(e,a,i,EG(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=mU(t,n);return IG(e,a,i,TG(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(NU(this.gl,this.framebuffer),this.outputTexture=null),vU(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,i]=pU(t,n),s=new Uint8Array(t*n*4);return vU(e,(()=>e.readPixels(0,0,a,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,i){return RG(this.gl,e,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();vU(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const i=16*t*n;return vU(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),vU(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),vU(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(xg().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return vU(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=xG(t));const n=function(e){return EU(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);vU(t,(()=>t.attachShader(n,this.vertexShader))),vU(t,(()=>t.attachShader(n,e))),function(e,t){if(vU(e,(()=>e.linkProgram(t))),!xg().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&kU(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;vU(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){vU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),IU(e,t,"clipSpacePos",n,3,20,0)&&IU(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(vU(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&kU(this.gl,this.program),vU(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return EU(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),vU(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){vU(e,(()=>CU(e,t,r))),vU(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=mU(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&kU(this.gl,this.program),TU(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}vU(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),vU(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=bU(this.gl,2===xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Km((()=>this.disposed||this.isQueryAvailable(e,xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in xg().platform&&(n=xg().platform.setTimeoutCustom.bind(xg().platform)),Km((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),SU(this.gl,e,this.framebuffer),this.debug&&TU(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(SU(this.gl,this.outputTexture,this.framebuffer),this.debug&&TU(this.gl)):NU(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;SU(r,e,this.framebuffer),this.debug&&TU(r),this.outputTexture=e,vU(r,(()=>r.viewport(0,0,t,n))),vU(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),vU(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:DG,bincountImpl:FG,bincountReduceImpl:_G,bitwiseAndImpl:$G,castImpl:OG,ceilImpl:MG,concatImpl:LG,equalImpl:PG,expImpl:BG,expm1Impl:zG,floorImpl:WG,gatherNdImpl:VG,gatherV2Impl:UG,greaterImpl:GG,greaterEqualImpl:HG,lessImpl:jG,lessEqualImpl:qG,linSpaceImpl:KG,logImpl:XG,maxImpl:YG,maximumImpl:QG,minimumImpl:JG,multiplyImpl:ZG,negImpl:eH,notEqualImpl:tH,prodImpl:nH,raggedGatherImpl:rH,raggedRangeImpl:aH,raggedTensorToTensorImpl:iH,rangeImpl:sH,rsqrtImpl:oH,scatterImpl:uH,sigmoidImpl:lH,simpleAbsImpl:cH,sliceImpl:hH,sparseFillEmptyRowsImpl:dH,sparseReshapeImpl:pH,sparseSegmentReductionImpl:fH,sqrtImpl:mH,staticRegexReplaceImpl:gH,stridedSliceImpl:vH,stringNGramsImpl:yH,stringSplitImpl:bH,stringToHashBucketFastImpl:xH,subImpl:wH,tileImpl:kH,topKImpl:IH,transposeImpl:CH,uniqueImpl:SH}=lB;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function TH(e,t){return 1===t?[e]:NH(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EH{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=dG(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=TH("rc",this.rank),t=iG(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?HU(["r","c","d"],"inputShape"):UU(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":jU(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class AH{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=FH(t,n),a=_H(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=DH(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let s;return r===dU.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===dU.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===dU.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===dU.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===dU.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=FH(n,r),i=_H(t,a,r);i in this.freeTextures||(this.freeTextures[i]=[]);const s=DH(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=xg().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const u=this.usedTextures[i],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function DH(e,t,n,r,a){const i=function(e,t){switch(e){case dU.PACKED_2X2_FLOAT32:return TG(t);case dU.PACKED_2X2_FLOAT16:return EG(t);case dU.UNPACKED_FLOAT32:return CG(t);case dU.UNPACKED_FLOAT16:return SG(t);case dU.PACKED_4X1_UNSIGNED_BYTE:return NG(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(a){const[t,n]=mU(e[0],e[1]);s=t*n}else{const[t,n]=pU(e[0],e[1]);s=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function FH(e,t){if(e===hU.UPLOAD)return dU.PACKED_2X2_FLOAT32;if(e===hU.RENDER||null==e)return function(e){return xg().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?dU.PACKED_2X2_FLOAT32:dU.UNPACKED_FLOAT32:e?dU.PACKED_2X2_FLOAT16:dU.UNPACKED_FLOAT16}(t);if(e===hU.DOWNLOAD||e===hU.PIXELS)return dU.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _H(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $H{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const OH="if (isnan(x)) return x;",MH="return x;",LH="return abs(x);",PH="return (x >= 0.0) ? x : (exp(x) - 1.0);",BH=OH+"\n  return (x < 0.0) ? 0.0 : x;\n",zH=OH+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",WH="return x;",VH="return 1.0 / (1.0 + exp(-1.0 * x));",UH="return x;",GH="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",HH="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",jH="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",qH="return 1.0 / (1.0 + exp(-1.0 * x));";class KH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length);const t=e.length,n=TH("rc",t),r=iG(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH=uN,QH={};const JH=xg().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class ZH extends $m{nextDataId(){return ZH.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!xg().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof AG)t=e;else{const n=lU(xg().getNumber("WEBGL_VERSION"),e);t=new AG(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=lU(xg().getNumber("WEBGL_VERSION"));t=new AG(e),this.binaryCache=((n=xg().getNumber("WEBGL_VERSION"))in QH||(QH[n]={}),QH[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new AH(this.gpgpu),this.numMBBeforeWarning=null==xg().global.screen?1024:xg().global.screen.height*xg().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new _m(this,fk())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,i){const s=this.makeTensorInfo(t,n),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];const u=DU(t),l=new yG(u,!1,i),c=this.runWebGLProgram(l,[s],n,[[r,a]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),c.dataId}write(e,t,n){if((xg().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||xg().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:hU.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(xg().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:hU.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:i,shape:s,isPacked:o}=t;if(null!=i){let t;t=o?new KH(s,WH):new $H(s,WH);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=Ax()),"complex64"===r){c=lE(this.readSync(a.real.dataId),this.readSync(a.imag.dataId))}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Ax()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:i,complexTensorInfos:s,isPacked:o}=t;if(null!=a){let t;t=o?new KH(r,WH):new $H(r,WH);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(xg().getBool("DEBUG")&&!xg().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===xg().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&xg().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...fU(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);l=lE(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=Um(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;vU(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&fk().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:i,dtype:s,isPacked:o,texture:u}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new KH(a,WH):new $H(a,WH);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:s}],s),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=fk().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Fx(e)));return ck(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ck(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!yU(n)){if(xg().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Um(t);if(xg().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...fU(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),i}const i=xg().getBool("WEBGL_PACK")&&!0===r,s=i?DU(t):t,o=i?new gG(s):new mG(s),u=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=$x(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=$x(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);s.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ax(),endMs:null}}endTimer(e){return xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ax(),e)}async getQueryTime(e){if(xg().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,i)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=JH){return xg().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Um(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){$b("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return YH(e.shape,t)}packedUnaryOp(e,t,n){const r=new KH(e.shape,t),a=this.compileAndRun(r,[e],n);return fk().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=cH(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(xg().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,LH,e.dtype);const t=new $H(e.shape,LH),n=this.compileAndRun(t,[e]);return fk().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&ng(n[0])){const a=n.map((e=>Dx(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return fk().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new XH(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new EH(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[RU(e.shape),...AU(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[RU(t),...AU(t)],i=new RH(a,n),s=[n],o=this.runWebGLProgram(i,[r],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:i}=n;if(null!=t){zm(Um(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=DU(a);let o;o=r?new fG(s):new pG(s);const u=[null!=t?t:fU(s)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(o,[{shape:s,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,i){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===cU.DENSE){const t=null!=i?i:fU(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Um(s.shape))return o.values=Jm(s.dtype,0),s;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Um(t.shape)<=xg().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!_U(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:u}=sG(e.packedInputs,t.shape,i);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=og(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&Gm(t.shape,i),f=1===Um(t.shape),m=$I(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Gm(i,n.texData.texShape),v=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${s?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${v}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+a+`${xg().getNumber("WEBGL_VERSION")}`,i}(e,l,c),d=this.getAndSaveBinary(h,(()=>lG(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),xg().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(hG(t.inShapeInfos,n),hG([t.outShapeInfo],[r]));const i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===xg().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const a=n[r],{uniform:i,offset:s,shape:o,texShape:u}=t.variablesLocations[r];if(o){const{uniformShape:n}=sG(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,a.texData.texShape[0],a.texData.texShape[1]),null!=i)if(a.isUniform)if(Um(a.shape)<2)e.gl.uniform1f(i,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,i,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=og(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],i=t.customUniformLocations[n],s=a[n];if("float"===r.type)e.gl.uniform1fv(i,s);else if("vec2"===r.type)e.gl.uniform2fv(i,s);else if("vec3"===r.type)e.gl.uniform3fv(i,s);else if("vec4"===r.type)e.gl.uniform4fv(i,s);else if("int"===r.type)e.gl.uniform1iv(i,s);else if("ivec2"===r.type)e.gl.uniform2iv(i,s);else if("ivec3"===r.type)e.gl.uniform3iv(i,s);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(i,s)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=xg().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Ax();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!xg().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!xg().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=gk((()=>{if(!xg().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=xg().getBool("DEBUG");xg().set("DEBUG",!1);const t=this.abs(nC(1e-8)).dataSync()[0];if(xg().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:i,usage:s,isPacked:o}=t;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=Ax());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=xg().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=xg().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&xg().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?Pm(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=Qm(e);e=t.newShape}let a=Um(e),i=null;e.length<=1&&a<=n?i=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const s=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s)if(t){const t=RU(e);let n=2,r=2;e.length&&([n,r]=AU(e)),a=t*(n/2)*(r/2),i=jm(a).map((e=>2*e))}else i=jm(a);return i}(n,o),t.texShape=c),null!=a){const e=DU(n);let i,s=c[1],h=c[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&d||([s,h]=mU(c[0],c[1])),i=o?new bG(e,d):new yG(e,d);const p=d?[h,s]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?hU.PIXELS:hU.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,h,a);const g=[[h,s]],v=!0,y=this.runWebGLProgram(i,[f],r,g,v),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,xg().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Ax()-l)}else{const e=this.acquireTexture(c,s,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. */(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*tg(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await BT(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw wU(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=cG(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:i,channels:s}=e,o=fk().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,a,i,s);return fk().makeTensorFromDataId(u,t,n,o)}}ZH.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
yw()&&bk("webgl",(()=>new ZH),2)
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;const ej="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class tj{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=MI(t,n),this.enableShapeUniforms=dG(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class rj{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=MI(t,n);const a=this.outputShape.length;this.enableShapeUniforms=dG(a);let i="";if(r)if(0===a||1===Um(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${iG(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=TH("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ij={kernelName:Bv,backendName:"webgl",kernelFunc:aj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(i.dataId),o=aj({inputs:{x:r},backend:n}),u=aj({inputs:{x:a},backend:n});return s.complexTensorInfos={real:o,imag:u},i}const oj={kernelName:Qg,backendName:"webgl",kernelFunc:sj},uj="return (a < 0.) ? b * a : a;",lj="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:Hv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,s=n.makeTensorInfo([],"float32",Ex(i,"float32")),o=xg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rj(lj,a.shape,s.shape):new tj(uj,a.shape,s.shape),u=n.runWebGLProgram(o,[a,s],"float32");return n.disposeIntermediateTensorInfo(s),u}},hj="return (a < 0.) ? b * a : a;",dj="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj={kernelName:Ny,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=xg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rj(dj,r.shape,a.shape):new tj(hj,r.shape,a.shape);return n.runWebGLProgram(i,[r,a],"float32")}},fj="if (isnan(x)) return x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mj({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:i})=>{const{x:s}=a,o=i,u=r||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){const e=o.texData.get(s.dataId),t=n(e.values,u);return o.makeTensorInfo(s.shape,u,t)}let l;return l=xg().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new KH(s.shape,t):new $H(s.shape,e),o.runWebGLProgram(l,[s],u)}}function gj({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:i}){return({inputs:s,backend:o})=>{const{a:u,b:l}=s,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},s=new tj(e,u.shape,l.shape);return c.runWebGLProgram(s,[a,i],aw(n.dtype,r.dtype))})),i=sj({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),i}const h=i||aw(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?GE(e):e,r="string"===u.dtype?GE(t):t,[i,s]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(s,h);return c.texData.get(o.dataId).values=i,o}let d;return d=xg().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new rj(t,u.shape,l.shape,n):new tj(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function vj(e,t=!1){if("linear"===e)return t?UH:MH;if("relu"===e)return t?HH:BH;if("elu"===e)return t?GH:PH;if("relu6"===e)return t?jH:zH;if("prelu"===e)return t?dj:hj;if("leakyrelu"===e)return t?lj:uj;if("sigmoid"===e)return t?qH:VH;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yj{constructor(e,t,n,r=!1,a=!1,i=!1,s=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=dG(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const v=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${b};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${v}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bj={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class xj{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=MI(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj="return a * b;";function kj(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=aw(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),i=new xj(bj.REAL,r.shape,a.shape),s=new xj(bj.IMAG,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(i,o,"float32"),l=n.runWebGLProgram(s,o,"float32"),c=sj({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,o]=ZG(r.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=s,u}let s;return s=xg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rj(wj,r.shape,a.shape):new tj(wj,r.shape,a.shape),n.runWebGLProgram(s,[r,a],i)}const Ij={kernelName:my,backendName:"webgl",kernelFunc:kj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cj(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=n,o=Um(a.shape),u=Xm(i,o),l=Um(u);zm(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=s.texData.get(a.dataId);return!c.isPacked||_U(a.shape,u)||null!==c.texture&&_U(c.shape,u)?(s.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[RU(e.shape),...AU(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},i=[RU(t),...AU(t)],s=new RH(i,r),o=[r],u=n.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,s)}const Sj={kernelName:Oy,backendName:"webgl",kernelFunc:Cj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nj{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];const s=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${Hm(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tj{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=KT(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let s=0;s<a.length;s++){const{inSize:o,windowSize:u,outSize:l}=a[s];let c,h;c="mean"===n?0===s?new Nj({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Nj({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Tj({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rj{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=iG(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Aj{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=iG(this.rank),a=NH("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=a[e];const s=`vec2(${i.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(e,t,n){const r=xg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Aj(e.shape,t):new Rj(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fj(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;return function(e,t,n,r){const a=t,i=e.shape.length,s=Ym(a,e.shape);let o=s;const u=YI(o,i),l=null!=u;let c=e;l&&(c=Dj(e,u,r),o=JI(o.length,i)),XI("sum",o,i);const[h,d]=qI(c.shape,o);let p=h;n&&(p=KI(h,s));const f=Um(d),m=Cj({inputs:{x:c},attrs:{shape:[Um(e.shape)/f,f]},backend:r}),g=Ej(m,iw(e.dtype),"sum",r),v=Cj({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),v}(a,i,s,n)}const _j={kernelName:nb,backendName:"webgl",kernelFunc:Fj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:i}=r,s=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[i[e]];let l;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,t=CH(e,a.shape,a.dtype,i,u);l=s.makeTensorInfo(u,a.dtype);s.texData.get(l.dataId).values=t}else l=Dj(a,i,s);return l}const Oj={kernelName:Cb,backendName:"webgl",kernelFunc:$j},Mj=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lj({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),v=Um(m),y=Um(g),b=MI(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);zm(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=n?[v,h,p]:[v,p,h],w=r?[y,f,d]:[y,d,f],k=Cj({inputs:{x:e},backend:a,attrs:{shape:x}}),I=Cj({inputs:{x:t},backend:a,attrs:{shape:w}}),C=[k,I],S=Math.max(v,y),N=n?k.shape[1]:k.shape[2],T=null!=i,E=null!=s,R="leakyrelu"===u,A=null!=u?vj(u,!0):null;let D;if((1===p||1===f)&&N>Mj&&!1===(T||E||R||null!=A)){let e=k,t=I;n&&(e=$j({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=$j({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));const i=1===f;let s=e;1!==f&&(s=Cj({inputs:{x:e},backend:a,attrs:{shape:[S,N,1]}}),C.push(s));const o=1===f?2:1;let u=t;i&&(u=Cj({inputs:{x:t},backend:a,attrs:{shape:[S,1,N]}}),C.push(u));const l=kj({inputs:{a:s,b:u},backend:a});D=Fj({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const u=aw(e.dtype,t.dtype),l=new yj(x,w,[S,p,f],n,r,T,A,E,R),c=[k,I];if(null!=i&&c.push(i),E&&c.push(s),R){const e=a.makeTensorInfo([],"float32",Ex(o,"float32"));c.push(e),C.push(e)}D=a.runWebGLProgram(l,c,u)}const F=Cj({inputs:{x:D},backend:a,attrs:{shape:b}});C.push(D);for(const e of C)a.disposeIntermediateTensorInfo(e);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj={kernelName:Db,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Lj({a:a,b:i,transposeA:u,transposeB:l,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Bj="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj={kernelName:Sg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=cH(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=xg().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new KH(r.shape,Bj):new $H(r.shape,Bj),n.runWebGLProgram(a,[r],r.dtype)}},Wj=mj({opSnippet:OH+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Vj={kernelName:Ng,backendName:"webgl",kernelFunc:Wj},Uj=mj({opSnippet:OH+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Gj={kernelName:Tg,backendName:"webgl",kernelFunc:Uj},Hj="return a + b;",jj=gj({opSnippet:Hj,packedOpSnippet:Hj,supportsComplex:!0,cpuKernelImpl:DG}),qj={kernelName:Eg,backendName:"webgl",kernelFunc:jj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Kj{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xj{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj={kernelName:Rg,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return aj({inputs:{x:a[0]},backend:r});if(a.length>xg().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),i=e({inputs:a.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>aw(e,t))),s=a.map((e=>e.shape)),o=xg().getBool("WEBGL_PACK")?new Xj(a[0].shape,s):new Kj(a[0].shape,s);return r.runWebGLProgram(o,a,i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj={kernelName:Ag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=Ym(i,a.shape);let l=u;const c=YI(l,o);let h=a;null!=c&&(h=$j({inputs:{x:a},backend:n,attrs:{perm:c}}),l=JI(l.length,o)),XI("all",l,o);const[d,p]=qI(h.shape,l),f=Cj({inputs:{x:h},backend:n,attrs:{shape:[-1,Um(p)]}}),m=Ej(f,f.dtype,"all",n);let g;if(s){g=Cj({inputs:{x:m},backend:n,attrs:{shape:KI(d,u)}})}else g=Cj({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj={kernelName:Dg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=Ym(i,a.shape);let l=u;const c=YI(l,o);let h=a;null!=c&&(h=$j({inputs:{x:a},backend:n,attrs:{perm:c}}),l=JI(l.length,o)),XI("any",l,o);const[d,p]=qI(h.shape,l),f=Cj({inputs:{x:h},backend:n,attrs:{shape:[-1,Um(p)]}}),m=Ej(f,f.dtype,"any",n);let g;if(s){g=Cj({inputs:{x:m},backend:n,attrs:{shape:KI(d,u)}})}else g=Cj({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zj{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eq{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,zm(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,o=s.length,u=iG(o),l=TH("coords",o);let c,h;if(1===i){h=o+1;const e=iG(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=TH("sourceLocR",h-1).concat("inIdx.r"),g=TH("sourceLocG",h-1).concat("inIdx.g"),v=TH("sourceLocB",h-1).concat("inIdx.b"),y=TH("sourceLocA",h-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${v.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${s[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${s[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(e,t,n,r=null){let a=t.shape[0],i=t.shape[1];null!=r&&(a=r.shape[0],i=r.shape[1]);const s=KT(i),o={windowSize:s,inSize:i,batchSize:a,outSize:Math.ceil(i/s)},u=new Zj(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=tq(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function nq(e,t,n,r=null){const a=null!=r?r.shape:t.shape,i=KT(a[a.length-1]),s=new eq(a,i,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(s,o,"int32");if(u.shape.length===t.shape.length){const r=nq(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function rq(e,t,n,r){const a=[n];if(XI("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!xg().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let s=t;null!==i&&i.isPacked&&(s=e.unpackTensor(t),n.push(s));const[o,u]=qI(s.shape,a),l=Um(u),c=Cj({inputs:{x:s},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=tq(e,c,r);n.push(h);const d=Cj({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return nq(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq={kernelName:Fg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=Ym(i,a.shape);const o=YI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=$j({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=JI(s.length,u.shape.length)),XI("argMax",[s[0]],u.shape.length);const c=rq(n,u,s[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq={kernelName:_g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=Ym(i,a.shape);const o=YI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=$j({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=JI(s.length,u.shape.length)),XI("argMin",[s[0]],u.shape.length);const c=rq(n,u,s[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},sq=mj({opSnippet:OH+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),oq={kernelName:$g,backendName:"webgl",kernelFunc:sq},uq=mj({opSnippet:OH+"return log(x + sqrt(x * x + 1.0));"}),lq={kernelName:Og,backendName:"webgl",kernelFunc:uq},cq=mj({opSnippet:OH+"\n  return atan(x);\n"}),hq={kernelName:Mg,backendName:"webgl",kernelFunc:cq},dq=gj({opSnippet:ej+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nj+"\n  return result;\n"}),pq={kernelName:Pg,backendName:"webgl",kernelFunc:dq},fq=mj({opSnippet:OH+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),mq={kernelName:Lg,backendName:"webgl",kernelFunc:fq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gq{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(f||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const b=4*Math.floor(i/4),x=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class vq{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${v});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(i/4),k=i%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${v});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yq={kernelName:Bg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;zU(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;zm(qk(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=Lk(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Gm(l.inShape,l.outShape))return aj({inputs:{x:a},backend:n});const c=new gq(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq={kernelName:Wg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Pk(a.shape,i,s,[1,1,1],o,u,l),h=new vq(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xq{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wq{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:Vg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Pk(s.shape,o,u,[1,1,1],l,c),d=new wq(h);return n.runWebGLProgram(d,[a],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={kernelName:zg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;zU([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Lk(s.shape,o,u,1,l),h=new xq(c);return n.runWebGLProgram(h,[a],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:Ug,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=r;return Lj({a:a,b:i,transposeA:s,transposeB:o,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sq{constructor(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],MI(e,t),MI(e,n);let s="0.0";null!=r&&(MI(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=a&&(MI(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nq{constructor(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],MI(e,t),MI(e,n);let s="vec4(0.0)";null!=r&&(MI(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(MI(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq={kernelName:$v,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:i,offset:s,scale:o}=e;zm(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),zm(null==s||a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),zm(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,i];let c=null;null!=s&&(c=s.shape,l.push(s));let h=null;null!=o&&(h=o.shape,l.push(o));const d=xg().getBool("WEBGL_PACK_NORMALIZATION")?new Nq(r.shape,a.shape,i.shape,c,h,u):new Sq(r.shape,a.shape,i.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Eq{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=iG(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Rq.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let r;const a=e.map(((e,t)=>`sourceLoc.${Rq[t]} = start[${t}] + coords.${Rq[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Rq=["x","y","z","w","u","v"];class Aq{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=iG(this.rank),n=TH("coords",this.rank),r=TH("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r,[o,u]=_T(a,i,s);if(wT(a,o,u),0===Um(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=hH(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=DT(a.shape,o,u);if(l||!c){const e=xg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Aq(u):new Eq(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),s=r.texData.get(i.dataId);Object.assign(s,a),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=FT(t,og(e.shape));a.slice&&(o+=a.slice.flatOffset),s.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(s.slice.origDataId)||1;return r.dataRefCount.set(s.slice.origDataId,u+1),i}(a,o,u,n)}const Fq={kernelName:Xy,backendName:"webgl",kernelFunc:Dq},_q={kernelName:Gg,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;zm(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=YT(a.shape,i,o),l=QT(u.length,i.length),c=JT(a.shape,i,o),h=ZT(s,i.length),d=eE(c,s,i.length),p=[],f=Cj({inputs:{x:a},backend:n,attrs:{shape:u}}),m=$j({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Cj({inputs:{x:m},backend:n,attrs:{shape:c}}),v=Dq({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q={kernelName:Hg,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=n.readSync(a.dataId),u=n.readSync(i.dataId),l=FG(o,u,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,l)}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:jg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=xg().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=xg().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===s){const e=n.texData.get(r.dataId).values,t=n.texData.get(a.dataId).values,[i,s]=$G(r.shape,a.shape,e,t,r.dtype),o=n.makeTensorInfo(s,r.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new rj("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new tj("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={kernelName:qg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.readSync(r.dataId),s=n.readSync(a.dataId),o=MI(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Lq=gj({opSnippet:"return float(a != b);",cpuKernelImpl:tH,dtype:"bool"}),Pq={kernelName:vy,backendName:"webgl",kernelFunc:Lq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bq(e){const{inputs:t,backend:n}=e,{input:r}=t;return aj({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const zq={kernelName:Fy,backendName:"webgl",kernelFunc:Bq},Wq="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq={kernelName:Kg,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:i}=n,{dtype:s}=a;if("complex64"===s){if("complex64"===i.dtype)return aj({inputs:{x:i},backend:r});const t=UC(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),a=sj({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Bq({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(t),n}if(!eg(i.dtype,s)){const e=aj({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,a]=OG(e,i.shape,i.dtype,s);return r.makeTensorInfo(t,n,a)}if("int32"===s)return function(e,t){const n=new $H(e.shape,Wq),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===s){const e=r.makeTensorInfo([],"bool",Jm("bool",1)),t=Lq({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},Uq="return ceil(x);",Gq=mj({opSnippet:Uq,packedOpSnippet:Uq,cpuKernelImpl:MG}),Hq={kernelName:Xg,backendName:"webgl",kernelFunc:Gq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jq{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qq{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq={kernelName:Yg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:i,clipValueMax:s}=r;let o;o=xg().getBool("WEBGL_PACK_CLIP")?new qq(a.shape):new jq(a.shape);const u=[[i],[s]];return n.runWebGLProgram(o,[a],a.dtype,u)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xq{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Qq={kernelName:Jg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),i=new Xq(r.shape),s=[Yq(r,a.complexTensorInfos.real),Yq(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jq{constructor(e){this.outputShape=[],this.outputShape=WT(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zq{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=WT(e,t);const n=this.outputShape,r=n.length,a=iG(r),i=TH("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=s[t],l=s.slice(-2),c=s.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${eK(s,u,t)}),\n            vec2(${eK(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${eK(s,u,p)}),\n          vec2(${eK(l,u,p)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function eK(e,t,n){const r=e.indexOf(t),a=e.map(((e,t)=>t===r?`${e} - ${n}`:e));return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(e){const{inputs:t,backend:n}=e,{input:r}=t;return aj({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const nK={kernelName:Wv,backendName:"webgl",kernelFunc:tK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Bq({inputs:{input:e},backend:n}))),a=e.map((e=>tK({inputs:{input:e},backend:n}))),i=rK(r,t,n),s=rK(a,t,n),o=sj({inputs:{real:i,imag:s},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=Um(e.shape.slice(t));return Cj({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=WT(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=LG(i,s,r,o),l=WT(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>Um(e.shape)>0)),s=xg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=s?new $H(e[0].shape,WH):new KH(e[0].shape,WH);return n.runWebGLProgram(t,e,r)}const o=xg().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let r=0;r<i.length;r+=o){const a=i.slice(r,r+o);e.push(rK(a,t,n))}const r=rK(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(s){const e=new Zq(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=WT(e.map((e=>e.shape)),t),a=e.map((e=>Cj({inputs:{x:e},attrs:{shape:[-1,Um(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(i,t,n),c=new Jq(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=Cj({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function aK(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=Ym(a,t[0].shape)[0],s=t.map((e=>e.shape));zT(s,i);const o=WT(t.map((e=>e.shape)),i);if(0===Um(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>Um(e.shape)>0));return 1===u.length?aj({inputs:{x:u[0]},backend:n}):rK(u,i,n)}const iK={kernelName:Zg,backendName:"webgl",kernelFunc:aK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sK{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,v=m?2:3,y=m?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${v}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class oK{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uK{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dG(this.outputShape.length);const i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===s){if(n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=i%2==0?Pm(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lK{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=dG(this.outputShape.length);const{dataFormat:n}=t,r=VU(),a="channelsLast"===n,i=a?1:2,s=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cK(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function hK({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=i){const e=cK(i.shape,p);null!=e&&(i=Cj({inputs:{x:i},backend:r,attrs:{shape:e}}),m.push(i))}if(null!=a){const e=cK(a.shape,p);null!=e&&(a=Cj({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(!((1===h||1===d)&&c>Mj)&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&Gm(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,zm(_U(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=Cj({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=Lj({a:h,b:p,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),v=r.texData.get(g.dataId);zm(v.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,v.shape=n.outShape,f=aj({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=Cj({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=Cj({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Lj({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s});f=Cj({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function dK({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,v=[n.batchSize,m,g],y=[];if(null!=i){const e=cK(i.shape,f);null!=e&&(i=Cj({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=a){const e=cK(a.shape,f);null!=e&&(a=Cj({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}const b=Cj({inputs:{x:t},backend:r,attrs:{shape:[1,m,Um(t.shape)/m]}});y.push(b);const x=new lK(v,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(x,[e],"float32",w),I=Cj({inputs:{x:k},backend:r,attrs:{shape:v}});y.push(k),y.push(I);const C=null!=a,S=null!=i,N="leakyrelu"===o,T=o?vj(o,!0):null,E=new yj(f?I.shape:b.shape,f?b.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,C,T,S,N),R=f?[I,b]:[b,I];if(a&&R.push(a),S&&R.push(i),N){const e=r.makeTensorInfo([],"float32",Ex(s,"float32"));R.push(e),y.push(e)}const A=r.runWebGLProgram(E,R,"float32"),D=Cj({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pK={kernelName:ev,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=Xk(u),d=Bk(a.shape,i.shape,s,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&xg().getBool("WEBGL_EXP_CONV")){const e=new uK(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[a,i],"float32",t)}else if(xg().getBool("WEBGL_CONV_IM2COL"))p=dK({x:a,filter:i,convInfo:d,backend:n});else{const e=new sK(d);p=n.runWebGLProgram(e,[a,i],"float32")}else p=hK({x:a,filter:i,convInfo:d,backend:n});const f=Cj({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK={kernelName:tv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=Xk(u),d=Bk(a.shape,c,s,1,o,l,!1,h),p=new fK(d);return n.runWebGLProgram(p,[a,i],"float32")}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bK{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=dG(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK={kernelName:nv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=Xk(l),d=Bk(s,i.shape,o,1,u,c,!1,h);if(xg().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new bK(d);return n.runWebGLProgram(t,[a,i],"float32",e)}{const e=new mK(d);return n.runWebGLProgram(e,[a,i],"float32")}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK={kernelName:rv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,l=zk(a.shape,i.shape,s,u,o),c=new oK(l);return n.runWebGLProgram(c,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK={kernelName:av,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r,l=zk(a.shape,u,s,1,o),c=new gK(l);return n.runWebGLProgram(c,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK={kernelName:iv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r,l=zk(u,i.shape,o,1,s),c=new vK(l);return n.runWebGLProgram(c,[a,i],"float32")}},CK=mj({opSnippet:fj+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${nj}\n  return result;\n`}),SK={kernelName:sv,backendName:"webgl",kernelFunc:CK},NK=mj({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),TK={kernelName:ov,backendName:"webgl",kernelFunc:NK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EK{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,s,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[s-1+".0",o-1+".0"],[m,g,v]=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${v};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK={kernelName:cv,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new EK(a.shape,i.shape,o,u,l);return n.runWebGLProgram(c,[a,i,s],"float32")}};var AK;!function(e){e.Prod="*",e.Sum="+"}(AK||(AK={}));class DK{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,i=this.op===AK.Prod?"1.0":"0.0",s=n?i:`getX(${FK(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${iG(a)} coords = getOutputCoords();\n        int end = ${_K(a,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${_K(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${FK(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function FK(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function _K(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(e,t,n,r,a,i){const s=t.shape.length,o=YI([r],s);let u=t;null!=o&&(u=$j({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=JI(1,s)[0];if(l!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=aj({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new DK(e,u.shape,!1,i),a=[[t]],s=h;h=n.runWebGLProgram(r,[h],h.dtype,a),n.disposeIntermediateTensorInfo(s)}if(a){const t=new DK(e,u.shape,a,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=$j({inputs:{x:h},backend:n,attrs:{perm:QI(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK={kernelName:uv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;return $K(AK.Prod,a,n,i,s,o)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MK={kernelName:lv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;return $K(AK.Sum,a,n,i,s,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK={kernelName:hv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(i.dataId),r=FG(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=_G(e,t,s,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PK{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BK={kernelName:dv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r,o=a.shape[0],u=("NHWC"===s?a.shape[1]:a.shape[2])*i,l=("NHWC"===s?a.shape[2]:a.shape[3])*i,c=("NHWC"===s?a.shape[3]:a.shape[1])/(i*i),h=new PK("NHWC"===s?[o,u,l,c]:[o,c,u,l],i,s);return n.runWebGLProgram(h,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zK{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dG(this.outputShape.length);const i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WK{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dG(this.outputShape.length);const i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(s%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=s%2==0?Pm(u):u;u%2==0&&s%2==1||u%2!=0&&s%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(s%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK={kernelName:pv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),zm(qk(s,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const h=Bk(a.shape,i.shape,s,c,o,l,!0);let d;d=xg().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new WK(h):new zK(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,i],"float32",p)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK={kernelName:fv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Bk(a.shape,c,s,o,u,l,!0),d=new UK(h);return n.runWebGLProgram(d,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK={kernelName:mv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Bk(c,i.shape,s,o,u,l,!0),d=new GK(h);return n.runWebGLProgram(d,[a,i],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qK{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK={kernelName:gv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],i=Um(r.shape),s=Cj({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new qK(i),u=n.runWebGLProgram(o,[s],s.dtype),l=Cj({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XK{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK={kernelName:vv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,l=Mk(a.shape,i.shape,s,o,"NHWC",u);let c;const h=new XK(l);c=n.runWebGLProgram(h,[a,i],"float32");const d=Cj({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK={kernelName:wv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=wE(a,i.length);IE(s.length,u,i);const{path:l,steps:c}=CE(o,u),h=c.length;let d=null,p=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=kE(p,u[t]);let a;SE(e)?a=i[t]:(a=$j({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Gm(a.shape,s)||(a=Cj({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=kj({inputs:{a:a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=Fj({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},JK=mj({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ZK={kernelName:kv,backendName:"webgl",kernelFunc:JK},eX={kernelName:Iv,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,i=xg().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rj("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new tj("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}},tX=gj({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:PG}),nX={kernelName:Sv,backendName:"webgl",kernelFunc:tX},rX=mj({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${rE};\n  float a1 = ${aE};\n  float a2 = ${iE};\n  float a3 = ${sE};\n  float a4 = ${oE};\n  float a5 = ${uE};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),aX={kernelName:Cv,backendName:"webgl",kernelFunc:rX},iX=mj({opSnippet:fj+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:BG,dtype:"float32"}),sX={kernelName:Nv,backendName:"webgl",kernelFunc:iX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oX(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice();let u=a;return a<0&&(zm(-(s+1)<=a,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+a+1),o.splice(u,0,1),Cj({inputs:{x:i},backend:r,attrs:{shape:o}})}const uX={kernelName:Tv,backendName:"webgl",kernelFunc:oX},lX="return exp(x) - 1.0;",cX=mj({opSnippet:lX,packedOpSnippet:lX,cpuKernelImpl:zG}),hX={kernelName:Ev,backendName:"webgl",kernelFunc:cX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dX{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(e,t,n){const r=n.texData.get(e.dataId),a=Um(e.shape),i=e.shape[e.shape.length-1],s=Cj({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),o=s.shape,u=new dX("real",o,t),l=new dX("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=sj({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=Cj({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(p),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX={kernelName:Rv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pX(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mX{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gX(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:i}=n;if(i=i||ag(a),"string"===i){const e=Zm(i,Um(r));return e.fill(a),t.makeTensorInfo(r,i,e)}{const e=new mX(r,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const vX={kernelName:Av,backendName:"webgl",kernelFunc:gX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yX{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bX={kernelName:Dv,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new yX(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},xX="return floor(x);",wX=mj({opSnippet:xX,packedOpSnippet:xX,cpuKernelImpl:WG}),kX={kernelName:Fv,backendName:"webgl",kernelFunc:wX},IX=gj({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),CX={kernelName:_v,backendName:"webgl",kernelFunc:IX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SX{constructor(e){this.variableNames=["A"];const t=VU(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NX{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=VU(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:i}=r,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,i];if(o||s){const e=xg().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=EX&&e===RX||(RX=e,EX=document.createElement("canvas").getContext("2d",{willReadFrequently:RX})),EX.canvas.width=u,EX.canvas.height=l,EX.drawImage(a,0,0,u,l),a=EX.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=hU.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=xg().getBool("WEBGL_PACK")?new NX(h):new SX(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let EX,RX=xg().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const AX={kernelName:Fb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=Xk(c),g=Bk(a.shape,i.shape,u,h,l,d,!1,m);let v;const y=[],b=null!=s,x=null!=o,w="leakyrelu"===p,k=()=>{const e=[a,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Cj({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(b&&e.push(t(s,c)),x&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Ex(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&xg().getBool("WEBGL_EXP_CONV")){const e=p?vj(p,!0):null,t=new uK(g,b,e,x,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],a=k();v=n.runWebGLProgram(t,a,"float32",r)}else if(xg().getBool("WEBGL_CONV_IM2COL"))v=dK({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?vj(p,!1):null,t=new sK(g,b,e,x,w),r=k();v=n.runWebGLProgram(t,r,"float32")}else v=hK({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=Cj({inputs:{x:v},backend:n,attrs:{shape:g.outShape}});return y.push(v),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX={kernelName:_b,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),zm(qk(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Bk(a.shape,i.shape,u,m,l,h,!0),v=xg().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?vj(d,v):null,b=[a,i],x=null!=s,w=null!=o,k="leakyrelu"===d;if(x&&b.push(s),w&&b.push(o),k){const e=n.makeTensorInfo([],"float32",Ex(p,"float32"));b.push(e),f.push(e)}let I;I=v?new WK(g,x,y,w,k):new zK(g,x,y,w,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,b,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class FX{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=iG(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _X={kernelName:Mv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=a.shape,s=i[i.length-1],o=Um(r.shape),[u,l,c,h]=yT(r,a),d=Cj({inputs:{x:a},backend:n,attrs:{shape:[l,s]}}),p=Cj({inputs:{x:r},backend:n,attrs:{shape:[Um(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),i=VG(e,t,r.dtype,l,s,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,i.values)}const f=new FX(s,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=Cj({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $X{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=iG(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function OX(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r,u=Ym(s,a.shape)[0];if(xg().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];zm(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=VE(a,i,u,o),c=Um(i.shape),h=[],d=Cj({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Cj({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=UG(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new $X(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const v=Cj({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const MX={kernelName:Ov,backendName:"webgl",kernelFunc:OX},LX=gj({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:GG,dtype:"bool"}),PX={kernelName:Lv,backendName:"webgl",kernelFunc:LX},BX=gj({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:HG}),zX={kernelName:Pv,backendName:"webgl",kernelFunc:BX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX={kernelName:zv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pX(r,!0,n)}},VX=mj({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),UX={kernelName:Vv,backendName:"webgl",kernelFunc:VX},GX=mj({opSnippet:"return float(isinf(x));",dtype:"bool"}),HX={kernelName:Uv,backendName:"webgl",kernelFunc:GX},jX=mj({opSnippet:"return float(isnan(x));",dtype:"bool"}),qX={kernelName:Gv,backendName:"webgl",kernelFunc:jX},KX=gj({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:jG,dtype:"bool"}),XX={kernelName:jv,backendName:"webgl",kernelFunc:KX},YX=gj({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:qG,dtype:"bool"}),QX={kernelName:qv,backendName:"webgl",kernelFunc:YX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX={kernelName:Kv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=KG(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},ZX=mj({opSnippet:fj+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:XG}),eY={kernelName:Xv,backendName:"webgl",kernelFunc:ZX},tY=mj({opSnippet:fj+"\n  return log(1.0 + x);\n"}),nY={kernelName:Yv,backendName:"webgl",kernelFunc:tY},rY=gj({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),aY={kernelName:Qv,backendName:"webgl",kernelFunc:rY},iY=mj({opSnippet:"return float(!(x >= 1.0));"}),sY={kernelName:Jv,backendName:"webgl",kernelFunc:iY},oY=gj({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),uY={kernelName:Zv,backendName:"webgl",kernelFunc:oY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lY{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cY{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY={kernelName:ey,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r,l=xg().getBool("WEBGL_PACK_NORMALIZATION")?new cY(a.shape,i,s,o,u):new lY(a.shape,i,s,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dY{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pY={kernelName:ty,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new dY(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,i,s],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fY(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=a.shape.length,u=Ym(i,a.shape);let l=u;const c=YI(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=CH(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype);n.texData.get(p.dataId).values=r}else p=Dj(a,c,n);l=JI(l.length,o)}XI("max",l,o);const[f,m]=qI(p.shape,l);let g,v=f;if(s&&(v=KI(f,u)),d){const e=n.texData.get(p.dataId).values,t=YG(e,Um(m),v,a.dtype);g=n.makeTensorInfo(v,a.dtype);n.texData.get(g.dataId).values=t}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Um(t),i=Cj({inputs:{x:e},attrs:{shape:[Um(e.shape)/a,a]},backend:r}),s=Ej(i,e.dtype,"max",r),o=Cj({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(p,m,v,n);return h&&n.disposeIntermediateTensorInfo(p),g}const mY={kernelName:ny,backendName:"webgl",kernelFunc:fY},gY=gj({opSnippet:ej+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nj+"\n  return result;\n",cpuKernelImpl:QG}),vY={kernelName:ry,backendName:"webgl",kernelFunc:gY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY={kernelName:ay,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;zU(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;zm(qk(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=Lk(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Gm(l.inShape,l.outShape))return aj({inputs:{x:a},backend:n});const c=new gq(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY={kernelName:sy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Pk(a.shape,i,s,[1,1,1],o,l,u),h=new vq(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xY{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wY{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY={kernelName:oy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Pk(s.shape,o,u,[1,1,1],l,c),d=new vq(h,"max",!0),p=n.runWebGLProgram(d,[s],s.dtype),f=new wY(h),m=n.runWebGLProgram(f,[a,p],s.dtype);return n.disposeIntermediateTensorInfo(p),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY={kernelName:iy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;zU([i,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Lk(o.shape,u,l,1,c,h),p=new gq(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new xY(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const CY={kernelName:uy,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;zm(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];zm(qk(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const c=Lk(r.shape,a,i,l,s),[h,d]=function(e,t,n,r){let a=new gq(n,"max",!1);const i=r.runWebGLProgram(a,[e],"float32");return a=new gq(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SY={kernelName:ly,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:i}=t,s=n,o=r.shape.length,u=Ym(i,r.shape);let l=u;const c=YI(l,o),h=null!=c,d=s.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=s.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=CH(e,r.shape,r.dtype,c,t);f=s.makeTensorInfo(t,r.dtype);s.texData.get(f.dataId).values=n}else f=Dj(r,c,s);p.push(f),l=JI(l.length,o)}XI("sum",l,o);const[m,g]=qI(f.shape,l);let v=m;a&&(v=KI(m,u));const y=function(e,t,n,r){const a=Um(t),i=Cj({inputs:{x:e},attrs:{shape:[Um(e.shape)/a,a]},backend:r}),s=Ej(i,"float32","mean",r),o=Cj({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(f,g,v,s);for(const e of p)s.disposeIntermediateTensorInfo(e);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY={kernelName:cy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=Ym(i,a.shape);let l=u;const c=YI(l,o);let h=a;null!=c&&(h=$j({inputs:{x:a},backend:n,attrs:{perm:c}}),l=JI(l.length,a.shape.length)),XI("min",l,o);const[d,p]=qI(h.shape,l),f=Cj({inputs:{x:h},backend:n,attrs:{shape:[-1,Um(p)]}}),m=Ej(f,f.dtype,"min",n);let g;if(s){g=Cj({inputs:{x:m},backend:n,attrs:{shape:KI(d,u)}})}else g=Cj({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},TY=gj({opSnippet:ej+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nj+"\n  return result;\n",cpuKernelImpl:JG}),EY={kernelName:hy,backendName:"webgl",kernelFunc:TY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RY{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=iG(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AY{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=iG(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=TH("rc",r),u=TH("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY={kernelName:dy,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:i}=n,s=xg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AY(r.shape,a,i):new RY(r.shape,a,i);return t.runWebGLProgram(s,[r],r.dtype)}},FY=gj({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+nj+"\n  return result;\n"}),_Y={kernelName:py,backendName:"webgl",kernelFunc:FY};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $Y{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OY=gj({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),MY={kernelName:xv,backendName:"webgl",kernelFunc:OY},LY="return a - b;",PY=gj({opSnippet:LY,packedOpSnippet:LY,supportsComplex:!0,cpuKernelImpl:wH}),BY={kernelName:yb,backendName:"webgl",kernelFunc:PY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zY(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=Ym([i],a.shape),o=fY({inputs:{x:a},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),u=KI(o.shape,s),l=Cj({inputs:{x:o},backend:n,attrs:{shape:u}}),c=PY({inputs:{a:a,b:l},backend:n}),h=iX({inputs:{x:c},backend:n}),d=Fj({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:!1}}),p=Cj({inputs:{x:d},backend:n,attrs:{shape:u}}),f=OY({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const WY={kernelName:ib,backendName:"webgl",kernelFunc:zY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY={kernelName:fy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r,u=o?a:zY({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new $Y(l,c,i),d=[[s]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},UY=OH+"\n  return -x;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GY={kernelName:gy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=eH(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=xg().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new KH(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new $H(r.shape,UY),n.runWebGLProgram(a,[r],r.dtype)}},HY=RN;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY={kernelName:yy,backendName:"webgl",kernelFunc:function(e){$b("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=HY(l,c,s,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},qY=AN;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY={kernelName:by,backendName:"webgl",kernelFunc:function(e){$b("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=qY(c,h,s,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},XY=DN;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY={kernelName:xy,backendName:"webgl",kernelFunc:function(e){$b("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=s,p=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=XY(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QY{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JY={kernelName:ky,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=r,l=Um(a.shape),c=new QY(l,s,o,u),h=Cj({inputs:{x:a},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=Cj({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZY(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Bq({inputs:{input:r},backend:n}),t=ZY({inputs:{x:e},backend:n}),a=tK({inputs:{input:r},backend:n}),i=ZY({inputs:{x:a},backend:n}),s=sj({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return gX({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const eQ={kernelName:Eb,backendName:"webgl",kernelFunc:ZY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tQ={kernelName:wy,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Bq({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=tK({inputs:{input:a},backend:r}),s=ZY({inputs:{x:i},backend:r}),o=sj({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return gX({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nQ={kernelName:Iy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return oX({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{Wm(i,e.shape,"All tensors passed to stack must have matching shapes"),zm(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=oX({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),l=aK({inputs:u,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rQ{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=iG(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aQ{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=iG(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=TH("rc",r),u=TH("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iQ=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;if(0===Um(a.shape)){const e=i.map(((e,t)=>e[0]+a.shape[t]+e[1]));return gX({backend:n,attrs:{shape:e,value:s,dtype:a.dtype}})}const o=xg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aQ(a.shape,i,s):new rQ(a.shape,i,s),u=[[s]];return n.runWebGLProgram(o,[a],a.dtype,u)},sQ={kernelName:Cy,backendName:"webgl",kernelFunc:iQ},oQ=gj({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+nj+"\n  return result;\n"}),uQ={kernelName:Sy,backendName:"webgl",kernelFunc:oQ};const lQ={kernelName:Ty,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=[],l=Ym(i,a.shape);let c=l;const h=YI(c,o);let d,p=a;if(null!=h&&(p=$j({inputs:{x:a},backend:n,attrs:{perm:h}}),c=JI(c.length,o),u.push(p)),XI("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=nH(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=qI(p.shape,c),r=Um(t),i=Cj({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),s=Ej(i,iw(a.dtype),"prod",n);d=Cj({inputs:{x:s},backend:n,attrs:{shape:e}}),u.push(i),u.push(s)}if(s){u.push(d);const e=KI(d.shape,l);d=Cj({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cQ={kernelName:Ey,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=r,u=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(s.dataId),[d,p,f]=rH(u,l,c,i.shape,i.dtype,h,s.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hQ={kernelName:Ry,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:i}=t,s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=aH(s,r.shape,r.dtype,o,a.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dQ={kernelName:Ay,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(a.dataId),c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=iH(l,a.shape,c,i.shape,i.dtype,h,s.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}},pQ=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:i,dtype:s}=n,o=sH(r,a,i,s);return t.makeTensorInfo([o.length],s,o)},fQ={kernelName:Dy,backendName:"webgl",kernelFunc:pQ},mQ=mj({opSnippet:"return 1.0 / x;"}),gQ={kernelName:_y,backendName:"webgl",kernelFunc:mQ},vQ=mj({opSnippet:OH+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yQ={kernelName:$y,backendName:"webgl",kernelFunc:vQ},bQ=mj({opSnippet:OH+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xQ={kernelName:zy,backendName:"webgl",kernelFunc:bQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wQ{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kQ{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ={kernelName:Py,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,l]=o,c=xg().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kQ(a.shape,u,l,i,s):new wQ(a.shape,u,l,i,s);return n.runWebGLProgram(c,[a],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CQ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQ={kernelName:By,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new CQ(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NQ{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TQ{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EQ={kernelName:My,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,l]=o,c=xg().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TQ(a.shape,u,l,i,s):new NQ(a.shape,u,l,i,s);return n.runWebGLProgram(c,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RQ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AQ={kernelName:Ly,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new RQ(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DQ{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=iG(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FQ{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=TH("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=iG(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Q={kernelName:Wy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,s=a.shape.length,o=Ym(i,a.shape);if(0===s)return aj({inputs:{x:a},backend:n});const u=xg().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FQ(a.shape,o):new DQ(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Q{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OQ={kernelName:Ab,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=new $Q(r.shape,i),[l,c]=XT(s,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},MQ=mj({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),LQ={kernelName:Vy,backendName:"webgl",kernelFunc:MQ},PQ=mj({opSnippet:"return inversesqrt(x);",cpuKernelImpl:oH}),BQ={kernelName:Uy,backendName:"webgl",kernelFunc:PQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zQ{constructor(e,t,n,r,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=iG(a.length),l=iG(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WQ{constructor(e,t,n,r,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=iG(a.length),l=iG(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",v=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${v};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VQ={kernelName:Gy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=nN(0,a,s),d=[h/l,l];if(0===h)return n.makeTensorInfo(s,a.dtype);const p=Cj({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=Cj({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=xg().getBool("WEBGL_PACK")?new WQ(u,o,p.shape.length,f.shape.length,c,d):new zQ(u,o,p.shape.length,f.shape.length,c,d);const v=n.runWebGLProgram(g,[f,p,m],f.dtype),y=Cj({inputs:{x:v},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(m),y}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UQ{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===xg().getNumber("WEBGL_VERSION")?"while (left < right) {":a,s="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${s} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GQ={kernelName:jy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:s}=r,o=new UQ(a.shape[0],a.shape[1],i.shape[1],s),u=[[a.shape[1]]];return n.runWebGLProgram(o,[a,i],"int32",u)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HQ{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),a=s.join()}const i=iG(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jQ={kernelName:qy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,s=new HQ(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(s,[r,a,i],aw(a.dtype,i.dtype))}},qQ=mj({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${nE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),KQ={kernelName:Ky,backendName:"webgl",kernelFunc:qQ},XQ=mj({opSnippet:fj+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:lH}),YQ={kernelName:Zy,backendName:"webgl",kernelFunc:XQ},QQ=mj({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),JQ={kernelName:Jy,backendName:"webgl",kernelFunc:QQ},ZQ=mj({opSnippet:fj+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${nj}\n  return result;\n`}),eJ={kernelName:Yy,backendName:"webgl",kernelFunc:ZQ},tJ=mj({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),nJ={kernelName:Qy,backendName:"webgl",kernelFunc:tJ},rJ=mj({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),aJ={kernelName:eb,backendName:"webgl",kernelFunc:rJ},iJ={kernelName:rb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;zm(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=iQ({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=YT(c.shape,i,o,!1),d=QT(h.length,i.length,!1),p=JT(c.shape,i,o,!1),f=Cj({inputs:{x:c},backend:n,attrs:{shape:h}}),m=$j({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Cj({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sJ={kernelName:sb,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(i.dataId),c=n.readSync(s.dataId)[0],[h,d,p,f,m]=dH(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ={kernelName:ob,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=pH(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uJ={kernelName:ub,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=fH(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJ={kernelName:lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=fH(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cJ={kernelName:cb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=nN(0,a,o);if("string"===i.dtype){const e=n.bufferSync(a),t=n.bufferSync(i),r=Fx(n.readSync(s.dataId)[0]),p=uH(e,t,o,d,c,l,u,h,r,false);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new zQ(l,u,a.shape.length,i.shape.length,h,[d,1],false),f=n.runWebGLProgram(p,[i,a,s],i.dtype),m=Cj({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hJ={kernelName:ab,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=Ym(s,a.shape)[0],u=TE(a,i,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=Dq({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},dJ="return sqrt(x);",pJ=mj({opSnippet:dJ,packedOpSnippet:dJ,cpuKernelImpl:mH}),fJ={kernelName:tb,backendName:"webgl",kernelFunc:pJ},mJ={kernelName:db,backendName:"webgl",kernelFunc:mj({opSnippet:"return x * x;"})},gJ="return (a - b) * (a - b);",vJ=gj({opSnippet:gJ,packedOpSnippet:gJ}),yJ={kernelName:hb,backendName:"webgl",kernelFunc:vJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ={kernelName:pb,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const i=GE(n.readSync(a.dataId)),s=gH(i,"string",r);return n.makeTensorInfo(a.shape,"string",s)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ={kernelName:Rb,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=OH+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new $H(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wJ{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=iG(n.length),i=iG(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ={kernelName:fb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:v,begin:y,end:b,strides:x}=$T(a.shape,i,s,o,u,l,c,h,d);let w;if(m)w=Cj({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||v){zm(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=kT(y,b,x),t=Dq({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=Cj({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=ck(a.shape,a.dtype,e),r=vH(p,t,x,y);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new wJ(y,x,p);w=n.runWebGLProgram(e,[a],a.dtype)}}const k=Cj({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ={kernelName:mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=yH(d,p,a,i,s,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ={kernelName:gb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.readSync(i.dataId),u=n.readSync(s.dataId)[0],[l,c,h]=bH(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ={kernelName:vb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(i.dataId),o=xH(s,a);return n.makeTensorInfo(i.shape,"int32",o)}},NJ=mj({opSnippet:"return tan(x);"}),TJ={kernelName:bb,backendName:"webgl",kernelFunc:NJ},EJ=mj({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),RJ={kernelName:xb,backendName:"webgl",kernelFunc:EJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ={kernelName:Hy,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:i,updates:s}=t,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=nN(0,i,a.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(a.shape,i.dtype);const p=Cj({inputs:{x:i},backend:n,attrs:{shape:[u,o]}}),f=Cj({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=Cj({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new zQ(u,o,p.shape.length,f.shape.length,c,d,!1,!0),v=n.runWebGLProgram(g,[f,p,m],m.dtype),y=Cj({inputs:{x:v},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),y}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DJ{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=iG(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function FJ(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Fx(e))):e,r=ck(a.shape,a.dtype,t),s=kH(r,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new DJ(a.shape,i);return n.runWebGLProgram(s,[a],a.dtype)}const _J={kernelName:wb,backendName:"webgl",kernelFunc:FJ};class $J{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class OJ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MJ(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function LJ(e){let t=1;for(;t<e;)t*=2;return t}const PJ={kernelName:kb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r,o=xg().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=xg().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||i>u){const e=n.readSync(a.dataId),[t,r]=IH(e,l,a.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,gX({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(a):a,f=Um(l)/c,m=Cj({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&MJ(n,p);const g=LJ(i),v=LJ(c);let y=null;const b=()=>null===y?[m,m]:[m,y],x=(e,t,r)=>{const a=b(),i=new $J(r),s=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(i,a,"int32",s),MJ(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,v])}for(let e=v;e>g;e/=2){const t=b(),r=new OJ([f,e/2]),a=[[c],[null===y?1:0],[g]],i=y;y=n.runWebGLProgram(r,t,"int32",a),MJ(n,i);const s=g/2,o=2*s;for(let e=s;e>=1;e/=2)x(o,e,y.shape)}let w=y;y=Dq({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),MJ(n,w);let k=OX({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});MJ(n,m);const I=l.slice(0,-1);I.push(i),w=y,y=Cj({inputs:{x:y},attrs:{shape:I},backend:n}),MJ(n,w);const C=k;return k=Cj({inputs:{x:k},attrs:{shape:I},backend:n}),MJ(n,C),[k,y]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BJ{constructor(e,t,n,r,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const s="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zJ={kernelName:Ib,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=new BJ(h,d,s,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WJ={kernelName:Sb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;zU(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(i.dataId),{outputValues:o,outputShape:u,indices:l}=SH(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VJ={kernelName:Nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a,o=s.shape.length,u=a.shape[i],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(l[c++]=s.shape[e]);const h=[],d=new Array(o).fill(0),p=s.shape.slice();p[i]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[i]=e;const t=Dq({inputs:{x:s},backend:n,attrs:{begin:d,size:p}}),r=Cj({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UJ{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GJ={kernelName:Tb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r,o=a.shape.length,u=[];let l=0;const c=YI([l],o);let h=a;null!=c&&(h=$j({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=JI(1,o)[0]);const d=WE(h.shape,l,s),p=Um([h.shape[l]]),f=Cj({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=iw(a.dtype),g=(e,t,r,a,i)=>{const s=e.shape[0],o=e.shape[1],l=zE(o,i),c=new UJ({windowSize:l,inSize:o,batchSize:s,numSegments:i},t),h=n.compileAndRun(c,[e,r],a);if(u.push(h),h.shape[1]===i)return h;const d=pQ({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=FJ({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});u.push(d),u.push(p);return g(h,t,p,a,i)},v=Cj({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:d}});let y=v;if(null!=c){u.push(v);const e=QI(c);y=$j({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},HJ=[Pj,zj,Vj,Gj,qj,Yj,Qj,Jj,aq,iq,oq,lq,hq,pq,mq,yq,bq,kq,Iq,Cq,Tq,_q,$q,Oq,Mq,Vq,Hq,Kq,oj,Qq,iK,pK,yK,xK,wK,kK,IK,SK,TK,RK,OK,MK,LK,BK,VK,HK,jK,KK,YK,QK,ZK,eX,nX,aX,sX,uX,hX,fX,vX,bX,kX,CX,TX,AX,DX,_X,MX,PX,zX,ij,WX,nK,UX,HX,qX,cj,XX,QX,JX,eY,nY,aY,sY,uY,hY,pY,mY,vY,yY,bY,kY,IY,CY,SY,NY,EY,DY,_Y,VY,Ij,GY,jY,KY,YY,Pq,JY,tQ,nQ,sQ,uQ,pj,lQ,cQ,hQ,dQ,fQ,zq,MY,gQ,yQ,xQ,Sj,IQ,SQ,EQ,AQ,_Q,OQ,LQ,BQ,VQ,GQ,jQ,KQ,YQ,JQ,eJ,nJ,Fq,WY,aJ,iJ,sJ,oJ,uJ,lJ,cJ,hJ,fJ,mJ,yJ,bJ,xJ,kJ,IJ,CJ,SJ,BY,_j,TJ,RJ,AJ,_J,PJ,zJ,Oj,WJ,VJ,GJ,eQ];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of HJ)zb(e);/** @license See the LICENSE file. */const jJ=new Map,qJ=new URL("https://translate-service.scratch.mit.edu/translate"),KJ=e=>ee(void 0,void 0,void 0,(function*(){if(jJ.has(e))return jJ.get(e);const n=(e=>{for(const t in e)qJ.searchParams.set(t,e[t]);return qJ.href})({language:"en",text:encodeURIComponent(e)});try{const r=(yield(yield t.fetchWithTimeout(n,{timeout:30})).json()).result;return jJ.set(e,r),r}catch(e){return console.warn(`error fetching translate result! ${e}`),""}})),{legacyBlock:XJ}=ne.for(),{toxicitylabels:{items:YJ},voices:{items:QJ}}=te.menus,JJ={name:"Text Classification",tags:["Made by PRG"],insetIconURL:"icon.svg",iconURL:"menu.png",description:"Create a text classification model for use in a Scratch project!"};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ZJ=(()=>{var e;let n,r,a,i,s,o,u,l,c,h,d,p=t.extension(JJ,"legacySupport","ui"),f=[];return e=class extends p{constructor(){super(...arguments),this.labels=(function(e,t,n){for(var r=arguments.length>2,a=0;a<t.length;a++)n=r?t[a].call(e,n):t[a].call(e)}(this,f),[]),this.loudnessTimer={startTime:(new Date).getTime(),start(){this.startTime=(new Date).getTime()},elapsed(){return(new Date).getTime()-this.startTime}},this.soundPlayers=new Map,this.sentiment=new We,this.prediction={label:0,class:"",score:0},this.modelData=new Map}init(e){return ee(this,void 0,void 0,(function*(){const{soundPlayers:n}=this;e.runtime.on(t.RuntimeEvent.ProjectStopAll,(function(){n.forEach((e=>e.stop()))})),e.runtime.on(t.RuntimeEvent.TargetWasCreated,ie);try{console.log("loaded Toxicity model")}catch(e){console.log("Failed to load toxicity model",e)}}))}getLegacyInfo(){return te}editButton(){this.openUI("Editor","Edit Text Model")}ifTextMatchesClass(e,t){return ee(this,void 0,void 0,(function*(){const n=yield this.getEmbeddings(e);return n&&n===t}))}getModelPrediction(e){return ee(this,void 0,void 0,(function*(){return yield this.getEmbeddings(e)}))}getModelConfidence(e){return ee(this,void 0,void 0,(function*(){return yield this.getConfidence(e)}))}confidenceTrue(e,t){return this.classifyText(e,t,!0)}sentimentScore(e){return this.currentSentiment=this.sentiment.analyze(e),this.currentSentiment.comparative}speakText(e,{target:n}){return ee(this,void 0,void 0,(function*(){const{audioEngine:r}=this.runtime,{currentVoice:a}=ae(n),{gender:i,playbackRate:s}=De[a],o=(e=>{for(const t in e)se.searchParams.set(t,e[t]);return se.href})({gender:i,locale:"en-US",text:encodeURIComponent(JSON.stringify(e).substring(0,128))});yield new Promise((e=>ee(this,void 0,void 0,(function*(){try{const n=yield t.fetchWithTimeout(o,{timeout:40});if(!n.ok)return console.warn(n.statusText);const a={data:n.body},i=yield r.decodeSoundPlayer(a);this.soundPlayers.set(i.id,i),i.setPlaybackRate(s);const u=r.createEffectChain();u.set("volume",250),i.connect(u),i.play(),i.on("stop",(()=>{this.soundPlayers.delete(i.id),e()}))}catch(e){console.warn(e)}}))))}))}askSpeechRecognition(e,t){return ee(this,void 0,void 0,(function*(){yield this.speakText(e,t),this.recognizeSpeech()}))}getRecognizedSpeech(){return this.lastRecognizedSpeech}setVoice(e,{target:t}){const n=ae(t);n.currentVoice=null!=e?e:n.currentVoice}onHeardSound(e){return this.getLoudness()>e}addLabel(e){this.labels.push(e),this.modelData.set(e,new Array)}getLoudness(){const{audioEngine:e,currentStepTime:t}=this.runtime;return e&&t?(this.loudnessTimer.elapsed()>this.runtime.currentStepTime&&(this.currentLoudness=e.getLoudness(),this.loudnessTimer.start()),this.currentLoudness):-1}recognizeSpeech(){return ee(this,void 0,void 0,(function*(){const e=new webkitSpeechRecognition,t=yield new Promise((t=>{e.start(),e.onresult=function(e){0===e.results.length&&t(null),t(e.results[0][0].transcript)}}));return this.lastRecognizedSpeech=null!=t?t:this.lastRecognizedSpeech,t}))}classifyText(e,t,n){return ee(this,void 0,void 0,(function*(){const{toxicityModel:r}=this;if(this.toxicityModel&&e&&t)try{const a=(yield r.classify([e])).filter((e=>{var n;return e.label===t&&(null===(n=e.results)||void 0===n?void 0:n.length)>0}));return 1===(null==a?void 0:a.length)?Math.round(100*a[0].results[0].probabilities[n?1:0]):0}catch(e){console.log("Failed to classify text",e)}}))}getConfidence(e){return ee(this,void 0,void 0,(function*(){const t=yield KJ(e);return yield this.predictScore(t),this.prediction.score}))}predictScore(e){return ee(this,void 0,void 0,(function*(){const{prediction:t,currentClassificationInput:n,labels:r}=this;if(n===e)return this.logPrediction();this.currentClassificationInput=e;const a=yield Am(),i=yield a.embed(e),s=yield this.customLanguageModel.predict(i),o=Array.isArray(s)?s[0]:s,u=yield o.data();t.label=yield o.as1D().argMax().dataSync()[0],t.class=r[t.label],t.score=u[t.label],this.logPrediction()}))}logPrediction(){const{label:e,class:t,score:n}=this.prediction;console.log("Classification done"),console.log("Predicted Label",e),console.log("Predicted Class",t),console.log("Predicted Score",n)}buildCustomDeepModel(){return ee(this,void 0,void 0,(function*(){const{labels:e,modelData:n}=this,{length:r}=e;if(r<2)return"No classes inputted";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var a;this.runtime.emit(t.RuntimeEvent.Say,this.runtime.executableTargets[1],"think","wait .. loading model"),this.customLanguageModel=new d$(a);const i={sentences:new Array,labels:new Array};for(let t of e)for(let e of n[t])i.sentences.push(e),i.labels.push(t);const s=YC(ZS(i.labels.map((t=>e.findIndex((e=>e===t)))),"int32"),r);let o;try{const e=yield Am();o=yield e.embed(i.sentences)}catch(e){console.error("Fit Error:",e)}this.customLanguageModel.add(new SO({inputShape:[512],activation:"sigmoid",kernelInitializer:"ones",units:r})),this.customLanguageModel.compile({loss:"meanSquaredError",optimizer:LT.adam(.06)});const u=yield this.customLanguageModel.fit(o,s,{epochs:100,batchSize:4,shuffle:!0,validationSplit:.15,callbacks:[DM.earlyStopping({monitor:"val_loss",patience:50})]});console.log("Final accuracy",u),this.runtime.emit(t.RuntimeEvent.Say,this.runtime.executableTargets[1],"say","The model is ready")}))}getEmbeddings(e){return ee(this,void 0,void 0,(function*(){const t=yield KJ(e);if(0!==this.labels.length&&this.labels[0])return yield this.predictScore(t),this.prediction.class}))}uiEventsTODO(){}},(()=>{var m;const g="function"==typeof Symbol&&Symbol.metadata?Object.create(null!==(m=p[Symbol.metadata])&&void 0!==m?m:null):void 0;n=[t.buttonBlock("Edit Model")],r=[XJ.ifTextMatchesClass((e=>({argumentMethods:{1:{getItems:()=>{const{labels:t}=e;return(null==t?void 0:t.length)>0?t:["No labels"]}}}})))],a=[XJ.getModelPrediction()],i=[XJ.getModelConfidence()],s=[XJ.confidenceTrue({argumentMethods:{1:{handler:e=>{var t,n;return null!==(n=null===(t=YJ.find((({value:t,text:n})=>t===e||n===e)))||void 0===t?void 0:t.value)&&void 0!==n?n:YJ[0].value}}}})],o=[XJ.sentimentScore()],u=[XJ.speakText()],l=[XJ.askSpeechRecognition()],c=[XJ.getRecognizedSpeech()],h=[XJ.setVoice({argumentMethods:{0:{handler:e=>{var n;const r=parseInt(JSON.stringify(e),10);if(!isNaN(r)){const e=t.wrapClamp(r-1,0,QJ.length-1);return QJ[e].value}return null===(n=QJ.find((({value:t,text:n})=>t===e||n===e)))||void 0===n?void 0:n.value}}}})],d=[XJ.onHeardSound()],Z(e,null,n,{kind:"method",name:"editButton",static:!1,private:!1,access:{has:e=>"editButton"in e,get:e=>e.editButton},metadata:g},null,f),Z(e,null,r,{kind:"method",name:"ifTextMatchesClass",static:!1,private:!1,access:{has:e=>"ifTextMatchesClass"in e,get:e=>e.ifTextMatchesClass},metadata:g},null,f),Z(e,null,a,{kind:"method",name:"getModelPrediction",static:!1,private:!1,access:{has:e=>"getModelPrediction"in e,get:e=>e.getModelPrediction},metadata:g},null,f),Z(e,null,i,{kind:"method",name:"getModelConfidence",static:!1,private:!1,access:{has:e=>"getModelConfidence"in e,get:e=>e.getModelConfidence},metadata:g},null,f),Z(e,null,s,{kind:"method",name:"confidenceTrue",static:!1,private:!1,access:{has:e=>"confidenceTrue"in e,get:e=>e.confidenceTrue},metadata:g},null,f),Z(e,null,o,{kind:"method",name:"sentimentScore",static:!1,private:!1,access:{has:e=>"sentimentScore"in e,get:e=>e.sentimentScore},metadata:g},null,f),Z(e,null,u,{kind:"method",name:"speakText",static:!1,private:!1,access:{has:e=>"speakText"in e,get:e=>e.speakText},metadata:g},null,f),Z(e,null,l,{kind:"method",name:"askSpeechRecognition",static:!1,private:!1,access:{has:e=>"askSpeechRecognition"in e,get:e=>e.askSpeechRecognition},metadata:g},null,f),Z(e,null,c,{kind:"method",name:"getRecognizedSpeech",static:!1,private:!1,access:{has:e=>"getRecognizedSpeech"in e,get:e=>e.getRecognizedSpeech},metadata:g},null,f),Z(e,null,h,{kind:"method",name:"setVoice",static:!1,private:!1,access:{has:e=>"setVoice"in e,get:e=>e.setVoice},metadata:g},null,f),Z(e,null,d,{kind:"method",name:"onHeardSound",static:!1,private:!1,access:{has:e=>"onHeardSound"in e,get:e=>e.onHeardSound},metadata:g},null,f),g&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:g})})(),e})();return e.Class=K,e.Editor=class extends W{constructor(e){super(),z(this,e,J,Q,u,{extension:0,close:3})}},e.Extension=ZJ,Object.defineProperty(e,"__esModule",{value:!0}),e}({},ExtensionFramework);//# sourceMappingURL=textClassification.js.map
