var textClassification=function(e,t){"use strict";function n(e,t){return t.forEach((function(t){t&&"string"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(n){if("default"!==n&&!(n in e)){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}}))})),Object.freeze(e)}function r(e,t,n,r,a,i){function s(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var o,u=r.kind,l="getter"===u?"get":"setter"===u?"set":"value",c=!t&&e?r.static?e:e.prototype:null,h=t||(c?Object.getOwnPropertyDescriptor(c,r.name):{}),d=!1,p=n.length-1;p>=0;p--){var f={};for(var m in r)f[m]="access"===m?{}:r[m];for(var m in r.access)f.access[m]=r.access[m];f.addInitializer=function(e){if(d)throw new TypeError("Cannot add initializers after decoration has completed");i.push(s(e||null))};var g=(0,n[p])("accessor"===u?{get:h.get,set:h.set}:h[l],f);if("accessor"===u){if(void 0===g)continue;if(null===g||"object"!=typeof g)throw new TypeError("Object expected");(o=s(g.get))&&(h.get=o),(o=s(g.set))&&(h.set=o),(o=s(g.init))&&a.push(o)}else(o=s(g))&&("field"===u?a.push(o):h[l]=o)}c&&Object.defineProperty(c,r.name,h),d=!0}function a(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}u((r=r.apply(e,t||[])).next())}))}const i={id:"textClassification",name:"Text Classification",blocks:[{opcode:"ifTextMatchesClass",text:"[TEXT] matches [CLASS_NAME] ?",blockType:"Boolean",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"},CLASS_NAME:{type:"string",menu:"model_classes",defaultValue:""}}},{opcode:"getModelPrediction",text:"predict class for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"}}},{opcode:"getModelConfidence",text:"Confidence of predict class for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"}}},{opcode:"confidenceTrue",text:"probability that [TEXT] is [LABEL]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"TEXT"},LABEL:{type:"string",defaultValue:"toxicity",menu:"toxicitylabels"}}},{opcode:"sentimentScore",text:"Sentiment Score for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"TEXT"}}},{opcode:"speakText",text:"speak [TEXT]",blockType:"command",arguments:{TEXT:{type:"string",defaultValue:"Hello"}}},{opcode:"askSpeechRecognition",text:"speak [PROMPT] then listen for response",blockType:"command",arguments:{PROMPT:{type:"string",defaultValue:"How are you?"}}},{opcode:"getRecognizedSpeech",text:"response",blockType:"reporter"},{opcode:"setVoice",text:"set voice to [VOICE]",blockType:"command",arguments:{VOICE:{type:"string",menu:"voices",defaultValue:"SQUEAK"}}},{opcode:"onHeardSound",text:"when heard sound > [THRESHOLD]",blockType:"hat",arguments:{THRESHOLD:{type:"number",defaultValue:10}}}],menus:{voices:{acceptReporters:!0,items:[{text:"squeak",value:"SQUEAK"},{text:"tenor",value:"TENOR"},{text:"alto",value:"ALTO"},{text:"giant",value:"GIANT"}]},model_classes:{acceptReporters:!1,items:"getLabels"},toxicitylabels:{items:[{value:"toxicity",text:"toxic"},{value:"severe_toxicity",text:"severely toxic"},{value:"identity_attack",text:"an identity-based attack"},{value:"insult",text:"insulting"},{value:"threat",text:"threatening"},{value:"obscene",text:"profanity"}],acceptReporters:!0}}},s=t.legacy(i);t.legacy(i,{incrementalDevelopment:!0});const o="Scratch.text2speech",u=e=>{let t=e.getCustomState(o);return t||(t={currentVoice:"SQUEAK"},e.setCustomState(o,t),t)},l=(e,t)=>{t&&Boolean(t.getCustomState(o))&&((e,t)=>{e.setCustomState(o,t)})(e,{currentVoice:u(t).currentVoice})},c=new URL("https://synthesis-service.scratch.mit.edu/synth");var h="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function d(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){if(this instanceof e){var n=[null];return n.push.apply(n,arguments),new(Function.bind.apply(t,n))}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var p={},f={get exports(){return p},set exports(e){p=e}},m={};!function(e,t){var n="{",r="}",a=",",i="#",s="<",o=">",u="</",l="/>",c="'",h="offset:",d=["number","date","time","ordinal","duration","spellout"],p=["plural","select","selectordinal"];function f(e,t){var n=e.pattern,a=n.length,i=[],s=e.index,o=m(e,t);for(o&&i.push(o),o&&e.tokens&&e.tokens.push(["text",n.slice(s,e.index)]);e.index<a;){if(n[e.index]===r){if(!t)throw C(e);break}if(t&&e.tagsType&&n.slice(e.index,e.index+u.length)===u)break;i.push(y(e)),s=e.index,(o=m(e,t))&&i.push(o),o&&e.tokens&&e.tokens.push(["text",n.slice(s,e.index)])}return i}function m(e,t){for(var a=e.pattern,o=a.length,u="plural"===t||"selectordinal"===t,l=!!e.tagsType,h="{style}"===t,d="";e.index<o;){var p=a[e.index];if(p===n||p===r||u&&p===i||l&&p===s||h&&g(p.charCodeAt(0)))break;if(p===c)if((p=a[++e.index])===c)d+=p,++e.index;else if(p===n||p===r||u&&p===i||l&&p===s||h)for(d+=p;++e.index<o;)if((p=a[e.index])===c&&a[e.index+1]===c)d+=c,++e.index;else{if(p===c){++e.index;break}d+=p}else d+=c;else d+=p,++e.index}return d}function g(e){return e>=9&&e<=13||32===e||133===e||160===e||6158===e||e>=8192&&e<=8205||8232===e||8233===e||8239===e||8287===e||8288===e||12288===e||65279===e}function v(e){for(var t=e.pattern,n=t.length,r=e.index;e.index<n&&g(t.charCodeAt(e.index));)++e.index;r<e.index&&e.tokens&&e.tokens.push(["space",e.pattern.slice(r,e.index)])}function y(e){var t=e.pattern;if(t[e.index]===i)return e.tokens&&e.tokens.push(["syntax",i]),++e.index,[i];var c=function(e){var t=e.tagsType;if(!t||e.pattern[e.index]!==s)return;if(e.pattern.slice(e.index,e.index+u.length)===u)throw C(e,null,"closing tag without matching opening tag");e.tokens&&e.tokens.push(["syntax",s]);++e.index;var n=b(e,!0);if(!n)throw C(e,"placeholder id");e.tokens&&e.tokens.push(["id",n]);if(v(e),e.pattern.slice(e.index,e.index+l.length)===l)return e.tokens&&e.tokens.push(["syntax",l]),e.index+=l.length,[n,t];if(e.pattern[e.index]!==o)throw C(e,o);e.tokens&&e.tokens.push(["syntax",o]);++e.index;var r=f(e,t),a=e.index;if(e.pattern.slice(e.index,e.index+u.length)!==u)throw C(e,u+n+o);e.tokens&&e.tokens.push(["syntax",u]);e.index+=u.length;var i=b(e,!0);i&&e.tokens&&e.tokens.push(["id",i]);if(n!==i)throw e.index=a,C(e,u+n+o,u+i+o);if(v(e),e.pattern[e.index]!==o)throw C(e,o);e.tokens&&e.tokens.push(["syntax",o]);return++e.index,[n,t,{children:r}]}(e);if(c)return c;if(t[e.index]!==n)throw C(e,n);e.tokens&&e.tokens.push(["syntax",n]),++e.index,v(e);var p=b(e);if(!p)throw C(e,"placeholder id");e.tokens&&e.tokens.push(["id",p]),v(e);var m=t[e.index];if(m===r)return e.tokens&&e.tokens.push(["syntax",r]),++e.index,[p];if(m!==a)throw C(e,a+" or "+r);e.tokens&&e.tokens.push(["syntax",a]),++e.index,v(e);var g,y=b(e);if(!y)throw C(e,"placeholder type");if(e.tokens&&e.tokens.push(["type",y]),v(e),(m=t[e.index])===r){if(e.tokens&&e.tokens.push(["syntax",r]),"plural"===y||"selectordinal"===y||"select"===y)throw C(e,y+" sub-messages");return++e.index,[p,y]}if(m!==a)throw C(e,a+" or "+r);if(e.tokens&&e.tokens.push(["syntax",a]),++e.index,v(e),"plural"===y||"selectordinal"===y){var I=function(e){var t=e.pattern,n=t.length,r=0;if(t.slice(e.index,e.index+h.length)===h){e.tokens&&e.tokens.push(["offset","offset"],["syntax",":"]),e.index+=h.length,v(e);for(var a=e.index;e.index<n&&w(t.charCodeAt(e.index));)++e.index;if(a===e.index)throw C(e,"offset number");e.tokens&&e.tokens.push(["number",t.slice(a,e.index)]),r=+t.slice(a,e.index)}return r}(e);v(e),g=[p,y,I,k(e,y)]}else if("select"===y)g=[p,y,k(e,y)];else if(d.indexOf(y)>=0)g=[p,y,x(e)];else{var S=e.index,N=x(e);v(e),t[e.index]===n&&(e.index=S,N=k(e,y)),g=[p,y,N]}if(v(e),t[e.index]!==r)throw C(e,r);return e.tokens&&e.tokens.push(["syntax",r]),++e.index,g}function b(e,t){for(var u=e.pattern,l=u.length,h="";e.index<l;){var d=u[e.index];if(d===n||d===r||d===a||d===i||d===c||g(d.charCodeAt(0))||t&&(d===s||d===o||"/"===d))break;h+=d,++e.index}return h}function x(e){var t=e.index,n=m(e,"{style}");if(!n)throw C(e,"placeholder style name");return e.tokens&&e.tokens.push(["style",e.pattern.slice(t,e.index)]),n}function w(e){return e>=48&&e<=57}function k(e,t){for(var n=e.pattern,a=n.length,i={};e.index<a&&n[e.index]!==r;){var s=b(e);if(!s)throw C(e,"sub-message selector");e.tokens&&e.tokens.push(["selector",s]),v(e),i[s]=I(e,t),v(e)}if(!i.other&&p.indexOf(t)>=0)throw C(e,null,null,'"other" sub-message must be specified in '+t);return i}function I(e,t){if(e.pattern[e.index]!==n)throw C(e,n+" to start sub-message");e.tokens&&e.tokens.push(["syntax",n]),++e.index;var a=f(e,t);if(e.pattern[e.index]!==r)throw C(e,r+" to end sub-message");return e.tokens&&e.tokens.push(["syntax",r]),++e.index,a}function C(e,t,n,r){var a=e.pattern,i=a.slice(0,e.index).split(/\r?\n/),s=e.index,o=i.length,u=i.slice(-1)[0].length;return n=n||(e.index>=a.length?"end of message pattern":b(e)||a[e.index]),r||(r=function(e,t){return e?"Expected "+e+" but found "+t:"Unexpected "+t+" found"}(t,n)),new S(r+=" in "+a.replace(/\r?\n/g,"\n"),t,n,s,o,u)}function S(e,t,n,r,a,i){Error.call(this,e),this.name="SyntaxError",this.message=e,this.expected=t,this.found=n,this.offset=r,this.line=a,this.column=i}t=e.exports=function(e,t){return f({pattern:String(e),index:0,tagsType:t&&t.tagsType||null,tokens:t&&t.tokens||null},"")},S.prototype=Object.create(Error.prototype),t.SyntaxError=S}({get exports(){return m},set exports(e){m=e}},m);var g={},v="long",y="short",b="narrow",x="numeric",w="2-digit",k={number:{decimal:{style:"decimal"},integer:{style:"decimal",maximumFractionDigits:0},currency:{style:"currency",currency:"USD"},percent:{style:"percent"},default:{style:"decimal"}},date:{short:{month:x,day:x,year:w},medium:{month:y,day:x,year:x},long:{month:v,day:x,year:x},full:{month:v,day:x,year:x,weekday:v},default:{month:y,day:x,year:x}},time:{short:{hour:x,minute:x},medium:{hour:x,minute:x,second:x},long:{hour:x,minute:x,second:x,timeZoneName:y},full:{hour:x,minute:x,second:x,timeZoneName:y},default:{hour:x,minute:x,second:x}},duration:{default:{hours:{minimumIntegerDigits:1,maximumFractionDigits:0},minutes:{minimumIntegerDigits:2,maximumFractionDigits:0},seconds:{minimumIntegerDigits:2,maximumFractionDigits:3}}},parseNumberPattern:function(e){if(e){var t={},n=e.match(/\b[A-Z]{3}\b/i),r=e.replace(/[^¤]/g,"").length;if(!r&&n&&(r=1),r?(t.style="currency",t.currencyDisplay=1===r?"symbol":2===r?"code":"name",t.currency=n?n[0].toUpperCase():"USD"):e.indexOf("%")>=0&&(t.style="percent"),!/[@#0]/.test(e))return t.style?t:void 0;if(t.useGrouping=e.indexOf(",")>=0,/E\+?[@#0]+/i.test(e)||e.indexOf("@")>=0){var a=e.replace(/E\+?[@#0]+|[^@#0]/gi,"");t.minimumSignificantDigits=Math.min(Math.max(a.replace(/[^@0]/g,"").length,1),21),t.maximumSignificantDigits=Math.min(Math.max(a.length,1),21)}else{for(var i=e.replace(/[^#0.]/g,"").split("."),s=i[0],o=s.length-1;"0"===s[o];)--o;t.minimumIntegerDigits=Math.min(Math.max(s.length-1-o,1),21);var u=i[1]||"";for(o=0;"0"===u[o];)++o;for(t.minimumFractionDigits=Math.min(Math.max(o,0),20);"#"===u[o];)++o;t.maximumFractionDigits=Math.min(Math.max(o,0),20)}return t}},parseDatePattern:function(e){if(e){for(var t={},n=0;n<e.length;){for(var r=e[n],a=1;e[++n]===r;)++a;switch(r){case"G":t.era=5===a?b:4===a?v:y;break;case"y":case"Y":t.year=2===a?w:x;break;case"M":case"L":a=Math.min(Math.max(a-1,0),4),t.month=[x,w,y,v,b][a];break;case"E":case"e":case"c":t.weekday=5===a?b:4===a?v:y;break;case"d":case"D":t.day=2===a?w:x;break;case"h":case"K":t.hour12=!0,t.hour=2===a?w:x;break;case"H":case"k":t.hour12=!1,t.hour=2===a?w:x;break;case"m":t.minute=2===a?w:x;break;case"s":case"S":t.second=2===a?w:x;break;case"z":case"Z":case"v":case"V":t.timeZoneName=1===a?y:v}}return Object.keys(t).length?t:void 0}}},I=function(e,t){if("string"==typeof e&&t[e])return e;for(var n=[].concat(e||[]),r=0,a=n.length;r<a;++r)for(var i=n[r].split("-");i.length;){var s=i.join("-");if(t[s])return s;i.pop()}},C="zero",S="one",N="two",T="few",E="many",R="other",A=[function(e){return 1===+e?S:R},function(e){var t=+e;return 0<=t&&t<=1?S:R},function(e){return 0===Math.floor(Math.abs(+e))||1===+e?S:R},function(e){var t=+e;return 0===t?C:1===t?S:2===t?N:3<=t%100&&t%100<=10?T:11<=t%100&&t%100<=99?E:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?S:R},function(e){var t=+e;return t%10==1&&t%100!=11?S:2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?T:t%10==0||5<=t%10&&t%10<=9||11<=t%100&&t%100<=14?E:R},function(e){var t=+e;return t%10==1&&t%100!=11&&t%100!=71&&t%100!=91?S:t%10==2&&t%100!=12&&t%100!=72&&t%100!=92?N:(3<=t%10&&t%10<=4||t%10==9)&&(t%100<10||19<t%100)&&(t%100<70||79<t%100)&&(t%100<90||99<t%100)?T:0!==t&&t%1e6==0?E:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%10==1&&t%100!=11||r%10==1&&r%100!=11?S:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)||2<=r%10&&r%10<=4&&(r%100<12||14<r%100)?T:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?S:2<=t&&t<=4&&0===n?T:0!==n?E:R},function(e){var t=+e;return 0===t?C:1===t?S:2===t?N:3===t?T:6===t?E:R},function(e){var t=Math.floor(Math.abs(+e)),n=+(""+e).replace(/^[^.]*.?|0+$/g,"");return 1===+e||0!==n&&(0===t||1===t)?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%100==1||r%100==1?S:0===n&&t%100==2||r%100==2?N:0===n&&3<=t%100&&t%100<=4||3<=r%100&&r%100<=4?T:R},function(e){var t=Math.floor(Math.abs(+e));return 0===t||1===t?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&(1===t||2===t||3===t)||0===n&&t%10!=4&&t%10!=6&&t%10!=9||0!==n&&r%10!=4&&r%10!=6&&r%10!=9?S:R},function(e){var t=+e;return 1===t?S:2===t?N:3<=t&&t<=6?T:7<=t&&t<=10?E:R},function(e){var t=+e;return 1===t||11===t?S:2===t||12===t?N:3<=t&&t<=10||13<=t&&t<=19?T:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%10==1?S:0===n&&t%10==2?N:0!==n||t%100!=0&&t%100!=20&&t%100!=40&&t%100!=60&&t%100!=80?0!==n?E:R:T},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+e;return 1===t&&0===n?S:2===t&&0===n?N:0===n&&(r<0||10<r)&&r%10==0?E:R},function(e){var t=Math.floor(Math.abs(+e)),n=+(""+e).replace(/^[^.]*.?|0+$/g,"");return 0===n&&t%10==1&&t%100!=11||0!==n?S:R},function(e){var t=+e;return 1===t?S:2===t?N:R},function(e){var t=+e;return 0===t?C:1===t?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=+e;return 0===n?C:0!==t&&1!==t||0===n?R:S},function(e){var t=+(e+".").split(".")[1],n=+e;return n%10==1&&(n%100<11||19<n%100)?S:2<=n%10&&n%10<=9&&(n%100<11||19<n%100)?T:0!==t?E:R},function(e){var t=(e+".").split(".")[1].length,n=+(e+".").split(".")[1],r=+e;return r%10==0||11<=r%100&&r%100<=19||2===t&&11<=n%100&&n%100<=19?C:r%10==1&&r%100!=11||2===t&&n%10==1&&n%100!=11||2!==t&&n%10==1?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%10==1&&t%100!=11||r%10==1&&r%100!=11?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+e;return 1===t&&0===n?S:0!==n||0===r||1!==r&&1<=r%100&&r%100<=19?T:R},function(e){var t=+e;return 1===t?S:0===t||2<=t%100&&t%100<=10?T:11<=t%100&&t%100<=19?E:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?S:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?T:0===n&&1!==t&&0<=t%10&&t%10<=1||0===n&&5<=t%10&&t%10<=9||0===n&&12<=t%100&&t%100<=14?E:R},function(e){var t=Math.floor(Math.abs(+e));return 0<=t&&t<=1?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%10==1&&t%100!=11?S:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?T:0===n&&t%10==0||0===n&&5<=t%10&&t%10<=9||0===n&&11<=t%100&&t%100<=14?E:R},function(e){var t=+e;return 0===Math.floor(Math.abs(+e))||1===t?S:2<=t&&t<=10?T:R},function(e){var t=Math.floor(Math.abs(+e)),n=+(e+".").split(".")[1],r=+e;return 0===r||1===r||0===t&&1===n?S:R},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%100==1?S:0===n&&t%100==2?N:0===n&&3<=t%100&&t%100<=4||0!==n?T:R},function(e){var t=+e;return 0<=t&&t<=1||11<=t&&t<=99?S:R},function(e){var t=+e;return 1===t||5===t||7===t||8===t||9===t||10===t?S:2===t||3===t?N:4===t?T:6===t?E:R},function(e){var t=Math.floor(Math.abs(+e));return t%10==1||t%10==2||t%10==5||t%10==7||t%10==8||t%100==20||t%100==50||t%100==70||t%100==80?S:t%10==3||t%10==4||t%1e3==100||t%1e3==200||t%1e3==300||t%1e3==400||t%1e3==500||t%1e3==600||t%1e3==700||t%1e3==800||t%1e3==900?T:0===t||t%10==6||t%100==40||t%100==60||t%100==90?E:R},function(e){var t=+e;return t%10!=2&&t%10!=3||t%100==12||t%100==13?R:T},function(e){var t=+e;return 1===t||3===t?S:2===t?N:4===t?T:R},function(e){var t=+e;return 0===t||7===t||8===t||9===t?C:1===t?S:2===t?N:3===t||4===t?T:5===t||6===t?E:R},function(e){var t=+e;return t%10==1&&t%100!=11?S:t%10==2&&t%100!=12?N:t%10==3&&t%100!=13?T:R},function(e){var t=+e;return 1===t||11===t?S:2===t||12===t?N:3===t||13===t?T:R},function(e){var t=+e;return 1===t?S:2===t||3===t?N:4===t?T:6===t?E:R},function(e){var t=+e;return 1===t||5===t?S:R},function(e){var t=+e;return 11===t||8===t||80===t||800===t?E:R},function(e){var t=Math.floor(Math.abs(+e));return 1===t?S:0===t||2<=t%100&&t%100<=20||t%100==40||t%100==60||t%100==80?E:R},function(e){var t=+e;return t%10==6||t%10==9||t%10==0&&0!==t?E:R},function(e){var t=Math.floor(Math.abs(+e));return t%10==1&&t%100!=11?S:t%10==2&&t%100!=12?N:t%10!=7&&t%10!=8||t%100==17||t%100==18?R:E},function(e){var t=+e;return 1===t?S:2===t||3===t?N:4===t?T:R},function(e){var t=+e;return 1<=t&&t<=4?S:R},function(e){var t=+e;return 1===t||5===t||7<=t&&t<=9?S:2===t||3===t?N:4===t?T:6===t?E:R},function(e){var t=+e;return 1===t?S:t%10==4&&t%100!=14?E:R},function(e){var t=+e;return t%10!=1&&t%10!=2||t%100==11||t%100==12?R:S},function(e){var t=+e;return t%10==6||t%10==9||10===t?T:R},function(e){var t=+e;return t%10==3&&t%100!=13?T:R}],D={af:{cardinal:A[0]},ak:{cardinal:A[1]},am:{cardinal:A[2]},ar:{cardinal:A[3]},ars:{cardinal:A[3]},as:{cardinal:A[2],ordinal:A[34]},asa:{cardinal:A[0]},ast:{cardinal:A[4]},az:{cardinal:A[0],ordinal:A[35]},be:{cardinal:A[5],ordinal:A[36]},bem:{cardinal:A[0]},bez:{cardinal:A[0]},bg:{cardinal:A[0]},bh:{cardinal:A[1]},bn:{cardinal:A[2],ordinal:A[34]},br:{cardinal:A[6]},brx:{cardinal:A[0]},bs:{cardinal:A[7]},ca:{cardinal:A[4],ordinal:A[37]},ce:{cardinal:A[0]},cgg:{cardinal:A[0]},chr:{cardinal:A[0]},ckb:{cardinal:A[0]},cs:{cardinal:A[8]},cy:{cardinal:A[9],ordinal:A[38]},da:{cardinal:A[10]},de:{cardinal:A[4]},dsb:{cardinal:A[11]},dv:{cardinal:A[0]},ee:{cardinal:A[0]},el:{cardinal:A[0]},en:{cardinal:A[4],ordinal:A[39]},eo:{cardinal:A[0]},es:{cardinal:A[0]},et:{cardinal:A[4]},eu:{cardinal:A[0]},fa:{cardinal:A[2]},ff:{cardinal:A[12]},fi:{cardinal:A[4]},fil:{cardinal:A[13],ordinal:A[0]},fo:{cardinal:A[0]},fr:{cardinal:A[12],ordinal:A[0]},fur:{cardinal:A[0]},fy:{cardinal:A[4]},ga:{cardinal:A[14],ordinal:A[0]},gd:{cardinal:A[15],ordinal:A[40]},gl:{cardinal:A[4]},gsw:{cardinal:A[0]},gu:{cardinal:A[2],ordinal:A[41]},guw:{cardinal:A[1]},gv:{cardinal:A[16]},ha:{cardinal:A[0]},haw:{cardinal:A[0]},he:{cardinal:A[17]},hi:{cardinal:A[2],ordinal:A[41]},hr:{cardinal:A[7]},hsb:{cardinal:A[11]},hu:{cardinal:A[0],ordinal:A[42]},hy:{cardinal:A[12],ordinal:A[0]},ia:{cardinal:A[4]},io:{cardinal:A[4]},is:{cardinal:A[18]},it:{cardinal:A[4],ordinal:A[43]},iu:{cardinal:A[19]},iw:{cardinal:A[17]},jgo:{cardinal:A[0]},ji:{cardinal:A[4]},jmc:{cardinal:A[0]},ka:{cardinal:A[0],ordinal:A[44]},kab:{cardinal:A[12]},kaj:{cardinal:A[0]},kcg:{cardinal:A[0]},kk:{cardinal:A[0],ordinal:A[45]},kkj:{cardinal:A[0]},kl:{cardinal:A[0]},kn:{cardinal:A[2]},ks:{cardinal:A[0]},ksb:{cardinal:A[0]},ksh:{cardinal:A[20]},ku:{cardinal:A[0]},kw:{cardinal:A[19]},ky:{cardinal:A[0]},lag:{cardinal:A[21]},lb:{cardinal:A[0]},lg:{cardinal:A[0]},ln:{cardinal:A[1]},lt:{cardinal:A[22]},lv:{cardinal:A[23]},mas:{cardinal:A[0]},mg:{cardinal:A[1]},mgo:{cardinal:A[0]},mk:{cardinal:A[24],ordinal:A[46]},ml:{cardinal:A[0]},mn:{cardinal:A[0]},mo:{cardinal:A[25],ordinal:A[0]},mr:{cardinal:A[2],ordinal:A[47]},mt:{cardinal:A[26]},nah:{cardinal:A[0]},naq:{cardinal:A[19]},nb:{cardinal:A[0]},nd:{cardinal:A[0]},ne:{cardinal:A[0],ordinal:A[48]},nl:{cardinal:A[4]},nn:{cardinal:A[0]},nnh:{cardinal:A[0]},no:{cardinal:A[0]},nr:{cardinal:A[0]},nso:{cardinal:A[1]},ny:{cardinal:A[0]},nyn:{cardinal:A[0]},om:{cardinal:A[0]},or:{cardinal:A[0],ordinal:A[49]},os:{cardinal:A[0]},pa:{cardinal:A[1]},pap:{cardinal:A[0]},pl:{cardinal:A[27]},prg:{cardinal:A[23]},ps:{cardinal:A[0]},pt:{cardinal:A[28]},"pt-PT":{cardinal:A[4]},rm:{cardinal:A[0]},ro:{cardinal:A[25],ordinal:A[0]},rof:{cardinal:A[0]},ru:{cardinal:A[29]},rwk:{cardinal:A[0]},saq:{cardinal:A[0]},sc:{cardinal:A[4],ordinal:A[43]},scn:{cardinal:A[4],ordinal:A[43]},sd:{cardinal:A[0]},sdh:{cardinal:A[0]},se:{cardinal:A[19]},seh:{cardinal:A[0]},sh:{cardinal:A[7]},shi:{cardinal:A[30]},si:{cardinal:A[31]},sk:{cardinal:A[8]},sl:{cardinal:A[32]},sma:{cardinal:A[19]},smi:{cardinal:A[19]},smj:{cardinal:A[19]},smn:{cardinal:A[19]},sms:{cardinal:A[19]},sn:{cardinal:A[0]},so:{cardinal:A[0]},sq:{cardinal:A[0],ordinal:A[50]},sr:{cardinal:A[7]},ss:{cardinal:A[0]},ssy:{cardinal:A[0]},st:{cardinal:A[0]},sv:{cardinal:A[4],ordinal:A[51]},sw:{cardinal:A[4]},syr:{cardinal:A[0]},ta:{cardinal:A[0]},te:{cardinal:A[0]},teo:{cardinal:A[0]},ti:{cardinal:A[1]},tig:{cardinal:A[0]},tk:{cardinal:A[0],ordinal:A[52]},tl:{cardinal:A[13],ordinal:A[0]},tn:{cardinal:A[0]},tr:{cardinal:A[0]},ts:{cardinal:A[0]},tzm:{cardinal:A[33]},ug:{cardinal:A[0]},uk:{cardinal:A[29],ordinal:A[53]},ur:{cardinal:A[4]},uz:{cardinal:A[0]},ve:{cardinal:A[0]},vo:{cardinal:A[0]},vun:{cardinal:A[0]},wa:{cardinal:A[1]},wae:{cardinal:A[0]},xh:{cardinal:A[0]},xog:{cardinal:A[0]},yi:{cardinal:A[4]},zu:{cardinal:A[2]},lo:{ordinal:A[0]},ms:{ordinal:A[0]},vi:{ordinal:A[0]}};!function(e,t){var n=k,r=I,a=D;function i(e,t,n,r,a){var o=e.map((function(e){return function(e,t,n,r,a){if("string"==typeof e){var o=e;return function(){return o}}var u,l=e[0],c=e[1];if(t&&"#"===e[0]){l=t[0];var d=t[2],p=(r.number||h.number)([l,"number"],n);return function(e){return p(s(l,e)-d,e)}}"plural"===c||"selectordinal"===c?(u={},Object.keys(e[3]).forEach((function(t){u[t]=i(e[3][t],e,n,r,a)})),e=[e[0],e[1],e[2],u]):e[2]&&"object"==typeof e[2]&&(u={},Object.keys(e[2]).forEach((function(t){u[t]=i(e[2][t],e,n,r,a)})),e=[e[0],e[1],u]);var f=c&&(r[c]||h[c]);if(f){var m=f(e,n);return function(e){return m(s(l,e),e)}}return a?function(e){return String(s(l,e))}:function(e){return s(l,e)}}(e,t,n,r,a)}));return a?1===o.length?o[0]:function(e){for(var t="",n=0;n<o.length;++n)t+=o[n](e);return t}:function(e){return o.reduce((function(t,n){return t.concat(n(e))}),[])}}function s(e,t){if(t&&e in t)return t[e];for(var n=e.split("."),r=t,a=0,i=n.length;r&&a<i;++a)r=r[n[a]];return r}function o(e,t){var r=e[2],a=n.number[r]||n.parseNumberPattern(r)||n.number.default;return new Intl.NumberFormat(t,a).format}function u(e,t){var r=e[1],a=e[2],i=n[r][a]||n.parseDatePattern(a)||n[r].default;return new Intl.DateTimeFormat(t,i).format}function l(e,t){var n,i="selectordinal"===e[1]?"ordinal":"cardinal",s=e[2],o=e[3];if(Intl.PluralRules&&Intl.PluralRules.supportedLocalesOf(t).length>0)n=new Intl.PluralRules(t,{type:i});else{var u=r(t,a),l=u&&a[u][i]||c;n={select:l}}return function(e,t){return(o["="+ +e]||o[n.select(e-s)]||o.other)(t)}}function c(){return"other"}(t=e.exports=function(e,t,n){return i(e,null,t||"en",n||{},!0)}).toParts=function(e,t,n){return i(e,null,t||"en",n||{},!1)};var h={number:o,ordinal:o,spellout:o,duration:function(e,t){var r=e[2],a=n.duration[r]||n.duration.default,i=new Intl.NumberFormat(t,a.seconds).format,s=new Intl.NumberFormat(t,a.minutes).format,o=new Intl.NumberFormat(t,a.hours).format,u=/^fi$|^fi-|^da/.test(String(t))?".":":";return function(e,t){if(e=+e,!isFinite(e))return i(e);var n=~~(e/60/60),r=~~(e/60%60),a=(n?o(Math.abs(n))+u:"")+s(Math.abs(r))+u+i(Math.abs(e%60));return e<0?o(-1).replace(o(1),a):a}},date:u,time:u,plural:l,selectordinal:l,select:function(e,t){var n=e[2];return function(e,t){return(n[e]||n.other)(t)}}};t.types=h}({get exports(){return g},set exports(e){g=e}},g),function(e,t){var n=m,r=g,a=D,i=I,s=k;function o(e,t){return Object.keys(t).forEach((function(n){e[n]=t[n]})),e}e.exports=function e(){var t=o({},s),u="en",l={},c=function(e){return e},h=null,d="warning",p={};function f(e,t,a){var i="string"==typeof e?e:e.default,s=v(i,"object"==typeof e&&e.id||c(i),a||u);return(s.format||(s.format=r(n(s.message),a||u,p)))(t)}f.rich=function(e,t,a){var i="string"==typeof e?e:e.default,s=v(i,"object"==typeof e&&e.id||c(i),a||u);return(s.toParts||(s.toParts=r.toParts(n(s.message,{tagsType:m}),a||u,p)))(t)};var m="<>";function g(e,t){var n=e[2];return function(e,t){var r="object"==typeof n?function(e,t){return Object.keys(e).reduce((function(n,r){return n[r]=e[r](t),n}),{})}(n,t):n;return"function"==typeof e?e(r):e}}function v(e,t,n){var r=i(n,l)||"en",a=l[r]||(l[r]={}),s=a[t];if("string"==typeof s&&(s=a[t]={message:s}),!s){var o='Translation for "'+t+'" in "'+r+'" is missing';if("warning"===d)"undefined"!=typeof console&&console.warn(o);else if("ignore"!==d)throw new Error(o);var u="function"==typeof h?h(e,t,r)||e:h||e;s=a[t]={message:u}}return s}function y(e,t,n,r,s){"object"==typeof n&&"object"!=typeof r&&(s=r,r=n,n=0);var o=i(s||u,a),l=o&&a[o][e]||b;return r["="+ +t]||r[l(t-n)]||r.other}function b(){return"other"}return p[m]=g,f.setup=function(e){return(e=e||{}).locale&&(u=e.locale),"translations"in e&&(l=e.translations||{}),e.generateId&&(c=e.generateId),"missingReplacement"in e&&(h=e.missingReplacement),e.missingTranslation&&(d=e.missingTranslation),e.formats&&(e.formats.number&&o(t.number,e.formats.number),e.formats.date&&o(t.date,e.formats.date),e.formats.time&&o(t.time,e.formats.time)),e.types&&((p=e.types)[m]=g),{locale:u,translations:l,generateId:c,missingReplacement:h,missingTranslation:d,formats:t,types:p}},f.number=function(e,n,r){var a=n&&t.number[n]||t.parseNumberPattern(n)||t.number.default;return new Intl.NumberFormat(r||u,a).format(e)},f.date=function(e,n,r){var a=n&&t.date[n]||t.parseDatePattern(n)||t.date.default;return new Intl.DateTimeFormat(r||u,a).format(e)},f.time=function(e,n,r){var a=n&&t.time[n]||t.parseDatePattern(n)||t.time.default;return new Intl.DateTimeFormat(r||u,a).format(e)},f.select=function(e,t){return t[e]||t.other},f.custom=function(e,t,n,r){return e[1]in p?p[e[1]](e,t)(n,r):n},f.plural=y.bind(null,"cardinal"),f.selectordinal=y.bind(null,"ordinal"),f.namespace=e,f}()}(f);var F=p;const _=(e,t)=>F({id:`text2speech.${e.toLocaleLowerCase()}`,default:e.toLocaleLowerCase(),description:`Name for a funny voice with ${t}.`}),$=e=>Math.pow(2,e/12);var O={SQUEAK:{name:_("SQUEAK","a high pitch"),gender:"female",playbackRate:$(3)},TENOR:{name:_("TENOR","ambiguous gender"),gender:"male",playbackRate:1},ALTO:{name:_("ALTO","ambiguous gender"),gender:"female",playbackRate:1},GIANT:{name:_("GIANT","a low pitch."),gender:"male",playbackRate:$(-3)}};var M={cant:1,"can't":1,dont:1,"don't":1,doesnt:1,"doesn't":1,not:1,non:1,wont:1,"won't":1,isnt:1,"isn't":1},L={"😂":1,"❤":3,"♥":3,"😍":3,"😭":-1,"😘":3,"😊":3,"👌":2,"💕":3,"👏":2,"😁":2,"☺":3,"♡":3,"👍":2,"😩":-2,"🙏":2,"✌":2,"😏":1,"😉":2,"🙌":2,"🙈":2,"💪":2,"😄":2,"😒":-2,"💃":3,"💖":3,"😃":2,"😔":-1,"🎉":3,"😜":2,"🌸":3,"💜":3,"💙":3,"✨":1,"💗":3,"★":1,"█":-1,"☀":2,"😡":-1,"😎":2,"💋":3,"😋":3,"🙊":2,"😴":-1,"🎶":2,"💞":3,"😌":2,"🔫":-1,"💛":3,"💁":1,"💚":3,"♫":1,"😞":-1,"😆":2,"😝":2,"😪":-1,"😫":-1,"👊":1,"💀":-2,"😀":2,"😚":3,"😻":3,"💘":3,"☕":1,"👋":2,"🎊":3,"🍕":2,"❄":2,"😕":-2,"💔":-1,"😤":-2,"😈":1,"✈":2,"🔝":2,"😰":-1,"⚽":3,"😑":-2,"👑":3,"👉":1,"🍃":1,"🎁":3,"😠":-2,"🐧":2,"☆":2,"🍀":1,"🎈":3,"🎅":1,"😓":-1,"😣":-2,"😐":-2,"✊":2,"😨":-1,"😖":-1,"💤":1,"💓":3,"👎":-1,"💦":2,"✔":1,"😷":-1,"🙋":2,"🎄":2,"💩":-1,"🎵":2,"😛":3,"👯":2,"💎":2,"🌿":1,"🎂":3,"🌟":1,"🔮":1,"👫":1,"🏆":3,"✖":1,"☝":1,"😙":3,"⛄":2,"👅":2,"♪":2,"🍂":2,"💏":1,"🌴":2,"👈":2,"🌹":3,"🙆":2,"👻":1,"💰":1,"🍻":2,"🙅":-2,"🌞":2,"🍁":2,"⭐":2,"▪":1,"🎀":3,"🐷":1,"🙉":1,"🌺":2,"💅":1,"🐶":2,"🌚":2,"👽":1,"🎤":2,"👭":2,"🎧":2,"👆":1,"🍸":2,"🍷":2,"®":1,"🍉":3,"😇":3,"🏃":2,"😿":-2,"│":1,"🍺":2,"▶":1,"😲":-1,"🎸":2,"🍹":3,"💫":2,"📚":1,"😶":-1,"🌷":2,"💝":3,"💨":1,"🏈":2,"💍":2,"☔":1,"👸":3,"🇪":3,"░":-1,"🍩":1,"👾":1,"☁":1,"🌻":2,"↿":3,"🐯":2,"👼":1,"🍔":1,"😸":2,"👶":2,"↾":3,"💐":3,"🌊":2,"🍦":2,"🍓":3,"👇":1,"💆":1,"🍴":2,"😧":-1,"🇸":2,"😮":1,"🚫":-3,"😽":2,"🌈":2,"🙀":1,"⚠":-1,"🎮":2,"╯":-1,"🍆":2,"🍰":2,"✓":1,"👐":-1,"🍟":1,"🍌":2,"💑":3,"👬":-1,"🐣":2,"🎃":3,"▬":2,"￼":-3,"🐾":3,"🎓":2,"🏊":2,"📷":2,"👄":2,"🌼":4,"🚶":-1,"🐱":2,"🐸":-1,"🇺":2,"👿":-3,"🚬":2,"✿":1,"🐒":2,"🌍":3,"┊":5,"🐥":3,"🐼":1,"🎥":1,"💄":2,"⛔":2,"🏀":1,"💉":1,"💟":3,"🚗":1,"📝":1,"♦":2,"💭":1,"🌙":3,"🐟":3,"👣":1,"✂":-3,"🗿":2,"👪":-1,"🍭":1,"🌃":2,"❌":1,"🐰":3,"💊":2,"🚨":3,"😦":-2,"🍪":1,"🍣":-2,"✧":1,"🎆":3,"🎎":4,"🇩":3,"✅":2,"📱":1,"🙍":-2,"🍑":1,"🎼":1,"🔊":2,"🌌":2,"🍎":1,"🐻":2,"╰":-1,"💇":1,"♬":1,"🔴":2,"🍱":-2,"🍊":2,"🍒":1,"🐭":3,"👟":2,"🌎":1,"🍍":2,"🐮":3,"📲":1,"☼":1,"🌅":1,"🇷":3,"👠":1,"🌽":2,"💧":-1,"🍬":1,"😺":2,"🚀":2,"¦":3,"💢":1,"🎬":1,"🍧":1,"🍜":2,"🐏":3,"🏄":2,"➤":1,"⬆":1,"🍋":1,"🆗":2,"⚪":2,"📺":2,"🍅":1,"⛅":2,"🐢":1,"👙":2,"🏡":2,"🌾":2,"◉":1,"✏":1,"🐬":2,"🇹":3,"♣":1,"🐝":1,"🌝":1,"🇮":3,"🔋":-3,"🐍":1,"♔":2,"🔵":1,"😾":-2,"🌕":3,"🐨":2,"🔐":1,"💿":3,"🌳":2,"👰":2,"❀":2,"⚓":3,"🚴":3,"▀":-1,"👗":1,"➕":2,"💬":2,"▒":-1,"🔜":1,"🍨":1,"💲":1,"🍙":1,"🍥":-4,"▸":1,"♛":1,"😼":1,"🐙":2,"👨":2,"🍚":2,"♨":4,"🎹":1,"♕":2,"▃":5,"🇬":1,"🇧":1,"☠":-1,"🐠":2,"🚹":3,"💵":2,"✰":4,"╠":1,"👛":2,"🌱":3,"💻":1,"🌏":1,"▄":-1,"👓":1,"◄":1,"⚾":-1,"🌲":2,"👴":1,"🏠":2,"🍇":1,"🍘":2,"🐇":1,"🔞":-1,"👵":2,"◀":1,"🔙":1,"🌵":1,"🍮":-1,"🎇":3,"🐎":2,"➔":-1,"🐤":2,"╩":1,"🌑":2,"🚲":2,"🐑":-1,"🏁":2,"🎾":3,"╚":1,"🈹":1,"👮":-2,"☹":-3,"🐵":2,"✪":1,"◕":2,"🗼":3,"▐":-1,"♠":1,"┳":-2,"👺":-2,"🐚":1,"👂":-1,"🗽":1,"🍵":2,"🆒":2,"🐺":1,"⇨":2,"🌓":3,"🔒":1,"╬":-1,"👳":3,"🌂":1,"🚌":1,"♩":3,"🍡":-1,"❥":1,"🎡":1,"💌":2,"🐩":2,"🌜":2,"⌚":1,"🚿":3,"🔆":3,"🌛":3,"💂":-1,"🐔":1,"🙎":-1,"🏩":2,"🇫":2,"🔨":-1,"📢":2,"🐦":2,"🐲":-1,"♻":2,"🌘":3,"🌔":3,"👖":2,"😗":3,"🐄":1,"◟":-1,"🍢":-1,"🎨":1,"⬇":2,"🚼":3,"🇴":2,"🌗":3,"🌖":3,"🔅":5,"👜":1,"🐌":3,"💼":3,"🐹":1,"🌠":3,"🐈":1,"🌁":1,"⚫":1,"♧":2,"🏰":1,"🚵":2,"🎢":2,"🎷":3,"🎐":1,"┈":-4,"╗":2,"🌇":3,"⏰":2,"🚂":1,"◠":2,"🎿":2,"🆔":4,"🌒":3,"🐪":3,"╔":1,"╝":2,"👔":2,"🆓":1,"🐋":1,"▽":2,"🐛":1,"👕":2,"💳":2,"🏧":5,"💡":3,"⬅":2,"🐫":2,"🇱":2,"📹":2,"👞":2,"👚":3,"□":-2,"🚣":3,"🏉":3,"🗻":3,"╦":2,"⛺":3,"🐕":1,"🏂":2,"👡":2,"📻":2,"✒":1,"🌰":3,"🏢":1,"🎒":3,"⌒":3,"🏫":-2,"📴":4,"🚢":1,"🚚":-1,"🐉":1,"❒":1,"🔔":5,"◢":4,"🏥":1,"🚖":-1,"▌":-2,"☛":2,"💒":3,"🚤":2,"🐐":2,"■":-2,"🔚":2,"🎻":2,"🔷":1,"🎽":2,"📅":1,"🎺":3,"🍈":-3,"✉":1,"◤":5,"○":3,"🍼":3,"🚛":-2,"📓":1,"☉":1,"💴":-2,"➰":-1,"🔌":-1,"📕":1,"📣":2,"🚓":1,"🐗":3,"⛳":4,"┻":-3,"┛":3,"┃":2,"💺":1,"🏇":-1,"☻":1,"📞":2,"Ⓐ":-1,"🌉":3,"🚩":-2,"✎":3,"📃":2,"🏨":1,"📌":-3,"♎":-1,"💷":2,"🚄":3,"▲":3,"⛵":3,"🔸":1,"🚜":5,"🐆":2,"👒":1,"❕":1,"🔛":2,"♢":2,"🇲":2,"❅":4,"👝":2,"✞":2,"◡":1,"🎋":3,"👥":1,"🐡":1,"◆":4,"🔭":2,"🎪":1,"🐜":3,"♌":4,"☐":-5,"👷":1,"🔈":1,"📄":5,"🚐":4,"🌋":3,"📡":1,"🚳":5,"✘":4,"🅰":1,"🇼":2,"┓":3,"┣":3,"Ⓛ":2,"Ⓔ":2,"👤":4,"🚁":1,"🎠":3,"🐁":-2,"📗":1,"┐":-1,"♂":1,"📯":-1,"🔩":1,"👢":4,"◂":2,"📰":1,"📶":2,"🌄":1,"🗾":2,"🔶":2,"🏤":2,"🎩":2,"Ⓜ":1,"🔧":-4,"🐅":1,"♮":1,"🅾":-1,"📦":1,"🚊":1,"🔲":3,"△":1,"📆":5,"❛":2,"📉":2,"▵":2,"🔎":3,"☜":1,"🇯":2,"🇵":2,"📘":1,"ⓔ":3,"🔑":1,"⭕":2,"🔘":1,"🚭":5,"🚉":3,"🚪":3,"➳":2,"🚃":3,"┯":-3,"🆙":2,"🆖":1,"┗":5,"Ⓞ":2,"❇":3,"✴":3,"☊":5,"🔕":-2,"⬛":-2,"🚞":3,"🍶":3,"🌐":3,"♀":1,"🚅":3,"🚒":-2,"♋":1,"♍":3,"🕝":-2,"ⓐ":5,"📙":1,"Ⓢ":1,"📋":3,"🎱":1,"🐞":1,"🔺":1,"ⓡ":5,"♤":3,"🎯":3,"🔉":3,"↩":5,"🚾":1,"🎣":-4,"🔣":1,"❎":-5,"➥":1,"🎌":5,"◣":1,"⏬":5,"♭":1,"ⓞ":5,"🔳":2,"🏭":2,"🎳":-3,"☚":5,"➽":2,"➫":2,"➖":-5,"꒰":2,"꒱":2,"◝":-3,"📑":5,"ⓧ":5,"🔟":5,"〓":5,"ⓜ":2,"➠":5,"🚆":2,"℅":-5,"☃":2,"🚽":5,"ⓝ":5,"⇦":5,"👲":2,"🚡":-3,"🔬":5,"➗":-3,"📈":2,"⏪":2,"◎":5,"꒦":-5,"📎":5,"⑅":5,"✭":5,"♓":2,"┏":5,"☇":5,"࿎":-5,"👘":5,"↙":5,"Ⓕ":2,"Ⓦ":2,"Ⓟ":2,"🕑":2,"🕛":5,"♈":-5,"↬":5,"✍":5,"🏦":5,"🔻":5,"ⓟ":5,"ⓕ":5,"ⓘ":5,"♿":5,"⇗":5,"⇘":5,"ⓨ":5,"ⓙ":5,"▫":5,"🔇":5,"⌃":-5,"🔖":5,"📜":5,"🚝":5,"┘":-5,"✝":-5,"⍣":-5,"📮":-5,"🕕":-5,"🔯":5,"➸":5,"꒵":5,"🕥":-5,"✽":5,"📼":5,"🕐":-5,"🀄":5,"✬":5,"✫":5,"🕔":-5,"❣":5,"📫":5,"🉐":5,"🈂":-5,"🎰":-5,"҂":-5,"╤":-5,"📔":5},P={labels:{abandon:-2,abandoned:-2,abandons:-2,abducted:-2,abduction:-2,abductions:-2,abhor:-3,abhorred:-3,abhorrent:-3,abhors:-3,abilities:2,ability:2,aboard:1,aborted:-1,aborts:-1,absentee:-1,absentees:-1,absolve:2,absolved:2,absolves:2,absolving:2,absorbed:1,abuse:-3,abused:-3,abuses:-3,abusing:-3,abusive:-3,accept:1,acceptable:1,acceptance:1,accepted:1,accepting:1,accepts:1,accessible:1,accident:-2,accidental:-2,accidentally:-2,accidents:-2,acclaim:2,acclaimed:2,accolade:2,accomplish:2,accomplished:2,accomplishes:2,accomplishment:2,accomplishments:2,accusation:-2,accusations:-2,accuse:-2,accused:-2,accuses:-2,accusing:-2,ache:-2,achievable:1,aching:-2,acquit:2,acquits:2,acquitted:2,acquitting:2,acrimonious:-3,active:1,adequate:1,admire:3,admired:3,admires:3,admiring:3,admit:-1,admits:-1,admitted:-1,admonish:-2,admonished:-2,adopt:1,adopts:1,adorable:3,adoration:3,adore:3,adored:3,adores:3,adoring:3,adoringly:3,advanced:1,advantage:2,advantageous:2,advantageously:2,advantages:2,adventure:2,adventures:2,adventurous:2,adversary:-1,advisable:1,affected:-1,affection:3,affectionate:3,affectionateness:3,afflicted:-1,affordable:2,affronted:-1,aficionados:2,afraid:-2,aggravate:-2,aggravated:-2,aggravates:-2,aggravating:-2,aggression:-2,aggressions:-2,aggressive:-2,aggressiveness:-2,aghast:-2,agog:2,agonise:-3,agonised:-3,agonises:-3,agonising:-3,agonize:-3,agonized:-3,agonizes:-3,agonizing:-3,agree:1,agreeable:2,agreed:1,agreement:1,agrees:1,alarm:-2,alarmed:-2,alarmist:-2,alarmists:-2,alas:-1,alert:-1,alienation:-2,alive:1,allegation:-2,allegations:-2,allergic:-2,allow:1,ally:2,alone:-2,altruistic:2,amaze:2,amazed:2,amazes:2,amazing:4,ambitious:2,ambivalent:-1,amicable:2,amuse:3,amused:3,amusement:3,amusements:3,anger:-3,angered:-3,angers:-3,angry:-3,anguish:-3,anguished:-3,animosity:-2,annoy:-2,annoyance:-2,annoyed:-2,annoying:-2,annoys:-2,antagonistic:-2,anti:-1,anticipation:1,anxiety:-2,anxious:-2,apathetic:-3,apathy:-3,apeshit:-3,apocalyptic:-2,apologise:-1,apologised:-1,apologises:-1,apologising:-1,apologize:-1,apologized:-1,apologizes:-1,apologizing:-1,apology:-1,appalled:-2,appalling:-2,appealing:2,appease:2,appeased:2,appeases:2,appeasing:2,applaud:2,applauded:2,applauding:2,applauds:2,applause:2,appreciate:2,appreciated:2,appreciates:2,appreciating:2,appreciation:2,apprehensive:-2,appropriate:2,appropriately:2,approval:2,approved:2,approves:2,ardent:1,arrest:-2,arrested:-3,arrests:-2,arrogant:-2,arsehole:-4,ashame:-2,ashamed:-2,ass:-4,assassination:-3,assassinations:-3,assault:-2,assaults:-2,asset:2,assets:2,assfucking:-4,asshole:-4,astonished:2,astound:3,astounded:3,astounding:3,astoundingly:3,astounds:3,atrocious:-3,atrocity:-3,attack:-1,attacked:-1,attacking:-1,attacks:-1,attract:1,attracted:1,attracting:2,attraction:2,attractions:2,attractive:2,attractively:2,attractiveness:2,attracts:1,audacious:3,aura:1,authority:1,avenge:-2,avenged:-2,avenger:-2,avengers:-2,avenges:-2,avenging:-2,avert:-1,averted:-1,averts:-1,avid:2,avoid:-1,avoided:-1,avoids:-1,await:-1,awaited:-1,awaits:-1,award:3,awarded:3,awards:3,awesome:4,awful:-3,awkward:-2,axe:-1,axed:-1,backed:1,backing:2,backs:1,bad:-3,"bad luck":-2,badass:-3,badly:-3,badness:-3,bailout:-2,balanced:1,bamboozle:-2,bamboozled:-2,bamboozles:-2,ban:-2,banish:-1,bankrupt:-3,bankruptcy:-3,bankster:-3,banned:-2,barbarian:-2,barbaric:-2,barbarous:-2,bargain:2,barrier:-2,bastard:-5,bastards:-5,battle:-1,battled:-1,battles:-1,battling:-2,beaten:-2,beatific:3,beating:-1,beauties:3,beautiful:3,beautifully:3,beautify:3,beauty:3,befit:2,befitting:2,belittle:-2,belittled:-2,beloved:3,benefactor:2,benefactors:2,benefit:2,benefits:2,benefitted:2,benefitting:2,benevolent:3,bereave:-2,bereaved:-2,bereaves:-2,bereaving:-2,best:3,"best damn":4,betray:-3,betrayal:-3,betrayed:-3,betraying:-3,betrays:-3,better:2,bias:-1,biased:-2,big:1,bitch:-5,bitches:-5,bitter:-2,bitterest:-2,bitterly:-2,bizarre:-2,blackmail:-3,blackmailed:-3,blackmailing:-3,blackmails:-3,blah:-2,blame:-2,blamed:-2,blames:-2,blaming:-2,bless:2,blesses:2,blessing:3,blessings:3,blind:-1,bliss:3,blissful:3,blithe:2,bloated:-1,block:-1,blockade:-2,blockbuster:3,blocked:-1,blocking:-1,blocks:-1,bloody:-3,blurry:-2,boastful:-2,bold:2,boldly:2,bomb:-1,boost:1,boosted:1,boosting:1,boosts:1,bore:-2,bored:-2,boring:-3,bother:-2,bothered:-2,bothers:-2,bothersome:-2,boycott:-2,boycotted:-2,boycotting:-2,boycotts:-2,brainwashing:-3,brave:2,braveness:2,bravery:2,bravura:3,breach:-2,breached:-2,breaches:-2,breaching:-2,breakthrough:3,breathtaking:5,bribe:-3,bribed:-3,bribes:-3,bribing:-3,bright:1,brightest:2,brightness:1,brilliant:4,brilliance:3,brilliances:3,brisk:2,broke:-1,broken:-1,brooding:-2,brutal:-3,brutally:-3,bullied:-2,bullshit:-4,bully:-2,bullying:-2,bummer:-2,buoyant:2,burden:-2,burdened:-2,burdening:-2,burdens:-2,burglar:-2,burglary:-2,calm:2,calmed:2,calming:2,calms:2,"can't stand":-3,cancel:-1,cancelled:-1,cancelling:-1,cancels:-1,cancer:-1,capabilities:1,capability:1,capable:1,captivated:3,care:2,carefree:1,careful:2,carefully:2,carefulness:2,careless:-2,cares:2,caring:2,"cashing in":-2,casualty:-2,catastrophe:-3,catastrophic:-4,cautious:-1,celebrate:3,celebrated:3,celebrates:3,celebrating:3,celebration:3,celebrations:3,censor:-2,censored:-2,censors:-2,certain:1,chagrin:-2,chagrined:-2,challenge:-1,champion:2,championed:2,champions:2,chance:2,chances:2,chaos:-2,chaotic:-2,charged:-3,charges:-2,charisma:2,charitable:2,charm:3,charming:3,charmingly:3,charmless:-3,chastise:-3,chastised:-3,chastises:-3,chastising:-3,cheat:-3,cheated:-3,cheater:-3,cheaters:-3,cheating:-3,cheats:-3,cheer:2,cheered:2,cheerful:2,cheerfully:2,cheering:2,cheerless:-2,cheers:2,cheery:3,cherish:2,cherished:2,cherishes:2,cherishing:2,chic:2,chide:-3,chided:-3,chides:-3,chiding:-3,childish:-2,chilling:-1,choke:-2,choked:-2,chokes:-2,choking:-2,clarifies:2,clarity:2,clash:-2,classy:3,clean:2,cleaner:2,clear:1,cleared:1,clearly:1,clears:1,clever:2,clouded:-1,clueless:-2,cock:-5,cocksucker:-5,cocksuckers:-5,cocky:-2,coerced:-2,coercion:-2,collapse:-2,collapsed:-2,collapses:-2,collapsing:-2,collide:-1,collides:-1,colliding:-1,collision:-2,collisions:-2,colluding:-3,combat:-1,combats:-1,comedy:1,comfort:2,comfortable:2,comfortably:2,comforting:2,comforts:2,comic:1,commend:2,commended:2,commit:1,commitment:2,commits:1,committed:1,committing:1,compassion:2,compassionate:2,compelled:1,competencies:1,competent:2,competitive:2,complacent:-2,complain:-2,complained:-2,complaining:-2,complains:-2,complaint:-2,complaints:-2,complicating:-2,compliment:2,complimented:2,compliments:2,comprehensive:2,concerned:-2,conciliate:2,conciliated:2,conciliates:2,conciliating:2,condemn:-2,condemnation:-2,condemned:-2,condemns:-2,confidence:2,confident:2,confidently:2,conflict:-2,conflicting:-2,conflictive:-2,conflicts:-2,confuse:-2,confused:-2,confusing:-2,congrats:2,congratulate:2,congratulation:2,congratulations:2,consent:2,consents:2,consolable:2,conspiracy:-3,constipation:-2,constrained:-2,contagion:-2,contagions:-2,contagious:-1,contaminant:-2,contaminants:-2,contaminate:-2,contaminated:-2,contaminates:-2,contaminating:-2,contamination:-2,contaminations:-2,contempt:-2,contemptible:-2,contemptuous:-2,contemptuously:-2,contend:-1,contender:-1,contending:-1,contentious:-2,contestable:-2,controversial:-2,controversially:-2,controversies:-2,controversy:-2,convicted:-2,convince:1,convinced:1,convinces:1,convivial:2,cool:1,"cool stuff":3,cornered:-2,corpse:-1,corrupt:-3,corrupted:-3,corrupting:-3,corruption:-3,corrupts:-3,costly:-2,courage:2,courageous:2,courageously:2,courageousness:2,courteous:2,courtesy:2,"cover-up":-3,coward:-2,cowardly:-2,coziness:2,cramp:-1,crap:-3,crappy:-3,crash:-2,crazier:-2,craziest:-2,crazy:-2,creative:2,crestfallen:-2,cried:-2,cries:-2,crime:-3,crimes:-3,criminal:-3,criminals:-3,criminate:-3,criminated:-3,criminates:-3,crisis:-3,critic:-2,criticise:-2,criticised:-2,criticises:-2,criticising:-2,criticism:-2,criticize:-2,criticized:-2,criticizes:-2,criticizing:-2,critics:-2,critique:-2,crowding:-1,crude:-1,cruel:-3,cruelty:-3,crush:-1,crushed:-2,crushes:-1,crushing:-1,cry:-1,crying:-2,cunning:2,cunt:-5,curious:1,curse:-1,cut:-1,cutback:-2,cutbacks:-2,cute:2,cuts:-1,cutting:-1,cynic:-2,cynical:-2,cynicism:-2,damage:-3,damaged:-3,damages:-3,damaging:-3,damn:-2,"damn cute":3,"damn good":4,damned:-4,damnit:-4,danger:-2,dangerous:-2,dangerously:-2,daredevil:2,daring:2,darkest:-2,darkness:-1,dauntless:2,dazzling:3,dead:-3,deadening:-2,deadlock:-2,deadly:-3,deafening:-1,dear:2,dearly:3,death:-2,deaths:-2,debonair:2,debt:-2,deceit:-3,deceitful:-3,deceive:-3,deceived:-3,deceives:-3,deceiving:-3,deception:-3,deceptive:-3,decisive:1,dedicated:2,dedication:2,defeat:-2,defeated:-2,defect:-3,defective:-3,defects:-3,defender:2,defenders:2,defenseless:-2,defer:-1,deferring:-1,defiant:-1,deficient:-2,deficiency:-2,deficiencies:-2,deficit:-2,deformed:-2,deformities:-2,deformity:-2,defraud:-3,defrauds:-3,deft:2,defunct:-2,degrade:-2,degraded:-2,degrades:-2,dehumanize:-2,dehumanized:-2,dehumanizes:-2,dehumanizing:-2,deject:-2,dejected:-2,dejecting:-2,dejects:-2,delay:-1,delayed:-1,delectable:3,delicious:3,delight:3,delighted:3,delightful:3,delightfully:3,delighting:3,delights:3,demand:-1,demanded:-1,demanding:-1,demands:-1,demonstration:-1,demoralize:-2,demoralized:-2,demoralizes:-2,demoralizing:-2,denial:-2,denials:-2,denied:-2,denier:-2,deniers:-2,denies:-2,denounce:-2,denounces:-2,dent:-2,deny:-2,denying:-2,deplore:-3,deplored:-3,deplores:-3,deploring:-3,deport:-2,deported:-2,deporting:-2,deports:-2,deportation:-2,deportations:-2,depressed:-2,depressing:-2,deprivation:-3,derail:-2,derailed:-2,derails:-2,derelict:-2,deride:-2,derided:-2,derides:-2,deriding:-2,derision:-2,desirable:2,desire:1,desired:2,desirous:2,despair:-3,despairing:-3,despairs:-3,desperate:-3,desperately:-3,despondent:-3,destroy:-3,destroyed:-3,destroying:-3,destroys:-3,destruction:-3,destructive:-3,detached:-1,detain:-2,detained:-2,detention:-2,deteriorate:-2,deteriorated:-2,deteriorates:-2,deteriorating:-2,determined:2,deterrent:-2,detract:-1,detracted:-1,detracts:-1,devastate:-2,devastated:-2,devastating:-2,devastation:-2,devastations:-2,devoted:3,devotion:2,devotional:2,diamond:1,dick:-4,dickhead:-4,die:-3,died:-3,difficult:-1,diffident:-2,dignity:2,dilemma:-1,dilligence:2,dipshit:-3,dire:-3,direful:-3,dirt:-2,dirtier:-2,dirtiest:-2,dirty:-2,disabilities:-2,disability:-2,disabling:-1,disadvantage:-2,disadvantaged:-2,disagree:-2,disagreeable:-2,disagreement:-2,disappear:-1,disappeared:-1,disappears:-1,disappoint:-2,disappointed:-2,disappointing:-2,disappointment:-2,disappointments:-2,disappoints:-2,disapproval:-2,disapprovals:-2,disapprove:-2,disapproved:-2,disapproves:-2,disapproving:-2,disaster:-2,disasters:-2,disastrous:-3,disbelieve:-2,discard:-1,discarded:-1,discarding:-1,discards:-1,discernment:2,discomfort:-2,disconsolate:-2,disconsolation:-2,discontented:-2,discord:-2,discounted:-1,discouraged:-2,discredited:-2,discriminate:-2,discriminated:-2,discriminates:-2,discriminating:-2,discriminatory:-2,disdain:-2,disease:-1,diseases:-1,disgrace:-2,disgraced:-2,disguise:-1,disguised:-1,disguises:-1,disguising:-1,disgust:-3,disgusted:-3,disgustful:-3,disgusting:-3,disheartened:-2,dishonest:-2,disillusioned:-2,disinclined:-2,disjointed:-2,dislike:-2,disliked:-2,dislikes:-2,dismal:-2,dismayed:-2,dismissed:-2,disorder:-2,disorders:-2,disorganized:-2,disoriented:-2,disparage:-2,disparaged:-2,disparages:-2,disparaging:-2,displeased:-2,displeasure:-2,disproportionate:-2,dispute:-2,disputed:-2,disputes:-2,disputing:-2,disqualified:-2,disquiet:-2,disregard:-2,disregarded:-2,disregarding:-2,disregards:-2,disrespect:-2,disrespected:-2,disrupt:-2,disrupted:-2,disrupting:-2,disruption:-2,disruptions:-2,disruptive:-2,disrupts:-2,dissatisfied:-2,distasteful:-2,distinguished:2,distort:-2,distorted:-2,distorting:-2,distorts:-2,distract:-2,distracted:-2,distraction:-2,distracts:-2,distress:-2,distressed:-2,distresses:-2,distressing:-2,distrust:-3,distrustful:-3,disturb:-2,disturbed:-2,disturbing:-2,disturbs:-2,dithering:-2,diverting:-1,dizzy:-1,dodging:-2,dodgy:-2,"does not work":-3,dolorous:-2,donate:2,donated:2,donates:2,donating:2,donation:2,"dont like":-2,doom:-2,doomed:-2,doubt:-1,doubted:-1,doubtful:-1,doubting:-1,doubts:-1,douche:-3,douchebag:-3,dour:-2,downcast:-2,downer:-2,downhearted:-2,downside:-2,drag:-1,dragged:-1,drags:-1,drained:-2,dread:-2,dreaded:-2,dreadful:-3,dreading:-2,dream:1,dreams:1,dreary:-2,droopy:-2,drop:-1,dropped:-1,drown:-2,drowned:-2,drowns:-2,drudgery:-2,drunk:-2,dubious:-2,dud:-2,dull:-2,dumb:-3,dumbass:-3,dump:-1,dumped:-2,dumps:-1,dupe:-2,duped:-2,dupery:-2,durable:2,dying:-3,dysfunction:-2,eager:2,earnest:2,ease:2,easy:1,ecstatic:4,eerie:-2,eery:-2,effective:2,effectively:2,effectiveness:2,effortlessly:2,elated:3,elation:3,elegant:2,elegantly:2,embarrass:-2,embarrassed:-2,embarrasses:-2,embarrassing:-2,embarrassment:-2,embezzlement:-3,embittered:-2,embrace:1,emergency:-2,empathetic:2,empower:2,empowerment:2,emptiness:-1,empty:-1,enchanted:2,encourage:2,encouraged:2,encouragement:2,encourages:2,encouraging:2,endorse:2,endorsed:2,endorsement:2,endorses:2,enemies:-2,enemy:-2,energetic:2,engage:1,engages:1,engrossed:1,engrossing:3,enjoy:2,enjoyable:2,enjoyed:2,enjoying:2,enjoys:2,enlighten:2,enlightened:2,enlightening:2,enlightens:2,ennui:-2,enrage:-2,enraged:-2,enrages:-2,enraging:-2,enrapture:3,enslave:-2,enslaved:-2,enslaves:-2,ensure:1,ensuring:1,enterprising:1,entertaining:2,enthral:3,enthusiastic:3,entitled:1,entrusted:2,envies:-1,envious:-2,"environment-friendly":2,envy:-1,envying:-1,erroneous:-2,error:-2,errors:-2,escape:-1,escapes:-1,escaping:-1,esteem:2,esteemed:2,ethical:2,euphoria:3,euphoric:4,evacuate:-1,evacuated:-1,evacuates:-1,evacuating:-1,evacuation:-1,evergreen:2,evergreens:2,evergreening:-3,eviction:-1,evil:-3,exacerbate:-2,exacerbated:-2,exacerbates:-2,exacerbating:-2,exaggerate:-2,exaggerated:-2,exaggerates:-2,exaggerating:-2,exasparate:-2,exasperated:-2,exasperates:-2,exasperating:-2,excellence:3,excellent:3,excite:3,excited:3,excitement:3,exciting:3,exclude:-1,excluded:-2,exclusion:-1,exclusive:2,excruciatingly:-1,excuse:-1,exempt:-1,exhausted:-2,exhilarated:3,exhilarates:3,exhilarating:3,exonerate:2,exonerated:2,exonerates:2,exonerating:2,expand:1,expands:1,expel:-2,expelled:-2,expelling:-2,expels:-2,expertly:2,exploit:-2,exploited:-2,exploiting:-2,exploits:-2,exploration:1,explorations:1,expose:-1,exposed:-1,exposes:-1,exposing:-1,exquisite:3,extend:1,extends:1,extremist:-2,extremists:-2,exuberant:4,exultant:3,exultantly:3,fabulous:4,fabulously:4,fad:-2,fag:-3,faggot:-3,faggots:-3,fail:-2,failed:-2,failing:-2,fails:-2,failure:-2,failures:-2,fainthearted:-2,fair:2,fairness:2,faith:1,faithful:3,fake:-3,faker:-3,fakes:-3,faking:-3,fallen:-2,falling:-1,false:-1,falsely:-2,falsified:-3,falsify:-3,fame:1,famine:-2,famous:2,fan:3,fantastic:4,farce:-1,fascinate:3,fascinated:3,fascinates:3,fascinating:3,fascination:3,fascist:-2,fascists:-2,fatal:-3,fatalities:-3,fatality:-3,fatigue:-2,fatigued:-2,fatigues:-2,fatiguing:-2,favor:2,favorable:2,favorably:2,favored:2,favorite:2,favorited:2,favorites:2,favors:2,favour:2,favourable:2,favourably:2,favoured:2,favourite:2,favourited:2,favourites:2,favours:2,fear:-2,fearful:-2,fearfully:-2,fearing:-2,fearless:2,fearlessness:2,fearsome:-2,"fed up":-3,feeble:-2,feeling:1,felonies:-3,felony:-3,fertile:2,fervent:2,fervid:2,festive:2,fever:-2,fiasco:-3,fidgety:-2,fight:-1,fighting:-2,fine:2,fines:-2,finest:3,fire:-2,fired:-2,firing:-2,fit:1,fitness:1,filth:-2,filthy:-2,flagship:2,flaw:-2,flawed:-3,flawless:2,flawlessly:2,flaws:-2,flees:-1,flop:-2,flops:-2,flu:-2,flustered:-2,focused:2,fond:2,fondness:2,fool:-2,foolish:-2,fools:-2,forbid:-1,forbidden:-2,forbidding:-2,forced:-1,foreclosure:-2,foreclosures:-2,forefront:1,forget:-1,forgetful:-2,forgettable:-1,forgive:1,forgiving:1,forgot:-1,forgotten:-1,fortune:2,fortunate:2,fortunately:2,foul:-3,frantic:-1,fraud:-4,frauds:-4,fraudster:-4,fraudsters:-4,fraudulence:-4,fraudulent:-4,freak:-2,free:1,freedom:2,freedoms:2,frenzy:-3,fresh:1,friend:1,friendliness:2,friendly:2,friendship:2,fright:-2,frightened:-2,frightening:-3,frikin:-2,frisky:2,frowning:-1,fruitless:-2,frustrate:-2,frustrated:-2,frustrates:-2,frustrating:-2,frustration:-2,ftw:3,fuck:-4,fucked:-4,fucker:-4,fuckers:-4,fuckface:-4,fuckhead:-4,fuckin:-4,fucking:-4,"fucking amazing":4,"fucking beautiful":4,"fucking cute":4,"fucking fantastic":4,"fucking good":4,"fucking great":4,"fucking hot":2,"fucking love":4,"fucking loves":4,"fucking perfect":4,fucktard:-4,fud:-3,fuked:-4,fuking:-4,fulfill:2,fulfilled:2,fulfillment:2,fulfills:2,fuming:-2,fun:4,funeral:-1,funerals:-1,funky:2,funnier:4,funny:4,furious:-3,futile:-2,gag:-2,gagged:-2,gain:2,gained:2,gaining:2,gains:2,gallant:3,gallantly:3,gallantry:3,"game-changing":3,garbage:-1,gem:3,generous:2,generously:2,genial:3,ghastly:-2,ghost:-1,giddy:-2,gift:2,glad:3,glamorous:3,glamourous:3,glee:3,gleeful:3,gloom:-1,gloomy:-2,glorious:2,glory:2,glum:-2,god:1,goddamn:-3,godsend:4,gold:2,good:3,goodlooking:3,goodmorning:1,goodness:3,goodwill:3,goofiness:-2,goofy:-2,grace:1,graceful:2,gracious:3,grand:3,grant:1,granted:1,granting:1,grants:1,grateful:3,gratification:2,grave:-2,gray:-1,grisly:-2,gr8:3,great:3,greater:3,greatest:3,greed:-3,greedy:-2,"green wash":-3,"green washing":-3,greenwash:-3,greenwasher:-3,greenwashers:-3,greenwashing:-3,greet:1,greeted:1,greeting:1,greetings:2,greets:1,grey:-1,grief:-2,grieved:-2,grim:-2,gripping:2,groan:-2,groaned:-2,groaning:-2,groans:-2,gross:-2,growing:1,growth:2,growths:2,gruesome:-3,guarantee:1,guilt:-3,guilty:-3,gullibility:-2,gullible:-2,gun:-1,ha:2,hacked:-1,haha:3,hahaha:3,hahahah:3,hail:2,hailed:2,hallelujah:3,handpicked:1,handsome:3,hapless:-2,haplessness:-2,happiest:3,happiness:3,happy:3,harass:-3,harassed:-3,harasses:-3,harassing:-3,harassment:-3,hard:-1,hardier:2,hardship:-2,hardy:2,harm:-2,harmed:-2,harmful:-2,harming:-2,harmony:2,harmonious:2,harmoniously:2,harms:-2,harried:-2,harsh:-2,harsher:-2,harshest:-2,harshly:-2,hate:-3,hated:-3,hater:-3,haters:-3,hates:-3,hating:-3,hatred:-3,haunt:-1,haunted:-2,haunting:1,haunts:-1,havoc:-2,hazardous:-3,headache:-2,healthy:2,heartbreaking:-3,heartbroken:-3,heartfelt:3,heartless:-2,heartwarming:3,heaven:2,heavenly:4,heavyhearted:-2,hehe:2,hell:-4,hellish:-2,help:2,helpful:2,helping:2,helpless:-2,helps:2,hero:2,heroes:2,heroic:3,hesitant:-2,hesitate:-2,hid:-1,hide:-1,hideous:-3,hides:-1,hiding:-1,highlight:2,hilarious:2,hinder:-2,hindrance:-2,hoax:-2,hollow:-1,homeless:-2,homesick:-2,homicide:-2,homicides:-2,honest:2,honor:2,honored:2,honoring:2,honour:2,honoured:2,honouring:2,hooligan:-2,hooliganism:-2,hooligans:-2,hope:2,hopeful:2,hopefully:2,hopeless:-2,hopelessness:-2,hopes:2,hoping:2,horrendous:-3,horrid:-3,horrible:-3,horrific:-3,horrified:-3,hospitalized:-2,hostile:-2,huckster:-2,hug:2,huge:1,hugs:2,humane:2,humble:1,humbug:-2,humerous:3,humiliated:-3,humiliation:-3,humor:2,humorous:2,humour:2,humourous:2,hunger:-2,hurrah:5,hurt:-2,hurting:-2,hurts:-2,hypocritical:-2,hysteria:-3,hysterical:-3,hysterics:-3,icky:-3,idiocy:-3,idiot:-3,idiotic:-3,ignorance:-2,ignorant:-2,ignore:-1,ignored:-2,ignores:-1,ill:-2,"ill-fated":-2,illegal:-3,illegally:-3,illegitimate:-3,illiteracy:-2,illness:-2,illnesses:-2,illogical:-2,imaginative:2,imbecile:-3,immobilized:-1,immortal:2,immune:1,impair:-2,impaired:-2,impairing:-2,impairment:-2,impairs:-2,impatient:-2,impeachment:-3,impeachments:-3,impede:-2,impeded:-2,impedes:-2,impeding:-2,impedingly:-2,imperfect:-2,importance:2,important:2,impose:-1,imposed:-1,imposes:-1,imposing:-1,imposter:-2,impotent:-2,impress:3,impressed:3,impresses:3,impressive:3,imprisoned:-2,imprisonment:-2,improper:-2,improperly:-2,improve:2,improved:2,improvement:2,improves:2,improving:2,inability:-2,inaction:-2,inadequate:-2,inadvertently:-2,inappropriate:-2,incapable:-2,incapacitated:-2,incapacitates:-2,incapacitating:-2,incense:-2,incensed:-2,incenses:-2,incensing:-2,incoherent:-2,incompetence:-2,incompetent:-2,incomplete:-1,incomprehensible:-2,inconsiderate:-2,inconvenience:-2,inconvenient:-2,increase:1,increased:1,indecisive:-2,indestructible:2,indicted:-2,indifference:-2,indifferent:-2,indignant:-2,indignation:-2,indoctrinate:-2,indoctrinated:-2,indoctrinates:-2,indoctrinating:-2,inediable:-2,inexorable:-3,inexcusable:-3,ineffective:-2,ineffectively:-2,ineffectual:-2,inefficiency:-2,inefficient:-2,inefficiently:-2,inept:-2,ineptitude:-2,infantile:-2,infantilized:-2,infatuated:2,infatuation:2,infect:-2,infected:-2,infecting:-2,infection:-2,infections:-2,infectious:-2,infects:-2,inferior:-2,infest:-2,infested:-2,infesting:-2,infests:-2,inflamed:-2,inflict:-2,inflicted:-2,inflicting:-2,inflicts:-2,influential:2,infract:-2,infracted:-2,infracting:-2,infracts:-2,infringement:-2,infuriate:-2,infuriated:-2,infuriates:-2,infuriating:-2,inhibit:-1,inhuman:-2,injured:-2,injuries:-2,injury:-2,injustice:-2,innovate:1,innovates:1,innovation:1,innovative:2,inoperative:-2,inquisition:-2,inquisitive:2,insane:-2,insanity:-2,insecure:-2,insensitive:-2,insensitivity:-2,insignificant:-2,insipid:-2,insolvent:-2,insomnia:-2,inspiration:2,inspirational:2,inspire:2,inspired:2,inspires:2,inspiring:3,insufficiency:-2,insufficient:-2,insufficiently:-2,insult:-2,insulted:-2,insulting:-2,insults:-2,intact:2,integrity:2,intelligent:2,intense:1,interest:1,interested:2,interesting:2,interests:1,interrogated:-2,interrupt:-2,interrupted:-2,interrupting:-2,interruption:-2,interrupts:-2,intimacy:2,intimidate:-2,intimidated:-2,intimidates:-2,intimidating:-2,intimidation:-2,intransigence:-2,intransigency:-2,intricate:2,intrigues:1,invasion:-1,invincible:2,invite:1,inviting:1,invulnerable:2,irate:-3,ironic:-1,irony:-1,irrational:-1,irreparable:-2,irreproducible:-2,irresistible:2,irresistibly:2,irresolute:-2,irresponsible:-2,irresponsibly:-2,irreversible:-1,irreversibly:-1,irritate:-3,irritated:-3,irritates:-3,irritating:-3,isolated:-1,itchy:-2,jackass:-4,jackasses:-4,jailed:-2,jaunty:2,jealous:-2,jealousy:-2,jeopardy:-2,jerk:-3,jesus:1,jewel:1,jewels:1,jocular:2,join:1,joke:2,jokes:2,jolly:2,jovial:2,joy:3,joyful:3,joyfully:3,joyless:-2,joyous:3,jubilant:3,jumpy:-1,justice:2,justifiably:2,justified:2,keen:1,kickback:-3,kickbacks:-3,kidnap:-2,kidnapped:-2,kidnapping:-2,kidnappings:-2,kidnaps:-2,kill:-3,killed:-3,killing:-3,kills:-3,kind:2,"kind of":0,kinder:2,kindness:2,kiss:2,kudos:3,lack:-2,lackadaisical:-2,lag:-1,lagged:-2,lagging:-2,lags:-2,lame:-2,landmark:2,lapse:-1,lapsed:-1,laugh:1,laughed:1,laughing:1,laughs:1,laughting:1,launched:1,lawl:3,lawsuit:-2,lawsuits:-2,lazy:-1,leadership:1,leading:2,leak:-1,leaked:-1,leave:-1,legal:1,legally:1,lenient:1,lethal:-2,lethality:-2,lethargic:-2,lethargy:-2,liar:-3,liars:-3,libelous:-2,lied:-2,lifeless:-1,lifesaver:4,lighthearted:1,likable:2,like:2,likeable:2,liked:2,likers:2,likes:2,liking:2,limitation:-1,limited:-1,limits:-1,litigation:-1,litigious:-2,lively:2,livid:-2,lmao:4,lmfao:4,loathe:-3,loathed:-3,loathes:-3,loathing:-3,loathsome:-3,lobbied:-2,lobby:-2,lobbying:-2,lobbyist:-2,lobbyists:-2,lol:3,lolol:4,lololol:4,lolololol:4,lonely:-2,lonesome:-2,longing:-1,lool:3,loom:-1,loomed:-1,looming:-1,looms:-1,loool:3,looool:3,loose:-3,looses:-3,loser:-3,losing:-3,loss:-3,losses:-3,lost:-3,lousy:-2,lovable:3,love:3,loved:3,lovelies:3,lovely:3,loves:3,loving:2,"loving-kindness":3,lowest:-1,loyal:3,loyalty:3,luck:3,luckily:3,lucky:3,lucrative:3,ludicrous:-3,lugubrious:-2,lunatic:-3,lunatics:-3,lurk:-1,lurking:-1,lurks:-1,luxury:2,macabre:-2,mad:-3,maddening:-3,"made-up":-1,madly:-3,madness:-3,magnificent:3,maladaption:-2,maldevelopment:-2,maltreatment:-2,mandatory:-1,manipulated:-1,manipulating:-1,manipulation:-1,manslaughter:-3,marvel:3,marvelous:3,marvels:3,masterpiece:4,masterpieces:4,matter:1,matters:1,mature:2,meaningful:2,meaningless:-2,medal:3,mediocrity:-3,meditative:1,melancholy:-2,memorable:1,memoriam:-2,menace:-2,menaced:-2,menaces:-2,mercy:2,merry:3,mesmerizing:3,mess:-2,messed:-2,"messing up":-2,methodical:2,methodically:2,mindless:-2,miracle:4,mirth:3,mirthful:3,mirthfully:3,misbehave:-2,misbehaved:-2,misbehaves:-2,misbehaving:-2,misbranding:-3,miscast:-2,mischief:-1,mischiefs:-1,misclassified:-2,misclassifies:-2,misclassify:-2,misconduct:-2,misconducted:-2,misconducting:-2,misconducts:-2,miserable:-3,miserably:-3,misery:-2,misfire:-2,misfortune:-2,misgiving:-2,misinformation:-2,misinformed:-2,misinterpreted:-2,mislead:-3,misleaded:-3,misleading:-3,misleads:-3,misplace:-2,misplaced:-2,misplaces:-2,misplacing:-2,mispricing:-3,misread:-1,misreport:-2,misreported:-2,misreporting:-2,misreports:-2,misrepresent:-2,misrepresentation:-2,misrepresentations:-2,misrepresented:-2,misrepresenting:-2,misrepresents:-2,miss:-2,missed:-2,missing:-2,mistake:-2,mistaken:-2,mistakes:-2,mistaking:-2,misunderstand:-2,misunderstanding:-2,misunderstands:-2,misunderstood:-2,misuse:-2,misused:-2,misuses:-2,misusing:-2,moan:-2,moaned:-2,moaning:-2,moans:-2,mock:-2,mocked:-2,mocking:-2,mocks:-2,modernize:2,modernized:2,modernizes:2,modernizing:2,mongering:-2,monopolize:-2,monopolized:-2,monopolizes:-2,monopolizing:-2,monotone:-1,moody:-1,mope:-1,moping:-1,moron:-3,motherfucker:-5,motherfucking:-5,motivate:1,motivated:2,motivating:2,motivation:1,mourn:-2,mourned:-2,mournful:-2,mourning:-2,mourns:-2,muddy:-2,mumpish:-2,murder:-2,murderer:-2,murdering:-3,murderous:-3,murders:-2,murky:-2,myth:-1,n00b:-2,naive:-2,narcissism:-2,nasty:-3,natural:1,"naïve":-2,needy:-2,negative:-2,negativity:-2,neglect:-2,neglected:-2,neglecting:-2,neglects:-2,nerves:-1,nervous:-2,nervously:-2,nice:3,nifty:2,niggas:-5,nigger:-5,no:-1,"no fun":-3,noble:2,noblest:2,noisy:-1,"non-approved":-2,nonsense:-2,noob:-2,nosey:-2,"not good":-2,"not working":-3,notable:2,noticeable:2,notorious:-2,novel:2,numb:-1,nurturing:2,nuts:-3,obliterate:-2,obliterated:-2,obnoxious:-3,obscene:-2,obscenity:-2,obsessed:2,obsolete:-2,obstacle:-2,obstacles:-2,obstinate:-2,obstruct:-2,obstructed:-2,obstructing:-2,obstruction:-2,obstructs:-2,odd:-2,offence:-2,offences:-2,offend:-2,offended:-2,offender:-2,offending:-2,offends:-2,offense:-2,offenses:-2,offensive:-2,offensively:-2,offline:-1,oks:2,ominous:3,"once-in-a-lifetime":3,oops:-2,opportunities:2,opportunity:2,oppressed:-2,oppression:-2,oppressions:-2,oppressive:-2,optimism:2,optimistic:2,optionless:-2,ostracize:-2,ostracized:-2,ostracizes:-2,ouch:-2,outage:-2,outages:-2,outbreak:-2,outbreaks:-2,outcry:-2,outmaneuvered:-2,outnumbered:-2,outrage:-3,outraged:-3,outrageous:-3,outreach:2,outstanding:5,overjoyed:4,overload:-1,overlooked:-1,overprotective:-2,overran:-2,overreact:-2,overreacted:-2,overreacting:-2,overreaction:-2,overreacts:-2,oversell:-2,overselling:-2,oversells:-2,oversight:-1,oversimplification:-2,oversimplified:-2,oversimplifies:-2,oversimplify:-2,oversold:-2,overstatement:-2,overstatements:-2,overweight:-1,overwrought:-3,oxymoron:-1,pain:-2,pained:-2,painful:-2,panic:-3,panicked:-3,panics:-3,paradise:3,paradox:-1,pardon:2,pardoned:2,pardoning:2,pardons:2,parley:-1,passion:1,passionate:2,passive:-1,passively:-1,pathetic:-2,pay:-1,peace:2,peaceful:2,peacefully:2,penalize:-2,penalized:-2,penalizes:-2,penalizing:-2,penalty:-2,pensive:-1,perfect:3,perfected:2,perfection:3,perfectly:3,perfects:2,peril:-2,perjury:-3,perpetrated:-2,perpetrator:-2,perpetrators:-2,perplexed:-2,persecute:-2,persecuted:-2,persecutes:-2,persecuting:-2,perturbed:-2,pervert:-3,pesky:-2,pessimism:-2,pessimistic:-2,petrified:-2,philanthropy:2,phobic:-2,picturesque:2,pileup:-1,pillage:-2,pique:-2,piqued:-2,piss:-4,pissed:-4,pissing:-3,piteous:-2,pitied:-1,pity:-2,plague:-3,plagued:-3,plagues:-3,plaguing:-3,playful:2,pleasant:3,please:1,pleased:3,pleasurable:3,pleasure:3,plodding:-2,poignant:2,pointless:-2,poised:-2,poison:-2,poisoned:-2,poisons:-2,polished:2,polite:2,politeness:2,pollutant:-2,pollute:-2,polluted:-2,polluter:-2,polluters:-2,pollutes:-2,pollution:-2,poor:-2,poorer:-2,poorest:-2,poorly:-2,popular:3,popularity:3,positive:2,positively:2,possessive:-2,"post-traumatic":-2,postpone:-1,postponed:-1,postpones:-1,postponing:-1,poverty:-1,powerful:2,powerless:-2,praise:3,praised:3,praises:3,praising:3,pray:1,praying:1,prays:1,prblm:-2,prblms:-2,predatory:-2,prepared:1,pressure:-1,pressured:-2,pretend:-1,pretending:-1,pretends:-1,pretty:1,prevent:-1,prevented:-1,preventing:-1,prevents:-1,prick:-5,prison:-2,prisoner:-2,prisoners:-2,privileged:2,proactive:2,problem:-2,problems:-2,profit:2,profitable:2,profiteer:-2,profits:2,progress:2,prohibit:-1,prohibits:-1,prominent:2,promise:1,promised:1,promises:1,promote:1,promoted:1,promotes:1,promoting:1,promptly:1,propaganda:-2,prosecute:-1,prosecuted:-2,prosecutes:-1,prosecution:-1,prospect:1,prospects:1,prosperity:3,prosperous:3,protect:1,protected:1,protects:1,protest:-2,protesters:-2,protesting:-2,protests:-2,proud:2,proudly:2,provoke:-1,provoked:-1,provokes:-1,provoking:-1,prudence:2,pseudoscience:-3,psychopathic:-2,punish:-2,punished:-2,punishes:-2,punishing:-2,punitive:-2,pure:1,purest:1,purposeful:2,pushy:-1,puzzled:-2,quaking:-2,qualities:2,quality:2,questionable:-2,questioned:-1,questioning:-1,racism:-3,racist:-3,racists:-3,rage:-2,rageful:-2,rainy:-1,rant:-3,ranter:-3,ranters:-3,rants:-3,rape:-4,raped:-4,rapist:-4,rapture:2,raptured:2,raptures:2,rapturous:4,rash:-2,ratified:2,reach:1,reached:1,reaches:1,reaching:1,reassure:1,reassured:1,reassures:1,reassuring:2,rebel:-2,rebellion:-2,rebels:-2,recession:-2,reckless:-2,recognition:2,recommend:2,recommended:2,recommends:2,redeemed:2,refine:1,refined:1,refines:1,refreshingly:2,refuse:-2,refused:-2,refuses:-2,refusing:-2,regret:-2,regretful:-2,regrets:-2,regretted:-2,regretting:-2,reigning:1,reject:-1,rejected:-1,rejecting:-1,rejection:-2,rejects:-1,rejoice:4,rejoiced:4,rejoices:4,rejoicing:4,relaxed:2,relentless:-1,reliability:2,reliable:2,reliably:2,reliant:2,relieve:1,relieved:2,relieves:1,relieving:2,relishing:2,remarkable:2,remorse:-2,repellent:-2,repercussion:-2,repercussions:-2,reprimand:-2,reprimanded:-2,reprimanding:-2,reprimands:-2,repulse:-1,repulsed:-2,repulsive:-2,rescue:2,rescued:2,rescues:2,resentful:-2,resign:-1,resigned:-1,resigning:-1,resigns:-1,resolute:2,resolution:2,resolve:2,resolved:2,resolves:2,resolving:2,respect:2,respected:2,respects:2,responsibility:1,responsible:2,responsive:2,restful:2,restless:-2,restore:1,restored:1,restores:1,restoring:1,restrict:-2,restricted:-2,restricting:-2,restriction:-2,restrictive:-1,restricts:-2,retained:-1,retard:-2,retarded:-2,retreat:-1,revenge:-2,revengeful:-2,revered:2,revive:2,revives:2,revolting:-2,reward:2,rewarded:2,rewarding:2,rewards:2,rich:2,richly:2,ridiculous:-3,rig:-1,rigged:-1,"right direction":3,righteousness:2,rightful:2,rightfully:2,rigorous:3,rigorously:3,riot:-2,riots:-2,rise:1,rises:1,risk:-2,risks:-2,risky:-2,riveting:3,rob:-2,robber:-2,robed:-2,robing:-2,robs:-2,robust:2,rofl:4,roflcopter:4,roflmao:4,romance:2,romantical:2,romantically:2,rose:1,rotfl:4,rotflmfao:4,rotflol:4,rotten:-3,rude:-2,ruin:-2,ruined:-2,ruining:-2,ruins:-2,sabotage:-2,sad:-2,sadden:-2,saddened:-2,sadly:-2,safe:1,safely:1,safer:2,safety:1,salient:1,salute:2,saluted:2,salutes:2,saluting:2,salvation:2,sappy:-1,sarcastic:-2,satisfied:2,savange:-2,savanges:-2,save:2,saved:2,savings:1,scam:-2,scams:-2,scandal:-3,scandalous:-3,scandals:-3,scapegoat:-2,scapegoats:-2,scare:-2,scared:-2,scar:-2,scars:-2,scary:-2,sceptical:-2,scold:-2,scoop:3,scorn:-2,scornful:-2,scream:-2,screamed:-2,screaming:-2,screams:-2,screwed:-2,"screwed up":-3,scum:-3,scumbag:-4,seamless:2,seamlessly:2,secure:2,secured:2,secures:2,sedition:-2,seditious:-2,seduced:-1,"self-abuse":-2,"self-confident":2,"self-contradictory":-2,"self-deluded":-2,selfish:-3,selfishness:-3,sentence:-2,sentenced:-2,sentences:-2,sentencing:-2,serene:2,settlement:1,settlements:1,severe:-2,severely:-2,sexist:-2,sexistic:-2,sexy:3,shaky:-2,shame:-2,shamed:-2,shameful:-2,share:1,shared:1,shares:1,shattered:-2,shit:-4,shithead:-4,shitty:-3,shock:-2,shocked:-2,shocking:-2,shocks:-2,shoody:-2,shoot:-1,"short-sighted":-2,"short-sightedness":-2,shortage:-2,shortages:-2,shrew:-4,shy:-1,sick:-2,sickness:-2,"side-effect":-2,"side-effects":-2,sigh:-2,significance:1,significant:1,silencing:-1,silly:-1,simplicity:1,sin:-2,sincere:2,sincerely:2,sincerest:2,sincerity:2,sinful:-3,singleminded:-2,sinister:-2,sins:-2,skeptic:-2,skeptical:-2,skepticism:-2,skeptics:-2,slam:-2,slash:-2,slashed:-2,slashes:-2,slashing:-2,slave:-3,slavery:-3,slaves:-3,sleeplessness:-2,slick:2,slicker:2,slickest:2,slip:-1,sloppy:-2,sluggish:-2,slumping:-1,slut:-5,smart:1,smarter:2,smartest:2,smear:-2,smile:2,smiled:2,smiles:2,smiling:2,smog:-2,smuggle:-2,smuggled:-2,smuggling:-2,smuggles:-2,sneaky:-1,sneeze:-2,sneezed:-2,sneezes:-2,sneezing:-2,snub:-2,snubbed:-2,snubbing:-2,snubs:-2,sobering:1,solemn:-1,solid:2,solidarity:2,solidified:2,solidifies:2,solidify:2,solidifying:2,solution:1,solutions:1,solve:1,solved:1,solves:1,solving:1,somber:-2,"some kind":0,"son-of-a-bitch":-5,soothe:3,soothed:3,soothing:3,sophisticated:2,sore:-1,sorrow:-2,sorrowful:-2,sorry:-1,spacious:1,spam:-2,spammer:-3,spammers:-3,spamming:-2,spark:1,sparkle:3,sparkles:3,sparkling:3,spearhead:2,speculative:-2,spirit:1,spirited:2,spiritless:-2,spiteful:-2,splendid:3,spoiled:-2,spoilt:-2,spotless:2,sprightly:2,squander:-2,squandered:-2,squandering:-2,squanders:-2,squelched:-1,stab:-2,stabbed:-2,stable:2,stabs:-2,stall:-2,stalled:-2,stalling:-2,stamina:2,stampede:-2,stank:-2,startled:-2,startling:3,starve:-2,starved:-2,starves:-2,starving:-2,steadfast:2,steal:-2,stealing:-2,steals:-2,stereotype:-2,stereotyped:-2,stifled:-1,stimulate:1,stimulated:1,stimulates:1,stimulating:2,stingy:-2,stink:-2,stinked:-2,stinker:-2,stinking:-2,stinks:-2,stinky:-2,stole:-2,stolen:-2,stop:-1,stopped:-1,stopping:-1,stops:-1,stout:2,straight:1,strange:-1,strangely:-1,strangled:-2,strength:2,strengthen:2,strengthened:2,strengthening:2,strengthens:2,strengths:2,stress:-1,stressed:-2,stressor:-2,stressors:-2,stricken:-2,strike:-1,strikers:-2,strikes:-1,strong:2,stronger:2,strongest:2,struck:-1,struggle:-2,struggled:-2,struggles:-2,struggling:-2,stubborn:-2,stuck:-2,stunned:-2,stunning:4,stupid:-2,stupidity:-3,stupidly:-2,suave:2,subpoena:-2,substantial:1,substantially:1,subversive:-2,succeed:3,succeeded:3,succeeding:3,succeeds:3,success:2,successful:3,successfully:3,suck:-3,sucks:-3,sue:-2,sued:-2,sueing:-2,sues:-2,suffer:-2,suffered:-2,sufferer:-2,sufferers:-2,suffering:-2,suffers:-2,suicidal:-2,suicide:-2,suicides:-2,suing:-2,suitable:2,suited:2,sulking:-2,sulky:-2,sullen:-2,sunshine:2,super:3,superb:5,superior:2,support:2,supported:2,supporter:1,supporters:1,supporting:1,supportive:2,supports:2,supreme:4,survived:2,surviving:2,survivor:2,suspect:-1,suspected:-1,suspecting:-1,suspects:-1,suspend:-1,suspended:-1,suspicious:-2,sustainability:1,sustainable:2,sustainably:2,swear:-2,swearing:-2,swears:-2,sweet:2,sweeter:3,sweetest:3,swift:2,swiftly:2,swindle:-3,swindles:-3,swindling:-3,sympathetic:2,sympathy:2,taint:-2,tainted:-2,talent:2,tard:-2,tarnish:-2,tarnished:-2,tarnishes:-2,tears:-2,tender:2,tenderness:2,tense:-2,tension:-1,terrible:-3,terribly:-3,terrific:4,terrifically:4,terrified:-3,terror:-3,terrorist:-2,terrorists:-2,terrorize:-3,terrorized:-3,terrorizes:-3,thank:2,thankful:2,thanks:2,thorny:-2,thoughtful:2,thoughtless:-2,threat:-2,threaten:-2,threatened:-2,threatening:-2,threatens:-2,threats:-2,thrilled:5,thwart:-2,thwarted:-2,thwarting:-2,thwarts:-2,timid:-2,timorous:-2,tired:-2,tits:-2,tolerance:2,tolerant:2,toothless:-2,top:2,tops:2,torn:-2,torture:-4,tortured:-4,tortures:-4,torturing:-4,totalitarian:-2,totalitarianism:-2,tout:-2,touted:-2,touting:-2,touts:-2,toxic:-3,tragedies:-2,tragedy:-2,tragic:-2,tranquil:2,transgress:-2,transgressed:-2,transgresses:-2,transgressing:-2,trap:-1,trapped:-2,traps:-1,trauma:-3,traumatic:-3,travesty:-2,treason:-3,treasonous:-3,treasure:2,treasures:2,trembling:-2,tremor:-2,tremors:-2,tremulous:-2,tribulation:-2,tribute:2,tricked:-2,trickery:-2,triumph:4,triumphant:4,troll:-2,trouble:-2,troubled:-2,troubles:-2,troubling:-2,true:2,trust:1,trusted:2,trusts:1,tumor:-2,twat:-5,tyran:-3,tyrannic:-3,tyrannical:-3,tyrannically:-3,tyrans:-3,ubiquitous:2,ugh:-2,ugliness:-3,ugly:-3,unable:-2,unacceptable:-2,unappeasable:-2,unappreciated:-2,unapproved:-2,unattractive:-2,unavailable:-1,unavailing:-2,unaware:-2,unbearable:-2,unbelievable:-1,unbelieving:-1,unbiased:2,uncertain:-1,unclear:-1,uncomfortable:-2,unconcerned:-2,unconfirmed:-1,unconvinced:-1,uncredited:-1,undecided:-1,undercooked:-2,underestimate:-1,underestimated:-1,underestimates:-1,underestimating:-1,undermine:-2,undermined:-2,undermines:-2,undermining:-2,underperform:-2,underperformed:-2,underperforming:-2,underperforms:-2,undeserving:-2,undesirable:-2,uneasy:-2,unemployed:-1,unemployment:-2,unequal:-1,unequaled:2,unethical:-2,uneventful:-2,unfair:-2,unfavorable:-2,unfit:-2,unfitted:-2,unfocused:-2,unforgivable:-3,unforgiving:-2,unfulfilled:-2,unfunny:-2,ungenerous:-2,ungrateful:-3,unhappy:-2,unhappiness:-2,unhealthy:-2,unhygienic:-2,unified:1,unimaginative:-2,unimpressed:-2,uninspired:-2,unintelligent:-2,unintentional:-2,uninvolving:-2,united:1,unjust:-2,unlikely:-1,unlovable:-2,unloved:-2,unmatched:1,unmotivated:-2,unoriginal:-2,unparliamentary:-2,unpleasant:-2,unpleasantness:-2,unprofessional:-2,unravel:1,unreleting:-2,unresearched:-2,unsafe:-2,unsatisfied:-2,unscientific:-2,unsecured:-2,unselfish:2,unsettled:-1,unsold:-1,unsophisticated:-2,unsound:-2,unstable:-2,unstoppable:2,unsuccessful:-2,unsuccessfully:-2,unsupported:-2,unsure:-1,untarnished:2,untrue:-2,unwanted:-2,unworthy:-2,uplifting:2,uproar:-3,upset:-2,upsets:-2,upsetting:-2,uptight:-2,urgent:-1,useful:2,usefulness:2,useless:-2,uselessness:-2,vague:-2,validate:1,validated:1,validates:1,validating:1,vapid:-2,verdict:-1,verdicts:-1,vested:1,vexation:-2,vexing:-2,vibrant:3,vicious:-2,victim:-3,victimization:-3,victimize:-3,victimized:-3,victimizes:-3,victimizing:-3,victims:-3,victor:3,victors:3,victory:3,victories:3,vigilant:3,vigor:3,vile:-3,vindicate:2,vindicated:2,vindicates:2,vindicating:2,violate:-2,violated:-2,violates:-2,violating:-2,violation:-2,violations:-2,violence:-3,"violence-related":-3,violent:-3,violently:-3,virtuous:2,virulent:-2,vision:1,visionary:3,visioning:1,visions:1,vitality:3,vitamin:1,vitriolic:-3,vivacious:3,vividly:2,vociferous:-1,vomit:-3,vomited:-3,vomiting:-3,vomits:-3,vulnerability:-2,vulnerable:-2,walkout:-2,walkouts:-2,wanker:-3,want:1,war:-2,warfare:-2,warm:1,warmhearted:2,warmness:2,warmth:2,warn:-2,warned:-2,warning:-3,warnings:-3,warns:-2,waste:-1,wasted:-2,wasting:-2,wavering:-1,weak:-2,weakened:-2,weakness:-2,weaknesses:-2,wealth:3,wealthier:2,wealthy:2,weary:-2,weep:-2,weeping:-2,weird:-2,welcome:2,welcomed:2,welcomes:2,"well-being":2,"well-championed":3,"well-developed":2,"well-established":2,"well-focused":2,"well-groomed":2,"well-proportioned":2,whimsical:1,whitewash:-3,whore:-4,wicked:-2,widowed:-1,willingness:2,win:4,winner:4,winning:4,wins:4,winwin:3,wisdom:1,wish:1,wishes:1,wishing:1,withdrawal:-3,wits:2,woebegone:-2,woeful:-3,won:3,wonderful:4,wonderfully:4,woo:3,woohoo:3,wooo:4,woow:4,worn:-1,worried:-3,worries:-3,worry:-3,worrying:-3,worse:-3,worsen:-3,worsened:-3,worsening:-3,worsens:-3,worshiped:3,worst:-3,worth:2,worthless:-2,worthy:2,wow:4,wowow:4,wowww:4,wrathful:-3,wreck:-2,wrenching:-2,wrong:-2,wrongdoing:-2,wrongdoings:-2,wronged:-2,wrongful:-2,wrongfully:-2,wrongly:-2,wtf:-4,wtff:-4,wtfff:-4,xo:3,xoxo:3,xoxoxo:4,xoxoxoxo:4,yeah:1,yearning:1,yeees:2,yes:1,youthful:2,yucky:-2,yummy:3,zealot:-2,zealots:-2,zealous:2},scoringStrategy:{apply:function(e,t,n){if(t>0){var r=e[t-1];M[r]&&(n=-n)}return n}}};Object.assign(P.labels,L);var B={en:P},z={addLanguage:function(e,t){if(!t.labels)throw new Error("language.labels must be defined!");Object.assign(t.labels,L),B[e]=t},getLanguage:function(e){if(!e)return B.en;if(!B[e])try{var t=function(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}("../languages/"+e+"/index");this.addLanguage(e,t)}catch(t){throw new Error("No language found: "+e)}return B[e]},getLabels:function(e){return this.getLanguage(e).labels},applyScoringStrategy:function(e,t,n,r){return(this.getLanguage(e).scoringStrategy||W).apply(t,n,r)}},W={apply:function(e,t,n){return n}},V=function(e){return e.toLowerCase().replace(/\n/g," ").replace(/[.,\/#!?$%\^&\*;:{}=_`\"~()]/g," ").replace(/\s\s+/g," ").trim().split(" ")},U=z,G=function(e){this.options=e};G.prototype.registerLanguage=function(e,t){U.addLanguage(e,t)},G.prototype.analyze=function(e,t,n){void 0===e&&(e=""),"function"==typeof t&&(n=t,t={});var r=(t=t||{}).language||"en",a=U.getLabels(r);"object"==typeof t.extras&&(a=Object.assign(a,t.extras));for(var i=V(e),s=0,o=[],u=[],l=[],c=[],h=i.length;h--;){var d=i[h];if(a.hasOwnProperty(d)){o.push(d);var p=a[d];(p=U.applyScoringStrategy(r,i,h,p))>0&&u.push(d),p<0&&l.push(d),s+=p;var f={};f[d]=p,c.push(f)}}var m={score:s,comparative:i.length>0?s/i.length:0,calculation:c,tokens:i,words:o,positive:u,negative:l};if("function"!=typeof n)return m;process.nextTick((function(){n(null,m)}))};var H=G,j=function(e,t){return(j=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q(e,t){function n(){this.constructor=e}j(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function K(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function X(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var Y=function(){function e(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return e.prototype.setPlatform=function(e,t){null!=this.platform&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+t+"."),this.platformName=e,this.platform=t},e.prototype.registerFlag=function(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){var r=this.urlFlags[e];console.warn("Setting feature override from URL "+e+": "+r+"."),this.set(e,r)}},e.prototype.get=function(e){return e in this.flags||(this.flags[e]=this.evaluateFlag(e)),this.flags[e]},e.prototype.getNumber=function(e){return this.get(e)},e.prototype.getBool=function(e){return this.get(e)},e.prototype.getFlags=function(){return this.flags},Object.defineProperty(e.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),e.prototype.set=function(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag "+e+" as it has not been registered.");this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)},e.prototype.evaluateFlag=function(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '"+e+"': no evaluation function found.");return this.flagRegistry[e].evaluationFn()},e.prototype.setFlags=function(e){this.flags=Object.assign({},e)},e.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},e.prototype.populateURLFlags=function(){var e=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var t,n,r=(t=this.global.location.search,n={},t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(n,t[0],t[1]),t.join("=")})),n);"tfjsflags"in r&&r.tfjsflags.split(",").forEach((function(t){var n=t.split(":"),r=n[0],a=n[1];e.urlFlags[r]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error("Could not parse value flag value "+t+" for flag "+e+".")}(r,a)}))}},e}();function Q(){return J}var J=null,Z=new Map,ee=new Map;function te(e,t){var n=se(e,t);return Z.get(n)}function ne(e){return ee.get(e)}function re(e){for(var t=Z.entries(),n=[];;){var r=t.next(),a=r.done,i=r.value;if(a)break;var s=i[0],o=i[1];s.split("_")[0]===e&&n.push(o)}return n}function ae(e){var t=e.kernelName,n=e.backendName,r=se(t,n);if(Z.has(r))throw new Error("The kernel '"+t+"' for backend '"+n+"' is already registered");Z.set(r,e)}function ie(e){var t=e.kernelName;ee.has(t)&&console.warn("Overriding the gradient for '"+t+"'"),ee.set(t,e)}function se(e,t){return t+"_"+e}function oe(e){for(var t=e.length,n=0,r=0;t>0;)r=Math.random()*t|0,n=e[--t],e[t]=e[r],e[r]=n}function ue(e,t,n){return Math.max(e,Math.min(t,n))}function le(e){return e%2==0?e:e+1}function ce(e){for(var t=0,n=0;n<e.length;n++)t+=e[n];return t}function he(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function de(e,t,n){void 0===n&&(n=""),he(ge(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))}function pe(e){he(null!=e,(function(){return"The input to the tensor constructor must be a non-null value."}))}function fe(e,t,n){if(void 0===t&&(t=[]),void 0===n&&(n=!1),null==t&&(t=[]),Array.isArray(e)||Ae(e)&&!n)for(var r=0;r<e.length;++r)fe(e[r],t,n);else t.push(e);return t}function me(e){if(0===e.length)return 1;for(var t=e[0],n=1;n<e.length;n++)t*=e[n];return t}function ge(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ve(e){return e%1==0}function ye(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)}function be(e){var t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function xe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function we(e,t,n){return void 0===t&&(t=function(e){return 0}),new Promise((function(r,a){var i=0,s=function(){if(e())r();else{i++;var o=t(i);null!=n&&i>=n?a():setTimeout(s,o)}};s()}))}function ke(e,t){for(var n=1,r=-1,a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+a);r=a}else if(e[a]<0)throw Error("Shapes can not be < 0. Found "+e[a]+" at dim "+a);if(-1===r){if(t>0&&t!==n)throw Error("Size("+t+") must match the product of shape "+e);return e}if(0===n)throw Error("Cannot infer the missing size in ["+e+"] when there are 0 elements");if(t%n!=0)throw Error("The implicit shape can't be a fractional number. Got "+t+" / "+n);var i=e.slice();return i[r]=t/n,i}function Ie(e,t){var n=t.length;return he((e=null==e?t.map((function(e,t){return t})):[].concat(e)).every((function(e){return e>=-n&&e<n})),(function(){return"All values in axis param must be in range [-"+n+", "+n+") but got axis "+e})),he(e.every((function(e){return ve(e)})),(function(){return"All values in axis param must be integers but got axis "+e})),e.map((function(e){return e<0?n+e:e}))}function Ce(e,t){for(var n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:Ie(t,e).sort(),s=0,o=0;o<e.length;++o){if(null!=i){if(i[s]===o&&1!==e[o])throw new Error("Can't squeeze axis "+o+" since its dim '"+e[o]+"' is not 1");(null==i[s]||i[s]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),i[s]<=o&&s++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function Se(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function Ne(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function Te(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+t+" being uploaded contains "+r+".")}}function Ee(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Re(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ae(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function De(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Fe(e){if(null==e)return 0;var t=0;return e.forEach((function(e){return t+=e.length})),t}function _e(e){return"string"==typeof e||e instanceof String}function $e(e){return"boolean"==typeof e}function Oe(e){return"number"==typeof e}function Me(e){return Array.isArray(e)?Me(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Oe(e)?"float32":_e(e)?"string":$e(e)?"bool":"float32"}function Le(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Pe(e,t){for(var n=t;n<e;++n)if(e%n==0)return n;return e}function Be(e){var t=e.length;if(t<2)return[];var n=new Array(t-1);n[t-2]=e[t-1];for(var r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ze(e,t,n){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=fe(e)),n&&Te(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){for(var r=new Uint8Array(e.length),a=0;a<r.length;++a)0!==Math.round(e[a])&&(r[a]=1);return r}throw new Error("Unknown data type "+t)}function We(e,t){if(0===e.length)return t[0];var n=e.reduce((function(e,t){return e*t}));if(0===n)return[];if(n!==t.length)throw new Error("["+e+"] does not match the input size.");return function e(t,n,r){var a=new Array;if(1===n.length)for(var i=n[0],s=0;s<i;s++)a[s]=r[t+s];else{i=n[0];var o=n.slice(1),u=o.reduce((function(e,t){return e*t}));for(s=0;s<i;s++)a[s]=e(t+s*u,o,r)}return a}(0,e,t)}function Ve(e,t){for(var n=Ue(e,t),r=0;r<n.length;r++)n[r]=1;return n}function Ue(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function Ge(){return Q().platform.now()}function He(e){e.forEach((function(t){he(Number.isInteger(t)&&t>=0,(function(){return"Tensor must have a shape comprised of positive integers but got shape ["+e+"]."}))}))}function je(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",Q().platform.encode(e,t)}function qe(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",Q().platform.decode(e,t)}function Ke(e,t,n){if(0===t)return 0;if(1===t)return e[0];for(var r=e[e.length-1],a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Xe(e,t,n){if(0===t)return[];if(1===t)return[e];for(var r=new Array(t),a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}var Ye=Object.freeze({shuffle:oe,clamp:ue,nearestLargerEven:le,sum:ce,randUniform:function(e,t){var n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){for(var n=0,r=0;r<e.length;r++){var a=Number(e[r])-Number(t[r]);n+=a*a}return n},assert:he,assertShapesMatch:de,assertNonNull:pe,flatten:fe,sizeFromShape:me,isScalarShape:function(e){return 0===e.length},arraysEqual:ge,isInt:ve,tanh:ye,sizeToSquarishShape:be,createShuffledIndices:function(e){for(var t=new Uint32Array(e),n=0;n<e;++n)t[n]=n;return oe(t),t},rightPad:xe,repeatedTry:we,inferFromImplicitShape:ke,parseAxisParam:Ie,squeezeShape:Ce,getTypedArrayFromDType:Se,getArrayFromDType:Ne,checkConversionForErrors:Te,isValidDtype:Ee,hasEncodingLoss:Re,isTypedArray:Ae,bytesPerElement:De,bytesFromStringArray:Fe,isString:_e,isBoolean:$e,isNumber:Oe,inferDtype:Me,isFunction:Le,nearestDivisor:Pe,computeStrides:Be,toTypedArray:ze,toNestedArray:We,makeOnesTypedArray:Ve,makeZerosTypedArray:Ue,now:Ge,assertNonNegativeIntegerDimensions:He,fetch:function(e,t){return Q().platform.fetch(e,t)},encodeString:je,decodeString:qe,locToIndex:Ke,indexToLoc:Xe}),Qe=function(){function e(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Je)}return e.prototype.profileKernel=function(e,t,n){var r,a=this,i=this.backendTimer.time((function(){r=n()}));return r.forEach((function(n){n.data().then((function(r){!function(e,t,n){if("float32"!==t)return!1;for(var r=0;r<e.length;r++){var a=e[r];if(isNaN(a)||!isFinite(a))return console.warn("Found "+a+" in the result of '"+n+"'"),!0}}(r,n.dtype,e),i.then((function(i){var s="";null!=i.getExtraProfileInfo&&(s=i.getExtraProfileInfo()),a.logger.logKernelProfile(e,n,r,i.kernelMs,t,s)}))}))})),r},e}(),Je=function(){function e(){}return e.prototype.logKernelProfile=function(e,t,n,r,a,i){var s="number"==typeof r?xe(r+"ms",9):r.error,o=xe(e,25),u=t.rank,l=t.size,c=xe(t.shape.toString(),14),h="";for(var d in a){var p=a[d].shape||t.shape,f=p.length;h+=d+": "+f+"D "+(f>0?p:"")+" "}console.log("%c"+o+"\t%c"+s+"\t%c"+u+"D "+c+"\t%c"+l+"\t%c"+h+"\t%c"+i,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},e}(),Ze=7;function et(e,t,n){return xe(Array.isArray(e)?parseFloat(e[0].toFixed(Ze))+" + "+parseFloat(e[1].toFixed(Ze))+"j":_e(e)?"'"+e+"'":"bool"===n?tt(e):parseFloat(e.toFixed(Ze)).toString(),t)}function tt(e){return 0===e?"false":"true"}function nt(e){for(var t=[],n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var rt=function(){function e(e,t,n){var r=this;if(this.dtype=t,this.shape=e.slice(),this.size=me(e),null!=n){var a=n.length;he(a===this.size,(function(){return"Length of values '"+a+"' does not match the size inferred by the shape '"+r.size+"'."}))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ne(t,this.size),this.strides=Be(e)}return e.prototype.set=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),he(n.length===this.rank,(function(){return"The number of provided coordinates ("+n.length+") must match the rank ("+t.rank+")"}));var a=this.locToIndex(n);this.values[a]=e},e.prototype.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];0===e.length&&(e=[0]);for(var n=0,r=0,a=e;r<a.length;r++){var i=a[r];if(i<0||i>=this.shape[n]){var s="Requested out of range element at "+e+".   Buffer shape="+this.shape;throw new Error(s)}n++}for(var o=e[e.length-1],u=0;u<e.length-1;++u)o+=this.strides[u]*e[u];return this.values[o]},e.prototype.locToIndex=function(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];for(var t=e[e.length-1],n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t},e.prototype.indexToLoc=function(e){if(0===this.rank)return[];if(1===this.rank)return[e];for(var t=new Array(this.shape.length),n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.toTensor=function(){return at().makeTensor(this.values,this.shape,this.dtype)},e}(),at=null,it=null,st=null,ot=function(){function e(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=me(e),this.strides=Be(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}return e.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},e.prototype.asScalar=function(){return this.throwIfDisposed(),he(1===this.size,(function(){return"The array must have only 1 element."})),this.reshape([])},e.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},e.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},e.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),this.reshape([e,t,n])},e.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),this.reshape([e,t,n,r])},e.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),this.reshape([e,t,n,r,a])},e.prototype.asType=function(e){return this.throwIfDisposed(),it.cast(this,e)},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.buffer=function(){return K(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,it.buffer(this.shape,this.dtype,e)]}}))}))},e.prototype.bufferSync=function(){return it.buffer(this.shape,this.dtype,this.dataSync())},e.prototype.array=function(){return K(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,We(this.shape,e)]}}))}))},e.prototype.arraySync=function(){return We(this.shape,this.dataSync())},e.prototype.data=function(){return K(this,void 0,void 0,(function(){var e,t;return X(this,(function(n){switch(n.label){case 0:return this.throwIfDisposed(),e=at().read(this.dataId),"string"!==this.dtype?[3,2]:[4,e];case 1:t=n.sent();try{return[2,t.map((function(e){return qe(e)}))]}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}n.label=2;case 2:return[2,e]}}))}))},e.prototype.dataSync=function(){this.throwIfDisposed();var e=at().readSync(this.dataId);if("string"===this.dtype)try{return e.map((function(e){return qe(e)}))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e},e.prototype.bytes=function(){return K(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return this.throwIfDisposed(),[4,at().read(this.dataId)];case 1:return e=t.sent(),"string"===this.dtype?[2,e]:[2,new Uint8Array(e.buffer)]}}))}))},e.prototype.dispose=function(){this.isDisposed||(at().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(e.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),e.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},e.prototype.toFloat=function(){return this.asType("float32")},e.prototype.toInt=function(){return this.asType("int32")},e.prototype.toBool=function(){return this.asType("bool")},e.prototype.print=function(e){return void 0===e&&(e=!1),it.print(this,e)},e.prototype.reshape=function(e){return this.throwIfDisposed(),it.reshape(this,e)},e.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},e.prototype.expandDims=function(e){return void 0===e&&(e=0),it.expandDims(this,e)},e.prototype.cumsum=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=!1),void 0===n&&(n=!1),it.cumsum(this,e,t,n)},e.prototype.squeeze=function(e){return this.throwIfDisposed(),it.squeeze(this,e)},e.prototype.clone=function(){return this.throwIfDisposed(),it.clone(this)},e.prototype.toString=function(e){return void 0===e&&(e=!1),function(e,t,n,r){var a=Be(t),i=function(e,t,n,r){var a=me(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?nt(e):e;if(o>1)for(var l=0;l<a/i;l++)for(var c=l*i,h=0;h<i;h++)s[h]=Math.max(s[h],et(u[c+h],0,n).length);return s}(e,t,n,a),s=t.length,o=function e(t,n,r,a,i,s){void 0===s&&(s=!0);var o="complex64"===r?2:1,u=n[0],l=n.length;if(0===l)return"complex64"===r?[et(nt(t)[0],0,r)]:"bool"===r?[tt(t[0])]:[t[0].toString()];if(1===l){if(u>20){var c=3*o,h=Array.from(t.slice(0,c)),d=Array.from(t.slice((u-3)*o,u*o));return"complex64"===r&&(h=nt(h),d=nt(d)),["["+h.map((function(e,t){return et(e,i[t],r)})).join(", ")+", ..., "+d.map((function(e,t){return et(e,i[u-3+t],r)})).join(", ")+"]"]}return["["+("complex64"===r?nt(t):Array.from(t)).map((function(e,t){return et(e,i[t],r)})).join(", ")+"]"]}var p=n.slice(1),f=a.slice(1),m=a[0]*o,g=[];if(u>20){for(var v=0;v<3;v++){var y=(b=v*m)+m;g.push.apply(g,e(t.slice(b,y),p,r,f,i,!1))}for(g.push("..."),v=u-3;v<u;v++)y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),p,r,f,i,v===u-1))}else for(v=0;v<u;v++){var b;y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),p,r,f,i,v===u-1))}var x=2===l?",":"";for(g[0]="["+g[0]+x,v=1;v<g.length-1;v++)g[v]=" "+g[v]+x;var w=",\n";for(v=2;v<l;v++)w+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":w),g}(e,t,n,a,i),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+s),u.push("  shape: ["+t+"]"),u.push("  values:")),u.push(o.map((function(e){return"    "+e})).join("\n")),u.join("\n")}(this.dataSync(),this.shape,this.dtype,e)},e.prototype.gather=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),it.gather(this,e,t)},e.prototype.matMul=function(e,t,n){return void 0===t&&(t=!1),void 0===n&&(n=!1),this.throwIfDisposed(),it.matMul(this,e,t,n)},e.prototype.dot=function(e){return this.throwIfDisposed(),it.dot(this,e)},e.prototype.norm=function(e,t,n){return void 0===e&&(e="euclidean"),void 0===t&&(t=null),void 0===n&&(n=!1),this.throwIfDisposed(),it.norm(this,e,t,n)},e.prototype.slice=function(e,t){return this.throwIfDisposed(),it.slice(this,e,t)},e.prototype.reverse=function(e){return this.throwIfDisposed(),it.reverse(this,e)},e.prototype.concat=function(t,n){return void 0===n&&(n=0),this.throwIfDisposed(),t instanceof e&&(t=[t]),it.concat([this].concat(t),n)},e.prototype.split=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),it.split(this,e,t)},e.prototype.stack=function(e,t){return void 0===t&&(t=0),it.stack([this,e],t)},e.prototype.unstack=function(e){return void 0===e&&(e=0),it.unstack(this,e)},e.prototype.batchNormalization=function(e,t,n,r,a){return void 0===n&&(n=.001),st("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(e,t,a,r,n)},e.prototype.all=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.all(this,e,t)},e.prototype.any=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.any(this,e,t)},e.prototype.logSumExp=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.logSumExp(this,e,t)},e.prototype.sum=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.sum(this,e,t)},e.prototype.prod=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.prod(this,e,t)},e.prototype.mean=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.mean(this,e,t)},e.prototype.min=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.min(this,e,t)},e.prototype.max=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),it.max(this,e,t)},e.prototype.argMin=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),it.argMin(this,e)},e.prototype.argMax=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),it.argMax(this,e)},e.prototype.cast=function(e){return this.throwIfDisposed(),it.cast(this,e)},e.prototype.addStrict=function(e){return this.throwIfDisposed(),it.addStrict(this,e)},e.prototype.atan2=function(e){return this.throwIfDisposed(),it.atan2(this,e)},e.prototype.sub=function(e){return this.throwIfDisposed(),it.sub(this,e)},e.prototype.subStrict=function(e){return this.throwIfDisposed(),it.subStrict(this,e)},e.prototype.pow=function(e){return this.throwIfDisposed(),it.pow(this,e)},e.prototype.powStrict=function(e){return this.throwIfDisposed(),it.powStrict(this,e)},e.prototype.mul=function(e){return this.throwIfDisposed(),it.mul(this,e)},e.prototype.mulStrict=function(e){return this.throwIfDisposed(),it.mulStrict(this,e)},e.prototype.floorDiv=function(e){return this.throwIfDisposed(),it.floorDiv(this,e)},e.prototype.divStrict=function(e){return this.throwIfDisposed(),it.divStrict(this,e)},e.prototype.minimum=function(e){return this.throwIfDisposed(),it.minimum(this,e)},e.prototype.minimumStrict=function(e){return this.throwIfDisposed(),it.minimumStrict(this,e)},e.prototype.maximum=function(e){return this.throwIfDisposed(),it.maximum(this,e)},e.prototype.maximumStrict=function(e){return this.throwIfDisposed(),it.maximumStrict(this,e)},e.prototype.mod=function(e){return this.throwIfDisposed(),it.mod(this,e)},e.prototype.modStrict=function(e){return this.throwIfDisposed(),it.modStrict(this,e)},e.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),it.squaredDifferenceStrict(this,e)},e.prototype.notEqual=function(e){return this.throwIfDisposed(),it.notEqual(this,e)},e.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),it.notEqualStrict(this,e)},e.prototype.less=function(e){return this.throwIfDisposed(),it.less(this,e)},e.prototype.lessStrict=function(e){return this.throwIfDisposed(),it.lessStrict(this,e)},e.prototype.equal=function(e){return this.throwIfDisposed(),it.equal(this,e)},e.prototype.equalStrict=function(e){return this.throwIfDisposed(),it.equalStrict(this,e)},e.prototype.lessEqual=function(e){return this.throwIfDisposed(),it.lessEqual(this,e)},e.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),it.lessEqualStrict(this,e)},e.prototype.greater=function(e){return this.throwIfDisposed(),it.greater(this,e)},e.prototype.greaterStrict=function(e){return this.throwIfDisposed(),it.greaterStrict(this,e)},e.prototype.greaterEqual=function(e){return this.throwIfDisposed(),it.greaterEqual(this,e)},e.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),it.greaterEqualStrict(this,e)},e.prototype.logicalAnd=function(e){return this.throwIfDisposed(),it.logicalAnd(this,e)},e.prototype.logicalOr=function(e){return this.throwIfDisposed(),it.logicalOr(this,e)},e.prototype.logicalNot=function(){return this.throwIfDisposed(),it.logicalNot(this)},e.prototype.logicalXor=function(e){return this.throwIfDisposed(),it.logicalXor(this,e)},e.prototype.where=function(e,t){return this.throwIfDisposed(),it.where(e,this,t)},e.prototype.neg=function(){return this.throwIfDisposed(),it.neg(this)},e.prototype.ceil=function(){return this.throwIfDisposed(),it.ceil(this)},e.prototype.floor=function(){return this.throwIfDisposed(),it.floor(this)},e.prototype.sign=function(){return this.throwIfDisposed(),it.sign(this)},e.prototype.isNaN=function(){return this.throwIfDisposed(),it.isNaN(this)},e.prototype.isInf=function(){return this.throwIfDisposed(),it.isInf(this)},e.prototype.isFinite=function(){return this.throwIfDisposed(),it.isFinite(this)},e.prototype.exp=function(){return this.throwIfDisposed(),it.exp(this)},e.prototype.expm1=function(){return this.throwIfDisposed(),it.expm1(this)},e.prototype.log=function(){return this.throwIfDisposed(),it.log(this)},e.prototype.log1p=function(){return this.throwIfDisposed(),it.log1p(this)},e.prototype.sqrt=function(){return this.throwIfDisposed(),it.sqrt(this)},e.prototype.rsqrt=function(){return this.throwIfDisposed(),it.rsqrt(this)},e.prototype.square=function(){return this.throwIfDisposed(),it.square(this)},e.prototype.reciprocal=function(){return this.throwIfDisposed(),it.reciprocal(this)},e.prototype.abs=function(){return this.throwIfDisposed(),it.abs(this)},e.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),it.clipByValue(this,e,t)},e.prototype.relu=function(){return this.throwIfDisposed(),it.relu(this)},e.prototype.relu6=function(){return this.throwIfDisposed(),it.relu6(this)},e.prototype.elu=function(){return this.throwIfDisposed(),it.elu(this)},e.prototype.selu=function(){return this.throwIfDisposed(),it.selu(this)},e.prototype.leakyRelu=function(e){return void 0===e&&(e=.2),this.throwIfDisposed(),it.leakyRelu(this,e)},e.prototype.prelu=function(e){return this.throwIfDisposed(),it.prelu(this,e)},e.prototype.sigmoid=function(){return this.throwIfDisposed(),it.sigmoid(this)},e.prototype.logSigmoid=function(){return this.throwIfDisposed(),it.logSigmoid(this)},e.prototype.softplus=function(){return this.throwIfDisposed(),it.softplus(this)},e.prototype.zerosLike=function(){return this.throwIfDisposed(),it.zerosLike(this)},e.prototype.onesLike=function(){return this.throwIfDisposed(),it.onesLike(this)},e.prototype.sin=function(){return this.throwIfDisposed(),it.sin(this)},e.prototype.cos=function(){return this.throwIfDisposed(),it.cos(this)},e.prototype.tan=function(){return this.throwIfDisposed(),it.tan(this)},e.prototype.asin=function(){return this.throwIfDisposed(),it.asin(this)},e.prototype.acos=function(){return this.throwIfDisposed(),it.acos(this)},e.prototype.atan=function(){return this.throwIfDisposed(),it.atan(this)},e.prototype.sinh=function(){return this.throwIfDisposed(),it.sinh(this)},e.prototype.cosh=function(){return this.throwIfDisposed(),it.cosh(this)},e.prototype.tanh=function(){return this.throwIfDisposed(),it.tanh(this)},e.prototype.asinh=function(){return this.throwIfDisposed(),it.asinh(this)},e.prototype.acosh=function(){return this.throwIfDisposed(),it.acosh(this)},e.prototype.atanh=function(){return this.throwIfDisposed(),it.atanh(this)},e.prototype.erf=function(){return this.throwIfDisposed(),it.erf(this)},e.prototype.round=function(){return this.throwIfDisposed(),it.round(this)},e.prototype.step=function(e){return void 0===e&&(e=0),this.throwIfDisposed(),it.step(this,e)},e.prototype.softmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),it.softmax(this,e)},e.prototype.logSoftmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),it.logSoftmax(this,e)},e.prototype.resizeBilinear=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),it.image.resizeBilinear(this,e,t)},e.prototype.resizeNearestNeighbor=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),it.image.resizeNearestNeighbor(this,e,t)},e.prototype.conv1d=function(e,t,n,r,a,i){return void 0===r&&(r="NWC"),void 0===a&&(a=1),this.throwIfDisposed(),it.conv1d(this,e,t,n,r,a,i)},e.prototype.conv2d=function(e,t,n,r,a,i){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),it.conv2d(this,e,t,n,r,a,i)},e.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),it.conv2dTranspose(this,e,t,n,r,a)},e.prototype.depthwiseConv2D=function(e,t,n,r,a,i){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),it.depthwiseConv2d(this,e,t,n,r,a,i)},e.prototype.separableConv2d=function(e,t,n,r,a,i){return void 0===a&&(a=[1,1]),void 0===i&&(i="NHWC"),this.throwIfDisposed(),it.separableConv2d(this,e,t,n,r,a,i)},e.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),it.avgPool(this,e,t,n,r)},e.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),it.maxPool(this,e,t,n,r)},e.prototype.localResponseNormalization=function(e,t,n,r){return void 0===e&&(e=5),void 0===t&&(t=1),void 0===n&&(n=1),void 0===r&&(r=.5),it.localResponseNormalization(this,e,t,n,r)},e.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),it.pool(this,e,t,n,r,a)},e.prototype.variable=function(e,t,n){return void 0===e&&(e=!0),this.throwIfDisposed(),at().makeVariable(this,e,t,n)},e.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),it.unsortedSegmentSum(this,e,t)},e.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),it.batchToSpaceND(this,e,t)},e.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),it.spaceToBatchND(this,e,t)},e.prototype.topk=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),this.throwIfDisposed(),it.topk(this,e,t)},e.prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return void 0===r&&(r=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===o&&(o=0),this.throwIfDisposed(),it.stridedSlice(this,e,t,n,r,a,i,s,o)},e.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),it.depthToSpace(this,e,t)},e.prototype.fft=function(){return this.throwIfDisposed(),it.spectral.fft(this)},e.prototype.ifft=function(){return this.throwIfDisposed(),it.spectral.ifft(this)},e.prototype.rfft=function(){return this.throwIfDisposed(),it.spectral.rfft(this)},e.prototype.irfft=function(){return this.throwIfDisposed(),it.spectral.irfft(this)},e}();Object.defineProperty(ot,Symbol.hasInstance,{value:function(e){return!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype}});var ut,lt,ct,ht,dt,pt=function(e){function t(t,n,r,a){var i=e.call(this,t.shape,t.dtype,t.dataId,a)||this;return i.trainable=n,i.name=r,i}return q(t,e),t.prototype.assign=function(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value ("+e.dtype+") and previous value ("+this.dtype+") must match");if(!ge(e.shape,this.shape))throw new Error("shape of the new value ("+e.shape+") and previous value ("+this.shape+") must match");at().disposeTensor(this),this.dataId=e.dataId,at().incRef(this,null)},t.prototype.dispose=function(){at().disposeVariable(this),this.isDisposedInternal=!0},t}(ot);Object.defineProperty(pt,Symbol.hasInstance,{value:function(e){return e instanceof ot&&null!=e.assign&&e.assign instanceof Function}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ut||(ut={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(lt||(lt={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ct||(ct={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ht||(ht={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(dt||(dt={}));var ft,mt={float32:ht,int32:lt,bool:ct,complex64:dt};function gt(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast "+e+" with "+t)}return mt[e][t]}function vt(e){return gt(e,"int32")}function yt(e,t){if(e.dtype===t.dtype)return[e,t];var n=gt(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function bt(e,t){he(e.dtype===t.dtype,(function(){return"The dtypes of the first("+e.dtype+") and second("+t.dtype+") input must match"}))}function xt(e){var t=[];return function e(t,n,r){if(null!=t)if(t instanceof ot)n.push(t);else if(a=t,Array.isArray(a)||"object"==typeof a){var a,i=t;for(var s in i){var o=i[s];r.has(o)||(r.add(o),e(o,n,r))}}}(e,t,new Set),t}Object.freeze({makeTypesMatch:yt,assertTypesMatch:bt,isTensorInList:function(e,t){return t.some((function(t){return t.id===e.id}))},getTensorsInContainer:xt});var wt=function(){function e(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return e.prototype.dispose=function(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()},e}(),kt=function(){function e(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new wt}return e.prototype.ready=function(){return K(this,void 0,void 0,(function(){var e,t,n;return X(this,(function(r){switch(r.label){case 0:if(null!=this.pendingBackendInit)return[2,this.pendingBackendInit.then((function(){}))];if(null!=this.backendInstance)return[2];e=this.getSortedBackends(),t=0,r.label=1;case 1:return t<e.length?(n=e[t],[4,this.initializeBackend(n).success]):[3,5];case 2:return r.sent()?[4,this.setBackend(n)]:[3,4];case 3:return r.sent(),[2];case 4:return t++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}}))}))},Object.defineProperty(e.prototype,"backend",{get:function(){if(null!=this.pendingBackendInit)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){var e=this.initializeBackendsAndReturnBest(),t=e.name;if(e.asyncInit)throw new Error("The highest priority backend '"+t+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance},enumerable:!0,configurable:!0}),e.prototype.backendNames=function(){return Object.keys(this.registryFactory)},e.prototype.findBackend=function(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;if(this.initializeBackend(e).asyncInit)return null}return this.registry[e]},e.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e].factory:null},e.prototype.registerBackend=function(e,t,n){return void 0===n&&(n=1),e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)},e.prototype.setBackend=function(e){return K(this,void 0,void 0,(function(){var t,n,r;return X(this,(function(a){switch(a.label){case 0:if(null==this.registryFactory[e])throw new Error("Backend name '"+e+"' not found in registry");return this.backendName=e,null!=this.registry[e]?[3,4]:(this.backendInstance=null,t=this.initializeBackend(e),n=t.success,t.asyncInit?[4,n]:[3,2]);case 1:return r=a.sent(),[3,3];case 2:r=n,a.label=3;case 3:if(!r)return[2,!1];a.label=4;case 4:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Qe(this.backendInstance),[2,!0]}}))}))},e.prototype.setupRegisteredKernels=function(){var e=this;re(this.backendName).forEach((function(t){null!=t.setupFunc&&t.setupFunc(e.backendInstance)}))},e.prototype.disposeRegisteredKernels=function(e){var t=this;re(e).forEach((function(n){null!=n.disposeFunc&&n.disposeFunc(t.registry[e])}))},e.prototype.initializeBackend=function(e){var t=this,n=this.registryFactory[e];if(null==n)throw new Error("Cannot initialize backend "+e+", no registration found.");try{var r=n.factory();if(Promise.resolve(r)===r){var a=++this.pendingBackendInitId,i=r.then((function(n){return!(a<t.pendingBackendInitId||(t.registry[e]=n,t.pendingBackendInit=null,0))})).catch((function(n){return!(a<t.pendingBackendInitId||(t.pendingBackendInit=null,console.warn("Initialization of backend "+e+" failed"),console.warn(n.stack||n.message),1))}));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(t){return console.warn("Initialization of backend "+e+" failed"),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}},e.prototype.removeBackend=function(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},e.prototype.getSortedBackends=function(){var e=this;if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((function(t,n){return e.registryFactory[n].priority-e.registryFactory[t].priority}))},e.prototype.initializeBackendsAndReturnBest=function(){for(var e=this.getSortedBackends(),t=0;t<e.length;t++){var n=e[t],r=this.initializeBackend(n),a=r.success,i=r.asyncInit;if(i||a)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")},e.prototype.moveData=function(e,t){var n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},e.prototype.tidy=function(e,t){var n,r=this,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((function(){return r.startScope(a)}),(function(){return r.endScope(n)}),(function(){return(n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n}))},e.prototype.scopedRun=function(e,t,n){e();try{var r=n();return t(),r}catch(e){throw t(),e}},e.prototype.nextTensorId=function(){return e.nextTensorId++},e.prototype.nextVariableId=function(){return e.nextVariableId++},e.prototype.clone=function(e){var t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(function(e){return{x:function(){return e.toFloat()}}}),[],{}),t},e.prototype.runKernel=function(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)},e.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},e.prototype.checkKernelForMemLeak=function(e,t,n){var r=this.backend.numDataIds(),a=0;n.forEach((function(e){a+="complex64"===e.dtype?3:1}));var i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+s+" data ids) after running '"+e+"'")},e.prototype.runKernelFunc=function(e,t,n,r,a,i,s){var o,u=this,l=[],c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");var h,d=this.state.numBytes,p=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var f,m=te(r,this.backendName);if(null!=m)h=function(){var e=u.backend.numDataIds();f=m.kernelFunc({inputs:t,attrs:a,backend:u.backend});var n=Array.isArray(f)?f:[f];u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,e,n);var o=n.map((function(e){var t=e.dataId,n=e.shape,r=e.dtype;return u.makeTensorFromDataId(t,n,r)}));if(c){var h=u.getTensorsForGradient(r,t,o);if(null==h){null==s&&(s=[]);var d=o.filter((function(e,t){return s[t]}));h=(i||[]).slice().concat(d)}l=u.saveTensorsForBackwardMode(h)}return o};else{var g=function(e){c&&(l=e.map((function(e){return u.keep(u.clone(e))})))};h=function(){var t=u.backend.numDataIds();f=u.tidy((function(){return e(u.backend,g)}));var n=Array.isArray(f)?f:[f];return u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,t,n),n}}return this.scopedRun((function(){return u.state.kernelDepth++}),(function(){return u.state.kernelDepth--}),(function(){o=u.ENV.getBool("DEBUG")?u.profiler.profileKernel(r,t,(function(){return h()})):h()})),c&&this.addTapeNode(r,t,o,n,l,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((function(e){return t[e].shape})),outputShapes:o.map((function(e){return e.shape}))}),Array.isArray(f)?o:o[0]},e.prototype.saveTensorsForBackwardMode=function(e){var t=this;return e.map((function(e){return t.keep(t.clone(e))}))},e.prototype.getTensorsForGradient=function(e,t,n){var r=ne(e);if(null!=r){var a=r.inputsToSave||[],i=r.outputsToSave||[],s=void 0;r.saveAllInputs?(he(Array.isArray(t),(function(){return"saveAllInputs is true, expected inputs to be an array."})),s=Object.keys(t).map((function(e){return t[e]}))):s=a.map((function(e){return t[e]}));var o=n.filter((function(e,t){return i[t]}));return s.concat(o)}return null},e.prototype.makeTensor=function(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;var a=e;"string"===n&&_e(e[0])&&(a=e.map((function(e){return je(e)})));var i=r.write(a,t,n),s=new ot(t,n,i,this.nextTensorId());if(this.incRef(s,r),"string"===n){var o=this.state.tensorInfo.get(i),u=Fe(a);this.state.numBytes+=u-o.bytes,o.bytes=u}return s},e.prototype.makeTensorFromDataId=function(e,t,n,r){var a=new ot(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a},e.prototype.makeVariable=function(e,t,n,r){void 0===t&&(t=!0),n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.asType(r));var a=new pt(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name "+a.name+" was already registered");return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a},e.prototype.incRef=function(e,t){var n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;var r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*De(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.state.numBytes+=r}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof pt||this.track(e)},e.prototype.disposeTensor=function(e){if(this.state.tensorInfo.has(e.dataId)){this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;var t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}},e.prototype.disposeVariables=function(){for(var e in this.state.registeredVariables){var t=this.state.registeredVariables[e];this.disposeVariable(t)}},e.prototype.disposeVariable=function(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]},e.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e},e.prototype.profile=function(e){return K(this,void 0,void 0,(function(){var t,n;return X(this,(function(r){return this.state.profiling=!0,t=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map((function(e){return e.totalBytesSnapshot}))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,[2,this.state.activeProfile]}))}))},e.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth},e.prototype.addTapeNode=function(e,t,n,r,a,i){var s=this,o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=ne(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=function(e){return e=e.map((function(e,t){if(null==e){var r=n[t],a=Ue(r.size,r.dtype);return s.makeTensor(a,r.shape,r.dtype)}return e})),r(e.length>1?e:e[0],a,i)}),this.state.activeTape.push(o)},e.prototype.keep=function(e){return e.kept=!0,e},e.prototype.startTape=function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++},e.prototype.endTape=function(){this.state.gradientDepth--},e.prototype.startScope=function(e){var t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t},e.prototype.endScope=function(e){for(var t=this,n=xt(e),r=new Set(n.map((function(e){return e.id}))),a=0;a<this.state.activeScope.track.length;a++){var i=this.state.activeScope.track[a];i.kept||r.has(i.id)||i.dispose()}var s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach((function(e){e.kept||e.scopeId!==s.id||t.track(e)}))},e.prototype.gradients=function(e,t,n,r){var a=this;if(void 0===r&&(r=!1),he(t.length>0,(function(){return"gradients() received an empty list of xs."})),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '"+n.dtype+"'");var i=this.scopedRun((function(){return a.startTape()}),(function(){return a.endTape()}),(function(){return a.tidy("forward",e)}));he(i instanceof ot,(function(){return"The result y returned by f() must be a tensor."}));var s=function(e,t,n){for(var r={},a={},i=0;i<t.length;i++)r[t[i].id]=!0;for(i=0;i<e.length;i++){var s=(f=e[i]).inputs;for(var o in s){for(var u=s[o],l=!1,c=0;c<t.length;c++)if(r[u.id]){f.outputs.forEach((function(e){return r[e.id]=!0})),l=!0,a[f.id]=!0;break}if(l)break}}var h={};h[n.id]=!0;var d={};for(i=e.length-1;i>=0;i--)for(s=(f=e[i]).inputs,c=0;c<f.outputs.length;c++)if(h[f.outputs[c].id]){for(var o in s)h[s[o].id]=!0,d[f.id]=!0;break}var p=[];for(i=0;i<e.length;i++){var f;if(a[(f=e[i]).id]&&d[f.id]){var m={};for(var o in f.inputs){var g=f.inputs[o];r[g.id]&&(m[o]=g)}var v=Object.assign({},f);v.inputs=m,v.outputs=f.outputs,p.push(v)}}return p}(this.state.activeTape,t,i);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(function(){var e,r,o={};o[i.id]=null==n?(r=Ve(me(e=i.shape),"float32"),It.makeTensor(r,e,"float32")):n,function(e,t,n){for(var r=function(r){var a=t[r],i=[];if(a.outputs.forEach((function(t){var n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error("Cannot compute gradient: gradient function not found for "+a.kernelName+".");var s=a.gradient(i),o=function(t){if(!(t in s))throw new Error("Cannot backprop through input "+t+". Available gradients found: "+Object.keys(s)+".");var r=n((function(){return s[t]()}));if("float32"!==r.dtype)throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input "+t+" must have 'float32' dtype, but has '"+r.dtype+"'");var i=a.inputs[t];if(!ge(r.shape,i.shape))throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input '"+t+"' has shape '"+r.shape+"', which does not match the shape of the input '"+i.shape+"'");if(null==e[i.id])e[i.id]=r;else{var o=e[i.id];e[i.id]=o.add(r),o.dispose()}};for(var u in a.inputs)o(u)},a=t.length-1;a>=0;a--)r(a)}(o,s,(function(e){return a.tidy(e)}));var u=t.map((function(e){return o[e.id]}));return 0===a.state.gradientDepth&&(a.state.activeTape.forEach((function(e){for(var t=0,n=e.saved;t<n.length;t++)n[t].dispose()})),a.state.activeTape=null),{value:i,grads:u}}))},e.prototype.customGrad=function(e){var t=this;return he(Le(e),(function(){return"The f passed in customGrad(f) must be a function."})),function(){for(var n,r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];he(r.every((function(e){return e instanceof ot})),(function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"}));var i={};return r.forEach((function(e,t){i[t]=e})),t.runKernelFunc((function(t,a){return he((n=e.apply(void 0,r.concat([a]))).value instanceof ot,(function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"})),he(Le(n.gradFunc),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."})),n.value}),i,(function(e,t){var a=n.gradFunc(e,t),i=Array.isArray(a)?a:[a];he(i.length===r.length,(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."})),he(i.every((function(e){return e instanceof ot})),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."}));var s={};return i.forEach((function(e,t){s[t]=function(){return e}})),s}))}},e.prototype.readSync=function(e){return this.state.tensorInfo.get(e).backend.readSync(e)},e.prototype.read=function(e){return this.state.tensorInfo.get(e).backend.read(e)},e.prototype.time=function(e){return K(this,void 0,void 0,(function(){var t,n;return X(this,(function(r){switch(r.label){case 0:return t=Ge(),[4,this.backend.time(e)];case 1:return(n=r.sent()).wallMs=Ge()-t,[2,n]}}))}))},e.prototype.track=function(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e},Object.defineProperty(e.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),e.prototype.reset=function(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new wt,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},e.nextTensorId=0,e.nextVariableId=0,e}(),It=function(){var e=function(){if(null==ft){var e=void 0;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}ft=e}return ft}();if(null==e._tfengine){var t=new Y(e);e._tfengine=new kt(t)}return function(e){J=e}(e._tfengine.ENV),at=function(){return e._tfengine},e._tfengine}();function Ct(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var St=Q();St.registerFlag("DEBUG",(function(){return!1}),(function(e){e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),St.registerFlag("IS_BROWSER",(function(){return Ct()})),St.registerFlag("IS_NODE",(function(){return"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node})),St.registerFlag("IS_CHROME",(function(){return"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)})),St.registerFlag("PROD",(function(){return!1})),St.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(function(){return St.getBool("DEBUG")})),St.registerFlag("DEPRECATION_WARNINGS_ENABLED",(function(){return!0})),St.registerFlag("IS_TEST",(function(){return!1}));var Nt,Tt,Et,Rt={},At={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Dt(e,t){Rt[e]=t}function Ft(e){e in Rt||(Rt[e]=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(function(t){t.preventDefault(),delete Rt[e]}),!1),1===e?t.getContext("webgl",At)||t.getContext("experimental-webgl",At):t.getContext("webgl2",At)}(e));var t=Rt[e];return t.isContextLost()?(delete Rt[e],Ft(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Rt[e])}function _t(e,t){return[t,e]}function $t(e){var t=me(e);return be(Math.ceil(t/4))}function Ot(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Mt(e,t){var n,r,a,i,s,o,u,l,c,h=e;return 2===Q().getNumber("WEBGL_VERSION")?(n=h.R32F,r=h.R16F,a=h.RGBA16F,i=h.RGBA32F,s=h.RED,o=4,u=1,l=h.HALF_FLOAT,c=h.FLOAT):(n=e.RGBA,r=e.RGBA,a=e.RGBA,i=h.RGBA,s=e.RGBA,o=4,u=4,l=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:e.RGBA,downloadUnpackNumChannels:o,defaultNumChannels:u,textureTypeHalfFloat:l,textureTypeFloat:c}}function Lt(e,t,n){var r=n();return t&&function(e){var t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Bt(e,t))}(e),r}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Nt||(Nt={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Tt||(Tt={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Et||(Et={}));function Pt(e){return!!(Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Bt(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function zt(e,t,n){return cn(e,t,(function(){return e.getExtension(n)}),'Extension "'+n+'" not supported on this browser.')}function Wt(e,t,n){var r=cn(e,t,(function(){return e.createShader(e.VERTEX_SHADER)}),"Unable to create vertex WebGLShader.");if(Lt(e,t,(function(){return e.shaderSource(r,n)})),Lt(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function Vt(e,t,n){var r=cn(e,t,(function(){return e.createShader(e.FRAGMENT_SHADER)}),"Unable to create fragment WebGLShader.");if(Lt(e,t,(function(){return e.shaderSource(r,n)})),Lt(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw function(e,t){var n=Ht.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);for(var r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map((function(e,t){return xe((t+1).toString(),i)+e})),o=0,u=0;u<s.length;u++)o=Math.max(s[u].length,o);var l=s.slice(0,r-1),c=s.slice(r-1,r),h=s.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+xe(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(n,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var Ut,Gt,Ht=/ERROR: [0-9]+:([0-9]+):/g;function jt(e,t){return cn(e,t,(function(){return e.createProgram()}),"Unable to create WebGLProgram.")}function qt(e,t,n){if(Lt(e,t,(function(){return e.linkProgram(n)})),!1===e.getProgramParameter(n,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}function Kt(e,t,n){if(Lt(e,t,(function(){return e.validateProgram(n)})),!1===e.getProgramParameter(n,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function Xt(e,t,n){var r=cn(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return Lt(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),Lt(e,t,(function(){return e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function Yt(e,t,n){var r=cn(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return Lt(e,t,(function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)})),Lt(e,t,(function(){return e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function Qt(e,t){return cn(e,t,(function(){return e.createTexture()}),"Unable to create WebGLTexture.")}function Jt(e,t){var n=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){var r="["+e+"x"+t+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n)throw r="["+e+"x"+t+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU ["+n+"x"+n+"].")}function Zt(e,t){return cn(e,t,(function(){return e.createFramebuffer()}),"Unable to create WebGLFramebuffer.")}function en(e,t,n,r,a,i,s,o){var u=e.getAttribLocation(n,r);return-1!==u&&(Lt(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,a)})),Lt(e,t,(function(){return e.vertexAttribPointer(u,i,e.FLOAT,!1,s,o)})),Lt(e,t,(function(){return e.enableVertexAttribArray(u)})),!0)}function tn(e,t,n,r){hn(e,r),Lt(e,t,(function(){return e.activeTexture(e.TEXTURE0+r)})),Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)}))}function nn(e,t,n,r){return cn(e,t,(function(){return e.getUniformLocation(n,r)}),'uniform "'+r+'" not present in program.')}function rn(e,t,n){return e.getUniformLocation(t,n)}function an(e,t,n,r,a,i){Lt(e,t,(function(){return tn(e,t,r,i)})),Lt(e,t,(function(){return e.uniform1i(a,i)}))}function sn(e,t,n,r){Lt(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,r)})),Lt(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}))}function on(e,t,n){Lt(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,n)})),Lt(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)}))}function un(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ln(e,t))}function ln(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function cn(e,t,n,r){var a=Lt(e,t,(function(){return n()}));if(null==a)throw new Error(r);return a}function hn(e,t){var n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error("textureUnit must be in [gl.TEXTURE0, gl.TEXTURE"+n+"].")}function dn(e,t){return void 0===t&&(t=2),me(e.slice(0,e.length-t))}function pn(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function fn(e){var t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[dn(e)].concat(pn(e))),t}function mn(e,t){var n;void 0===t&&(t=!1);var r=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(r*=2,1===(e=e.map((function(t,n){return n>=e.length-2?le(e[n]):e[n]}))).length&&(e=[2,e[0]])),2!==e.length){var a=Ce(e);e=a.newShape}var i=me(e);if(e.length<=1&&i<=r)return[1,i];if(2===e.length&&e[0]<=r&&e[1]<=r)return e;if(3===e.length&&e[0]*e[1]<=r&&e[2]<=r)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=r&&e[1]*e[2]<=r)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r)return[e[0],e[1]*e[2]*e[3]];if(t){var s=dn(e),o=2,u=2;return e.length&&(o=(n=pn(e))[0],u=n[1]),be(i=s*(o/2)*(u/2)).map((function(e){return 2*e}))}return be(i)}function gn(e){return e%2==0}function vn(e,t){if(ge(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(gn(n)&&gn(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&gn(e[0])&&gn(t[0])}function yn(e){if(null==Ut){var t=Ft(e);Ut=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ut}function bn(e){if(null==Gt){var t=Ft(e);Gt=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Gt)}function xn(e){if(0===e)return 0;var t=Ft(e);return wn(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:wn(t,"EXT_disjoint_timer_query")?1:0}function wn(e,t){return null!=e.getExtension(t)}function kn(e){try{if(null!=Ft(e))return!0}catch(e){return!1}return!1}function In(e){if(0===e)return!1;var t=Ft(e);if(1===e){if(!wn(t,"OES_texture_float"))return!1}else if(!wn(t,"EXT_color_buffer_float"))return!1;return Sn(t)}function Cn(e){if(0===e)return!1;var t=Ft(e);if(1!==e){if(wn(t,"EXT_color_buffer_float"))return Sn(t);if(wn(t,"EXT_color_buffer_half_float")){var n=t.getExtension("EXT_color_buffer_half_float");return function(e,t){var n=Mt(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);var a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);var i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),i}(t,n)}return!1}return!!wn(t,"OES_texture_float")&&!!wn(t,"WEBGL_color_buffer_float")&&Sn(t)}function Sn(e){var t=Mt(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);var r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function Nn(e){return 2===e&&null!=Ft(e).fenceSync}var Tn=Object.freeze({callAndCheck:Lt,canBeRepresented:Pt,getWebGLErrorMessage:Bt,getExtensionOrThrow:zt,createVertexShader:Wt,createFragmentShader:Vt,createProgram:jt,linkProgram:qt,validateProgram:Kt,createStaticVertexBuffer:Xt,createStaticIndexBuffer:Yt,getNumChannels:function(){return 2===Q().getNumber("WEBGL_VERSION")?1:4},createTexture:Qt,validateTextureSize:Jt,createFramebuffer:Zt,bindVertexBufferToProgramAttribute:en,bindTextureUnit:tn,unbindTextureUnit:function(e,t,n){hn(e,n),Lt(e,t,(function(){return e.activeTexture(e.TEXTURE0+n)})),Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))},getProgramUniformLocationOrThrow:nn,getProgramUniformLocation:rn,bindTextureToProgramUniformSampler:an,bindCanvasToFramebuffer:function(e,t){Lt(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)})),Lt(e,t,(function(){return e.viewport(0,0,e.canvas.width,e.canvas.height)})),Lt(e,t,(function(){return e.scissor(0,0,e.canvas.width,e.canvas.height)}))},bindColorTextureToFramebuffer:sn,unbindColorTextureFromFramebuffer:on,validateFramebuffer:un,getFramebufferErrorMessage:ln,getBatchDim:dn,getRowsCols:pn,getShapeAs3D:fn,getTextureShapeFromLogicalShape:mn,isReshapeFree:vn,getWebGLMaxTextureSize:yn,resetMaxTextureSize:function(){Ut=null},resetMaxTexturesInShader:function(){Gt=null},getMaxTexturesInShader:bn,getWebGLDisjointQueryTimerVersion:xn,hasExtension:wn,isWebGLVersionEnabled:kn,isCapableOfRenderingToFloatTexture:In,isDownloadFloatTextureEnabled:Cn,isWebGLFenceEnabled:Nn}),En=Q();function Rn(e){Q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function An(e,t){return It.tidy(e,t)}function Dn(e){xt(e).forEach((function(e){return e.dispose()}))}function Fn(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];Q().getBool("IS_TEST")||console.warn.apply(console,e)}function _n(e,t){var n=e;if(Ae(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];for(var r=[];Array.isArray(n)||Ae(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],Array.isArray(t)||Ae(t)){he(n.length>0,(function(){return"Element arr["+r.join("][")+"] should be a primitive, but is an array of "+t.length+" elements"})),he(t.length===n[0],(function(){return"Element arr["+r.join("][")+"] should have "+n[0]+" elements, but has "+t.length+" elements"}));for(var a=n.slice(1),i=0;i<t.length;++i)e(t[i],a,r.concat(i))}else he(0===n.length,(function(){return"Element arr["+r.join("][")+"] is a primitive, but should be an array/TypedArray of "+n[0]+" elements"}))}(e,r,[]),r}function $n(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error("Argument '"+n+"' passed to '"+r+"' must be "+e+" tensor, but got "+t+" tensor")}function On(e,t,n,r){if(void 0===r&&(r="numeric"),e instanceof ot)return $n(r,e.dtype,t,n),e;var a=Me(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),$n(r,a,t,n),null==e||!Ae(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){var i=null==e?"null":e.constructor.name;throw new Error("Argument '"+t+"' passed to '"+n+"' must be a Tensor or TensorLike, but got '"+i+"'")}var s=_n(e,a);Ae(e)||Array.isArray(e)||(e=[e]);var o="string"!==a?ze(e,a,Q().getBool("DEBUG")):fe(e,[],!0);return It.makeTensor(o,s,a)}function Mn(e,t,n,r){if(void 0===r&&(r="numeric"),!Array.isArray(e))throw new Error("Argument "+t+" passed to "+n+" must be a `Tensor[]` or `TensorLike[]`");return e.map((function(e,r){return On(e,t+"["+r+"]",n)}),r)}function Ln(e,t){for(var n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Pn(e,t,n){for(var r=e.length+t.length,a=[],i=0,s=0,o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function Bn(e,t){for(var n=[],r=e.length,a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((function(t){return e[t]}))]}function zn(e,t){return Pn(e,t.map((function(e){return 1})),t)}function Wn(e,t,n){he(Ln(t,n),(function(){return e+" supports only inner-most axes for now. Got axes "+t+" and rank-"+n+" input."}))}function Vn(e,t){if(Ln(e,t))return null;for(var n=[],r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((function(e){return n.push(e)})),n}function Un(e){return e.map((function(e,t){return[t,e]})).sort((function(e,t){return e[1]-t[1]})).map((function(e){return e[0]}))}function Gn(e,t){for(var n=[],r=t-e;r<t;++r)n.push(r);return n}function Hn(e,t){var n=e[0].length;e.forEach((function(e,t){he(e.length===n,(function(){return"Error in concat"+n+"D: rank of tensors["+t+"] must be the same as the rank of the rest ("+n+")"}))})),he(t>=0&&t<n,(function(){return"Error in concat"+n+"D: axis must be between 0 and "+(n-1)+"."}));var r=e[0];e.forEach((function(e,a){for(var i=0;i<n;i++)he(i===t||e[i]===r[i],(function(){return"Error in concat"+n+"D: Shape of tensors["+a+"] ("+e+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+a+"."}))}))}function jn(e,t){for(var n=e[0].slice(),r=1;r<e.length;r++)n[t]+=e[r][t];return n}function qn(e){var t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");var n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));var a=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];It.startScope(n);try{var a=r.apply(void 0,e);return a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),It.endScope(a),a}catch(e){throw It.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}En.registerFlag("HAS_WEBGL",(function(){return En.getNumber("WEBGL_VERSION")>0})),En.registerFlag("WEBGL_VERSION",(function(){return kn(2)?2:kn(1)?1:0})),En.registerFlag("WEBGL_BUFFER_SUPPORTED",(function(){return 2===En.get("WEBGL_VERSION")})),En.registerFlag("WEBGL_CPU_FORWARD",(function(){return!0})),En.registerFlag("WEBGL_FORCE_F16_TEXTURES",(function(){return!1})),En.registerFlag("WEBGL_PACK",(function(){return En.getBool("HAS_WEBGL")})),En.registerFlag("WEBGL_PACK_NORMALIZATION",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_PACK_CLIP",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_PACK_DEPTHWISECONV",(function(){return!1})),En.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_PACK_REDUCE",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_LAZILY_UNPACK",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_CONV_IM2COL",(function(){return En.getBool("WEBGL_PACK")})),En.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(function(){return yn(En.getNumber("WEBGL_VERSION"))})),En.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(function(){return bn(En.getNumber("WEBGL_VERSION"))})),En.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(function(){var e=En.getNumber("WEBGL_VERSION");return 0===e?0:xn(e)})),En.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(function(){return En.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(e=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))));var e})),En.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(function(){return In(En.getNumber("WEBGL_VERSION"))})),En.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(function(){return!En.getBool("WEBGL_FORCE_F16_TEXTURES")&&En.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")})),En.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(function(){return Cn(En.getNumber("WEBGL_VERSION"))})),En.registerFlag("WEBGL_FENCE_API_ENABLED",(function(){return Nn(En.getNumber("WEBGL_VERSION"))})),En.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(function(){return En.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0})),st=Rn;var Kn=qn({complex_:function(e,t){var n=On(e,"real","complex"),r=On(t,"imag","complex");return de(n.shape,r.shape,"real and imag shapes, "+n.shape+" and "+r.shape+", must match in call to tf.complex()."),It.runKernelFunc((function(e){return e.complex(n,r)}),{$real:n,$imag:r})}}),Xn=qn({real_:function(e){var t=On(e,"input","real");return It.runKernelFunc((function(e){return e.real(t)}),{$input:t})}}),Yn=qn({imag_:function(e){var t=On(e,"input","imag");return It.runKernelFunc((function(e){return e.imag(t)}),{$input:t})}});function Qn(e,t,n){return Jn(e,t,_n(e,n),n)}function Jn(e,t,n,r){if(null==r&&(r=Me(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ae(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){He(t);var a=me(t),i=me(n);he(a===i,(function(){return"Based on the provided shape, ["+t+"], the tensor should have "+a+" values but has "+i}));for(var s=0;s<n.length;++s){var o=n[s],u=s!==n.length-1||o!==me(t.slice(s));he(n[s]===t[s]||!u,(function(){return"Error creating a new Tensor. Inferred shape ("+n+") does not match the provided shape ("+t+"). "}))}}return Ae(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ze(e,r,Q().getBool("DEBUG")):fe(e,[],!0),It.makeTensor(e,t,r)}function Zn(e,t){if((Ae(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ae(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Jn(e,[],[],t)}function er(e,t){pe(e);var n=_n(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Jn(e,null,n,t)}function tr(e,t,n){if(pe(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");var r=_n(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Jn(e,t,r,n)}function nr(e,t,n){if(pe(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");var r=_n(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Jn(e,t,r,n)}function rr(e,t,n){if(pe(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");var r=_n(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Jn(e,t,r,n)}function ar(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=ar(e,"float32"),r=ir(e,"float32");return Kn(n,r)}var a=Ve(me(e),t);return It.makeTensor(a,e,t)}function ir(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=ir(e,"float32"),r=ir(e,"float32");return Kn(n,r)}var a=Ue(me(e),t);return It.makeTensor(a,e,t)}function sr(e,t,n){return It.runKernelFunc((function(r){return r.fill(e,t,n)}),{})}function or(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return It.runKernelFunc((function(r){return r.linspace(e,t,n)}),{})}function ur(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r="float32"),0===n)throw new Error("Cannot have a step of zero");if(e===t||e<t&&n<0||t<e&&n>1)return ir([0],r);var a=Ue(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(var i=1;i<a.length;i++)a[i]=a[i-1]+n;return er(a,r)}var lr=qn({onesLike_:function(e){var t=On(e,"x","onesLike");if("complex64"===t.dtype){var n=lr(Xn(t)),r=cr(Yn(t));return Kn(n,r)}return It.runKernelFunc((function(e){return e.onesLike(t)}),{x:t},(function(e,t){return{x:function(){return cr(e)}}}),"OnesLike")}}),cr=qn({zerosLike_:function(e){var t=On(e,"x","zerosLike");return It.runKernelFunc((function(e){return e.zerosLike(t)}),{x:t},(function(e,t){return{x:function(){return cr(e)}}}),"ZerosLike")}}),hr=qn({concat_:function(e,t){void 0===t&&(t=0),he(e.length>=1,(function(){return"Pass at least one tensor to concat"}));var n=Mn(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((function(e){if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype "+e.dtype+". ")})),t=Ie(t,n[0].shape)[0];var r=jn(n.map((function(e){return e.shape})),t);if(0===me(r))return Qn([],r);if(1===(n=n.filter((function(e){return e.size>0}))).length)return n[0];var a=n.map((function(e){return e.shape}));Hn(a,t);var i=n,s={axis:t};return It.runKernelFunc((function(e){return e.concat(n,t)}),i,(function(e){var n=a.map((function(e){return e[t]}));return gr(e,n,t).map((function(e){return function(){return e}}))}),"Concat",s)}}),dr=qn({concat1d_:function(e){return hr(e,0)}}),pr=qn({concat2d_:function(e,t){return hr(e,t)}}),fr=qn({concat3d_:function(e,t){return hr(e,t)}}),mr=qn({concat4d_:function(e,t){return hr(e,t)}}),gr=qn({split_:function(e,t,n){void 0===n&&(n=0);var r,a=On(e,"x","split");return n=Ie(n,a.shape)[0],"number"==typeof t?(he(a.shape[n]%t==0,(function(){return"Number of splits must evenly divide the axis."})),r=new Array(t).fill(a.shape[n]/t)):(he(a.shape[n]===t.reduce((function(e,t){return e+t})),(function(){return"The sum of sizes must match the size of the axis dimension."})),r=t),It.runKernelFunc((function(e){return e.split(a,r,n)}),{$x:a},(function(e){return{$x:function(){return hr(e,n)}}}))}});function vr(e,t,n){return void 0===t&&(t="float32"),t=t||"float32",He(e),new rt(e,t,n)}var yr=qn({batchToSpaceND_:function(e,t,n){var r=On(e,"x","batchToSpaceND"),a=t.reduce((function(e,t){return e*t}));return he(r.rank>=1+t.length,(function(){return"input rank is "+r.rank+" but should be > than blockShape.length "+t.length})),he(n.length===t.length,(function(){return"crops.length is "+n.length+" but should be equal to blockShape.length  "+t.length})),he(r.shape[0]%a==0,(function(){return"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+t.join(" * ")+" === "+a})),It.runKernelFunc((function(e){return e.batchToSpaceND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.spaceToBatchND(t,n)}}}))}}),br=qn({cast_:function(e,t){var n=On(e,"x","cast");if(!Ee(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");var r={dtype:t};return It.runKernelFunc((function(e){return e.cast(n,t)}),{x:n},(function(e){return{x:function(){return e.clone()}}}),"Cast",r)}}),xr=qn({cumsum_:function(e,t,n,r){void 0===t&&(t=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var a=On(e,"x","cumsum"),i=Vn([t|=0],a.rank),s=a;null!=i&&(s=a.transpose(i));var o=Gn(1,a.rank)[0],u=It.runKernelFunc((function(e){return e.cumsum(s,o,n,r)}),{permutedX:s},(function(e){return{permutedX:function(){return e.cumsum(t,n,!r)}}}));return null!=i&&(u=u.transpose(i)),u}}),wr=qn({depthToSpace_:function(e,t,n){void 0===n&&(n="NHWC");var r=On(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];return he(a*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+a+" and "+t+"  for depthToSpace with input shape\n      "+r.shape})),he(i*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+i+" and "+t+" for depthToSpace with input shape\n          "+r.shape})),he(s%(t*t)==0,(function(){return"Dimension size must be evenly divisible by "+t*t+" but is "+s+" for depthToSpace with input shape "+r.shape})),It.runKernelFunc((function(e){return e.depthToSpace(r,t,n)}),{$x:r})}}),kr=qn({expandDims_:function(e,t){void 0===t&&(t=0);var n=On(e,"x","expandDims",null);he(t<=n.rank,(function(){return"Axis must be <= rank of the tensor"}));var r=n.shape.slice();return t<0&&(he(-(n.rank+1)<=t,(function(){return"Axis must be in the interval ["+-(n.rank+1)+", "+n.rank+"]"})),t=n.rank+t+1),r.splice(t,0,1),Ir(n,r)}}),Ir=qn({reshape_:function(e,t){var n=On(e,"x","reshape",null);t=ke(t,n.size),he(n.size===me(t),(function(){return"new shape and old shape must have the same number of elements."}));var r={shape:t};return It.runKernelFunc((function(e){return e.reshape(n,t)}),{x:n},(function(e){return{x:function(){return e.reshape(n.shape)}}}),"Reshape",r)}}),Cr=qn({spaceToBatchND_:function(e,t,n){var r=On(e,"x","spaceToBatchND");return he(r.rank>=1+t.length,(function(){return"input rank "+r.rank+" should be > than [blockShape] "+t.length})),he(n.length===t.length,(function(){return"paddings.shape[0] "+n.length+" must be equal to [blockShape] "+t.length})),he(r.shape.reduce((function(e,r,a){return a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e}),!0),(function(){return"input spatial dimensions "+r.shape.slice(1)+" with paddings "+n.toString()+" must be divisible by blockShapes "+t.toString()})),It.runKernelFunc((function(e){return e.spaceToBatchND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.batchToSpaceND(t,n)}}}))}}),Sr=qn({squeeze_:function(e,t){var n=On(e,"x","squeeze");return Ir(n,Ce(n.shape,t).newShape)}}),Nr=qn({stack_:function(e,t){void 0===t&&(t=0);var n=Mn(e,"tensors","stack");if(he(n.length>=1,(function(){return"Pass at least one tensor to tf.stack"})),1===n.length)return n[0].expandDims(t);var r=n[0].rank,a=n[0].shape,i=n[0].dtype;he(t<=r,(function(){return"Axis must be <= rank of the tensor"})),n.forEach((function(e){de(a,e.shape,"All tensors passed to stack must have matching shapes")})),n.forEach((function(e){he(i===e.dtype,(function(){return"All tensors passed to stack must have matching dtypes"}))}));var s=n.map((function(e){return e.expandDims(t)}));return hr(s,t)}}),Tr=qn({unstack_:function(e,t){void 0===t&&(t=0),t=t||0;var n=On(e,"x","unstack");he(t>=-n.shape.length&&t<n.shape.length,(function(){return"Axis = "+t+" is not in [-"+n.shape.length+", "+n.shape.length+")"})),t<0&&(t+=n.shape.length);var r={axis:t};return It.runKernelFunc((function(e){return e.unstack(n,t)}),{x:n},(function(e){return{x:function(){return Nr(e,t)}}}),"Unpack",r)}}),Er=function(e,t){return K(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c,h;return X(this,(function(d){switch(d.label){case 0:return n=On(e,"x","setdiff1d"),r=On(t,"y","setdiff1d"),he(n.dtype===r.dtype,(function(){return"x and y should have the same dtype, but got x ("+n.dtype+") and y ("+r.dtype+")."})),he(1===n.rank,(function(){return"x should be 1D tensor, but got x ("+n.shape+")."})),he(1===r.rank,(function(){return"y should be 1D tensor, but got y ("+r.shape+")."})),[4,n.data()];case 1:return a=d.sent(),[4,r.data()];case 2:for(i=d.sent(),s=new Set(i),o=0,c=0;c<a.length;c++)s.has(a[c])||o++;for(u=new rt([o],n.dtype),l=new rt([o],"int32"),c=0,h=0;c<a.length;c++)s.has(a[c])||(u.values[h]=a[c],l.values[h]=c,h++);return[2,[u.toTensor(),l.toTensor()]]}}))}))};function Rr(e,t,n,r){void 0===r&&(r=!0);var a=[];if(r)(a=a.concat(t.slice(0))).push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);for(var i=t.length,s=0;s<i;++s)a=a.concat([e[s+1]/t[s],t[s]]);a=a.concat(e.slice(i+1))}return a}function Ar(e,t,n){void 0===n&&(n=!0);var r=[];if(n){r.push(t);for(var a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{var i=[],s=[];for(a=1;a<e;++a)a>=2*t+1||a%2==1?s.push(a):i.push(a);r.push.apply(r,i),r.push(0),r.push.apply(r,s)}return r}function Dr(e,t,n,r){void 0===r&&(r=!0);var a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(var i=1;i<e.length;++i)i<=t.length?r?a.push(t[i-1]*e[i]):a.push(e[i]/t[i-1]):a.push(e[i]);return a}function Fr(e,t){for(var n=[0],r=0;r<t;++r)n.push(e[r][0]);return n}function _r(e,t,n){for(var r=e.slice(0,1),a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var $r="Div",Or="SquaredDifference",Mr="BroadcastTo",Lr="OneHot",Pr="Identity",Br="Tile",zr="PadV2",Wr=qn({add_:function(e,t){var n,r=On(e,"a","add"),a=On(t,"b","add");n=yt(r,a),r=n[0],a=n[1];var i={a:r,b:a};return It.runKernelFunc((function(e,t){var n=e.add(r,a);return t([r,a]),n}),i,null,"Add")}});function Vr(e,t){for(var n=e.length,r=[],a=0;a<n;a++){var i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function Ur(e,t){for(var n=[],r=0;r<t.length;r++){var a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function Gr(e,t){for(var n=[],r=Math.max(e.length,t.length),a=0;a<r;a++){var i=e[e.length-a-1];null==i&&(i=1);var s=t[t.length-a-1];if(null==s&&(s=1),1===i)n.unshift(s);else if(1===s)n.unshift(i);else{if(i!==s)throw Error("Operands could not be broadcast together with shapes "+e+" and "+t+".");n.unshift(i)}}return n}var Hr=qn({abs_:function(e){var t=On(e,"x","abs");return"complex64"===t.dtype?It.runKernelFunc((function(e){return e.complexAbs(t)}),{$x:t}):It.runKernelFunc((function(e,n){var r=e.abs(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().step(-1))}}}),"Abs")}}),jr=qn({acos_:function(e){var t=On(e,"x","acos");return It.runKernelFunc((function(e,n){var r=e.acos(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Zn(1).sub(n.toFloat().square()).sqrt()).neg()}}}))}}),qr=qn({acosh_:function(e){var t=On(e,"x","acosh");return It.runKernelFunc((function(e,n){var r=e.acosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(n.toFloat().square().sub(1).sqrt())}}}))}}),Kr=qn({asin_:function(e){var t=On(e,"x","asin");return It.runKernelFunc((function(e,n){var r=e.asin(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Zn(1).sub(n.toFloat().square()).sqrt())}}}))}}),Xr=qn({asinh_:function(e){var t=On(e,"x","asinh");return It.runKernelFunc((function(e,n){var r=e.asinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Zn(1).add(n.toFloat().square()).sqrt())}}}))}}),Yr=qn({atan_:function(e){var t=On(e,"x","atan");return It.runKernelFunc((function(e,n){var r=e.atan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().square().add(1))}}}))}}),Qr=qn({atanh_:function(e){var t=On(e,"x","atanh");return It.runKernelFunc((function(e,n){var r=e.atanh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(Zn(1).sub(n.toFloat().square()))}}}))}}),Jr=qn({ceil_:function(e){var t=On(e,"x","ceil");return It.runKernelFunc((function(e){return e.ceil(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),Zr=qn({clipByValue_:function(e,t,n){var r=On(e,"x","clipByValue");he(t<=n,(function(){return"Error in clip: min ("+t+") must be less than or equal to max ("+n+")."}));var a=[r],i={min:t,max:n};return It.runKernelFunc((function(e,a){var i=e.clip(r,t,n);return a([r]),i}),{x:r},(function(e,r){var a=r[0];return{x:function(){return e.where(a.greaterEqual(t).logicalAnd(a.lessEqual(n)),cr(e))}}}),"ClipByValue",i,a)}}),ea=qn({cos_:function(e){var t=On(e,"x","cos"),n=[t];return It.runKernelFunc((function(e,n){var r=e.cos(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().sin().neg().mul(e)}}}),"Cos",{},n)}}),ta=qn({cosh_:function(e){var t=On(e,"x","cosh");return It.runKernelFunc((function(e,n){var r=e.cosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().sinh().mulStrict(e)}}}))}}),na=qn({erf_:function(e){var t=On(e,"x","erf");return he("int32"===t.dtype||"float32"===t.dtype,(function(){return"Input dtype must be `int32` or `float32`."})),"int32"===t.dtype&&(t=t.toFloat()),It.runKernelFunc((function(e,n){var r=e.erf(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}}))}}),ra=qn({exp_:function(e){var t=On(e,"x","exp");return It.runKernelFunc((function(e,n){var r=e.exp(t);return n([r]),r}),{x:t},(function(e,t){return{x:function(){return e.mulStrict(t[0])}}}),"Exp",{},[],[!0])}}),aa=qn({expm1_:function(e){var t=On(e,"x","expm1");return It.runKernelFunc((function(e,n){var r=e.expm1(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.exp())}}}))}}),ia=qn({floor_:function(e){var t=On(e,"x","floor");return It.runKernelFunc((function(e){return e.floor(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),sa=qn({log_:function(e){var t=On(e,"x","log"),n=[t];return It.runKernelFunc((function(e,n){var r=e.log(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.toFloat())}}}),"Log",{},n)}}),oa=qn({log1p_:function(e){var t=On(e,"x","log1p");return It.runKernelFunc((function(e,n){var r=e.log1p(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.add(1))}}}))}}),ua=qn({logSigmoid_:function(e){var t=On(e,"x","logSigmoid");return It.runKernelFunc((function(e,n){var r=e.softplus(t.neg()).neg();return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.neg().sigmoid())}}}))}}),la=qn({neg_:function(e){var t=On(e,"x","neg"),n=[t];return It.runKernelFunc((function(e){return e.neg(t)}),{x:t},(function(e){return{x:function(){return e.neg()}}}),"Neg",{},n)}}),ca=qn({reciprocal_:function(e){var t=On(e,"x","reciprocal");return It.runKernelFunc((function(e,n){var r=e.reciprocal(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.square().neg())}}}))}}),ha=qn({round_:function(e){var t=On(e,"x","round");return It.runKernelFunc((function(e){return e.round(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),da=qn({rsqrt_:function(e){var t=On(e,"x","rsqrt"),n=[t];return It.runKernelFunc((function(e,n){var r=e.rsqrt(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.pow(1.5).mul(2)).neg()}}}),"Rsqrt",{},n)}}),pa=qn({sigmoid_:function(e){var t=On(e,"x","sigmoid");return It.runKernelFunc((function(e,n){var r=e.sigmoid(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.mul(Zn(1).sub(n)))}}}),"Sigmoid")}}),fa=qn({sign_:function(e){var t=On(e,"x","sign");return It.runKernelFunc((function(e){return e.sign(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),ma=qn({isNaN_:function(e){var t=On(e,"x","isNaN");return It.runKernelFunc((function(e){return e.isNaN(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),ga=qn({isInf_:function(e){var t=On(e,"x","isInf");return It.runKernelFunc((function(e){return e.isInf(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),va=qn({isFinite_:function(e){var t=On(e,"x","isFinite");return It.runKernelFunc((function(e){return e.isFinite(t)}),{$x:t},(function(e){return{$x:function(){return cr(e)}}}))}}),ya=qn({sin_:function(e){var t=On(e,"x","sin"),n=[t];return It.runKernelFunc((function(e,n){var r=e.sin(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().cos().mul(e)}}}),"Sin",{},n)}}),ba=qn({sinh_:function(e){var t=On(e,"x","sinh");return It.runKernelFunc((function(e,n){var r=e.sinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().cosh().mulStrict(e)}}}))}}),xa=qn({softplus_:function(e){var t=On(e,"x","softplus");return It.runKernelFunc((function(e,n){var r=e.softplus(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.sigmoid())}}}))}}),wa=qn({sqrt_:function(e){var t=On(e,"x","sqrt");return It.runKernelFunc((function(e,n){var r=e.sqrt(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().sqrt().mul(2))}}}))}}),ka=qn({step_:function(e,t){void 0===t&&(t=0);var n=On(e,"x","step");return It.runKernelFunc((function(e){return e.step(n,t)}),{$x:n},(function(e){return{$x:function(){return cr(e)}}}))}}),Ia=qn({tan_:function(e){var t=On(e,"x","tan");return It.runKernelFunc((function(e,n){var r=e.tan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.cos().square())}}}))}}),Ca=qn({tanh_:function(e){var t=On(e,"x","tanh");return It.runKernelFunc((function(e,n){var r=e.tanh(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return Zn(1).sub(n.square()).mulStrict(e)}}}),"Tanh",{},null,[!0])}}),Sa=qn({addStrict_:function(e,t){var n=On(e,"a","addStrict"),r=On(t,"b","addStrict");return de(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),Na=qn({atan2_:function(e,t){var n,r=On(e,"a","atan2"),a=On(t,"b","atan2");n=yt(r,a),r=n[0],a=n[1];var i=Gr(r.shape,a.shape);return It.runKernelFunc((function(e,t){var n=e.atan2(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=Wr(n.square(),r.square()),a=e.mul(r.div(t)),s=Ur(n.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(n.shape)},$b:function(){var t=Wr(n.square(),r.square()),a=la(e.mul(n.div(t))),s=Ur(r.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(r.shape)}}}))}}),Ta=qn({divStrict_:function(e,t){var n=On(e,"a","div"),r=On(t,"b","div");return de(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),Ea=qn({floorDiv_:function(e,t){var n,r=On(e,"a","floorDiv"),a=On(t,"b","floorDiv");n=yt(r,a),r=n[0],a=n[1];var i=Gr(r.shape,a.shape);return It.runKernelFunc((function(e,t){var n=e.floorDiv(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.div(r.toFloat()),a=Ur(n.shape,i);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=Ur(r.shape,i);a.length>0&&(t=t.sum(a).reshape(r.shape));var s=r.square();return t.div(s.toFloat()).neg()}}}),"FloorDiv")}}),Ra=qn({maximum_:function(e,t){var n,r=On(e,"a","maximum"),a=On(t,"b","maximum");return n=yt(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),Gr(r.shape,a.shape),It.runKernelFunc((function(e,t){var n=e.maximum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.greaterEqual(r).toFloat())},b:function(){return e.mul(n.less(r).toFloat())}}}),"Maximum")}}),Aa=qn({maximumStrict_:function(e,t){var n=On(e,"a","maximumStrict"),r=On(t,"b","maximumStrict");return de(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),Da=qn({minimum_:function(e,t){var n,r=On(e,"a","minimum"),a=On(t,"b","minimum");return n=yt(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),Gr(r.shape,a.shape),It.runKernelFunc((function(e,t){var n=e.minimum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.lessEqual(r).toFloat())},b:function(){return e.mul(n.greater(r).toFloat())}}}),"Minimum")}}),Fa=qn({minimumStrict_:function(e,t){var n=On(e,"a","minimumStrict"),r=On(t,"b","minimumStrict");return de(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),_a=qn({mod_:function(e,t){var n,r=On(e,"a","mod"),a=On(t,"b","mod");n=yt(r,a),r=n[0],a=n[1];var i=Gr(r.shape,a.shape);return It.runKernelFunc((function(e,t){var n=e.mod(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=Ur(n.shape,i);return t.length>0?e.sum(t).reshape(n.shape):e},$b:function(){var t=e.mul(n.div(r).floor().neg()),a=Ur(r.shape,i);return a.length>0?t.sum(a).reshape(r.shape):t}}}))}}),$a=qn({modStrict_:function(e,t){var n=On(e,"a","modStrict"),r=On(t,"b","modStrict");return de(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),Oa=qn({mul_:function(e,t){var n,r=On(e,"a","mul"),a=On(t,"b","mul");n=yt(r,a),r=n[0],a=n[1];var i=Gr(r.shape,a.shape);return It.runKernelFunc((function(e,t){var n=e.multiply(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.mul(r.toFloat()),a=Ur(n.shape,i);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=Ur(r.shape,i);return a.length>0?t.sum(a).reshape(r.shape):t}}}),"Mul")}}),Ma=qn({mulStrict_:function(e,t){var n=On(e,"a","mul"),r=On(t,"b","mul");return de(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),La=qn({pow_:function(e,t){var n,r=On(e,"base","pow"),a=On(t,"exp","pow");n=yt(r,a),r=n[0],a=n[1];var i=Gr(r.shape,a.shape),s=[r,a];return It.runKernelFunc((function(e,t){var n=e.pow(r,a);return t([r,a,n]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1],a=t[2];return{a:function(){var t=r.toFloat(),a=e.mul(t.mul(n.pow(t.sub(Zn(1))))),s=Ur(n.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(n.shape)},b:function(){var t=n.greater(0),s=n.log().where(t,cr(n)),o=e.mul(a.mul(s)),u=Ur(r.shape,i);return u.length>0&&(o=o.sum(u)),o.reshape(r.shape)}}}),"Pow",{},s,[!0])}}),Pa=qn({powStrict_:function(e,t){return de(e.shape,t.shape,"Error in powStrict: "),e.pow(t)}}),Ba=qn({squaredDifferenceStrict_:function(e,t){var n=On(e,"a","squaredDifferenceStrict"),r=On(t,"b","squaredDifferenceStrict");return de(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),za=qn({sub_:function(e,t){var n,r=On(e,"a","sub"),a=On(t,"b","sub");n=yt(r,a),r=n[0],a=n[1];var i=Gr(r.shape,a.shape);return It.runKernelFunc((function(e){return e.subtract(r,a)}),{a:r,b:a},(function(e){return{a:function(){var t=e,n=Ur(r.shape,i);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)},b:function(){var t=e,n=Ur(a.shape,i);return n.length>0&&(t=t.sum(n)),t.neg().reshape(a.shape)}}}),"Sub")}}),Wa=qn({subStrict_:function(e,t){var n=On(e,"a","subStrict"),r=On(t,"b","subStrict");return de(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}}),Va=qn({div_:function(e,t){var n,r=On(e,"a","div"),a=On(t,"b","div");if(n=yt(r,a),r=n[0],a=n[1],"int32"===r.dtype&&"int32"===a.dtype)return Ea(r,a);var i={a:r,b:a};return It.runKernelFunc((function(e,t){var n=e.realDivide(r,a);return t([r,a]),n}),i,null,$r,{})}});function Ua(e,t){if(e.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+e.rank+".");if(t.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+t.dtype+".");if(t.shape[t.rank-1]>e.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+t.shape[t.rank-1]+" vs. "+e.rank);if(0===e.size)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+e.shape+".");for(var n=t.shape,r=n[n.length-1],a=1,i=0;i<n.length-1;++i)a*=n[i];var s=e.shape,o=n.slice();o.pop();var u=1;for(i=r;i<e.rank;++i)u*=s[i],o.push(s[i]);var l=Be(e.shape).map((function(e){return e/u})).concat([1]).slice(0,r);return[o,a,u,l]}Object.freeze({prepareAndValidate:Ua});var Ga=30;function Ha(e){return e<=Ga?e:Pe(e,Math.floor(Math.sqrt(e)))}function ja(e,t,n){var r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+", indices.shape: "+t.shape+", shape: "+e+", sliceDim: "+r+", and batchDim: "+a+".";if(n.rank<a)throw new Error(i+" update.rank < "+a+". ");if(e.length<r+(n.rank-a))throw new Error(i+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(var s=0;s<a;++s)if(n.shape[s]!==t.shape[s])throw new Error(i+" updates.shape["+s+"] ("+n.shape[s]+") != indices.shape["+s+"] ("+t.shape[s]+").");for(s=0;s<n.rank-a;++s)if(n.shape[s+a]!==e[s+r])throw new Error(i+" updates.shape["+(s+a)+"] ("+n.shape[s+a]+") != shape["+(s+a)+"] ("+e[s+a]+")")}function qa(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+e.rank+".");if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}ja(n,t,e)}function Ka(e,t,n){for(var r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length,s=1,o=a;o<i;++o)s*=n[o];var u=a<1?1:a;return{sliceRank:a,numUpdates:me(t.shape)/u,sliceSize:s,strides:Be(n.slice(0,a)).concat([1]),outputSize:me(n)}}function Xa(e,t,n){he(e.rank===t.length,(function(){return"Error in slice"+e.rank+"D: Length of begin "+t+" must match the rank of the array ("+e.rank+")."})),he(e.rank===n.length,(function(){return"Error in slice"+e.rank+"D: Length of size "+n+" must match the rank of the array ("+e.rank+")."}));for(var r=function(r){he(t[r]+n[r]<=e.shape[r],(function(){return"Error in slice"+e.rank+"D: begin["+r+"] + size["+r+"] ("+(t[r]+n[r])+") would overflow input.shape["+r+"] ("+e.shape[r]+")"}))},a=0;a<e.rank;++a)r(a)}function Ya(e){for(var t=[],n=0;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Qa(e,t,n){for(var r=[],a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ja(e,t,n,r,a){var i=t[a],s=n[a]||1;(e&1<<a||null==i)&&(i=s>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var o=r[a];return i<0&&(i+=o),ue(0,i,o-1)}function Za(e,t,n,r,a){var i=t[a],s=n[a]||1;(e&1<<a||null==i)&&(i=s>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var o=r[a];return i<0&&(i+=o),s>0?ue(0,i,o):ue(-1,i,o-1)}function ei(e,t,n){for(var r=n.length,a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ti(e,t){for(var n=e.length>0?e[e.length-1]:1,r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ni(e){return It.customGrad(e)}Object.freeze({validateUpdateShape:ja,validateInput:qa,calculateShapes:Ka}),Object.freeze({assertParamsValid:Xa,maskToAxes:Ya,computeOutShape:Qa,startForAxis:Ja,stopForAxis:Za,isSliceContinous:ei,computeFlatOffset:ti});var ri=qn({softmax_:function(e,t){void 0===t&&(t=-1);var n=On(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and dim was "+t);return It.runKernelFunc((function(e,r){var a=e.softmax(n,t);return r([a]),a}),{logits:n},(function(e,n){var r=n[0],a=e.mul(r);return{logits:function(){return a.sub(a.sum([t],!0).mul(r))}}}),"Softmax",{dim:t},[],[!0])}}),ai=qn({logSoftmax_:function(e,t){void 0===t&&(t=-1);var n=On(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and axis was "+t);return ni((function(e,n){var r=e.max(t,!0),a=e.sub(r),i=a.toFloat().sub(a.exp().sum(t,!0).log());return n([i]),{value:i,gradFunc:function(e,n){var r=n[0].exp();return e.sub(e.sum(t,!0).mul(r))}}}))(n)}}),ii=qn({transpose_:function(e,t){var n=On(e,"x","transpose");if(null==t&&(t=n.shape.map((function(e,t){return t})).reverse()),he(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of perm "+t+"."})),t.forEach((function(e){he(e>=0&&e<n.rank,(function(){return"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t}))})),n.rank<=1)return n.clone();var r={perm:t};return It.runKernelFunc((function(e){return e.transpose(n,t)}),{x:n},null,"Transpose",r)}}),si=function(){function e(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}return e.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)},e.prototype.set=function(e,t){this.dataIdsCount++,this.data.set(e,t)},e.prototype.has=function(e){return this.data.has(e)},e.prototype.delete=function(e){return this.dataIdsCount--,this.data.delete(e)},e.prototype.numDataIds=function(){return this.dataIdsCount},e}(),oi=function(){function e(){}return e.prototype.time=function(e){return ui("time")},e.prototype.read=function(e){return ui("read")},e.prototype.readSync=function(e){return ui("readSync")},e.prototype.numDataIds=function(){return ui("numDataIds")},e.prototype.disposeData=function(e){return ui("disposeData")},e.prototype.write=function(e,t,n){return ui("write")},e.prototype.move=function(e,t,n,r){return ui("move")},e.prototype.memory=function(){return ui("memory")},e.prototype.floatPrecision=function(){return ui("floatPrecision")},e.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},e.prototype.batchMatMul=function(e,t,n,r){return ui("batchMatMul")},e.prototype.fusedBatchMatMul=function(e){return e.a,e.b,e.transposeA,e.transposeB,e.bias,e.activation,e.preluActivationWeights,ui("fusedBatchMatMul")},e.prototype.slice=function(e,t,n){return ui("slice")},e.prototype.stridedSlice=function(e,t,n,r){return ui("stridedSlice")},e.prototype.unstack=function(e,t){return ui("unstack")},e.prototype.reverse=function(e,t){return ui("reverse")},e.prototype.concat=function(e,t){return ui("concat")},e.prototype.neg=function(e){return ui("neg")},e.prototype.add=function(e,t){return ui("add")},e.prototype.addN=function(e){return ui("addN")},e.prototype.subtract=function(e,t){return ui("subtract")},e.prototype.multiply=function(e,t){return ui("multiply")},e.prototype.realDivide=function(e,t){return ui("realDivide")},e.prototype.floorDiv=function(e,t){return ui("floorDiv")},e.prototype.sum=function(e,t){return ui("sum")},e.prototype.prod=function(e,t){return ui("prod")},e.prototype.unsortedSegmentSum=function(e,t,n){return ui("unsortedSegmentSum")},e.prototype.argMin=function(e,t){return ui("argMin")},e.prototype.argMax=function(e,t){return ui("argMax")},e.prototype.equal=function(e,t){return ui("equal")},e.prototype.notEqual=function(e,t){return ui("notEqual")},e.prototype.less=function(e,t){return ui("less")},e.prototype.lessEqual=function(e,t){return ui("lessEqual")},e.prototype.greater=function(e,t){return ui("greater")},e.prototype.greaterEqual=function(e,t){return ui("greaterEqual")},e.prototype.logicalNot=function(e){return ui("logicalNot")},e.prototype.logicalAnd=function(e,t){return ui("logicalAnd")},e.prototype.logicalOr=function(e,t){return ui("logicalOr")},e.prototype.where=function(e){return ui("where")},e.prototype.select=function(e,t,n){return ui("select")},e.prototype.topk=function(e,t,n){return ui("topk")},e.prototype.min=function(e,t){return ui("min")},e.prototype.minimum=function(e,t){return ui("minimum")},e.prototype.mod=function(e,t){return ui("mod")},e.prototype.max=function(e,t){return ui("max")},e.prototype.maximum=function(e,t){return ui("maximum")},e.prototype.all=function(e,t){return ui("all")},e.prototype.any=function(e,t){return ui("any")},e.prototype.squaredDifference=function(e,t){return ui("squaredDifference")},e.prototype.ceil=function(e){return ui("ceil")},e.prototype.floor=function(e){return ui("floor")},e.prototype.round=function(e){return ui("round")},e.prototype.sign=function(e){return ui("sign")},e.prototype.isNaN=function(e){return ui("isNaN")},e.prototype.isInf=function(e){return ui("isInf")},e.prototype.isFinite=function(e){return ui("isFinite")},e.prototype.pow=function(e,t){return ui("pow")},e.prototype.exp=function(e){return ui("exp")},e.prototype.expm1=function(e){return ui("expm1")},e.prototype.softmax=function(e,t){return ui("softmax")},e.prototype.log=function(e){return ui("log")},e.prototype.log1p=function(e){return ui("log1p")},e.prototype.sqrt=function(e){return ui("sqrt")},e.prototype.rsqrt=function(e){return ui("rsqrt")},e.prototype.square=function(e){return ui("square")},e.prototype.reciprocal=function(e){return ui("reciprocal")},e.prototype.relu=function(e){return ui("relu")},e.prototype.relu6=function(e){return ui("relu6")},e.prototype.prelu=function(e,t){return ui("prelu")},e.prototype.elu=function(e){return ui("elu")},e.prototype.eluDer=function(e,t){return ui("eluDer")},e.prototype.selu=function(e){return ui("selu")},e.prototype.int=function(e){return ui("int")},e.prototype.clip=function(e,t,n){return ui("clip")},e.prototype.abs=function(e){return ui("abs")},e.prototype.complexAbs=function(e){return ui("complexAbs")},e.prototype.sigmoid=function(e){return ui("sigmoid")},e.prototype.softplus=function(e){return ui("softplus")},e.prototype.sin=function(e){return ui("sin")},e.prototype.cos=function(e){return ui("cos")},e.prototype.tan=function(e){return ui("tan")},e.prototype.asin=function(e){return ui("asin")},e.prototype.acos=function(e){return ui("acos")},e.prototype.atan=function(e){return ui("atan")},e.prototype.atan2=function(e,t){return ui("atan2")},e.prototype.sinh=function(e){return ui("sinh")},e.prototype.cosh=function(e){return ui("cosh")},e.prototype.tanh=function(e){return ui("tanh")},e.prototype.asinh=function(e){return ui("asinh")},e.prototype.acosh=function(e){return ui("acosh")},e.prototype.atanh=function(e){return ui("atanh")},e.prototype.erf=function(e){return ui("erf")},e.prototype.step=function(e,t){return ui("step")},e.prototype.fusedConv2d=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,ui("fusedConv2d")},e.prototype.conv2d=function(e,t,n){return ui("conv2d")},e.prototype.conv2dDerInput=function(e,t,n){return ui("conv2dDerInput")},e.prototype.conv2dDerFilter=function(e,t,n){return ui("conv2dDerFilter")},e.prototype.fusedDepthwiseConv2D=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,ui("fusedDepthwiseConv2D")},e.prototype.depthwiseConv2D=function(e,t,n){return ui("depthwiseConv2D")},e.prototype.depthwiseConv2DDerInput=function(e,t,n){return ui("depthwiseConv2DDerInput")},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){return ui("depthwiseConv2DDerFilter")},e.prototype.conv3d=function(e,t,n){return ui("conv3d")},e.prototype.conv3dDerInput=function(e,t,n){return ui("conv3dDerInput")},e.prototype.conv3dDerFilter=function(e,t,n){return ui("conv3dDerFilter")},e.prototype.maxPool=function(e,t){return ui("maxPool")},e.prototype.maxPoolBackprop=function(e,t,n,r){return ui("maxPoolBackprop")},e.prototype.avgPool=function(e,t){return ui("avgPool")},e.prototype.avgPoolBackprop=function(e,t,n){return ui("avgPoolBackprop")},e.prototype.avgPool3d=function(e,t){return ui("avgPool3d")},e.prototype.avgPool3dBackprop=function(e,t,n){return ui("avgPool3dBackprop")},e.prototype.maxPool3d=function(e,t){return ui("maxPool3d")},e.prototype.maxPool3dBackprop=function(e,t,n,r){return ui("maxPool3dBackprop")},e.prototype.reshape=function(e,t){return ui("reshape")},e.prototype.cast=function(e,t){return ui("cast")},e.prototype.tile=function(e,t){return ui("tile")},e.prototype.pad=function(e,t,n){return ui("pad")},e.prototype.transpose=function(e,t){return ui("transpose")},e.prototype.gather=function(e,t,n){return ui("gather")},e.prototype.gatherND=function(e,t){return ui("gatherND")},e.prototype.scatterND=function(e,t,n){return ui("scatterND")},e.prototype.batchToSpaceND=function(e,t,n){return ui("batchToSpaceND")},e.prototype.spaceToBatchND=function(e,t,n){return ui("spaceToBatchND")},e.prototype.resizeBilinear=function(e,t,n,r){return ui("resizeBilinear")},e.prototype.resizeBilinearBackprop=function(e,t,n){return ui("resizeBilinearBackprop")},e.prototype.resizeNearestNeighbor=function(e,t,n,r){return ui("resizeNearestNeighbor")},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){return ui("resizeNearestNeighborBackprop")},e.prototype.batchNormalization=function(e,t,n,r,a,i){return ui("batchNormalization")},e.prototype.localResponseNormalization4D=function(e,t,n,r,a){return ui("localResponseNormalization4D")},e.prototype.LRNGrad=function(e,t,n,r,a,i,s){return ui("LRNGrad")},e.prototype.multinomial=function(e,t,n,r){return ui("multinomial")},e.prototype.oneHot=function(e,t,n,r){return ui("oneHot")},e.prototype.cumsum=function(e,t,n,r){return ui("cumsum")},e.prototype.nonMaxSuppression=function(e,t,n,r,a){return ui("nonMaxSuppression")},e.prototype.fft=function(e){return ui("fft")},e.prototype.ifft=function(e){return ui("ifft")},e.prototype.complex=function(e,t){return ui("complex")},e.prototype.real=function(e){return ui("real")},e.prototype.imag=function(e){return ui("imag")},e.prototype.cropAndResize=function(e,t,n,r,a,i){return ui("cropAndResize")},e.prototype.depthToSpace=function(e,t,n){return ui("depthToSpace")},e.prototype.split=function(e,t,n){return ui("split")},e.prototype.sparseToDense=function(e,t,n,r){return ui("sparseToDense")},e.prototype.diag=function(e){return ui("diag")},e.prototype.fill=function(e,t,n){return ui("fill")},e.prototype.onesLike=function(e){return ui("onesLike")},e.prototype.zerosLike=function(e){return ui("zerosLike")},e.prototype.linspace=function(e,t,n){return ui("linspace")},e.prototype.dispose=function(){return ui("dispose")},e}();function ui(e){throw new Error("'"+e+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function li(e,t,n,r,a,i,s){void 0===s&&(s="channelsLast");var o,u=fi(t),l=u[0],c=u[1];if("channelsLast"===s)o=[l,c,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);o=[l,c,e[1],e[1]]}return hi(e,o,n,r,a,i,!1,s)}function ci(e,t,n,r,a,i,s){void 0===s&&(s="NDHWC");var o,u,l=mi(t),c=l[0],h=l[1],d=l[2];if("NDHWC"===s)u="channelsLast",o=[c,h,d,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat "+s);u="channelsFirst",o=[c,h,d,e[1],e[1]]}return di(e,o,n,r,a,!1,u,i)}function hi(e,t,n,r,a,i,s,o){void 0===s&&(s=!1),void 0===o&&(o="channelsLast");var u=[-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],d=u[3];if("channelsLast"===o)l=e[0],c=e[1],h=e[2],d=e[3];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=e[0],d=e[1],c=e[2],h=e[3]}var p,f=t[0],m=t[1],g=t[3],v=fi(n),y=v[0],b=v[1],x=fi(r),w=x[0],k=x[1],I=gi(f,w),C=gi(m,k),S=function(e,t,n,r,a,i,s,o){var u,l,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};var h=function(e,t,n,r,a){null==r&&(r=pi(e,t,n));var i=e[1],s=vi((e[0]-t+2*r)/n+1,a);he(ve(s),(function(){return"The output # of rows ("+s+") must be an integer. Change the stride and/or zero pad parameters"}));var o=vi((i-t+2*r)/n+1,a);return he(ve(o),(function(){return"The output # of columns ("+o+") must be an integer. Change the stride and/or zero pad parameters"})),[s,o]}([t,n],i,r,e,o);l=h[0],c=h[1]}else if("same"===e){l=Math.ceil(t/r),c=Math.ceil(n/a);var d=Math.max(0,(l-1)*r+i-t),p=Math.max(0,(c-1)*a+s-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2);u={top:f,bottom:m,left:g,right:p-g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-i+1)/r),c=Math.ceil((n-s+1)/a)}return{padInfo:u,outHeight:l,outWidth:c}}(a,c,h,y,b,I,C,i),N=S.padInfo,T=S.outHeight,E=S.outWidth,R=s?g*d:g;return"channelsFirst"===o?p=[l,R,T,E]:"channelsLast"===o&&(p=[l,T,E,R]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:h,inChannels:d,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationHeight:w,dilationWidth:k,inShape:e,outShape:p,filterShape:t}}function di(e,t,n,r,a,i,s,o){void 0===i&&(i=!1),void 0===s&&(s="channelsLast");var u=[-1,-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],d=u[3],p=u[4];if("channelsLast"===s)l=e[0],c=e[1],h=e[2],d=e[3],p=e[4];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);l=e[0],p=e[1],c=e[2],h=e[3],d=e[4]}var f,m=t[0],g=t[1],v=t[2],y=t[4],b=mi(n),x=b[0],w=b[1],k=b[2],I=mi(r),C=I[0],S=I[1],N=I[2],T=gi(m,C),E=gi(g,S),R=gi(v,N),A=function(e,t,n,r,a,i,s,o,u,l,c){var h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};var m=function(e,t,n,r,a,i){null==a&&(a=pi(e,t,r));var s=e[1],o=e[2],u=vi((e[0]-t+2*a)/r+1,i);he(ve(u),(function(){return"The output # of depths ("+u+") must be an integer. Change the stride and/or zero pad parameters"}));var l=vi((s-t+2*a)/r+1,i);he(ve(l),(function(){return"The output # of rows ("+l+") must be an integer. Change the stride and/or zero pad parameters"}));var c=vi((o-t+2*a)/r+1,i);return he(ve(c),(function(){return"The output # of columns ("+c+") must be an integer. Change the stride and/or zero pad parameters"})),[u,l,c,1]}([t,n,r,1],o,0,a,e,c);d=m[0],p=m[1],f=m[2]}else if("same"===e){var g=((d=Math.ceil(t/a))-1)*a+o-t,v=((p=Math.ceil(n/i))-1)*i+u-n,y=((f=Math.ceil(r/s))-1)*s+l-r,b=Math.floor(g/2),x=g-b,w=Math.floor(v/2),k=v-w,I=Math.floor(y/2);h={top:w,bottom:k,left:I,right:y-I,front:b,back:x,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/i),f=Math.ceil((r-l+1)/s)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,c,h,d,x,w,k,T,E,R,o),D=A.padInfo,F=A.outDepth,_=A.outHeight,$=A.outWidth,O=i?y*p:y;return"channelsFirst"===s?f=[l,O,F,_,$]:"channelsLast"===s&&(f=[l,F,_,$,O]),{batchSize:l,dataFormat:s,inDepth:c,inHeight:h,inWidth:d,inChannels:p,outDepth:F,outHeight:_,outWidth:$,outChannels:O,padInfo:D,strideDepth:x,strideHeight:w,strideWidth:k,filterDepth:m,filterHeight:g,filterWidth:v,effectiveFilterDepth:T,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:C,dilationHeight:S,dilationWidth:N,inShape:e,outShape:f,filterShape:t}}function pi(e,t,n,r){void 0===r&&(r=1);var a=gi(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function fi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function mi(e){return"number"==typeof e?[e,e,e]:e}function gi(e,t){return t<=1?e:e+(e-1)*(t-1)}function vi(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function yi(e){var t=fi(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function bi(e,t){return yi(e)||yi(t)}function xi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function wi(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();var r=ir(e.shape),a=e.toFloat(),i=n.complex(a,r);return r.dispose(),a.dispose(),i}if(!Re(e.dtype,t))return It.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){var s=n.real(e);return i=s.cast(t),s.dispose(),i}if("int32"===t)return n.int(e);if("bool"===t){var o=Zn(0,e.dtype);return i=n.notEqual(e,o),o.dispose(),i}throw new Error("Error in Cast: failed to cast "+e.dtype+" to "+t)}function ki(e,t){return It.makeTensorFromDataId(e.dataId,t,e.dtype)}function Ii(e,t,n){var r=(t-e)/(n-1),a=Ue(n,"float32");a[0]=e;for(var i=1;i<a.length;i++)a[i]=a[i-1]+r;return er(a,"float32")}function Ci(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+e.length+", imag: "+t.length+".");for(var n=new Float32Array(2*e.length),r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Si(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ni(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ti(e,t,n){var r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Ei(e,t,n){var r=function(e,t,n){return function(e,t,n){for(var r=0,a=e.length,i=0,s=!1;r<a;){var o=n(t,e[i=r+(a-r>>>1)]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}(e,t,n||Ri)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Ri(e,t){return e>t?1:e<t?-1:0}function Ai(e,t,n,r,a){return Fi(e,t,n,r,a,0).selectedIndices}function Di(e,t,n,r,a,i){var s=Fi(e,t,n,r,a,i);return s.numValidOutputs.dispose(),{selectedIndices:s.selectedIndices,selectedScores:s.selectedScores}}function Fi(e,t,n,r,a,i,s,o){void 0===o&&(o=!1);for(var u=Array.from(t).map((function(e,t){return{score:e,boxIndex:t,suppressBeginIndex:0}})).filter((function(e){return e.score>a})).sort(Oi),l=i>0?-.5/i:0,c=[],h=[];c.length<n&&u.length>0;){var d=u.pop(),p=d.score,f=d.boxIndex,m=d.suppressBeginIndex;if(p<a)break;for(var g=!1,v=c.length-1;v>=m;--v){var y=_i(e,f,c[v]);if(y>=r){g=!0;break}if(d.score=d.score*$i(r,l,y),d.score<=a)break}d.suppressBeginIndex=c.length,g||(d.score===p?(c.push(f),h.push(d.score)):d.score>a&&Ei(u,d,Oi))}var b=c.length;return o&&(c.fill(0,b),h.fill(0,b)),{selectedIndices:er(c,"int32"),selectedScores:er(h,"float32"),numValidOutputs:Zn(b,"int32")}}function _i(e,t,n){var r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(u-s),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;var m=Math.max(i,l),g=Math.max(s,c),v=Math.min(o,h),y=Math.min(u,d),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(p+f-b)}function $i(e,t,n){var r=Math.exp(t*n*n);return n<=e?r:0}function Oi(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Mi(e,t,n){var r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((function(t){a[n]=t;var i=e.slice(r,a);return r[n]+=t,i}))}function Li(e,t){for(var n=new Array(e.rank),r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];var a=vr(n,e.dtype);for(r=0;r<a.values.length;++r){for(var i=a.indexToLoc(r),s=new Array(e.rank),o=0;o<s.length;o++)s[o]=i[o]%e.shape[o];var u=e.locToIndex(s);a.values[r]=e.values[u]}return a.toTensor()}function Pi(e,t,n,r,a){for(var i=t[t.length-1],s=[e.length/i,i],o=s[0],u=s[1],l=Se(n,o*r),c=Se("int32",o*r),h=0;h<o;h++){for(var d=h*u,p=e.subarray(d,d+u),f=[],m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((function(e,t){return t.value-e.value}));var g=h*r,v=l.subarray(g,g+r),y=c.subarray(g,g+r);for(m=0;m<r;m++)v[m]=f[m].value,y[m]=f[m].index}var b=t.slice();return b[b.length-1]=r,[Qn(l,b,n),Qn(c,b,"int32")]}function Bi(e,t){for(var n=[],r=0;r<t.length;r++)t[r]&&n.push(r);var a=vr(e,"int32"),i=vr([n.length,e.length],"int32");for(r=0;r<n.length;r++){var s=a.indexToLoc(n[r]),o=r*e.length;i.values.set(s,o)}return i.toTensor()}Object.freeze({castTensor:wi,reshapeTensor:ki,linspaceImpl:Ii,upcastType:gt,axesAreInnerMostDims:Ln,combineLocations:Pn,computeOutAndReduceShapes:Bn,expandShapeToKeepDim:zn,assertAxesAreInnerMostDims:Wn,getAxesPermutation:Vn,getUndoAxesPermutation:Un,getInnerMostAxes:Gn,getBroadcastDims:Vr,getReductionAxes:Ur,assertAndGetBroadcastShape:Gr,assertParamsConsistent:Hn,computeOutShape:jn,computePool2DInfo:li,computePool3DInfo:ci,computeConv2DInfo:hi,computeConv3DInfo:di,computeDefaultPad:pi,tupleValuesAreOne:yi,eitherStridesOrDilationsAreOne:bi,convertConv2DDataFormat:xi,PARALLELIZE_THRESHOLD:Ga,computeOptimalWindowSize:Ha});var zi=function(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("float v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        float result = "+r+";\n        setOutput(result);\n      }\n    "},Wi=function(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("vec4 v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        vec4 result = "+r+";\n        setOutput(result);\n      }\n    "},Vi=function(e,t,n){this.variableNames=["A"];var r=e.windowSize,a=e.batchSize,i=e.inSize,s=Math.ceil(i/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];var o="max"===t?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < "+r+"; i++) {\n          int inIdx = "+u+";\n          float candidate = getA(batch, inIdx);\n          if (candidate "+o+" bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    "};function Ui(e,t){return["x","y","z","w","u","v"].slice(0,t).map((function(t){return e+"."+t}))}function Gi(e,t){return 1===t?[e]:Ui(e,t)}function Hi(){var e,t,n,r,a,i,s,o,u,l;return 2===Q().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function ji(e,t,n){void 0===n&&(n="index");var r=Be(t);return r.map((function(t,a){return"int "+e[a]+" = "+n+" / "+t+"; "+(a===r.length-1?"int "+e[a+1]+" = "+n+" - "+e[a]+" * "+t:"index -= "+e[a]+" * "+t)+";"})).join("")}function qi(e){var t=Be(e).map((function(e){return e.toString()}));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * "+t[0]+" + coords.y * "+t[1]+" + coords.z;\n  }\n"}var Ki="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function Xi(e,t,n,r){var a=[];e.forEach((function(e){var t=me(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push("uniform float "+e.name+(t>1?"["+t+"]":"")+";"):(a.push("uniform sampler2D "+e.name+";"),a.push("uniform int offset"+e.name+";"))}));var i,s,o=a.join("\n"),u=e.map((function(e){return function(e,t,n){void 0===n&&(n=!1);var r="";r+=n?Qi(e):Yi(e);var a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){var n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=Vr(e.shapeInfo.logicalShape,t.logicalShape),l=as(o),c=o-s,h=["x","y","z","w","u","v"];n=0===s?"":o<2&&u.length>=1?"coords = 0;":u.map((function(e){return"coords."+h[e+c]+" = 0;"})).join("\n");var d;d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+h[t+c]})).join(", ");var p="return outputValue;",f=1===me(e.shapeInfo.logicalShape),m=1===me(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){var g=s-2,v=s-1;u.indexOf(g)>-1&&u.indexOf(v)>-1?p="return vec4(outputValue.x);":u.indexOf(g)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 "+i+"() {\n      "+l+" coords = getOutputCoords();\n      "+n+"\n      vec4 outputValue = get"+a+"("+d+");\n      "+p+"\n    }\n  "}(e,t):function(e,t){var n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&ge(s,i))return"\n      float "+a+"() {\n        return sampleTexture("+n+", resultUV);\n      }\n    ";var l,c=as(u),h=Vr(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,p=["x","y","z","w","u","v"];l=0===o?"":u<2&&h.length>=1?"coords = 0;":h.map((function(e){return"coords."+p[e+d]+" = 0;"})).join("\n");var f;return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+p[t+d]})).join(", "),"\n    float "+a+"() {\n      "+c+" coords = getOutputCoords();\n      "+l+"\n      return get"+r+"("+f+");\n    }\n  "}(e,t)),r}(e,t,r)})).join("\n"),l=t.texShape,c=Hi(),h=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return "+e.texture2D+"(textureSampler, uv).r;\n    }\n  "}(c),d=function(e){return e.version+"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    "+e.varyingFs+" vec2 resultUV;\n    "+e.defineOutput+"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    "+e.defineSpecialNaN+"\n    "+e.defineSpecialInf+"\n    "+e.defineRound+"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    "+Ji+"\n    "+Zi+"\n    "+es+"\n  "}(c);return t.isPacked?(i=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * "+n[1]+".0);\n      }\n    ":1===n[1]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * "+n[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      return 2 * (resTexRC.x * "+n[1]+" + resTexRC.y);\n    }\n  "}(0,t);case 2:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ge(e,t))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2("+n[0]+", "+n[1]+"));\n      }\n    ";var r=Math.ceil(e[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=e,r=t,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=(i=Math.ceil(n[2]/2))*Math.ceil(n[1]/2),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+a[0]+", "+a[1]+"));\n      int index = resTexRC.x * "+a[1]+" + resTexRC.y;\n\n      int b = index / "+s+";\n      index -= b * "+s+";\n\n      int r = 2 * (index / "+i+");\n      int c = imod(index, "+i+") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";default:return function(e,t){for(var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,s="",o="b, r, c",u=2;u<e.length-1;u++)s="\n      int b"+u+" = index / "+(i*=e[e.length-u-1])+";\n      index -= b"+u+" * "+i+";\n    "+s,o="b"+u+", "+o;return"\n    ivec"+e.length+" getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      "+s+"\n\n      int b = index / "+a+";\n      index -= b * "+a+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec"+e.length+"("+o+");\n    }\n  "}(e,t)}var n,r,a,i,s}(t.logicalShape,l),s=function(e){return"\n    void setOutput(vec4 val) {\n      "+e.output+" = val;\n    }\n  "}(c)):(i=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){return 1===t[0]?"\n      int getOutputCoords() {\n        return int(resultUV.x * "+t[1]+".0);\n      }\n    ":1===t[1]?"\n      int getOutputCoords() {\n        return int(resultUV.y * "+t[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      return resTexRC.x * "+t[1]+" + resTexRC.y;\n    }\n  "}(0,t);case 2:return function(e,t){return ge(e,t)?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2("+t[0]+", "+t[1]+"));\n      }\n    ":1===e[1]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":1===e[0]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      int r = index / "+e[1]+";\n      int c = index - r * "+e[1]+";\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=t,r=ji(["r","c","d"],e),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      "+r+"\n      return ivec3(r, c, d);\n    }\n  ";case 4:return function(e,t){var n=ji(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      "+n+"\n      return ivec4(r, c, d, d2);\n    }\n  "}(e,t);case 5:return function(e,t){var n=ji(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2("+t[0]+",\n                             "+t[1]+"));\n\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "}(e,t);case 6:return function(e,t){var n=ji(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n,r}(t.logicalShape,l),s=function(e){return"\n    void setOutput(float val) {\n      "+e.output+" = vec4(val, 0, 0, 0);\n    }\n  "}(c)),r&&(d+=ts),[d,h,s,o,i,u,n].join("\n")}function Yi(e){var t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"float "+n+"() {return "+t+";}";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===a&&1===i)return"\n      float "+n+"() {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var s=e.shapeInfo.texShape;return"\n    float "+n+"() {\n      vec2 uv = uvFromFlat("+s[0]+", "+s[1]+", "+ns(t)+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"\n      float "+n+"(int index) {\n        "+rs(e)+"\n      }\n    ";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return"\n      float "+n+"(int index) {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var s=ns(t);return 1===i?"\n      float "+n+"(int index) {\n        vec2 uv = vec2(0.5, (float(index + "+s+") + 0.5) / "+a+".0);\n        return sampleTexture("+t+", uv);\n      }\n    ":1===a?"\n      float "+n+"(int index) {\n        vec2 uv = vec2((float(index + "+s+") + 0.5) / "+i+".0, 0.5);\n        return sampleTexture("+t+", uv);\n      }\n    ":"\n    float "+n+"(int index) {\n      vec2 uv = uvFromFlat("+a+", "+i+", index + "+s+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ge(t,a)){var i=a[0];return"\n    float "+r+"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2("+a[1]+".0, "+i+".0);\n      return sampleTexture("+n+", uv);\n    }\n  "}var s=Ce(t),o=s.newShape,u=s.keptDims,l=o;if(l.length<t.length)return"\n      "+Yi(is(e,l))+"\n      float "+r+"(int row, int col) {\n        return "+r+"("+ss(["row","col"],u)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2("+t[1]+", 1)));\n        "+rs(e)+"\n      }\n    ";var c=a[0],h=a[1],d=ns(n);return 1===h?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+d+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / "+c+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":1===c?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+d+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2((index + 0.5) / "+h+".0, 0.5);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n  float "+r+"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * "+t[1]+" + col + "+d+";\n    vec2 uv = uvFromFlat("+c+", "+h+", index);\n    return sampleTexture("+n+", uv);\n  }\n"}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],s=Ce(t),o=s.newShape,u=s.keptDims,l=o;if(l.length<t.length)return"\n        "+Yi(is(e,l))+"\n        float "+r+"(int row, int col, int depth) {\n          return "+r+"("+ss(["row","col","depth"],u)+");\n        }\n      ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3("+a+", "+i+", 1)));\n        "+rs(e)+"\n      }\n    ";var c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;return d===a&&null==p?"\n        float "+r+"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2("+i+", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2("+d+".0, "+h+".0);\n          return sampleTexture("+n+", uv);\n        }\n      ":d===i&&null==p?"\n    float "+r+"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2("+t[1]+", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+d+".0, "+h+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n      float "+r+"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * "+a+" + col * "+i+" + depth + "+ns(n)+";\n        vec2 uv = uvFromFlat("+h+", "+d+", index);\n        return sampleTexture("+n+", uv);\n      }\n  "}(e);case 4:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,s=t[1]*i,o=Ce(t),u=o.newShape,l=o.keptDims;if(u.length<t.length)return"\n      "+Yi(is(e,u))+"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        return "+r+"("+ss(["row","col","depth","depth2"],l)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4("+s+", "+i+", "+a+", 1)));\n        "+rs(e)+"\n      }\n    ";var c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===s&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3("+i+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+p+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":p===a&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3("+t[1]*t[2]+", "+t[2]+", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+p+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+s+" + col * "+i+" +\n          depth * "+a+" + depth2;\n      vec2 uv = uvFromFlat("+d+", "+p+", index + "+ns(n)+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 5:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,u=Ce(t),l=u.newShape,c=u.keptDims;if(l.length<t.length)return"\n      "+Yi(is(e,l))+"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        return "+r+"("+ss(["row","col","depth","depth2","depth3"],c)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+o+", "+s+", "+i+", "+a+")) +\n          depth3;\n        "+rs(e)+"\n      }\n    ";var h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===o&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4("+s+", "+i+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+f+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":f===a&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]+",\n               "+t[2]*t[3]+", "+t[3]+", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+f+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+o+" + col * "+s+" + depth * "+i+" +\n          depth2 * "+a+" + depth3 + "+ns(n)+";\n      vec2 uv = uvFromFlat("+p+", "+f+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 6:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Ce(t),i=a.newShape,s=a.keptDims;if(i.length<t.length)return"\n      "+Yi(is(e,i))+"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return "+r+"("+ss(["row","col","depth","depth2","depth3","depth4"],s)+");\n      }\n    ";var o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4("+h+", "+c+", "+l+", "+u+")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2("+o+", 1)));\n        "+rs(e)+"\n      }\n    ";var d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===h&&null==d?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4("+c+", "+l+", "+u+", "+o+")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":m===o&&null==d?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]*t[4]+",\n               "+t[2]*t[3]*t[4]+",\n               "+t[3]*t[4]+",\n               "+t[4]+")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+h+" + col * "+c+" + depth * "+l+" +\n          depth2 * "+u+" + depth3 * "+o+" + depth4 + "+ns(n)+";\n      vec2 uv = uvFromFlat("+f+", "+m+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function Qi(e){var t;switch(e.shapeInfo.logicalShape.length){case 0:return"\n    vec4 "+("get"+(t=e.name).charAt(0).toUpperCase()+t.slice(1))+"() {\n      return "+Hi().texture2D+"("+t+", halfCR);\n    }\n  ";case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=Hi();return"\n    vec4 "+n+"(int index) {\n      vec2 uv = packedUVfrom1D(\n        "+a[0]+", "+a[1]+", index);\n      return "+i.texture2D+"("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],s=a[1],o=Hi();if(null!=a&&ge(t,a))return"\n      vec4 "+r+"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2("+s+".0, "+i+".0);\n\n        return "+o.texture2D+"("+n+", uv);\n      }\n    ";var u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return"\n    vec4 "+r+"(int row, int col) {\n      vec2 uv = packedUVfrom2D("+Math.ceil(t[1]/2)+", "+u[0]+", "+u[1]+", row, col);\n      return "+o.texture2D+"("+n+", uv);\n    }\n  "}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0])return"\n        "+Qi(is(e,t.slice(1)))+"\n        vec4 "+r+"(int b, int row, int col) {\n          return "+r+"("+ss(["b","row","col"],[1,2])+");\n        }\n      ";var s=i[0],o=i[1],u=Math.ceil(t[2]/2);return"\n    vec4 "+r+"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        "+s+", "+o+", "+u*Math.ceil(t[1]/2)+", "+u+", b, row, col);\n      return "+Hi().texture2D+"("+n+", uv);\n    }\n  "}(e);default:return function(e){for(var t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=s[0],u=s[1],l=Math.ceil(t[n-1]/2),c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",d="b * "+c+" + (row / 2) * "+l+" + (col / 2)",p=2;p<n-1;p++)h="int b"+p+", "+h,d="b"+p+" * "+(c*=t[n-p-1])+" + "+d;return"\n    vec4 "+a+"("+h+") {\n      int index = "+d+";\n      int texR = index / "+u+";\n      int texC = index - texR * "+u+";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+u+", "+o+");\n      return "+Hi().texture2D+"("+r+", uv);\n    }\n  "}(e)}}var Ji="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Zi="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",es="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ts="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ns(e){return"offset"+e}function rs(e){var t=e.name,n=me(e.shapeInfo.logicalShape);return n<2?"return "+t+";":"\n    for (int i = 0; i < "+n+"; i++) {\n      if (i == index) {\n        return "+t+"[i];\n      }\n    }\n  "}function as(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank "+e+" is not yet supported")}function is(e,t){var n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ss(e,t){return t.map((function(t){return e[t]})).join(", ")}var os=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,he(e.length>2,(function(){return"Packed arg"+(n.charAt(0).toUpperCase()+n.slice(1))+" supports only inputs with rank above 2."}));var a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");var s,o,u=this.outputShape,l=u.length,c=as(l),h=Gi("coords",l);if(1===i){var d=as(o=l+1);s="\n        "+d+" sourceLocR = "+d+"("+h.join()+", 0);\n        ++"+h[l-1]+";\n        "+d+" sourceLocG = "+d+"("+h.join()+", 0);\n        ++"+h[l-2]+";\n        "+d+" sourceLocA = "+d+"("+h.join()+", 0);\n        --"+h[l-1]+";\n        "+d+" sourceLocB = "+d+"("+h.join()+", 0);\n        --"+h[l-2]+";"}else o=l,s="\n        "+c+" sourceLocR = coords;\n        ++"+h[l-1]+";\n        "+c+" sourceLocG = coords;\n        ++"+h[l-2]+";\n        "+c+" sourceLocA = coords;\n        --"+h[l-1]+";\n        "+c+" sourceLocB = coords;\n        --"+h[l-2]+";";var p=["x","y","z","w","u","v"].slice(0,o),f="."+p[o-1],m=p.map((function(e){return"int "+e})),g=Gi("sourceLocR",o-1).concat("inIdx.r"),v=Gi("sourceLocG",o-1).concat("inIdx.g"),y=Gi("sourceLocB",o-1).concat("inIdx.b"),b=Gi("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel("+g.join()+"),\n                             getBestIndicesAChannel("+v.join()+"),\n                             getBestIndicesAChannel("+y.join()+"),\n                             getBestIndicesAChannel("+b.join()+")));",k="vec4(\n            getAChannel("+g.join()+"),\n            hasNextCol ? getAChannel("+v.join()+") : 0.,\n            hasNextRow ? getAChannel("+y.join()+") : 0.,\n            hasNextRow && hasNextCol ? getAChannel("+b.join()+") : 0.)",I=r?"":"\n      float getBestIndicesAChannel("+m.join()+") {\n        return getChannel(getBestIndicesA("+p.join()+"),\n                                          vec2("+p.slice(-2).join()+"));\n      }";this.userCode="\n      float getAChannel("+m.join()+") {\n        return getChannel(getA("+p.join()+"),\n                               vec2("+p.slice(-2).join()+"));\n      }\n      "+I+"\n      void main() {\n        "+c+" coords = getOutputCoords();\n        bool hasNextCol = "+h[l-1]+" < "+(u[l-1]-1)+";\n        bool hasNextRow = "+h[l-2]+" < "+(u[l-2]-1)+";\n        "+s+"\n        ivec4 srcIdx = ivec4(sourceLocR"+f+", sourceLocG"+f+",\n          sourceLocB"+f+", sourceLocA"+f+") * "+t+";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = "+k+";\n\n        for (int i = 0; i < "+t+"; i++) {\n          inIdx = srcIdx;\n          "+w+"\n          vec4 candidate = "+k+";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4("+x+"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    "},us=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2("+l+", "+c+");\n      const float avgMultiplier = float("+h+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+o+";\n            wR += "+i+") {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+u+";\n            wC+= "+s+") {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ls=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode="\n      const ivec3 pads = ivec3("+p+", "+f+", "+m+");\n      const float avgMultiplier = float("+g+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+c+";\n            wD += "+o+") {\n          float dyD = float(dyDCorner + wD) / "+a+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+h+";\n              wR += "+u+") {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+d+";\n                wC += "+l+") {\n              float dyC = float(dyCCorner + wC) / "+s+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},cs=function(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Gr(e,t),Gr(e,n);var s="0.0";null!=r&&(Gr(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var o="1.0";null!=a&&(Gr(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = "+s+";\n        float scale = "+o+";\n        float inv = scale * inversesqrt(variance + float("+i+"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    "},hs=function(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Gr(e,t),Gr(e,n);var s="vec4(0.0)";null!=r&&(Gr(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var o="vec4(1.0)";null!=a&&(Gr(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = "+s+";\n        vec4 scale = "+o+";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4("+i+"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    "},ds=function(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Gr(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        "+e+"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    "},ps="return a + b;",fs="return a - b;",ms="return a * b;",gs="return (a < 0.) ? b * a : a;",vs=function(e,t,n){this.variableNames=["A","B"],this.outputShape=Gr(t,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        "+e+"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "},ys="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",bs=function(e,t,n,r){void 0===r&&(r=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Gr(t,n);var a=this.outputShape.length,i="";if(r)if(0===a||1===me(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i="\n          "+as(a)+" coords = getOutputCoords();\n        ",1===a)i+="\n            result.y = (coords + 1) >= "+this.outputShape[0]+" ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ";else{var s=Gi("coords",a);i+="\n            bool nextRowOutOfBounds =\n              ("+s[a-2]+" + 1) >= "+this.outputShape[a-2]+";\n            bool nextColOutOfBounds =\n              ("+s[a-1]+" + 1) >= "+this.outputShape[a-1]+";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        "+e+"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        "+i+"\n\n        setOutput(result);\n      }\n    "},xs=function(){function e(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),ws=function(){function e(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),ks=function(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "},Is=function(e){this.outputShape=[],this.outputShape=jn(e,1),this.variableNames=e.map((function(e,t){return"T"+t}));var t=new Array(e.length-1);t[0]=e[0][1];for(var n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];var r=["if (yC < "+t[0]+") setOutput(getT0(yR, yC));"];for(n=1;n<t.length;n++){var a=t[n-1];r.push("else if (yC < "+t[n]+") setOutput(getT"+n+"(yR, yC-"+a+"));")}var i=t.length,s=t[t.length-1];r.push("else setOutput(getT"+i+"(yR, yC-"+s+"));"),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        "+r.join("\n        ")+"\n      }\n    "},Cs=function(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=jn(e,t);var n=this.outputShape,r=n.length,a=as(r),i=Gi("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((function(e,t){return"T"+t}));var o=new Array(e.length-1);o[0]=e[0][t];for(var u=1;u<o.length;u++)o[u]=o[u-1]+e[u][t];var l=s[t],c=s.slice(-2),h=s.join(),d="if ("+l+" < "+o[0]+") {\n        return getChannel(\n            getT0("+h+"), vec2("+c.join()+"));\n        }";for(u=1;u<o.length;u++){var p=o[u-1];d+="\n        if ("+l+" < "+o[u]+"  && "+l+" >= "+o[u-1]+") {\n          return getChannel(\n            getT"+u+"("+Ss(s,l,p)+"),\n            vec2("+Ss(c,l,p)+"));\n        }"}var f=o.length,m=o[o.length-1];d+="\n        return getChannel(\n          getT"+f+"("+Ss(s,l,m)+"),\n          vec2("+Ss(c,l,m)+"));",this.userCode="\n      float getValue("+s.map((function(e){return"int "+e}))+") {\n        "+d+"\n      }\n\n      void main() {\n        "+a+" coords = getOutputCoords();\n        vec4 result = vec4(getValue("+i+"), 0., 0., 0.);\n\n        "+i[r-1]+" = "+i[r-1]+" + 1;\n        if ("+i[r-1]+" < "+n[r-1]+") {\n          result.g = getValue("+i+");\n        }\n\n        "+i[r-2]+" = "+i[r-2]+" + 1;\n        if ("+i[r-2]+" < "+n[r-2]+") {\n          result.a = getValue("+i+");\n        }\n\n        "+i[r-1]+" = "+i[r-1]+" - 1;\n        if ("+i[r-2]+" < "+n[r-2]+" &&\n            "+i[r-1]+" < "+n[r-1]+") {\n          result.b = getValue("+i+");\n        }\n        setOutput(result);\n      }\n    "};function Ss(e,t,n){var r=e.indexOf(t);return e.map((function(e,t){return t===r?e+" - "+n:e})).join()}var Ns=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              if ("+i+") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ts=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords["+c+"];\n\n        ivec2 dyCorner = ivec2(coords["+u+"], coords["+l+"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n\n              if ("+i+") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Es=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yF = 0; yF < "+e.outDepth+"; yF++) {\n            int xF = wF + yF * "+t+" - "+a+";\n\n            if (xF < 0 || xF >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n              int xR = wR + yR * "+n+" - "+i+";\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n                int xC = wC + yC * "+r+" - "+s+";\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Rs=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3("+o+", "+u+", "+l+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+t+"; wF++) {\n          float dyF = float(dyFCorner + wF) / "+a+".0;\n\n          if (dyF < 0.0 || dyF >= "+e.outDepth+".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = "+t+" - 1 - wF;\n\n          for (int wR = 0; wR < "+n+"; wR++) {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = "+n+" - 1 - wR;\n\n            for (int wC = 0; wC < "+r+"; wC++) {\n              float dyC = float(dyCCorner + wC) / "+s+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = "+r+" - 1 - wC;\n\n              for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},As=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * "+i+" + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ds=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2("+i+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < "+o+"; dm++) {\n              int d2 = d1 * "+o+" + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Fs=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.padInfo.top,i=e.padInfo.left,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,v=f?3:1,y="",b="";n&&(y=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",b="result = activation(result);");var x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+y+"\n\n      const ivec2 strides = ivec2("+s+", "+o+");\n      const ivec2 pads = ivec2("+a+", "+i+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords["+v+"];\n\n        ivec2 xRCCorner =\n            ivec2(coords["+m+"], coords["+g+"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+c+"; wR++) {\n          int xR = xRCorner + wR * "+u+";\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+h+"; wC++) {\n            int xC = xCCorner + wC * "+l+";\n\n            if (xC < 0 || xC >= "+e.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+d+"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if ("+f+") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if ("+(1===p)+") {\n\n              if ("+f+") {\n                dotProd +=\n                    getX(batch, xR, xC, "+d+") *\n                    getW(wR, wC, "+d+", d2);\n              } else {\n                dotProd +=\n                    getX(batch, "+d+", xR, xC) *\n                    getW(wR, wC, "+d+", d2);\n              }\n\n            } else if ("+(2===p)+") {\n              vec2 wValues = vec2(\n                getW(wR, wC, "+d+", d2),\n                getW(wR, wC, "+d+" + 1, d2)\n              );\n\n              if ("+f+") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, "+d+"),\n                  getX(batch, xR, xC, "+d+" + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, "+d+", xR, xC),\n                  getX(batch, "+d+" + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if ("+(3===p)+") {\n              vec3 wValues = vec3(\n                getW(wR, wC, "+d+", d2),\n                getW(wR, wC, "+d+" + 1, d2),\n                getW(wR, wC, "+d+" + 2, d2)\n              );\n\n              if ("+f+") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, "+d+"),\n                  getX(batch, xR, xC, "+d+" + 1),\n                  getX(batch, xR, xC, "+d+" + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, "+d+", xR, xC),\n                  getX(batch, "+d+" + 1, xR, xC),\n                  getX(batch, "+d+" + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        "+x+"\n        "+b+"\n        setOutput(result);\n      }\n    "},_s=function(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3("+a+", "+i+", "+s+");\n      const ivec3 pads = ivec3("+t+", "+n+", "+r+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+c+"; wF++) {\n          int xF = xFCorner + wF * "+o+";\n\n          if (xF < 0 || xF >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+h+"; wR++) {\n            int xR = xRCorner + wR * "+u+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+d+"; wC++) {\n              int xC = xCCorner + wC * "+l+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < "+p+"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if ("+(1===f)+") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, "+p+") *\n                  getW(wF, wR, wC, "+p+", d2);\n              } else if ("+(2===f)+") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if ("+(3===f)+") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1),\n                  getX(batch, xF, xR, xC, "+p+" + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2),\n                  getW(wF, wR, wC, "+p+" + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},$s=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.inHeight,i=e.inWidth,s=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=e.outChannels/e.inChannels,m="",g="";n&&(m=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",g="result = activation(result);");var v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+m+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+f+";\n        int q = d2 - d1 * "+f+";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < "+d+"; wR++) {\n          int xR = xRCorner + wR * "+c+";\n\n          if (xR < 0 || xR >= "+a+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+p+"; wC++) {\n            int xC = xCCorner + wC * "+h+";\n\n            if (xC < 0 || xC >= "+i+") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        "+v+"\n        "+g+"\n        setOutput(result);\n      }\n    "},Os=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;for(var a=e.inHeight,i=e.inWidth,s=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=p,m="int xR; int xC; int xCOffset;",g=0;g<d;g++)for(var v=0;v<p;v++)m+="\n          vec4 xTexelR"+g+"C"+2*v+" = vec4(0.);\n          vec4 wR"+g+"C"+v+" = vec4(0.);\n          vec4 xR"+g+"C"+v+" = vec4(0.);";for(g=0;g<d;g++)for(var y=0;y<f;y++){if(m+="\n          xR = xRCorner + "+g*c+";\n          xC = xCCorner + "+(v=2*y)*h+";\n        ",1===l){if(v<p&&(m+=o%2==1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+i+") {\n                    xTexelR"+g+"C"+v+".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+i+") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+i+") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR"+g+"C"+v+" = vec4(previous.zw, xTexelR"+g+"C"+v+".xy);\n                } else {\n                  xR"+g+"C"+v+" = vec4(0, 0, xTexelR"+g+"C"+v+".xy);\n                }\n              ":"\n                if(xR >= 0 && xR < "+a+" && xC >= 0 && xC < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = xTexelR"+g+"C"+v+";\n              ",v+1<p)){var b=o%2==0?le(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+="\n                  xCOffset = xC + "+o%2+" + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+i+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n                ",h>1&&(m+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < "+a+" &&\n                      xCOffset >= 0 && xCOffset < "+i+") {\n                      xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR"+g+"C"+v+" = vec4(0.);\n                    }\n                  "),m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".xy);\n                "):m+="\n                  xCOffset = xC + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+i+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR"+g+"C"+(v+1)+" = xTexelR"+g+"C"+(v+2)+";\n                "}}else v<p&&(m+="\n              if(xR >= 0 && xR < "+a+") {\n            ",o%2==1?(m+="\n                xCOffset = xC + 1 - "+l+";\n                if(xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < "+i+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n              ",v+1<p&&(m+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + "+l+";\n                  if(xCOffset >= 0 && xCOffset < "+i+") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR"+g+"C"+(v+1)+" = vec4(xTexelR"+g+"C"+(v+2)+".xy, final.xy);\n                ")):(m+="\n                if(xC >= 0 && xC < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + "+l+";\n                if(xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".xy, xTexelR"+g+"C"+(v+2)+".xy);\n              ",v+1<p&&(m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n                ")),m+="}");v<p&&(m+="\n            vec4 wTexelR"+g+"C"+v+" = getW("+g+", "+v+", d1, q);\n            wR"+g+"C"+v+" = vec4(wTexelR"+g+"C"+v+".xz, wTexelR"+g+"C"+v+".xz);\n          ",v+1<p&&(m+="\n              vec4 wTexelR"+g+"C"+(v+1)+" = getW("+g+", "+(v+1)+", d1, q);\n              wR"+g+"C"+(v+1)+" =\n                vec4(wTexelR"+g+"C"+(v+1)+".xz, wTexelR"+g+"C"+(v+1)+".xz);"))}for(g=0;g<d;g++)for(v=0;v<p;v++)m+="dotProd += xR"+g+"C"+v+" * wR"+g+"C"+v+";";var x="",w="";n&&(x=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"vec4 activation(vec4 x) {\n          "+n+"\n        }",w="result = activation(result);");var k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+x+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        "+m+"\n\n        vec4 result = dotProd;\n        "+k+"\n        "+w+"\n        setOutput(result);\n      }\n    "},Ms=function(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var i=e[0],s=e[1],o=e[2],u=e[3],l=t[0],c=n[0],h=n[1];this.outputShape=[l,c,h,u];var d="bilinear"===r?1:0,p=[s-1+".0",o-1+".0"],f=p[0],m=p[1],g=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio","y1*"+f+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+f],v=g[0],y=g[1],b=g[2],x=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=x[0],k=x[1],I=x[2];this.userCode="\n      const float height_ratio = float("+v+");\n      const float width_ratio = float("+w+");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= "+i+") {\n          return;\n        }\n\n        float height_scale = "+y+";\n        float width_scale = "+k+";\n\n        float in_y = "+b+";\n        if( in_y < 0.0 || in_y > "+f+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n        float in_x = "+I+";\n        if( in_x < 0.0 || in_x > "+m+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if("+d+" == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    "},Ls=function(e,t,n){this.variableNames=["x"],this.outputShape=e;var r=e.length,a=e[e.length-1],i=n?"<":">";this.userCode="\n      int getIndex(int i) {\n        "+(n?"return "+a+" -i - 1;":"return i;")+"\n      }\n\n      void main() {\n        "+as(r)+" coords = getOutputCoords();\n        int end = "+Ps(r,"coords")+";\n        float val = 0.0;\n        for (int i = "+a+" - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx "+i+" end) {\n            continue;\n          }\n          if (idx == end && "+t+") {\n            continue;\n          }\n          "+Ps(r,"coords")+" = idx;\n          val += getX("+function(e,t){if(1===e)return""+t;if(2===e)return t+".x, "+t+".y";if(3===e)return t+".x, "+t+".y, "+t+".z";if(4===e)return t+".x, "+t+".y, "+t+".z, "+t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}(r,"coords")+");\n        }\n        setOutput(val);\n      }\n    "};function Ps(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}var Bs=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Nt.DENSE;var t=$t(e),n=Hi();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+ji(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        "+n.output+" = result;\n      }\n    "},zs=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Nt.DENSE;var t=$t(e),n=Hi();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+ji(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        "+n.output+" = result;\n      }\n    "},Ws=function(){function e(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = "+this.getHeightCoordString()+";\n      int w = "+this.getWidthCoordString()+";\n      int d = "+this.getDepthCoordString()+";\n\n      int in_h = h / "+t+";\n      int offset_h = imod(h, "+t+");\n      int in_w = w / "+t+";\n      int offset_w = imod(w, "+t+");\n      int offset_d = (offset_h * "+t+" + offset_w) *\n        "+this.getOutputDepthSize()+";\n      int in_d = d + offset_d;\n\n      float result = "+this.getInputSamplingString()+";\n      setOutput(result);\n    }\n  "}return e.prototype.getHeightCoordString=function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"},e.prototype.getWidthCoordString=function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"},e.prototype.getDepthCoordString=function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"},e.prototype.getOutputDepthSize=function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},e.prototype.getInputSamplingString=function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},e}(),Vs=function(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "},Us=function(e){this.variableNames=["A"],this.outTexUsage=Tt.DOWNLOAD;var t=Hi();this.outputShape=e,this.userCode="\n      "+Ki+"\n\n      void main() {\n        float x = getAAtOutCoords();\n        "+t.output+" = encode_float(x);\n      }\n    "},Gs=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Tt.DOWNLOAD;var t=Hi();this.outputShape=e,this.userCode="\n      "+Ki+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        "+t.output+" = encode_float(x);\n      }\n    "},Hs=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"];var r=Hi(),a=t[0],i=t[1];this.outputShape=e;var s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode="\n      "+qi(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / "+i+";\n        int c = imod(flatIndex, "+i+");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n        vec4 values = "+r.texture2D+"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        "+r.output+" = vec4("+s+", 0., 0., 0.);\n      }\n    "},js=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=Hi(),a=t[0],i=t[1];this.outputShape=e;var s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var l=0;l<=1;l++){var c=2*u+l;s+="\n          localCoords = coords;\n          if(localCoords[2] + "+l+" < "+e[2]+") {\n            localCoords[2] += "+l+";\n            if(localCoords[1] + "+u+" < "+e[1]+") {\n              localCoords[1] += "+u+";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / "+i+";\n              c = imod(flatIndex, "+i+");\n              uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n              values = "+r.texture2D+"(A, uv);\n\n              if(offset == 0) {\n                result["+c+"] = values[0];\n              } else if(offset == 1) {\n                result["+c+"] = values[1];\n              } else if(offset == 2) {\n                result["+c+"] = values[2];\n              } else {\n                result["+c+"] = values[3];\n              }\n            }\n          }\n        "}this.userCode="\n      "+qi(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        "+s+"\n\n        "+r.output+" = "+o+";\n      }\n    "},qs=function(e,t,n){this.variableNames=["real","imag"];var r=t[1];this.outputShape=t;var a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?r+".0":"1.0";this.userCode="\n      const float exponentMultiplier = "+a+";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        "+e+"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float("+r+");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < "+r+"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / "+i+";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    "},Ks=function(){function e(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.valueLoc&&(t.valueLoc=n.getUniformLocationNoThrow(r,"value")),n.gl.uniform1f(t.valueLoc,e)}},e}(),Xs=function(e,t,n){this.variableNames=["A","indices"];var r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;var a=as(this.rank),i=function(e,t){var n=e.length;if(n>4)throw Error("Gather for rank "+n+" is not yet supported");if(1===n)return"int(getIndices(resRC))";for(var r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=0;i<e.length;i++)i===t?a.push("int(getIndices("+r[i]+"))"):a.push(""+r[i]);return a.join()}(e,n);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "},Ys=function(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;var r=as(t.length),a=as(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        "+r+" strides = "+r+"("+this.strides+");\n         void main() {\n          "+a+" coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < "+this.sliceDim+"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * "+i+";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      "};function Qs(e,t){var n=Hi();return Wt(e,t,n.version+"\n    precision highp float;\n    "+n.attribute+" vec3 clipSpacePos;\n    "+n.attribute+" vec2 uv;\n    "+n.varyingVs+" vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }")}function Js(e,t){return Xt(e,t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Zs(e,t){return Yt(e,t,new Uint16Array([0,1,2,2,1,3]))}function eo(e,t,n,r,a,i,s){Jt(n,r);var o=Qt(e,t),u=e.TEXTURE_2D;return Lt(e,t,(function(){return e.bindTexture(u,o)})),Lt(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)})),Lt(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)})),Lt(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)})),Lt(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)})),Lt(e,t,(function(){return e.texImage2D(u,0,a,n,r,0,i,s,null)})),Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)})),o}function to(e,t,n,r,a){var i=_t(n,r);return eo(e,t,i[0],i[1],a.internalFormatFloat,a.textureFormatFloat,e.FLOAT)}function no(e,t,n,r,a){var i=_t(n,r);return eo(e,t,i[0],i[1],a.internalFormatHalfFloat,a.textureFormatFloat,a.textureTypeHalfFloat)}function ro(e,t,n,r,a){var i=_t(n,r);return eo(e,t,i[0],i[1],e.RGBA,e.RGBA,e.UNSIGNED_BYTE)}function ao(e,t,n,r,a){var i=Ot(n,r);return eo(e,t,i[0],i[1],a.internalFormatPackedFloat,e.RGBA,e.FLOAT)}function io(e,t,n,r,a){var i=Ot(n,r);return eo(e,t,i[0],i[1],a.internalFormatPackedHalfFloat,e.RGBA,a.textureTypeHalfFloat)}function so(e,t,n,r){return Lt(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),en(e,t,n,"clipSpacePos",r,3,20,0)&&en(e,t,n,"uv",r,2,20,12)}function oo(e,t,n,r,a,i,s){var o,u,l;Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),i instanceof Uint8Array?(o=new Uint8Array(r*a*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(r*a*4),u=e.FLOAT,l=s.internalFormatPackedFloat),o.set(i),Lt(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,l,r,a,0,e.RGBA,u,o)})),Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function uo(e,t,n,r){Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),r.data instanceof Uint8Array?Lt(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)})):Lt(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)})),Lt(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function lo(e,t,n,r,a){var i=e.createBuffer();Lt(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,i)}));var s=16*n*r;return Lt(e,t,(function(){return e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)})),Lt(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,0)})),Lt(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,null)})),i}function co(e,t,n){var r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function ho(e,t,n,r,a){var i=_t(n,r),s=i[0],o=i[1],u=new Uint8Array(n*r*4);return Lt(e,t,(function(){return e.readPixels(0,0,s,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,u)})),new Float32Array(u.buffer)}function po(e,t,n,r,a,i,s,o){var u=e,l=new Float32Array(function(e,t){var n=Ot(e,t);return n[0]*n[1]*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function fo(e,t,n,r){var a=new Float32Array(n*r*4);return Lt(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,a)})),a}var mo=Object.freeze({createVertexShader:Qs,createVertexBuffer:Js,createIndexBuffer:Zs,createFloat32MatrixTexture:to,createFloat16MatrixTexture:no,createUnsignedBytesMatrixTexture:ro,createPackedMatrixTexture:ao,createFloat16PackedMatrixTexture:io,bindVertexProgramAttributeStreams:so,uploadDenseMatrixToTexture:oo,uploadPixelDataToTexture:uo,createBufferFromOutputTexture:lo,downloadFloat32MatrixFromBuffer:co,downloadByteEncodedFloatMatrixFromOutputTexture:ho,downloadPackedMatrixFromBuffer:po,downloadMatrixFromPackedOutputTexture:fo}),go=function(){function e(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=Q().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,Dt(t,e)):this.gl=Ft(t);var n="WEBGL_color_buffer_float";if(1===Q().getNumber("WEBGL_VERSION")){if(this.textureFloatExtension=zt(this.gl,this.debug,"OES_texture_float"),wn(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=zt(this.gl,this.debug,"OES_texture_half_float");else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),wn(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=zt(this.gl,this.debug,"EXT_color_buffer_half_float");else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",wn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!wn(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Js(this.gl,this.debug),this.indexBuffer=Zs(this.gl,this.debug),this.framebuffer=Zt(this.gl,this.debug),this.textureConfig=Mt(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(e.prototype,"debug",{get:function(){return Q().getBool("DEBUG")},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){var e=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var t=this.gl;Lt(t,this.debug,(function(){return t.finish()})),Lt(t,this.debug,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)})),Lt(t,this.debug,(function(){return t.deleteFramebuffer(e.framebuffer)})),Lt(t,this.debug,(function(){return t.bindBuffer(t.ARRAY_BUFFER,null)})),Lt(t,this.debug,(function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)})),Lt(t,this.debug,(function(){return t.deleteBuffer(e.indexBuffer)})),this.disposed=!0}},e.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),to(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),no(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),ro(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),uo(this.gl,this.debug,e,t)},e.prototype.uploadDenseMatrixToTexture=function(e,t,n,r){this.throwIfDisposed(),oo(this.gl,this.debug,e,t,n,r,this.textureConfig)},e.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),io(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),ao(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&&(on(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Lt(this.gl,this.debug,(function(){return t.gl.deleteTexture(e)}))},e.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return ho(r.gl,r.debug,t,n,r.textureConfig)}))},e.prototype.downloadPackedMatrixFromBuffer=function(e,t,n,r,a,i){return po(this.gl,e,0,0,0,a,i,this.textureConfig)},e.prototype.downloadFloat32MatrixFromBuffer=function(e,t){return co(this.gl,e,t)},e.prototype.createBufferFromTexture=function(e,t,n){this.bindTextureToFrameBuffer(e);var r=lo(this.gl,this.debug,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},e.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},e.prototype.createFence=function(e){var t,n,r=this;if(Q().getBool("WEBGL_FENCE_API_ENABLED")){var a=e,i=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=function(){var e=a.clientWaitSync(i,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=i}else Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):n=function(){return!0};return{query:t,isFencePassed:n}},e.prototype.downloadMatrixFromPackedTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return fo(r.gl,r.debug,t,n)}))},e.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,n=Vt(t,this.debug,e),r=Qs(t,this.debug),a=jt(t,this.debug);return Lt(t,this.debug,(function(){return t.attachShader(a,r)})),Lt(t,this.debug,(function(){return t.attachShader(a,n)})),qt(t,this.debug,a),this.debug&&Kt(t,this.debug,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=so(t,this.debug,this.program,this.vertexBuffer)),a},e.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Lt(this.gl,this.debug,(function(){return t.gl.deleteProgram(e)}))},e.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Kt(this.gl,this.debug,this.program),Lt(this.gl,this.debug,(function(){return t.gl.useProgram(e)}))},e.prototype.getUniformLocation=function(e,t,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?nn(this.gl,this.debug,e,t):rn(this.gl,e,t)},e.prototype.getAttributeLocation=function(e,t){var n=this;return this.throwIfDisposed(),Lt(this.gl,this.debug,(function(){return n.gl.getAttribLocation(e,t)}))},e.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},e.prototype.setInputMatrixTexture=function(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),an(this.gl,this.debug,this.program,e,t,n)},e.prototype.setOutputMatrixTexture=function(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)},e.prototype.setOutputPackedMatrixTexture=function(e,t,n){this.throwIfDisposed();var r=Ot(t,n),a=r[0],i=r[1];this.setOutputMatrixTextureDriver(e,a,i)},e.prototype.setOutputMatrixWriteRegion=function(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)},e.prototype.setOutputPackedMatrixWriteRegion=function(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},e.prototype.debugValidate=function(){null!=this.program&&Kt(this.gl,this.debug,this.program),un(this.gl)},e.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),Lt(e,this.debug,(function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}))},e.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),Lt(this.gl,this.debug,(function(){return e.gl.finish()}))},e.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=zt(this.gl,this.debug,2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},e.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},e.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},e.prototype.beginQuery=function(){if(2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),a=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,a),a},e.prototype.endQuery=function(){if(2!==Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT)}},e.prototype.waitForQueryAndGetTime=function(e){return K(this,void 0,void 0,(function(){var t=this;return X(this,(function(n){switch(n.label){case 0:return[4,we((function(){return t.disposed||t.isQueryAvailable(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}))];case 1:return n.sent(),[2,this.getQueryTime(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}}))}))},e.prototype.getQueryTime=function(e,t){if(0===t)return null;if(2===t){var n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6},e.prototype.isQueryAvailable=function(e,t){if(0===t)return!0;if(2===t){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}return a=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT),null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint},e.prototype.pollFence=function(e){var t=this;return new Promise((function(n){t.addItemToPoll((function(){return e.isFencePassed()}),(function(){return n()}))}))},e.prototype.pollItems=function(){for(var e=function(e){for(var t=0;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((function(e){return e.isDoneFn}))),t=0;t<=e;++t)(0,this.itemsToPoll[t].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(e+1)},e.prototype.addItemToPoll=function(e,t){var n=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||we((function(){return n.pollItems(),0===n.itemsToPoll.length}))},e.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),sn(this.gl,this.debug,e,this.framebuffer),this.debug&&un(this.gl)},e.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(sn(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&un(this.gl)):on(this.gl,this.debug,this.framebuffer)},e.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var n=t();return this.unbindTextureToFrameBuffer(),n},e.prototype.setOutputMatrixTextureDriver=function(e,t,n){this.throwIfDisposed();var r=this.gl;sn(r,this.debug,e,this.framebuffer),this.debug&&un(r),this.outputTexture=e,Lt(r,this.debug,(function(){return r.viewport(0,0,t,n)})),Lt(r,this.debug,(function(){return r.scissor(0,0,t,n)}))},e.prototype.setOutputMatrixWriteRegionDriver=function(e,t,n,r){var a=this;this.throwIfDisposed(),Lt(this.gl,this.debug,(function(){return a.gl.scissor(e,t,n,r)}))},e.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},e.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error("No GPU program is currently set.")},e}();function vo(e,t){if(e.length!==t.length)throw Error("Binary was compiled with "+e.length+" inputs, but was executed with "+t.length+" inputs");e.forEach((function(e,n){var r=e.logicalShape,a=t[n],i=a.shape;if(!ge(r,i))throw Error("Binary was compiled with different shapes than the current args. Shapes "+r+" and "+i+" must match");if(!e.isUniform||!a.isUniform){var s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!ge(s,o))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+s+" and "+o+" must match")}}))}var yo=function(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var r=n.filterWidth,a=n.inChannels,i=n.strideWidth,s=n.strideHeight,o=n.padInfo,u=n.outWidth,l=n.dilationWidth,c=n.dilationHeight,h=n.dataFormat,d=o.left,p=o.top,f=a*r,m=Hi(),g="channelsLast"===h,v=g?0:1,y=g?1:2,b="",x=0;x<=1;x++)for(var w=0;w<=1;w++)b+="\n          blockIndex = rc.y + "+w+";\n          pos = rc.x + "+x+";\n\n          if(blockIndex < "+e[1]+" && pos < "+e[0]+") {\n            offsetY = int(blockIndex / ("+u+")) * "+s+" - "+p+";\n            d0 = offsetY + "+c+" * (pos / "+f+");\n\n            if(d0 < "+t[v]+" && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), "+u+".) * "+i+". - "+d+".);\n              d1 = offsetX + "+l+" * (int(mod(float(pos), "+f+".) / "+a+".));\n\n              if(d1 < "+t[y]+" && d1 >= 0) {\n\n                ch = int(mod(float(pos), "+a+".));\n\n                if ("+g+") {\n                  innerDims = vec2(d1, ch);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ";this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        "+b+"\n\n        "+m.output+" = result;\n      }\n    "},bo=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];var i,s=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -"+s+"; j <= "+s+"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  "+o+") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * "+i+";\n        setOutput(val);\n      }\n    "},xo=function(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < "+this.depth+"; ++d) {\n          int depthBegin = int(max(0.0, float(d - "+t+")));\n          int depthEnd = int(min(float("+this.depth+"),\n              float(d + "+t+" + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = "+this.depth+";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float("+r+") * norm + float("+n+");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float("+r+")\n                * float("+a+")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * "+a+");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    "},wo=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var i,s=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < "+this.outputShape[3]+";\n        bool hasNextRow = c < "+this.outputShape[2]+";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - "+s+";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - "+s+"; j <= "+s+"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2("+o+"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * "+i+";\n        setOutput(result);\n      }\n    "},ko=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+a+";\n          wR += "+r+") {\n          float dyR = float(dyRCorner + wR) / "+t+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+i+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+n+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = "+u+" - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * "+i+" + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Io=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode="\n      const ivec3 pads = ivec3("+c+", "+h+", "+d+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+o+";\n           wD += "+a+") {\n          float dyD = float(dyDCorner + wD) / "+t+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+u+";\n              wR += "+i+") {\n            float dyR = float(dyRCorner + wR) / "+n+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+l+";\n                wC += "+s+") {\n              float dyC = float(dyCCorner + wC) / "+r+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = "+p+" -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * "+u+" * "+l+" +\n                  wR * "+l+" + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Co=function(e,t,n,r,a,i,s){void 0===n&&(n=!1),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===i&&(i=null),void 0===s&&(s=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;var o=n?e[1]:e[2],u=Math.ceil(o/2),l=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",f="";i&&(p=s?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+i+"\n        }":"vec4 activation(vec4 x) {\n          "+i+"\n        }",f="result = activation(result);");var m=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+p+"\n\n      const float sharedDimension = "+u+".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < "+u+"; i++) {\n          vec4 a = getMatrixA(rc.x, "+l+");\n          vec4 b = getMatrixB(rc.x, "+c+");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += ("+h[0]+" * "+d[0]+");\n          result += ("+h[1]+" * "+d[1]+");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        "+m+"\n\n        "+f+"\n\n        setOutput(result);\n      }\n    "},So=function(){function e(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < "+(t-1)+"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float("+(t-1)+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.seedLoc&&(t.seedLoc=n.getUniformLocation(r,"seed")),n.gl.uniform1f(t.seedLoc,e)}},e}(),No=function(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float("+r+"), float("+n+"),\n                      float(index == coords.y)));\n      }\n    "},To=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;var t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var n=Gi("rc",t),r=as(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];for(var r="",a=e-2;a<e;a++)r+=n[a]+" >= "+t[a],a<e-1&&(r+="||");return r}(t,e,n),i=function(e,t,n,r){if(1===e)return"";var a=r.slice(-2);return"\n    int r = "+a[0]+";\n    int c = "+a[1]+";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= "+t+";\n    bool rEdge = rp1 >= "+n+";\n  "}(t,e[e.length-1],e[e.length-2],n),s=function(e,t){var n=e.length,r=function(e,t){for(var n=[],r=0;r<=1;r++)for(var a=0;a<=1;a++){for(var i=(0===r?"r":"rp1")+", "+(0===a?"c":"cp1"),s=2;s<e;s++)i=t[t.length-1-s]+","+i;n.push(i)}return n}(n,t);return 1===n?"getA(rc),\n            rc + 1 >= "+e[0]+" ? 0. : getA(rc + 1),\n            0, 0":"getA("+r[0]+"),\n          cEdge ? 0. : getA("+r[1]+"),\n          rEdge ? 0. : getA("+r[2]+"),\n          rEdge || cEdge ? 0. : getA("+r[3]+")"}(e,n);this.userCode="\n        void main() {\n          "+r+" rc = getOutputCoords();\n\n          if("+a+") {\n            setOutput(vec4(0));\n          } else {\n            "+i+"\n\n            setOutput(vec4("+s+"));\n          }\n        }\n      "}},Eo=function(e,t,n){this.variableNames=["x"],this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));var r=e.length,a=as(r),i=t.map((function(e){return e[0]})).join(","),s=t.map((function(t,n){return t[0]+e[n]})).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      "+a+" start = "+a+"("+i+");\n      "+a+" end = "+a+"("+s+");\n\n      void main() {\n        "+a+" outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float("+n+"));\n        } else {\n          "+a+" coords = outC - start;\n          setOutput(getX("+o+"));\n        }\n      }\n    ":"\n        int start = "+i+";\n        int end = "+s+";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float("+n+"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      "},Ro=function(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));for(var r=e.length,a=as(r),i=t.map((function(e){return e[0]})).join(","),s=t.map((function(t,n){return t[0]+e[n]})).join(","),o=Gi("rc",r),u=Gi("source",r),l=o[r-1]+" < "+this.outputShape[r-1],c=1===r?"source":"vec2("+u.slice(-2).join()+")",h=[a+" rc = outputLoc;",o[r-1]+" += 1;\n       if("+l+") {\n      ",1===r?"":"}\n       rc = outputLoc;\n       "+o[r-2]+" += 1;\n       if("+o[r-2]+" < "+this.outputShape[r-2]+") {",1===r?"":"  "+o[r-1]+" += 1;\n         if("+l+") {"],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="",f=0,m=1===r?2:4;f<m;f++)p+="\n        "+h[f]+"\n        if ("+d+") {\n          result["+f+"] = float("+n+");\n        } else {\n          "+a+" source = rc - start;\n          result["+f+"] = getChannel(getX("+u.join()+"), "+c+");\n        }\n      ";p+=1===r?"} ":"}}",this.userCode="\n      const "+a+" start = "+a+"("+i+");\n      const "+a+" end = "+a+"("+s+");\n\n      void main() {\n        "+a+" outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        "+p+"\n        setOutput(result);\n      }\n    "},Ao=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;var f="avg"===t,m="((batch  * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + d",g="(xR * "+e.inWidth+" + xC) * "+e.inChannels+" + d",v="0.0";if(f||(v="-1.0 / 1e-20"),n)this.userCode="\n        const ivec2 strides = ivec2("+s+", "+o+");\n        const ivec2 pads = ivec2("+d+", "+p+");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < "+c+";\n              wR += "+u+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+h+";\n                wC += "+l+") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = "+(r?a?m:g:"wR * "+h+" + wC")+";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var y=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(y="avgValue / count");var b=4*Math.floor(i/4),x=i%4,w="\n      if ("+f+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec2 strides = ivec2("+s+", "+o+");\n      const ivec2 pads = ivec2("+d+", "+p+");\n      const float initializationValue = "+v+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+v+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < "+c+";\n            wR += "+u+") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+b+"; wC += 4) {\n            int xC = xCCorner + wC * "+l+";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              getValue(batch, xR, xC + 3 * "+l+", d)\n            );\n\n            "+w+"\n          }\n\n          int xC = xCCorner + "+b+";\n          if ("+(1===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(2===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(3===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              initializationValue\n            );\n\n            "+w+"\n          }\n        }\n        setOutput("+y+");\n      }\n    "}},Do=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;var y="avg"===t,b="0.0";if(y||(b="-1.0 / 1e-20"),n)this.userCode="\n        const ivec3 strides =\n            ivec3("+s+", "+o+", "+u+");\n        const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < "+d+";\n              wD += "+l+") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int wR = 0; wR < "+p+";\n                wR += "+c+") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int wC = 0; wC < "+f+";\n                  wC += "+h+") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = "+(r?a?"(((batch * "+e.inDepth+" + xD) * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"((xD * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"wD * "+p+" * "+f+" +\n                      wR * "+f+" + wC")+";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var x=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / count");var w=4*Math.floor(i/4),k=i%4,I="\n      if ("+y+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec3 strides =\n        ivec3("+s+", "+o+", "+u+");\n      const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n      const float initializationValue = "+b+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+b+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < "+d+";\n            wD += "+l+") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+p+";\n            wR += "+c+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+w+"; wC += 4) {\n              int xC = xCCorner + wC * "+h+";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                getValue(batch, xD, xR, xC + 3 * "+h+", ch)\n              );\n\n              "+I+"\n            }\n\n            int xC = xCCorner + "+w+";\n            if ("+(1===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(2===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(3===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                initializationValue\n              );\n\n              "+I+"\n            }\n          }\n          setOutput("+x+");\n        }\n      }\n    "}},Fo=function(e,t){this.variableNames=["x"];var n=e.windowSize,r=e.batchSize,a=e.inSize,i=Math.ceil(a/n);this.outputShape=[r,i];var s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");var u=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");var l=4*Math.floor(n/4),c=n%4,h="\n      if ("+("sum"===t)+") {\n        sumValue += dot(values, ones);\n      } else if ("+("prod"===t)+") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = "+o+"(values, minMaxValue);\n      }\n    ",d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");var p="";a%n>0&&(p="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      "),this.userCode="\n      const float initializationValue = "+s+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+p+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+n+";\n\n        vec4 minMaxValue = vec4("+s+");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < "+l+"; i += 4) {\n          int inIdx = inOffset + i;\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+h+"\n        }\n\n        int inIdx = inOffset + "+l+";\n        if ("+(1===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(2===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(3===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          "+h+"\n        }\n        setOutput("+u+");\n      }\n    "},_o=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var n="",r=0;r<4;r++){var a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+="\n        "+a+"\n        "+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+"\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result["+r+"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        "+(r>0?"}":"")+"\n      "}this.userCode="\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      "+ji(["r","c","d"],t)+"\n      return ivec3(r, c, d);\n    }\n  \n      "+qi(e)+"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = "+e[1]+";\n        int cols = "+e[2]+";\n\n        "+n+"\n\n        setOutput(result);\n      }\n    "},$o=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],i=r[2],s=e.shape,o=s[1],u=s[2],l=[n&&o>1?a-1:a,n&&u>1?i-1:i],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],d=l[1]/c[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+d+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), "+(a-1)+".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), "+(i-1)+".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},Oo=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+i+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    "},Mo=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+",\n          "+u[1]/l[1]+");\n      const vec3 inputShapeRC = vec3("+i+".0, "+s+".0,\n                                     "+s+".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < "+(o-1)+";\n        bool hasNextRow = coords.z < "+(n-1)+";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    "},Lo=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],i=r[2],s=e.shape,o=s[1],u=s[2],l=[n&&o>1?a-1:a,n&&u>1?i-1:i],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],d=l[1]/c[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+d+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float("+l[0]+") *\n                (float(dyR) / float("+c[0]+"));\n\n            float sourceFracCol =\n                float("+l[1]+") *\n                  (float(dyC) / float("+c[1]+"));\n\n            int sourceNearestRow = int(min(\n                float(int("+a+") - 1),\n                "+n+" ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int("+i+") - 1),\n                "+n+" ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},Po=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+i+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + "+c+")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    "},Bo=function(e,t){this.variableNames=["x"];var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");if(this.outputShape=e,1!==n){var r=e.map((function(n,r){return function(n){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - coords["+n+"] - 1":"coords["+n+"]"}(r)})).join(","),a=as(n);this.userCode="\n      void main() {\n        "+a+" coords = getOutputCoords();\n        setOutput(getX("+r+"));\n      }\n    "}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX("+e[0]+" - coord - 1));\n        }\n      "},zo=function(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");this.outputShape=e;var r=Gi("rc",n),a=r[n-1]+" + 1 < "+this.outputShape[n-1],i=r[n-2]+" + 1 < "+this.outputShape[n-2],s=as(n);function o(n){var r=e.map((function(r,a){return function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - "+r[n]+" - 1":""+r[n]}(a,n)}));return"getChannel(getX("+r.join(",")+"), vec2("+r.slice(-2).join(",")+"))"}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX("+e[0]+" - rc - 1),\n            "+e[0]+" - rc - 1);\n          if("+a+"){\n              result.g = getChannel(getX("+e[0]+" - (rc  + 1) - 1),\n                "+e[0]+" - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      ":"\n        void main() {\n          "+s+" rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = "+function(e){return o(e)}(r.slice())+";\n          if("+a+"){\n            result.g = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())+";\n          }\n          if("+i+") {\n            result.b = "+function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            if("+a+") {\n              result.a = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            }\n          }\n          setOutput(result);\n        }\n    "},Wo=function(e,t,n,r,a,i,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;var o=as(a.length),u=as(i.length),l="";1===n?l="i":2===n&&(l="i, j");var c="getIndices("+l+")",h="";1===r?h="i":2===r&&(h="i, coords[1]");var d="getUpdates("+h+")",p=t>1?"strides[j]":"strides";this.userCode="\n        "+o+" strides = "+o+"("+a+");\n\n        void main() {\n          "+u+" coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < "+e+"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < "+t+"; j++) {\n              int index = round("+c+");\n              flattenedIndex += index * "+p+";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += "+d+";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      "},Vo=function(e,t){this.variableNames=["x","segmentIds"];var n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];var o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ",c="";a%n>0&&(c="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      ");var h="";a%n>0&&(h="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return -1.0;\n        }\n      "),this.userCode="\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        "+c+"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        "+h+"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          "+i+")) * float("+n+"));\n        int currentSeg = int(mod(float(outIdx), float("+i+")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+o+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          "+l+"\n        }\n\n        int inIdx = inOffset + "+o+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          "+l+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          "+l+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          "+l+"\n        }\n        setOutput(sumValue);\n      }\n    "},Uo=function(e,t,n){var r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank "+n+" is not yet supported");if(1===n)a="resRC",r="resRC";else{for(var i=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[],u=0;u<t.length;u++)o.push(""+i[u]),u<e&&s.push(""+i[u]);r=s.join(),a=o.join()}var l=as(n);this.userCode="\n      void main() {\n        "+l+" resRC = getOutputCoords();\n        float cVal = getC("+r+");\n        if (cVal >= 1.0) {\n          setOutput(getA("+a+"));\n        } else {\n          setOutput(getB("+a+"));\n        }\n      }\n    "},Go=function(){function e(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t,n=as(this.rank),r="uniform int start["+this.rank+"];",a=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ho.slice(0,e).map((function(e){return"sourceLoc."+e})).join(",");throw Error("Slicing for rank "+e+" is not yet supported")}(this.rank);t="\n        "+n+" sourceLoc;\n        "+n+" coords = getOutputCoords();\n        "+e.map((function(e,t){return"sourceLoc."+Ho[t]+" = start["+t+"] + coords."+Ho[t]+";"})).join("\n")+"\n      ",this.userCode="\n      "+r+"\n      void main() {\n        "+t+"\n        setOutput(getSource("+a+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),Ho=["x","y","z","w","u","v"],jo=function(){function e(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var t=as(this.rank),n=Gi("coords",this.rank),r=Gi("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2("+r.slice(-2).join()+")",i="getChannel(getSource("+r.join()+"), "+a+")",s="\n      result.x = "+i+";\n      if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n        ++"+r[this.rank-1]+";\n        result.y = "+i+";\n        --"+r[this.rank-1]+";\n      }\n    ",o=1===this.rank?"":"\n      --"+n[this.rank-1]+";\n      if (++"+n[this.rank-2]+" < "+e[this.rank-2]+") {\n        ++"+r[this.rank-2]+";\n        result.z = "+i+";\n        if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n          ++"+r[this.rank-1]+";\n          result.w = "+i+";\n        }\n      }\n    ",u=this.rank<=4?"sourceLoc = coords +\n            "+t+"("+e.map((function(e,t){return"start["+t+"]"})).join()+");":e.map((function(e,t){return r[t]+" = "+n[t]+" + start["+t+"];"})).join("\n");this.userCode="\n      uniform int start["+this.rank+"];\n      void main() {\n        "+t+" coords = getOutputCoords();\n        "+t+" sourceLoc;\n        "+u+"\n        vec4 result = vec4(0.);\n        "+s+"\n        "+o+"\n        setOutput(result);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),qo=function(e,t,n){this.variableNames=["x"],this.outputShape=n;var r=n.length,a=as(n.length),i=as(n.length),s="";if(1===r)s="coords * strides + begin";else{var o=0;s=n.map((function(e,t){return o++,1===n.length?"coords * strides["+t+"] + begin["+t+"]":"coords["+(o-1)+"] * strides["+t+"] + begin["+t+"]"})).join(",")}this.userCode="\n      "+a+" begin = "+a+"("+e+");\n      "+a+" strides = "+a+"("+t+");\n\n      void main() {\n        "+i+" coords = getOutputCoords();\n        setOutput(getX("+s+"));\n      }\n    "},Ko=function(){function e(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return e.prototype.acquireTexture=function(e,t,n){var r,a=Xo(t,n),i=Yo(e,a,n);if(i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]),this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var s=this.freeTextures[i].shift();return this.usedTextures[i].push(s),s}return this.numUsedTextures++,this.log(),a===Et.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Et.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Et.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Et.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Et.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(r),r},e.prototype.releaseTexture=function(e,t,n,r){if(null!=this.freeTextures){var a=Yo(t,Xo(n,r),r);a in this.freeTextures||(this.freeTextures[a]=[]),this.freeTextures[a].push(e),this.numFreeTextures++,this.numUsedTextures--;var i=this.usedTextures[a],s=i.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1),this.log()}},e.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")")}},e.prototype.getNumUsedTextures=function(){return this.numUsedTextures},e.prototype.getNumFreeTextures=function(){return this.numFreeTextures},e.prototype.dispose=function(){var e=this;if(null!=this.freeTextures){for(var t in this.freeTextures)this.freeTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));for(var t in this.usedTextures)this.usedTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},e}();function Xo(e,t){if(e===Tt.UPLOAD)return Et.PACKED_2X2_FLOAT32;if(e===Tt.RENDER||null==e)return function(e){return Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Et.PACKED_2X2_FLOAT32:Et.UNPACKED_FLOAT32:e?Et.PACKED_2X2_FLOAT16:Et.UNPACKED_FLOAT16}(t);if(e===Tt.DOWNLOAD||e===Tt.PIXELS)return Et.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function Yo(e,t,n){return e[0]+"_"+e[1]+"_"+t+"_"+n}var Qo=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;var a=as(this.rank),i=function(e){var t=e.length;if(t>5)throw Error("Tile for rank "+t+" is not yet supported");if(1===t)return"imod(resRC, "+e[0]+")";for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[],a=0;a<e.length;a++)r.push("imod("+n[a]+", "+e[a]+")");return r.join()}(e);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "},Jo=1.7580993408473768,Zo=1.0507009873554805,eu=function(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      float unaryOperation(float x) {\n        "+t+"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},tu="if (isnan(x)) return x;",nu="return abs(x);",ru=tu+"\n  return (x < 0.0) ? 0.0 : x;\n",au=tu+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",iu="return (x >= 0.0) ? x : (exp(x) - 1.0);",su="\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = "+Jo+";\n  float scale = "+Zo+";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n",ou="return -x;",uu="return ceil(x);",lu="return floor(x);",cu="return exp(x);",hu="return exp(x) - 1.0;",du=tu+"\n  return sin(x);\n",pu=tu+"\n  return cos(x);\n",fu=tu+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",mu=tu+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",gu=tu+"\n  return atan(x);\n",vu=tu+"return log(x + sqrt(x * x + 1.0));",yu=tu+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",bu=tu+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",xu="return x;",wu="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",ku="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Iu="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Cu=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        "+t+"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},Su=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;var t=e.length,n=Gi("rc",t),r=as(t),a=function(e,t){if(1===e)return"rc";for(var n="",r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":"vec2("+i.join(",")+")";this.userCode="\n      void main() {\n        "+r+" rc = getOutputCoords();\n        vec4 packedInput = getA("+a+");\n\n        setOutput(getChannel(packedInput, "+s+"));\n      }\n    "},Nu={};function Tu(e,t){if(void 0===t&&(t=!1),"linear"===e)return"return x;";if("relu"===e)return t?wu:ru;if("elu"===e)return t?Iu:iu;if("relu6"===e)return t?ku:au;if("prelu"===e)return t?ys:gs;throw new Error("Activation "+e+" has not been implemented for the WebGL backend.")}var Eu=function(e){function t(t){var n,r=e.call(this)||this;if(r.pendingRead=new WeakMap,r.pendingDisposal=new WeakSet,r.dataRefCount=new WeakMap,r.numBytesInGPU=0,r.uploadWaitMs=0,r.downloadWaitMs=0,r.warnedAboutMemory=!1,r.pendingDeletes=0,r.disposed=!1,!Q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){var a=Ft(Q().getNumber("WEBGL_VERSION"));r.binaryCache=((n=Q().getNumber("WEBGL_VERSION"))in Nu||(Nu[n]={}),Nu[n]),r.gpgpu=new go(a),r.canvas=a.canvas,r.gpgpuCreatedLocally=!0}else r.gpgpu=t,r.binaryCache={},r.gpgpuCreatedLocally=!1,r.canvas=t.gl.canvas;return r.textureManager=new Ko(r.gpgpu),r.numMBBeforeWarning=null==Q().global.screen?1024:Q().global.screen.height*Q().global.screen.width*window.devicePixelRatio*600/1024/1024,r.texData=new si(r,It),r}return q(t,e),t.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},t.prototype.write=function(e,t,n){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Tt.UPLOAD}),r},t.prototype.move=function(e,t,n,r){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Tt.UPLOAD})},t.prototype.readSync=function(e){var t=this.texData.get(e),n=t.values,r=t.dtype,a=t.complexTensors,i=t.slice,s=t.shape,o=t.isPacked;if(null!=i){var u;u=o?new Cu(s,xu):new eu(s,xu);var l=this.runWebGLProgram(u,[{dataId:e,shape:s,dtype:r}],r),c=this.readSync(l.dataId);return this.disposeData(l.dataId),c}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;var h,d,p=null!=this.activeTimers;return p&&(h=Ge()),d="complex64"===r?Ci(a.real.dataSync(),a.imag.dataSync()):this.getValuesFromTexture(e),p&&(this.downloadWaitMs+=Ge()-h),this.convertAndCacheOnCPU(e,d)},t.prototype.read=function(e){return K(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k;return X(this,(function(I){switch(I.label){case 0:if(this.pendingRead.has(e))return t=this.pendingRead.get(e),[2,new Promise((function(e){return t.push(e)}))];if(n=this.texData.get(e),r=n.values,a=n.shape,i=n.slice,s=n.dtype,o=n.complexTensors,u=n.isPacked,null!=i)return void 0,l=u?new Cu(a,xu):new eu(a,xu),c=this.runWebGLProgram(l,[{dataId:e,shape:a,dtype:s}],s),h=this.read(c.dataId),this.disposeData(c.dataId),[2,h];if(null!=r)return[2,this.convertAndCacheOnCPU(e)];if(!Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return d=null,"complex64"!==s&&Q().get("WEBGL_BUFFER_SUPPORTED")&&(p=this.decode(e),f=this.texData.get(p.dataId),d=(k=this.gpgpu).createBufferFromTexture.apply(k,[f.texture].concat($t(a)))),this.pendingRead.set(e,[]),"complex64"===s?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:I.sent(),I.label=2;case 2:return"complex64"!==s?[3,4]:[4,Promise.all([o.real.data(),o.imag.data()])];case 3:return g=I.sent(),v=g[0],y=g[1],m=Ci(v,y),[3,5];case 4:null==d?m=this.getValuesFromTexture(e):(b=me(a),m=this.gpgpu.downloadFloat32MatrixFromBuffer(d,b)),I.label=5;case 5:return null!=p&&this.disposeData(p.dataId),x=this.convertAndCacheOnCPU(e,m),w=this.pendingRead.get(e),this.pendingRead.delete(e),w.forEach((function(e){return e(x)})),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),[2,x]}}))}))},t.prototype.checkNumericalProblems=function(e){if(null!=e)for(var t=0;t<e.length;t++){var n=e[t];if(!Pt(n)){if(Q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value "+n+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value "+n+" cannot be represented on this device.")}}},t.prototype.getValuesFromTexture=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,i=n.isPacked,s=me(r);if(Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var o=this.decode(e),u=this.texData.get(o.dataId),l=(t=this.gpgpu).downloadMatrixFromPackedTexture.apply(t,[u.texture].concat($t(r))).subarray(0,s);return this.disposeData(o.dataId),l}var c=Q().getBool("WEBGL_PACK")&&!0===i,h=c?fn(r):r,d=c?new Gs(h):new Us(h),p=this.runWebGLProgram(d,[{shape:h,dtype:a,dataId:e}],"float32"),f=this.texData.get(p.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture,f.texShape[0],f.texShape[1]).subarray(0,s);return this.disposeData(p.dataId),m},t.prototype.time=function(e){return K(this,void 0,void 0,(function(){var t,n,r,a,i,s,o;return X(this,(function(u){switch(u.label){case 0:return t=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e(),a=fe(this.activeTimers.map((function(e){return e.query}))).filter((function(e){return null!=e})),i=fe(this.activeTimers.map((function(e){return e.name}))).filter((function(e){return null!=e})),this.activeTimers=t,r&&(this.programTimersStack=null),s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(a)]:[3,2];case 1:return o=u.sent(),s.kernelMs=ce(o),s.getExtraProfileInfo=function(){return o.map((function(e,t){return{name:i[t],ms:e}})).map((function(e){return e.name+": "+e.ms})).join(", ")},[3,3];case 2:s.kernelMs={error:"WebGL query timers are not supported in this environment."},u.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,s]}}))}))},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ge(),endMs:null}},t.prototype.endTimer=function(e){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ge(),e)},t.prototype.getQueryTime=function(e){return K(this,void 0,void 0,(function(){var t;return X(this,(function(n){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]}))}))},t.prototype.disposeData=function(e){if(!this.pendingDisposal.has(e)){if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(this.texData.has(e)){this.releaseGPUData(e);var t=this.texData.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.texData.delete(e)}}},t.prototype.releaseGPUData=function(e){var t=this.texData.get(e),n=t.texture,r=t.dtype,a=t.texShape,i=t.usage,s=t.isPacked,o=t.slice,u=o&&o.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),null!=n&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(n,a,i,s)));var c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null},t.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},t.prototype.getDataInfo=function(e){return this.texData.get(e)},t.prototype.getCPUBackend=function(){return Q().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=It.findBackend("cpu")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(e,t){var n=this;return void 0===t&&(t=128),null!=this.getCPUBackend()&&e.every((function(e){return null==n.texData.get(e.dataId).texture&&me(e.shape)<t}))},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.complex=function(e,t){var n=this.makeOutput(e.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:It.keep(e.clone()),imag:It.keep(t.clone())},n},t.prototype.real=function(e){return this.texData.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.texData.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.slice(e,t,n);if(0===me(n))return Qn([],n,e.dtype);var r=this.texData.get(e.dataId).isPacked,a=ei(e.shape,t,n);if(r||!a){var i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jo(n):new Go(n),s=i.getCustomSetupFunc(t);return this.compileAndRun(i,[e],null,s)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)},t.prototype.shallowSlice=function(e,t,n){var r=this.texData.get(e.dataId),a=this.makeOutput(n,e.dtype),i=this.texData.get(a.dataId);Object.assign(i,r),i.shape=n,i.dtype=e.dtype;var s=ti(t,e.strides);r.slice&&(s+=r.slice.flatOffset),i.slice={flatOffset:s,origDataId:r.slice&&r.slice.origDataId||e.dataId};var o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),a},t.prototype.stridedSlice=function(e,t,n,r){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.stridedSlice(e,t,n,r);var a=Qa(t,n,r);if(a.some((function(e){return 0===e})))return Qn([],a);var i=new qo(t,r,a);return this.compileAndRun(i,[e])},t.prototype.reverse=function(e,t){var n=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zo(e.shape,t):new Bo(e.shape,t);return this.compileAndRun(n,[e])},t.prototype.concat=function(e,t){if("complex64"===e[0].dtype){var n=e.map((function(e){return Xn(e)})),r=e.map((function(e){return Yn(e)}));return Kn(this.concat(n,t),this.concat(r,t))}if(this.shouldExecuteOnCPU(e))return this.cpuBackend.concat(e,t);if(1===e.length)return e[0];if(e.length>Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var a=Math.floor(e.length/2),i=this.concat(e.slice(0,a),t),s=this.concat(e.slice(a),t);return this.concat([i,s],t)}if(Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].rank>1){var o=new Cs(e.map((function(e){return e.shape})),t);return this.compileAndRun(o,e)}var u=jn(e.map((function(e){return e.shape})),t),l=e.map((function(e){return e.as2D(-1,me(e.shape.slice(t)))})),c=new Is(l.map((function(e){return e.shape})));return this.compileAndRun(c,l).reshape(u)},t.prototype.neg=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.neg(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ou,e.dtype);var t=new eu(e.shape,ou);return this.compileAndRun(t,[e])},t.prototype.batchMatMul=function(e,t,n,r){var a=n?e.shape[2]:e.shape[1],i=r?t.shape[1]:t.shape[2],s=n?e.shape[1]:e.shape[2],o=e.shape[0];if((1===a||1===i)&&s>1e3){n&&(e=ii(e,[0,2,1])),r&&(t=ii(t,[0,2,1]));var u=1===i?e:e.as3D(o,s,1),l=1===i?2:1,c=1===i?t.as3D(o,1,s):t;return this.multiply(u,c).sum(l,!0)}var h=gt(e.dtype,t.dtype),d=new Co(e.shape,[o,a,i],n,r);return this.compileAndRun(d,[e,t],h)},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=r?t.shape[2]:t.shape[1],l=a?n.shape[1]:n.shape[2],c=t.shape[0],h=gt(t.dtype,n.dtype),d=null!=i,p=null!=o,f=s?Tu(s,!0):null,m=new Co(t.shape,[c,u,l],r,a,d,f,p),g=[t,n];return i&&g.push(i),o&&g.push(o),this.compileAndRun(m,g,h)},t.prototype.multiply=function(e,t){if("complex64"===e.dtype){var n=this.texData.get(e.dataId),r=this.texData.get(t.dataId),a=new ds("return areal * breal - aimag * bimag;",e.shape,t.shape),i=new ds("return areal * bimag + aimag * breal;",e.shape,t.shape),s=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag),this.makeComplexComponentTensorInfo(t,r.complexTensors.real),this.makeComplexComponentTensorInfo(t,r.complexTensors.imag)],o=this.compileAndRun(a,s),u=this.compileAndRun(i,s),l=this.complex(o,u);return o.dispose(),u.dispose(),l}if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.multiply(e,t);if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,ms,e.dtype);var c=new vs(ms,e.shape,t.shape);return this.compileAndRun(c,[e,t],e.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,i){var s=[e,t,n],o=null;null!=i&&(o=i.shape,s.push(i));var u=null;if(null!=a&&(u=a.shape,s.push(a)),Q().getBool("WEBGL_PACK_NORMALIZATION")){var l=new hs(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(l,s)}var c=new cs(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(c,s)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){var i=Q().getBool("WEBGL_PACK_NORMALIZATION")?new wo(e.shape,t,n,r,a):new bo(e.shape,t,n,r,a);return this.compileAndRun(i,[e])},t.prototype.LRNGrad=function(e,t,n,r,a,i,s){var o=new xo(t.shape,r,a,i,s);return this.compileAndRun(o,[t,n,e])},t.prototype.tile=function(e,t){if("string"===e.dtype){var n=this.readSync(e.dataId).map((function(e){return qe(e)}));return Li(vr(e.shape,e.dtype,n),t)}var r=new Qo(e.shape,t);return this.compileAndRun(r,[e])},t.prototype.pad=function(e,t,n){var r=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ro(e.shape,t,n):new Eo(e.shape,t,n);return this.compileAndRun(r,[e])},t.prototype.gather=function(e,t,n){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.gather(e,t,n);var r=new Xs(e.shape,t.size,n);return this.compileAndRun(r,[e,t])},t.prototype.batchToSpaceND=function(e,t,n){he(e.rank<=4,(function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=Rr(e.shape,t,r),i=Ar(a.length,t.length),s=Dr(e.shape,t,r),o=Fr(n,t.length),u=_r(s,n,t.length);return ii(e.reshape(a),i).reshape(s).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){he(e.rank<=4,(function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var i=1+t.length;i<e.shape.length;++i)a.push([0,0]);var s=e.pad(a),o=Rr(s.shape,t,r,!1),u=Ar(o.length,t.length,!1),l=Dr(s.shape,t,r,!1);return ii(s.reshape(o),u).reshape(l)},t.prototype.reduce=function(e,t,n){var r=e.shape[0],a=e.shape[1],i=Ha(a),s=new Fo({windowSize:i,inSize:a,batchSize:r},t),o=this.compileAndRun(s,[e],n);return 1===o.shape[1]?o:this.reduce(o,t,n)},t.prototype.argReduce=function(e,t,n){void 0===n&&(n=null);var r=e.shape[0],a=e.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);var i=Ha(a),s=new Vi({windowSize:i,inSize:a,batchSize:r},t,null==n),o=[e];null!=n&&o.push(n);var u=this.compileAndRun(s,o,"int32");return 1===u.shape[1]?u:this.argReduce(e,t,u)},t.prototype.argReducePacked=function(e,t,n){void 0===n&&(n=null);var r=null!=n?n.shape:e.shape,a=Ha(r[r.length-1]),i=new os(r,a,t,null==n),s=null==n?[e]:[e,n],o=this.compileAndRun(i,s,"int32");return o.rank===e.rank?this.argReducePacked(e,t,o):o},t.prototype.sum=function(e,t){Wn("sum",t,e.rank);var n=Bn(e.shape,t),r=n[0],a=me(n[1]),i=e.as2D(-1,a),s=vt(e.dtype);return this.reduce(i,"sum",s).reshape(r)},t.prototype.prod=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.prod(e,t);var n=Bn(e.shape,t),r=n[0],a=me(n[1]),i=e.as2D(-1,a),s=vt(e.dtype);return this.reduce(i,"prod",s).reshape(r)},t.prototype.unsortedSegmentSum=function(e,t,n){var r=0,a=Vn([r],e.rank),i=e;null!=a&&(i=ii(e,a),r=Gn(1,e.rank)[0]);var s=function(e,t,n){for(var r=[],a=e.length,i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}(i.shape,r,n),o=me([i.shape[r]]),u=i.as2D(-1,o),l=vt(e.dtype),c=this.segOpCompute(u,"unsortedSegmentSum",t,l,n).reshape(s);return null!=a&&(c=ii(c,Un(a))),c},t.prototype.segOpCompute=function(e,t,n,r,a){var i=e.shape[0],s=e.shape[1],o=function(e,t){var n,r=!1;for(e<=Ga?(n=e,r=!0):n=Pe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Pe(e,n+1);return n}(s,a),u=new Vo({windowSize:o,inSize:s,batchSize:i,numSegments:a}),l=this.compileAndRun(u,[e,n],r);return l.shape[1]===a?l:(n=ur(0,a).tile([s/o]),this.segOpCompute(l,t,n,r,a))},t.prototype.argMinMaxReduce=function(e,t,n){var r=[t];if(Wn("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!Q().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){var a=Bn(e.shape,r),i=a[0],s=me(a[1]),o=e.as2D(-1,s);return this.argReduce(o,n).reshape(i)}return this.argReducePacked(e,n)},t.prototype.argMin=function(e,t){return this.argMinMaxReduce(e,t,"min")},t.prototype.argMax=function(e,t){return this.argMinMaxReduce(e,t,"max")},t.prototype.cumsum=function(e,t,n,r){if(t!==e.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(e.rank-1)+" but got axis="+t);var a=new Ls(e.shape,n,r);return this.compileAndRun(a,[e])},t.prototype.equal=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");var n=new vs("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.notEqual=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(notEqual(a, b));\n","bool");var n=new vs("return float(a != b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.less=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.less(e,t);if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");var n=new vs("return float(a < b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.lessEqual=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");var n=new vs("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greater=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.greater(e,t);if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");var n=new vs("return float(a > b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greaterEqual=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");var n=new vs("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalNot=function(e){var t=new eu(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])},t.prototype.logicalAnd=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");var n=new vs("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalOr=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");var n=new vs("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.select=function(e,t,n){var r=new Uo(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],gt(t.dtype,n.dtype))},t.prototype.where=function(e){Fn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return Bi(e.shape,t)},t.prototype.topk=function(e,t,n){return Pi(e.dataSync(),e.shape,e.dtype,t)},t.prototype.min=function(e,t){Wn("min",t,e.rank);var n=Bn(e.shape,t),r=n[0],a=me(n[1]),i=e.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(r)},t.prototype.minimum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.minimum(e,t);var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new vs("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.mod=function(e,t){var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new vs("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.max=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.max(e,t);Wn("max",t,e.rank);var n=Bn(e.shape,t),r=n[0],a=me(n[1]),i=e.as2D(-1,a);return this.reduce(i,"max",i.dtype).reshape(r)},t.prototype.maximum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.maximum(e,t);var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new vs("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.all=function(e,t){Wn("all",t,e.rank);var n=Bn(e.shape,t),r=n[0],a=me(n[1]),i=e.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(r)},t.prototype.any=function(e,t){Wn("any",t,e.rank);var n=Bn(e.shape,t),r=n[0],a=me(n[1]),i=e.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(r)},t.prototype.floorDiv=function(e,t){if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");var n=new vs("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(n,[e,t],"int32")},t.prototype.add=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,ps);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.add(e,t);var n=gt(e.dtype,t.dtype);if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,ps,n);var r=new vs(ps,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.packedUnaryOp=function(e,t,n){var r=new Cu(e.shape,t);return this.compileAndRun(r,[e],n)},t.prototype.packedBinaryOp=function(e,t,n,r,a){void 0===a&&(a=!1);var i=new bs(n,e.shape,t.shape,a);return this.compileAndRun(i,[e,t],r)},t.prototype.complexSeparableBinaryOp=function(e,t,n){var r=this,a=this.texData.get(e.dataId),i=this.texData.get(t.dataId),s=[[a.complexTensors.real,i.complexTensors.real],[a.complexTensors.imag,i.complexTensors.imag]].map((function(a){var i=a[0],s=a[1],o=r.makeComplexComponentTensorInfo(e,i),u=r.makeComplexComponentTensorInfo(t,s),l=new vs(n,e.shape,t.shape);return r.compileAndRun(l,[o,u],gt(i.dtype,s.dtype))})),o=s[0],u=s[1],l=this.complex(o,u);return o.dispose(),u.dispose(),l},t.prototype.makeComplexComponentTensorInfo=function(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}},t.prototype.addN=function(e){if(1===e.length)return e[0];if(e.length>Q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}var a=e.map((function(e){return e.dtype})).reduce((function(e,t){return gt(e,t)})),i=e.map((function(e){return e.shape})),s=Q().getBool("WEBGL_PACK")?new Wi(e[0].shape,i):new zi(e[0].shape,i);return this.compileAndRun(s,e,a)},t.prototype.subtract=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,fs);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.subtract(e,t);var n=gt(e.dtype,t.dtype);if(Q().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,fs,e.dtype);var r=new vs(fs,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.pow=function(e,t){var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new vs("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=gt(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)},t.prototype.ceil=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.ceil(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,uu,e.dtype);var t=new eu(e.shape,uu);return this.compileAndRun(t,[e])},t.prototype.floor=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.floor(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,lu,e.dtype);var t=new eu(e.shape,lu);return this.compileAndRun(t,[e])},t.prototype.sign=function(e){var t=new eu(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])},t.prototype.isNaN=function(e){var t=new eu(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isInf=function(e){var t=new eu(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isFinite=function(e){var t=new eu(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.round=function(e){var t=new eu(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])},t.prototype.exp=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.exp(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,cu,e.dtype);var t=new eu(e.shape,cu);return this.compileAndRun(t,[e])},t.prototype.expm1=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.expm1(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hu,e.dtype);var t=new eu(e.shape,hu);return this.compileAndRun(t,[e])},t.prototype.softmax=function(e,t){var n=Ie([t],e.shape),r=this.max(e,n),a=zn(r.shape,n),i=this.subtract(e,r.reshape(a)),s=this.exp(i),o=this.sum(s,n).reshape(a);return Va(s,o)},t.prototype.log=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.log(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);var t=new eu(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])},t.prototype.log1p=function(e){var t=new eu(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])},t.prototype.sqrt=function(e){var t=new eu(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])},t.prototype.rsqrt=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.rsqrt(e);var t=new eu(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])},t.prototype.reciprocal=function(e){var t=new eu(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])},t.prototype.relu=function(e){var t;return t=Q().getBool("WEBGL_PACK")?new Cu(e.shape,wu):new eu(e.shape,ru),this.compileAndRun(t,[e])},t.prototype.relu6=function(e){var t;return t=Q().getBool("WEBGL_PACK")?new Cu(e.shape,ku):new eu(e.shape,au),this.compileAndRun(t,[e])},t.prototype.prelu=function(e,t){var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs(ys,e.shape,t.shape):new vs(gs,e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.elu=function(e){if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Iu,e.dtype);var t=new eu(e.shape,iu);return this.compileAndRun(t,[e])},t.prototype.eluDer=function(e,t){var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new vs("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.selu=function(e){var t=new eu(e.shape,su);return this.compileAndRun(t,[e])},t.prototype.int=function(e){var t=new eu(e.shape,"return float(int(x));");return this.compileAndRun(t,[e],"int32")},t.prototype.clip=function(e,t,n){var r,a=(r=Q().getBool("WEBGL_PACK_CLIP")?new ws(e.shape):new xs(e.shape)).getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,a)},t.prototype.abs=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.abs(e);if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,nu,e.dtype);var t=new eu(e.shape,nu);return this.compileAndRun(t,[e])},t.prototype.complexAbs=function(e){var t=this.texData.get(e.dataId),n=new ks(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensors.real),this.makeComplexComponentTensorInfo(e,t.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(e){var t=new eu(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])},t.prototype.softplus=function(e){var t=new eu(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])},t.prototype.sin=function(e){var t=new eu(e.shape,du);return this.compileAndRun(t,[e])},t.prototype.cos=function(e){var t=new eu(e.shape,pu);return this.compileAndRun(t,[e])},t.prototype.tan=function(e){var t=new eu(e.shape,"return tan(x);");return this.compileAndRun(t,[e])},t.prototype.asin=function(e){var t=new eu(e.shape,fu);return this.compileAndRun(t,[e])},t.prototype.acos=function(e){var t=new eu(e.shape,mu);return this.compileAndRun(t,[e])},t.prototype.atan=function(e){var t=new eu(e.shape,gu);return this.compileAndRun(t,[e])},t.prototype.atan2=function(e,t){var n=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new vs("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.sinh=function(e){var t=new eu(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.cosh=function(e){var t=new eu(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.tanh=function(e){var t=new eu(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])},t.prototype.asinh=function(e){var t=new eu(e.shape,vu);return this.compileAndRun(t,[e])},t.prototype.acosh=function(e){var t=new eu(e.shape,yu);return this.compileAndRun(t,[e])},t.prototype.atanh=function(e){var t=new eu(e.shape,bu);return this.compileAndRun(t,[e])},t.prototype.erf=function(e){var t=new eu(e.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(t,[e])},t.prototype.step=function(e,t){var n=new eu(e.shape,function(e){return void 0===e&&(e=0),tu+"\n    return x > 0.0 ? 1.0 : float("+e+");\n  "}(t));return this.compileAndRun(n,[e])},t.prototype.conv2dByMatMul=function(e,t,n,r,a,i){var s=e.shape,o=this.texData.get(e.dataId),u=n.inChannels,l=s[0]*s[1]*s[2],c=n.outChannels,h="channelsLast"===n.dataFormat,d=(1===l||1===c)&&u>1e3,p=s[2]%2!=0&&!!o.isPacked;if(d||!Q().getBool("WEBGL_LAZILY_UNPACK")||!Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!p){var f=h?s[0]*s[1]*s[2]:s[0]*s[2]*s[3],m=this.reshape(e,[1,f,n.inChannels]),g=this.reshape(t,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:m,b:g,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),n.outShape)}var v=h?s[0]*s[1]*(s[2]+1):s[0]*s[2]*(s[3]+1),y={dataId:e.dataId,shape:[1,v,n.inChannels],dtype:e.dtype},b=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,he(vn(o.shape,y.shape),(function(){return"packed reshape "+o.shape+" to "+y.shape+" isn't free"}));var x=this.reshape(t,[1,n.inChannels,n.outChannels]),w=this.fusedBatchMatMul({a:y,b:x,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),k=this.texData.get(w.dataId);return he(k.isPacked,(function(){return"batchMatMul result is expected to be packed"})),o.shape=b,k.shape=n.outShape,It.makeTensorFromDataId(w.dataId,n.outShape,w.dtype)},t.prototype.conv2dWithIm2Row=function(e,t,n,r,a,i){var s=n.filterWidth,o=n.filterHeight,u=n.inChannels,l=n.outWidth,c=n.outHeight,h="channelsLast"===n.dataFormat,d=s*o*u,p=c*l,f=[d,p],m=e.squeeze([0]),g=t.reshape([1,d,-1]),v=new yo(f,m.shape,n),y=this.compileAndRun(v,[m]).reshape([1,f[0],f[1]]),b=null!=r,x=null!=i,w=a?Tu(a,!0):null,k=new Co(y.shape,[1,p,n.outChannels],!0,!1,b,w,x),I=[y,g];r&&I.push(r),x&&I.push(i);var C=this.compileAndRun(k,I);return h?C.reshape([1,c,l,n.outChannels]):C.reshape([1,n.outChannels,c,l])},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights;if(1===r.filterHeight&&1===r.filterWidth&&1===r.dilationHeight&&1===r.dilationWidth&&1===r.strideHeight&&1===r.strideWidth&&("SAME"===r.padInfo.type||"VALID"===r.padInfo.type))return this.conv2dByMatMul(t,n,r,a,i,s);if(Q().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,n,r,a,i,s);var o=null!=a,u=null!=s,l=i?Tu(i,!1):null,c=new Fs(r,o,l,u),h=[t,n];return a&&h.push(a),s&&h.push(s),this.compileAndRun(c,h)},t.prototype.conv2d=function(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(Q().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);var r=new Fs(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerInput=function(e,t,n){var r=new Ts(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerFilter=function(e,t,n){var r=new Ns(n);return this.compileAndRun(r,[e,t])},t.prototype.fusedDepthwiseConv2D=function(e){var t,n=e.input,r=e.filter,a=e.convInfo,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&a.strideWidth<=2&&a.outChannels/a.inChannels==1,l=s?Tu(s,u):null,c=[n,r],h=null!=i,d=null!=o;return h&&c.push(i),d&&c.push(o),u?(t=new Os(a,h,l,d),this.compileAndRun(t,c)):(t=new $s(a,h,l,d),this.compileAndRun(t,c))},t.prototype.depthwiseConv2D=function(e,t,n){var r;return Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Os(n),this.compileAndRun(r,[e,t])):(r=new $s(n),this.compileAndRun(r,[e,t]))},t.prototype.depthwiseConv2DDerInput=function(e,t,n){var r=new Ds(n);return this.compileAndRun(r,[e,t])},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){var r=new As(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3d=function(e,t,n){var r=new _s(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerInput=function(e,t,n){var r=new Rs(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerFilter=function(e,t,n){var r=new Es(n);return this.compileAndRun(r,[e,t])},t.prototype.maxPool=function(e,t){var n=new Ao(t,"max",!1);return this.compileAndRun(n,[e])},t.prototype.avgPool=function(e,t){var n=new Ao(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPoolBackprop=function(e,t,n,r){var a=new Ao(r,"max",!0),i=this.compileAndRun(a,[t]),s=new ko(r),o=this.compileAndRun(s,[e,i],t.dtype);return i.dispose(),o},t.prototype.avgPoolBackprop=function(e,t,n){var r=new us(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.cast=function(e,t){return wi(e,t,this)},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,i=0;i<e.rank;i++)i!==t&&(r[a++]=e.shape[i]);var s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(i=0;i<u.length;i++)s[t]=i,u[i]=this.slice(e,s,o).reshape(r);return u},t.prototype.avgPool3d=function(e,t){var n=new Do(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.avgPool3dBackprop=function(e,t,n){var r=new ls(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.maxPool3d=function(e,t){var n=new Do(t,"max",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPool3dBackprop=function(e,t,n,r){var a=new Do(r,"max",!0),i=this.compileAndRun(a,[t]),s=new Io(r),o=this.compileAndRun(s,[e,i],t.dtype);return i.dispose(),o},t.prototype.reshape=function(e,t){var n=this.texData.get(e.dataId);if(n.isPacked&&!vn(e.shape,t)&&(null===n.texture||!vn(n.shape,t))){var r=this.packedReshape(e,t);return It.makeTensorFromDataId(r.dataId,r.shape,r.dtype)}return ki(e,t)},t.prototype.resizeBilinear=function(e,t,n,r){var a=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Mo(e.shape,t,n,r):new Oo(e.shape,t,n,r);return this.compileAndRun(a,[e],"float32")},t.prototype.resizeBilinearBackprop=function(e,t,n){var r=new $o(e,t,n);return this.compileAndRun(r,[e])},t.prototype.resizeNearestNeighbor=function(e,t,n,r){var a=new Po(e.shape,t,n,r);return this.compileAndRun(a,[e])},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){var r=new Lo(e,t,n);return this.compileAndRun(r,[e])},t.prototype.multinomial=function(e,t,n,r){var a=t?e:ri(e),i=a.shape[0],s=a.shape[1],o=new So(i,s,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)},t.prototype.oneHot=function(e,t,n,r){var a=new No(e.size,t,n,r);return this.compileAndRun(a,[e])},t.prototype.diag=function(e){var t=new Vs(e.size);return this.compileAndRun(t,[e])},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return Fn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),Ai(e.dataSync(),t.dataSync(),n,r,a)},t.prototype.cropAndResize=function(e,t,n,r,a,i){var s=new Ms(e.shape,t.shape,r,a,i);return this.compileAndRun(s,[e,t,n],"float32")},t.prototype.depthToSpace=function(e,t,n){he(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));var r=e.shape[0],a="NHWC"===n?e.shape[1]:e.shape[2],i="NHWC"===n?e.shape[2]:e.shape[3],s="NHWC"===n?e.shape[3]:e.shape[1],o=a*t,u=i*t,l=s/(t*t),c=new Ws("NHWC"===n?[r,o,u,l]:[r,l,o,u],t,n);return this.compileAndRun(c,[e])},t.prototype.split=function(e,t,n){return Mi(e,t,n)},t.prototype.scatterND=function(e,t,n){var r=Ka(0,e,n),a=r.sliceRank,i=r.numUpdates,s=r.sliceSize,o=r.strides,u=r.outputSize,l=[u/s,s],c=e.reshape([i,a]),h=t.reshape([i,s]);if(0===u)return ki(Qn([]),n);var d=Zn(0),p=new Wo(i,a,c.rank,h.rank,o,l);return this.compileAndRun(p,[h,c,d]).reshape(n)},t.prototype.sparseToDense=function(e,t,n,r){var a=Ka(0,e,n),i=a.sliceRank,s=a.numUpdates,o=a.strides,u=a.outputSize,l=new Wo(s,i,e.rank,t.rank,o,[u,1]);return this.compileAndRun(l,[t,e,r]).reshape(n)},t.prototype.fft=function(e){return this.fftImpl(e,!1)},t.prototype.ifft=function(e){return this.fftImpl(e,!0)},t.prototype.fftImpl=function(e,t){var n=this.texData.get(e.dataId),r=new qs("return real * expR - imag * expI;",e.shape,t),a=new qs("return real * expI + imag * expR;",e.shape,t),i=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag)],s=this.compileAndRun(r,i),o=this.compileAndRun(a,i),u=this.complex(s,o).as2D(e.shape[0],e.shape[1]);return s.dispose(),o.dispose(),u},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=Ua(e,t),i=a[0],s=a[1],o=a[2],u=a[3],l=t.reshape([s,r]),c=e.reshape([e.size/o,o]),h=new Ys(r,u,[s,o]);return this.compileAndRun(h,[c,l]).reshape(i)},t.prototype.fill=function(e,t,n){if("string"===(n=n||Me(t))){var r=Ne(n,me(e));return r.fill(t),It.makeTensor(r,e,n,this)}var a=new Ks(e,t),i=a.getCustomSetupFunc(t);return this.compileAndRun(a,[],n,i)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)},t.prototype.linspace=function(e,t,n){return Ii(e,t,n)},t.prototype.makeTensorInfo=function(e,t){var n=this.write(null,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}},t.prototype.makeOutput=function(e,t){var n=this.makeTensorInfo(e,t).dataId;return It.makeTensorFromDataId(n,e,t,this)},t.prototype.unpackTensor=function(e){var t=new Su(e.shape);return this.runWebGLProgram(t,[e],e.dtype)},t.prototype.packTensor=function(e){var t=new To(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)},t.prototype.packedReshape=function(e,t){var n=[dn(e.shape)].concat(pn(e.shape)),r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[dn(t)].concat(pn(t)),i=new _o(a,n),s=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}},t.prototype.decode=function(e){var t,n=this.texData.get(e),r=n.isPacked,a=n.shape,i=n.dtype,s=fn(a);return t=r?new zs(s):new Bs(s),{dtype:i,shape:a,dataId:this.runWebGLProgram(t,[{shape:s,dtype:i,dataId:e}],i,null,!0).dataId}},t.prototype.runWebGLProgram=function(e,t,n,r,a){var i=this;void 0===a&&(a=!1);var s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Nt.DENSE){var u=$t(e.outputShape);o.texShape=u.map((function(e){return 2*e}))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===me(s.shape))return o.values=Se(s.dtype,0),s;var l=[],c=t.map((function(t){if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var n=i.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&me(t.shape)<=Q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?i.unpackTensor(t):i.packTensor(t),l.push(t),n=i.texData.get(t.dataId);else if(n.isPacked&&!vn(n.shape,t.shape)){var r=t,a=t.shape;t.shape=n.shape,t=i.packedReshape(t,a),l.push(t),n=i.texData.get(t.dataId),r.shape=a}return i.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);var h,d={shape:s.shape,texData:o,isUniform:!1},p=function(e,t,n){var r="";t.concat(n).forEach((function(e){var t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=e.shape+"_"+n+"_"+t}));var a=e.userCode;return e.constructor.name+"_"+r+"_"+a}(e,c,d),f=this.getAndSaveBinary(p,(function(){return function(e,t,n,r){var a=t.userCode,i=n.map((function(e,n){var r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=i.map((function(e){return e.shapeInfo})),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Xi(i,o,a,t.packedInputs),l=e.createProgram(u),c=null,h=e.getUniformLocation(l,"NAN",!1);1===Q().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));for(var d={},p=0;p<t.variableNames.length;p++){var f=t.variableNames[p];d[f]=e.getUniformLocation(l,f,!1),d["offset"+f]=e.getUniformLocation(l,"offset"+f,!1)}return{program:t,source:u,webGLProgram:l,uniformLocations:d,inShapeInfos:s,outShapeInfo:o,infLoc:c,nanLoc:h}}(i.gpgpu,e,c,d)})),m=null!=this.activeTimers;if(m&&(h=this.startTimer()),function(e,t,n,r,a){vo(t.inShapeInfos,n),vo([t.outShapeInfo],[r]);var i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i,s[0],s[1]):e.setOutputMatrixTexture(i,s[0],s[1]),e.setProgram(t.webGLProgram),1===Q().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((function(n,r){var a=t.program.variableNames[r],i=t.uniformLocations[a],s=t.uniformLocations["offset"+a];if(null!=i)if(n.isUniform)if(me(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{var o=n.uniformValues;o instanceof Float32Array||(o=new Float32Array(o)),e.gl.uniform1fv(i,o)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,f,c,d,r),l.forEach((function(e){return i.disposeData(e.dataId)})),m&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)})),!Q().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){var g=this.unpackTensor(s);return this.disposeData(s.dataId),g}return s},t.prototype.compileAndRun=function(e,t,n,r,a){void 0===a&&(a=!1),n=n||t[0].dtype;var i=this.runWebGLProgram(e,t,n,r,a);return It.makeTensorFromDataId(i.dataId,i.shape,i.dtype)},t.prototype.getAndSaveBinary=function(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){var e=this;this.disposed||(Q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((function(t){e.gpgpu.deleteProgram(e.binaryCache[t].webGLProgram),delete e.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},t.prototype.floatPrecision=function(){var e=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=An((function(){if(!Q().get("WEBGL_RENDER_FLOAT32_ENABLED")){var t=Q().getBool("DEBUG");Q().set("DEBUG",!1);var n=e.abs(Zn(1e-8)).dataSync()[0];if(Q().set("DEBUG",t),n>0)return 32}return 16}))),this.floatPrecisionValue},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.uploadToGPU=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,i=n.values,s=n.texture,o=n.usage,u=n.isPacked;if(null==s){var l,c=null!=this.activeTimers;c&&(l=Ge());var h=n.texShape;if(null==h&&(h=mn(r,u),n.texShape=h),null!=i){var d=fn(r),p=void 0,f=h[1],m=h[0],g=i instanceof Uint8Array;u?(f=(t=Ot(h[0],h[1]))[0],m=t[1],p=new js(d,[m,f],g)):p=new Hs(d,[m,f],g);var v=this.makeTensorInfo([m,f],a);this.texData.get(v.dataId).usage=g?Tt.PIXELS:Tt.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),f,m,i);var y=this.runWebGLProgram(p,[v],a,null,!0),b=this.texData.get(y.dataId);n.texture=b.texture,n.texShape=b.texShape,n.isPacked=b.isPacked,n.usage=b.usage,this.disposeData(v.dataId),this.texData.delete(y.dataId),n.values=null,c&&(this.uploadWaitMs+=Ge()-l)}else{var x=this.acquireTexture(h,o,a,u);n.texture=x}}},t.prototype.convertAndCacheOnCPU=function(e,t){var n=this.texData.get(e),r=n.dtype;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){for(var n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length),r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values},t.prototype.acquireTexture=function(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,r)},t.prototype.computeBytes=function(e,t){return e[0]*e[1]*De(t)},t}(oi);function Ru(e,t){return e(t={exports:{}},t.exports),t.exports}Ct()&&It.registerBackend("webgl",(function(){return new Eu}),2);var Au=Ru((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.alea=i}(0,e)})),Du=Ru((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xor128=i}(0,e)})),Fu=Ru((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xorwow=i}(0,e)})),_u=Ru((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xorshift7=i}(0,e)})),$u=Ru((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xor4096=i}(0,e)})),Ou=Ru((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.tychei=i}(0,e)})),Mu=Ru((function(e){!function(t,n){var r,a=this,i=256,s="random",o=n.pow(i,6),u=n.pow(2,52),l=2*u,c=i-1;function h(e,c,h){var g=[],v=f(function e(t,n){var r,a=[],i=typeof t;if(n&&"object"==i)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==i?t:t+"\0"}((c=1==c?{entropy:!0}:c||{}).entropy?[e,m(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(i):(e=new Uint8Array(i),(a.crypto||a.msCrypto).getRandomValues(e)),m(e)}catch(e){var n=a.navigator,s=n&&n.plugins;return[+new Date,a,s,a.screen,m(t)]}}():e,3),g),y=new d(g),b=function(){for(var e=y.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=y.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/4294967296},b.double=b,f(m(y.S),t),(c.pass||h||function(e,t,r,a){return a&&(a.S&&p(a,y),e.state=function(){return p(y,{})}),r?(n[s]=e,t):e})(b,v,"global"in c?c.global:this==n,c.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(n["seed"+s]=h,f(n.random(),t),e.exports){e.exports=h;try{r=require("crypto")}catch(e){}}}([],Math)}));Mu.alea=Au,Mu.xor128=Du,Mu.xorwow=Fu,Mu.xorshift7=_u,Mu.xor4096=$u,Mu.tychei=Ou;var Lu=Mu.alea,Pu=qn({addN_:function(e){he(Array.isArray(e),(function(){return"The argument passed to tf.addN() must be a list of tensors"})),he(e.length>=1,(function(){return"Must pass at least one tensor to tf.addN(), but got "+e.length}));var t=e.map((function(e,t){return On(e,"tensors"+t,"addN")})),n=t[0];t.forEach((function(e){if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((function(e){if(!ge(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));var r=t;return It.runKernelFunc((function(e,n){return e.addN(t)}),r,null,"AddN")}});function Bu(){Rn("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}function zu(e){return 0===e.rank||1===e.rank?e.as4D(1,1,1,e.size):2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}function Wu(e,t,n,r,a,i){null==i&&(i=.001);var s,o,u=On(e,"x","batchNorm"),l=On(t,"mean","batchNorm"),c=On(n,"variance","batchNorm");null!=a&&(s=On(a,"scale","batchNorm")),null!=r&&(o=On(r,"offset","batchNorm")),he(l.rank===c.rank,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),he(null==o||l.rank===o.rank,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),he(null==s||l.rank===s.rank,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var h={x:u,scale:s,offset:o,mean:l,variance:c},d={varianceEpsilon:i};return It.runKernelFunc((function(e,t){var n=zu(u),r=e.batchNormalization(n,Vu(l),Vu(c),i,Vu(s),Vu(o));return t([u,l,c,s]),r}),h,null,"FusedBatchNorm",d).reshape(u.shape)}function Vu(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}var Uu=qn({batchNormalization_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Bu(),Wu(e,t,n,i,a,r)}}),Gu=qn({batchNorm_:Wu});function Hu(e,t,n,r,a,i){var s,o,u=On(e,"x","batchNorm"),l=On(t,"mean","batchNorm"),c=On(n,"variance","batchNorm");return null!=a&&(s=On(a,"scale","batchNorm")),null!=r&&(o=On(r,"offset","batchNorm")),he(2===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),he(2===l.rank||1===l.rank,(function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+l.rank+"."})),he(2===c.rank||1===c.rank,(function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+c.rank+"."})),null!=s&&he(2===s.rank||1===s.rank,(function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+s.rank+"."})),null!=o&&he(2===o.rank||1===o.rank,(function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+o.rank+"."})),Gu(u,l,c,o,s,i)}var ju=qn({batchNormalization2d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Bu(),Hu(e,t,n,i,a,r)}}),qu=qn({batchNorm2d_:Hu});function Ku(e,t,n,r,a,i){var s,o,u=On(e,"x","batchNorm"),l=On(t,"mean","batchNorm"),c=On(n,"variance","batchNorm");return null!=a&&(s=On(a,"scale","batchNorm")),null!=r&&(o=On(r,"offset","batchNorm")),he(3===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),he(3===l.rank||1===l.rank,(function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+l.rank+"."})),he(3===c.rank||1===c.rank,(function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+c.rank+"."})),null!=s&&he(3===s.rank||1===s.rank,(function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+s.rank+"."})),null!=o&&he(3===o.rank||1===o.rank,(function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+o.rank+"."})),Gu(u,l,c,o,s,i)}var Xu=qn({batchNormalization3d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Bu(),Ku(e,t,n,i,a,r)}}),Yu=qn({batchNorm3d_:Ku});function Qu(e,t,n,r,a,i){var s,o,u=On(e,"x","batchNorm"),l=On(t,"mean","batchNorm"),c=On(n,"variance","batchNorm");return null!=a&&(s=On(a,"scale","batchNorm")),null!=r&&(o=On(r,"offset","batchNorm")),he(4===u.rank,(function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."})),he(4===l.rank||1===l.rank,(function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+l.rank+"."})),he(4===c.rank||1===c.rank,(function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+c.rank+"."})),null!=s&&he(4===s.rank||1===s.rank,(function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+s.rank+"."})),null!=o&&he(4===o.rank||1===o.rank,(function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+o.rank+"."})),Gu(u,l,c,o,s,i)}var Ju=qn({batchNormalization4d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Bu(),Qu(e,t,n,i,a,r)}}),Zu=qn({batchNorm4d_:Qu}),el=qn({broadcastTo_:function(e,t){var n=On(e,"broadcastTo","x"),r=n.shape;if(t.some((function(e){return!(e>0)||e%1!=0})))throw new Error("broadcastTo(): Invalid broadcast shape ["+t+"].");if(t.length<n.rank)throw new Error("broadcastTo(): shape.length="+t.length+" < input.rank="+n.rank+".");if(t.length>n.rank){for(var a=n.shape.slice();a.length<t.length;)a.unshift(1);n=n.reshape(a)}for(var i=n.shape,s=Array.from(t),o=t.length-1;o>=0;o--)if(i[o]===t[o])s[o]=1;else if(1!==n.shape[o])throw new Error("broadcastTo(): ["+r+"] cannot be broadcast to ["+t+"].");var u=s.map((function(e,t){return e>1?t:-1})).filter((function(e){return e>=0}));if(0===u.length)return n.clone();var l={x:n},c={shape:t,inputShape:i};return It.runKernelFunc((function(e){return e.tile(n,s)}),l,(function(e){return{x:function(){return e.sum(u,!0)}}}),Mr,c)}}),tl=qn({clone_:function(e){var t=On(e,"x","clone",null);return It.runKernelFunc((function(){return It.makeTensorFromDataId(t.dataId,t.shape,t.dtype)}),{x:t},null,Pr)}}),nl=qn({logicalAnd_:function(e,t){var n=On(e,"a","logicalAnd","bool"),r=On(t,"b","logicalAnd","bool");return Gr(n.shape,r.shape),It.runKernelFunc((function(e){return e.logicalAnd(n,r)}),{a:n,b:r},null,"LogicalAnd")}}),rl=qn({logicalNot_:function(e){var t=On(e,"x","logicalNot","bool");return It.runKernelFunc((function(e){return e.logicalNot(t)}),{$x:t})}}),al=qn({logicalOr_:function(e,t){var n=On(e,"a","logicalOr","bool"),r=On(t,"b","logicalOr","bool");return Gr(n.shape,r.shape),It.runKernelFunc((function(e){return e.logicalOr(n,r)}),{$a:n,$b:r})}}),il=qn({logicalXor_:function(e,t){var n=On(e,"a","logicalXor","bool"),r=On(t,"b","logicalXor","bool");return Gr(n.shape,r.shape),al(e,t).logicalAnd(nl(e,t).logicalNot())}}),sl=qn({where_:function(e,t,n){var r=On(t,"a","where"),a=On(n,"b","where"),i=On(e,"condition","where","bool");return de(r.shape,a.shape,"Error in where: "),1===i.rank?he(i.shape[0]===r.shape[0],(function(){return"The first dimension of `a` must match the size of `condition`."})):de(i.shape,a.shape,"Error in where: "),It.runKernelFunc((function(e,t){var n=e.select(i,r,a);return t([i]),n}),{$condition:i,$a:r,$b:a},(function(e,t){var n=t[0];return{$condition:function(){return cr(n).toFloat()},$a:function(){return e.mul(n.cast(e.dtype))},$b:function(){return e.mul(n.logicalNot().cast(e.dtype))}}}))}}),ol=function(e){return K(this,void 0,void 0,(function(){var t,n,r;return X(this,(function(a){switch(a.label){case 0:return[4,(t=On(e,"condition","whereAsync","bool")).data()];case 1:return n=a.sent(),r=Bi(t.shape,n),e!==t&&t.dispose(),[2,r]}}))}))},ul=qn({divNoNan_:function(e,t){var n,r=On(e,"a","div"),a=On(t,"b","div");r=(n=yt(r,a))[0],a=n[1];var i=Va(r,a),s=cr(i),o=a.equal(s);return sl(o,s,i)}}),ll=qn({tile_:function(e,t){var n=On(e,"x","tile",null);he(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of reps "+t+"."}));var r=[n],a={x:n},i={reps:t};return It.runKernelFunc((function(e,r){var a=e.tile(n,t);return r([n]),a}),a,null,Br,i,r)}}),cl=qn({eye_:function(e,t,n,r){void 0===r&&(r="float32"),null==t&&(t=e);for(var a=vr([e,t],r),i=e<=t?e:t,s=0;s<i;++s)a.set(1,s,s);var o=a.toTensor().as2D(e,t);if(null==n)return o;if(1===n.length)return ll(kr(o,0),[n[0],1,1]);if(2===n.length)return ll(kr(kr(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return ll(kr(kr(kr(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+n.length+"D.")}}),hl=qn({multinomial_:function(e,t,n,r){void 0===r&&(r=!1);var a=On(e,"logits","multinomial"),i=a.size,s=a.rank;if(i<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+i+".");if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+s);n=n||Math.random();var o=1===s?a.as2D(1,-1):a,u=It.runKernelFunc((function(e){return e.multinomial(o,r,t,n)}),{logits2D:o});return 1===s?u.as1D():u}}),dl=qn({oneHot_:function(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);var a=On(e,"indices","oneHot","int32"),i=a.shape.concat([t]),s={indices:a=a.flatten()},o={depth:t,onValue:n,offValue:r};return It.runKernelFunc((function(e,i){return i([a]),e.oneHot(a,t,n,r)}),s,null,Lr,o).reshape(i)}}),pl=qn({pad_:function(e,t,n){void 0===n&&(n=0);var r=On(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var a={paddings:t,constantValue:n},i={x:r};return It.runKernelFunc((function(e,a){return a([r]),e.pad(r,t,n)}),i,null,zr,a)}}),fl=qn({pad1d_:function(e,t,n){return void 0===n&&(n=0),he(2===t.length,(function(){return"Invalid number of paddings. Must be length of 2."})),pl(e,[t],n)}}),ml=qn({pad2d_:function(e,t,n){return void 0===n&&(n=0),he(2===t.length&&2===t[0].length&&2===t[1].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),pl(e,t,n)}}),gl=qn({pad3d_:function(e,t,n){return void 0===n&&(n=0),he(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),pl(e,t,n)}}),vl=qn({pad4d_:function(e,t,n){return void 0===n&&(n=0),he(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),pl(e,t,n)}}),yl=qn({rand_:function(e,t,n){var r=me(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(var i=0;i<r;i++)a[i]=t();return It.makeTensor(a,e,n)}});function bl(){return 32===It.backend.floatPrecision()?.001:.1}function xl(e,t,n){var r=!0;if((Ae(e)||Ae(t))&&(r=!1),Ae(e)&&Ae(t)&&(r=!0),r){var a=e.constructor.name,i=t.constructor.name;if(a!==i)throw new Error("Arrays are of different type. Actual: "+a+". Expected: "+i)}if(Array.isArray(e)&&Array.isArray(t)){var s=_n(e),o=_n(t);if(!ge(s,o))throw new Error("Arrays have different shapes. Actual: ["+s+"]. Expected: ["+o+"]")}var u=Ae(e)?e:fe(e),l=Ae(t)?t:fe(t);if(u.length!==l.length)throw new Error("Arrays have different lengths actual: "+u.length+" vs expected: "+l.length+".\nActual:   "+u+".\nExpected: "+l+".");for(var c=0;c<l.length;++c){var h=u[c],d=l[c];if(!n(h,d))throw new Error("Arrays differ: actual["+c+"] = "+h+", expected["+c+"] = "+d+".\nActual:   "+u+".\nExpected: "+l+".")}}function wl(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}Object.freeze({TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=bl()),xl(e,t,(function(e,t){return wl(e,t,n)}))},testEpsilon:bl,expectPromiseToFail:function(e,t){e().then((function(){return t.fail()}),(function(){return t()}))},expectArraysEqual:function(e,t){var n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return _e(e)||_e(e[0])||_e(t)||_e(t[0])?xl(e,n,(function(e,t){return e==t})):xl(e,t,(function(e,t){return wl(e,t,0)}))},expectNumbersClose:function(e,t,n){if(null==n&&(n=bl()),!wl(e,t,n))throw new Error("Numbers differ: actual === "+e+", expected === "+t)},expectValuesInRange:function(e,t,n){for(var r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error("Value out of range:"+e[r]+" low: "+t+", high: "+n)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}});var kl=function(){function e(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var i=a||Math.random();this.random=Lu(i.toString())}return e.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,n,r=!1;!r;){var a=void 0,i=void 0,s=void 0;do{s=(a=2*this.random()-1)*a+(i=2*this.random()-1)*i}while(s>=1||0===s);var o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,n=this.mean+this.stdDev*i*o,this.truncated&&!this.isValidTruncated(t)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(t)},e.prototype.convertValue=function(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)},e.prototype.isValidTruncated=function(e){return e<=this.upper&&e>=this.lower},e}(),Il=function(){function e(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;var a=r||Math.random();this.randu=Lu(a.toString()),this.randn=new kl(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return e.prototype.nextValue=function(){for(var e,t,n,r,a,i;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-i+Math.log(i)),(a=this.randu())<t||Math.log(a)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)},e.prototype.convertValue=function(e){return"float32"===this.dtype?e:Math.round(e)},e}(),Cl=function(){function e(e,t,n,r){var a=this;if(void 0===e&&(e=0),void 0===t&&(t=1),this.canReturnFloat=function(){return null==a.dtype||"float32"===a.dtype},this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+e+" - "+t+" <= 1 and dtype is not float");this.random=Lu(r)}return e.prototype.convertValue=function(e){return this.canReturnFloat()?e:Math.round(e)},e.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},e}(),Sl=qn({randomGamma_:function(e,t,n,r,a){if(void 0===n&&(n=1),void 0===r&&(r="float32"),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);for(var i=new Il(t,n,r,a),s=vr(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),Nl=qn({randomNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);for(var i=new kl(t,n,r,!1,a),s=vr(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),Tl=qn({randomUniform_:function(e,t,n,r,a){void 0===t&&(t=0),void 0===n&&(n=1),void 0===r&&(r="float32");for(var i=vr(e,r),s=new Cl(t,n,null,a),o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),El=qn({square_:function(e){var t=On(e,"x","square"),n=[t];return It.runKernelFunc((function(e,n){return n([t]),e.square(t)}),{x:t},null,"Square",{},n,[])}}),Rl=qn({squaredDifference_:function(e,t){var n,r=On(e,"a","squaredDifference"),a=On(t,"b","squaredDifference");n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape);var i={a:r,b:a},s=[r,a];return It.runKernelFunc((function(e,t){var n=e.squaredDifference(r,a);return t([r,a]),n}),i,(function(e,t){var n=t[0],r=t[1],a=Zn(2);return{a:function(){return e.mul(n.sub(r).mul(a))},b:function(){return e.mul(r.sub(n).mul(a))}}}),Or,{},s,[])}}),Al=qn({truncatedNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");for(var i=new kl(t,n,r,!0,a),s=vr(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),Dl=qn({equal_:function(e,t){var n,r=On(e,"a","equal"),a=On(t,"b","equal");return n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape),It.runKernelFunc((function(e){return e.equal(r,a)}),{$a:r,$b:a})}}),Fl=qn({equalStrict_:function(e,t){var n=On(e,"a","equalStrict"),r=On(t,"b","equalStrict");return de(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),_l=qn({greater_:function(e,t){var n,r=On(e,"a","greater"),a=On(t,"b","greater");return n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape),It.runKernelFunc((function(e){return e.greater(r,a)}),{a:r,b:a},null,"Greater")}}),$l=qn({greaterEqual_:function(e,t){var n,r=On(e,"a","greaterEqual"),a=On(t,"b","greaterEqual");return n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape),It.runKernelFunc((function(e,t){var n=e.greaterEqual(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return cr(n)},b:function(){return cr(r)}}}),"GreaterEqual")}}),Ol=qn({greaterEqualStrict_:function(e,t){var n=On(e,"a","greaterEqualStrict"),r=On(t,"b","greaterEqualStrict");return de(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),Ml=qn({greaterStrict_:function(e,t){var n=On(e,"a","greaterStrict"),r=On(t,"b","greaterStrict");return de(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),Ll=qn({less_:function(e,t){var n,r=On(e,"a","less"),a=On(t,"b","less");return n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape),It.runKernelFunc((function(e){return e.less(r,a)}),{a:r,b:a},null,"Less")}}),Pl=qn({lessEqual_:function(e,t){var n,r=On(e,"a","lessEqual"),a=On(t,"b","lessEqual");return n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape),It.runKernelFunc((function(e,t){var n=e.lessEqual(r,a);return t([r,a]),n}),{a:r,b:a},null,"LessEqual")}}),Bl=qn({lessEqualStrict_:function(e,t){var n=On(e,"a","lessEqualStrict"),r=On(t,"b","lessEqualStrict");return de(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),zl=qn({lessStrict_:function(e,t){var n=On(e,"a","lessStrict"),r=On(t,"b","lessStrict");return de(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Wl=qn({notEqual_:function(e,t){var n,r=On(e,"a","notEqual"),a=On(t,"b","notEqual");return n=yt(r,a),r=n[0],a=n[1],Gr(r.shape,a.shape),It.runKernelFunc((function(e){return e.notEqual(r,a)}),{a:r,b:a},null,"NotEqual")}}),Vl=qn({notEqualStrict_:function(e,t){var n=On(e,"a","notEqualStrict"),r=On(t,"b","notEqualStrict");return de(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});function Ul(e,t){for(var n=[],r=e;r<t;++r)n.push(r);return n}function Gl(e){for(var t=[],n=0;n<e.length;++n)for(var r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Hl=qn({gather_:function(e,t,n){void 0===n&&(n=0);var r=On(e,"x","gather"),a=On(t,"indices","gather","int32");n=Ie(n,r.shape)[0];var i=function(e,t,n){for(var r=e.shape[n],a=[],i=1,s=1,o=0;o<n;o++)a.push(e.shape[o]),i*=e.shape[o];for(o=0;o<t.rank;o++)a.push(t.shape[o]);for(o=n+1;o<e.rank;o++)a.push(e.shape[o]),s*=e.shape[o];return{batchSize:i,sliceSize:s,dimSize:r,outputShape:a}}(r,a,n);return It.runKernelFunc((function(e,t){var i=e.gather(r,a.flatten(),n);return t([a]),i}),{x:r,indices:a},(function(e,t){var a=t[0];return{x:function(){var t=r.shape,i=a.size,s=t.slice(0,n),o=s.length,u=t.slice(n,t.length).slice(1),l=u.length,c=Ul(0,o),h=Ul(o+1,o+1+l),d=Gl([s,[i],u]),p=e.reshape(d),f=a.reshape([i]),m=Gl([[o],c,h]),g=p.transpose(m),v=jl(g,f,r.shape[n]),y=Un(m);return v.transpose(y)},indices:function(){return a}}}),"Gather",{axis:n}).reshape(i.outputShape)}}),jl=qn({unsortedSegmentSum_:function(e,t,n){var r=On(e,"x","unsortedSegmentSum"),a=On(t,"segmentIds","unsortedSegmentSum","int32");return he(ve(n),(function(){return"numSegments must be of dtype int"})),It.runKernelFunc((function(e,t){var i=e.unsortedSegmentSum(r,a,n);return t([a]),i}),{$x:r},(function(e,t){var n=t[0];return{$x:function(){return function(e,t){for(var n=Ra(t,cr(t)),r=Hl(e,n),a=$l(t,Zn(0,"int32")),i=r.rank-a.rank,s=0;s<i;++s)a=kr(a,s+1);a=nl(a,ar(r.shape,"bool"));var o=cr(r);return sl(a,r,o)}(e,n)}}}))}});function ql(e,t,n,r,a,i,s){void 0===i&&(i="NHWC"),he(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var o=e,u=t,l=!1;3===t.rank&&(l=!0,u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]),o=[1,e[0],e[1],e[2]]),he(4===o.length,(function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."})),he(4===u.rank,(function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank})),he(4===n.rank,(function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank}));var c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];he(c===n.shape[2],(function(){return"Error in conv2dDerInput: depth of input ("+c+") must match input depth for filter "+n.shape[2]+"."})),he(h===n.shape[3],(function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+n.shape[3]+"."})),null!=s&&he(ve(a),(function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var d=xi(i),p=hi(o,n.shape,r,1,a,s,!1,d),f=It.runKernelFunc((function(e,t){var r=e.conv2dDerInput(u,n,p);return t([n,u]),r}),{dy4D:u,filter:n},(function(e,t){var n=t[0],o=t[1];return{dy4D:function(){return Ql(e,n,r,a,i,1,s)},filter:function(){return Zl(e,o,n.shape,r,a,i,s)}}}));return l?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function Kl(e){var t=function(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function Xl(e,t,n,r,a){he(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var i=e,s=t,o=!1;4===t.rank&&(o=!0,s=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]),i=[1,e[0],e[1],e[2],e[3]]);var u=i[4],l=s.shape[4];he(5===i.length,(function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+i.length+"."})),he(5===s.rank,(function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+s.rank})),he(5===n.rank,(function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank})),he(u===n.shape[3],(function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+n.shape[3]+"."})),he(l===n.shape[4],(function(){return"Error in conv3dDerInput: depth of output ("+l+") must match output depth for filter "+n.shape[4]+"."}));var c=di(i,n.shape,r,1,a),h=It.runKernelFunc((function(e){return e.conv3dDerInput(s,n,c)}),{dy5D:s});return o?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var Yl=qn({conv1d_:function(e,t,n,r,a,i,s){void 0===a&&(a="NWC"),void 0===i&&(i=1);var o=On(e,"x","conv1d"),u=On(t,"filter","conv1d"),l=o,c=!1;2===o.rank&&(c=!0,l=o.as3D(1,o.shape[0],o.shape[1])),he(3===l.rank,(function(){return"Error in conv1d: input must be rank 3, but got rank "+l.rank+"."})),he(3===u.rank,(function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."})),null!=s&&he(ve(r),(function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."})),he(l.shape[2]===u.shape[1],(function(){return"Error in conv1d: depth of input ("+l.shape[2]+") must match input depth for filter "+u.shape[1]+"."})),he(bi(n,i),(function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+n+" and dilation '"+i+"'"})),he("NWC"===a,(function(){return"Error in conv1d: got dataFormat of "+a+" but only NWC is currently supported."}));var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=l.as4D(l.shape[0],1,l.shape[1],l.shape[2]),p=Ql(d,h,[1,n],r,"NHWC",[1,i],s);return c?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),Ql=qn({conv2d_:function(e,t,n,r,a,i,s){void 0===a&&(a="NHWC"),void 0===i&&(i=[1,1]);var o=On(e,"x","conv2d"),u=On(t,"filter","conv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),he(4===l.rank,(function(){return"Error in conv2d: input must be rank 4, but got rank "+l.rank+"."})),he(4===u.rank,(function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."})),null!=s&&he(ve(r),(function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."}));var h="NHWC"===a?l.shape[3]:l.shape[1];he(h===u.shape[2],(function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."})),he(bi(n,i),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"}));var d=xi(a),p=hi(l.shape,u.shape,n,i,r,s,!1,d),f=[u,l],m=It.runKernelFunc((function(e,t){var n=e.conv2d(l,u,p);return t([u,l]),n}),{x:l,filter:u},(function(e,t){var s=t,o=s[0],u=s[1];return he(yi(i),(function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+i+"'"})),{x:function(){return ec(u.shape,e,o,n,r,a)},filter:function(){return Zl(u,e,o.shape,n,r,a)}}}),"Conv2D",p,f);return c?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Jl=qn({conv3d_:function(e,t,n,r,a,i){void 0===a&&(a="NDHWC"),void 0===i&&(i=[1,1,1]);var s=On(e,"x","conv3d"),o=On(t,"filter","conv3d"),u=s,l=!1;4===s.rank&&(l=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),he(5===u.rank,(function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."})),he(5===o.rank,(function(){return"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."})),he(u.shape[4]===o.shape[3],(function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+o.shape[3]+"."})),he(function(e,t){return Kl(e)||Kl(t)}(n,i),(function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),he("NDHWC"===a,(function(){return"Error in conv3d: got dataFormat of "+a+" but only NDHWC is currently supported."}));var c=di(u.shape,o.shape,n,i,r),h=It.runKernelFunc((function(e,t){var n=e.conv3d(u,o,c);return t([u,o]),n}),{x:u,$filter:o},(function(e,t){he(Kl(i),(function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+i+"'"}));var a=t[0],s=t[1];return{x:function(){return Xl(a.shape,e,s,n,r)},$filter:function(){return function(e,t,n,r,a){var i=e;4===e.rank&&(i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]));var s=t;4===s.rank&&(s=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3])),he(5===i.rank,(function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+i.shape+"."})),he(5===s.rank,(function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+s.shape+"."})),he(5===n.length,(function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."})),he(i.shape[4]===n[3],(function(){return"Error in conv3dDerFilter: depth of input "+i.shape[4]+") must match input depth in filter ("+n[3]+"."})),he(s.shape[4]===n[4],(function(){return"Error in conv3dDerFilter: depth of dy ("+s.shape[4]+") must match output depth for filter ("+n[4]+")."}));var o=di(i.shape,n,r,1,a);return It.runKernelFunc((function(e){return e.conv3dDerFilter(i,s,o)}),{x5D:i,dy5D:s})}(a,e,s.shape,n,r)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Zl=qn({conv2dDerFilter_:function(e,t,n,r,a,i,s){void 0===i&&(i="NHWC");var o=e;3===e.rank&&(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var u=t;3===u.rank&&(u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),he(4===o.rank,(function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."})),he(4===u.rank,(function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."})),he(4===n.length,(function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."}));var l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];he(l===n[2],(function(){return"Error in conv2dDerFilter: depth of input "+l+") must match input depth in filter ("+n[2]+"."})),he(c===n[3],(function(){return"Error in conv2dDerFilter: depth of dy ("+c+") must match output depth for filter ("+n[3]+")."})),null!=s&&he(ve(a),(function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var h=xi(i),d=hi(o.shape,n,r,1,a,s,!1,h);return It.runKernelFunc((function(e){return e.conv2dDerFilter(o,u,d)}),{x4D:o,dy4D:u})}}),ec=qn({conv2dDerInput_:ql}),tc=qn({depthwiseConv2d_:function(e,t,n,r,a,i,s){void 0===i&&(i=[1,1]);var o=On(e,"x","depthwiseConv2d"),u=On(t,"filter","depthwiseConv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),he(4===l.rank,(function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+l.rank+"."})),he(4===u.rank,(function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."})),he(l.shape[3]===u.shape[2],(function(){return"Error in depthwiseConv2d: number of input channels ("+l.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."})),null==i&&(i=[1,1]),he(bi(n,i),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),null!=s&&he(ve(r),(function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."}));var h=hi(l.shape,u.shape,n,i,r,s,!0),d=[l,u],p=It.runKernelFunc((function(e,t){var n=e.depthwiseConv2D(l,u,h);return t([l,u]),n}),{x:l,filter:u},(function(e,t){he(yi(i),(function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+i+"'"}));var n=t[0],r=t[1];return{x:function(){return nc(n.shape,e,r,h)},filter:function(){return rc(n,e,r.shape,h)}}}),"DepthwiseConv2dNative",h,d);return c?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),nc=qn({depthwiseConv2dDerInput_:function(e,t,n,r){var a=t,i=!1;3===t.rank&&(i=!0,a=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var s=It.runKernelFunc((function(e){return e.depthwiseConv2DDerInput(a,n,r)}),{dy4D:a});return i?s.as3D(s.shape[1],s.shape[2],s.shape[3]):s}}),rc=qn({depthwiseConv2dDerFilter_:function(e,t,n,r){var a=e;3===e.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var i=t;return 3===i.rank&&(i=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),It.runKernelFunc((function(e){return e.depthwiseConv2DDerFilter(a,i,r)}),{x4D:a,dy4D:i})}}),ac=qn({separableConv2d_:function(e,t,n,r,a,i,s){void 0===i&&(i=[1,1]),void 0===s&&(s="NHWC");var o=On(e,"x","separableConv2d"),u=On(t,"depthwiseFilter","separableConv2d"),l=On(n,"pointwiseFilter","separableConv2d"),c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");he(4===c.rank,(function(){return"Error in separableConv2d: input must be rank 4, but got rank "+c.rank+"."})),he(4===u.rank,(function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."})),he(4===l.rank,(function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."})),he(1===l.shape[0],(function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+l.shape[0]+"."})),he(1===l.shape[1],(function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+l.shape[1]+"."}));var d=u.shape[2],p=u.shape[3];he(l.shape[2]===d*p,(function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+d*p+", but got "+l.shape[2]+"."}));var f=tc(c,u,r,a,s,i),m=Ql(f,l,1,"valid",s);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),ic=qn({conv2dTranspose_:function(e,t,n,r,a,i){return ql(n,On(e,"x","conv2dTranspose"),On(t,"filter","conv2dTranspose"),r,a,"NHWC",i)}}),sc=qn({conv3dTranspose_:function(e,t,n,r,a){return Xl(n,On(e,"x","conv3dTranspose"),On(t,"filter","conv3dTranspose"),r,a)}}),oc=qn({matMul_:function(e,t,n,r){var a;void 0===n&&(n=!1),void 0===r&&(r=!1);var i=On(e,"a","matMul"),s=On(t,"b","matMul");a=yt(i,s),i=a[0],s=a[1];var o=n?i.shape[i.rank-2]:i.shape[i.rank-1],u=r?s.shape[s.rank-1]:s.shape[s.rank-2],l=n?i.shape[i.rank-1]:i.shape[i.rank-2],c=r?s.shape[s.rank-2]:s.shape[s.rank-1],h=i.shape.slice(0,-2),d=s.shape.slice(0,-2),p=me(h),f=me(d);he(i.rank>=2&&s.rank>=2&&i.rank===s.rank,(function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+i.rank+" and "+s.rank+"."})),he(ge(h,d),(function(){return"Error in matMul: outer dimensions ("+h+") and ("+d+") of Tensors with shapes "+i.shape+" and "+s.shape+" must match."})),he(o===u,(function(){return"Error in matMul: inner shapes ("+o+") and ("+u+") of Tensors with shapes "+i.shape+" and "+s.shape+" and transposeA="+n+" and transposeB="+r+" must match."}));var m=i.shape.slice(0,-2).concat([l,c]),g=n?i.as3D(p,o,l):i.as3D(p,l,o),v=r?s.as3D(f,c,u):s.as3D(f,u,c),y={transposeA:n,transposeB:r};return It.runKernelFunc((function(e,t){var a=e.batchMatMul(g,v,n,r);return t([g,v]),a}),{a:g,b:v},(function(e,t){var a=t,i=a[0],s=a[1];return n||r?!n&&r?{a:function(){return e.matMul(s,!1,!1)},b:function(){return e.matMul(i,!0,!1)}}:n&&!r?{a:function(){return s.matMul(e,!1,!0)},b:function(){return i.matMul(e,!1,!1)}}:{a:function(){return s.matMul(e,!0,!0)},b:function(){return e.matMul(i,!0,!0)}}:{a:function(){return e.matMul(s,!1,!0)},b:function(){return i.matMul(e,!0,!1)}}}),"BatchMatMul",y).reshape(m)}}),uc=qn({dot_:function(e,t){var n=On(e,"t1","dot"),r=On(t,"t2","dot");he(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+n.rank+" and "+r.rank+"."}));var a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];return he(a===i,(function(){return"Error in dot: inner dimensions of inputs must match, but got "+a+" and "+i+"."})),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),lc=qn({outerProduct_:function(e,t){var n=On(e,"v1","outerProduct"),r=On(t,"v2","outerProduct");return he(1===n.rank&&1===r.rank,(function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+n.rank+" and "+r.rank+"."})),n.as2D(-1,1).matMul(r.as2D(1,-1))}}),cc=qn({reverse_:function(e,t){var n=On(e,"x","reverse");if(0===n.rank)return n.clone();var r=Ie(t,n.shape);return It.runKernelFunc((function(e){return e.reverse(n,r)}),{$x:n},(function(e){return{$x:function(){return e.reverse(r)}}})).reshapeAs(n)}}),hc=qn({reverse1d_:function(e){var t=On(e,"x","reverse");return he(1===t.rank,(function(){return"Error in reverse1D: x must be rank 1 but got rank "+t.rank+"."})),cc(t,0)}}),dc=qn({reverse2d_:function(e,t){var n=On(e,"x","reverse");return he(2===n.rank,(function(){return"Error in reverse2D: x must be rank 2 but got rank "+n.rank+"."})),cc(n,t)}}),pc=qn({reverse3d_:function(e,t){var n=On(e,"x","reverse");return he(3===n.rank,(function(){return"Error in reverse3D: x must be rank 3 but got rank "+n.rank+"."})),cc(n,t)}}),fc=qn({reverse4d_:function(e,t){var n=On(e,"x","reverse");return he(4===n.rank,(function(){return"Error in reverse4D: x must be rank 4 but got rank "+n.rank+"."})),cc(n,t)}});function mc(e,t,n,r,a,i){var s=On(e,"x","maxPool"),o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),null==r&&(r=[1,1]),he(4===o.rank,(function(){return"Error in maxPool: input must be rank 4 but got rank "+o.rank+"."})),he(bi(n,r),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"})),null!=i&&he(ve(a),(function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var l=li(o.shape,t,n,r,a,i);if(1===l.filterWidth&&1===l.filterHeight&&ge(l.inShape,l.outShape))return s.clone();var c=[o],h=It.runKernelFunc((function(e,t){var n=e.maxPool(o,l);return t([o,n]),n}),{x:o},(function(e,i){var s=i[0],o=i[1];return{x:function(){return function(e,t,n,r,a,i,s,o){var u=On(e,"dy","maxPoolBackprop"),l=On(t,"input","maxPoolBackprop"),c=On(n,"output","maxPoolBackprop");he(l.rank===u.rank,(function(){return"Rank of input ("+l.rank+") does not match rank of dy ("+u.rank+")"})),null==i&&(i=[1,1]),he(bi(a,i),(function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'"})),he(4===u.rank,(function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."})),he(4===l.rank,(function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."}));var h=li(l.shape,r,a,i,s,o);return It.runKernelFunc((function(e){return e.maxPoolBackprop(u,l,c,h)}),{$dy:u,$input:l})}(e,s,o,t,n,r,a)}}}),"MaxPool",l,c);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function gc(e,t,n,r,a,i){var s=On(e,"x","avgPool","float32");null==r&&(r=[1,1]),he(bi(n,r),(function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"}));var o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),he(4===o.rank,(function(){return"Error in avgPool: x must be rank 4 but got rank "+o.rank+"."})),null!=i&&he(ve(a),(function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var l=li(o.shape,t,n,r,a,i);if(1===l.filterWidth&&1===l.filterHeight&&ge(l.inShape,l.outShape))return s.clone();var c=It.runKernelFunc((function(e){return e.avgPool(o,l)}),{x:o},(function(e){return{x:function(){return function(e,t,n,r,a,i){var s=On(e,"dy","avgPoolBackprop"),o=On(t,"input","avgPoolBackprop");he(o.rank===s.rank,(function(){return"Rank of input ("+o.rank+") does not match rank of dy ("+s.rank+")"})),null==a&&(a=[1,1]),he(bi(r,a),(function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"}));var u=o,l=s,c=!1;3===o.rank&&(c=!0,u=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]),l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),he(4===l.rank,(function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."})),he(4===u.rank,(function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+"."}));var h=li(u.shape,n,r,a,i),d=It.runKernelFunc((function(e){return e.avgPoolBackprop(l,u,h)}),{dy4D:l,input4D:u});return c?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}(e,o,t,n,r,a)}}}),"AvgPool",l);return c=c.cast(s.dtype),u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}var vc=qn({maxPool_:function(e,t,n,r,a){return mc(e,t,n,1,r,a)}}),yc=qn({avgPool_:function(e,t,n,r,a){return gc(e,t,n,1,r,a)}}),bc=qn({pool_:function(e,t,n,r,a,i){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");var s=On(e,"x","maxPool"),o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),he(bi(i,a),(function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+i+" and dilations '"+a+"'"}));var l,c=li(o.shape,t,i,a,r),h=[c.dilationHeight,c.dilationWidth];l="same"===r?function(e,t){var n=e.map((function(e,n){return e+(e-1)*(t[n]-1)})).map((function(e){return e-1})),r=n.map((function(e){return Math.floor(e/2)})),a=n.map((function(e,t){return e-r[t]}));return n.map((function(e,t){return[r[t],a[t]]}))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];var d=1===h[0]&&1===h[1],p=function(e,t,n){var r=n.map((function(e){return e[0]})),a=n.map((function(e){return e[1]})),i=e.concat(r,a),s=t.map((function(e,t){return(e-i[t]%e)%e})),o=a.map((function(e,t){return e+s[t]}));return[t.map((function(e,t){return[r[t],o[t]]})),t.map((function(e,t){return[0,s[t]]}))]}([c.inHeight,c.inWidth],h,l),f=p[0],m=p[1],g=d?r:"valid",v=d?o:Cr(o,h,f),y=("avg"===n?function(){return gc(v,t,i,1,g)}:function(){return mc(v,t,i,1,g)})(),b=d?y:yr(y,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),xc=qn({maxPool3d_:function(e,t,n,r,a,i,s){void 0===i&&(i="NDHWC");var o=On(e,"x","maxPool3d"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==s&&(s=[1,1,1]),he(5===u.rank,(function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."})),he("NDHWC"===i,(function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+i})),he(bi(n,s),(function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=a&&he(ve(r),(function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=ci(u.shape,t,n,s,r,a,i),h=It.runKernelFunc((function(e,t){var n=e.maxPool3d(u,c);return t([u,n]),n}),{x:u},(function(e,i){var o=i[0],u=i[1];return{x:function(){return function(e,t,n,r,a,i,s,o){var u=On(e,"dy","maxPool3dBackprop"),l=On(t,"input","maxPool3dBackprop"),c=On(n,"output","maxPool3dBackprop"),h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),d=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),p=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3])),he(5===h.rank,(function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."})),he(5===d.rank,(function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."})),he(5===p.rank,(function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."})),null==i&&(i=[1,1,1]),he(bi(a,i),(function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'"})),null!=o&&he(ve(s),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."}));var m=ci(d.shape,r,a,i,s,o),g=It.runKernelFunc((function(e){return e.maxPool3dBackprop(h,d,p,m)}),{dy5D:h,input5D:d});return f?g.as4D(g.shape[1],g.shape[2],g.shape[3],g.shape[4]):g}(e,o,u,t,n,s,r,a)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),wc=qn({avgPool3d_:function(e,t,n,r,a,i,s){void 0===i&&(i="NDHWC");var o=On(e,"x","avgPool3d","float32"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==s&&(s=[1,1,1]),he(5===u.rank,(function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."})),he("NDHWC"===i,(function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+i})),he(bi(n,s),(function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=a&&he(ve(r),(function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=ci(u.shape,t,n,s,r,a,i),h=It.runKernelFunc((function(e){return e.avgPool3d(u,c)}),{x:u},(function(e){return{x:function(){return function(e,t,n,r,a,i,s){var o=On(e,"dy","avgPool3dBackprop"),u=On(t,"input","avgPool3dBackprop"),l=o,c=u,h=!1;4===u.rank&&(h=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),he(5===l.rank,(function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."})),he(5===c.rank,(function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."})),null==a&&(a=[1,1,1]),he(bi(r,a),(function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"})),null!=s&&he(ve(i),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+i+"."}));var d=ci(c.shape,n,r,a,i,s),p=It.runKernelFunc((function(e){return e.avgPool3dBackprop(l,c,d)}),{dy5D:l,input5D:c});return h?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}(e,u,t,n,s,r,a)}}}));return h=h.cast(u.dtype),l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),kc=qn({maxPoolWithArgmax_:function(e,t,n,r,a){void 0===a&&(a=!1);var i=On(e,"x","maxPoolWithArgmax"),s={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=It.runKernel("MaxPoolWithArgmax",{x:i},s);return{result:o[0],indexes:o[1]}}}),Ic=qn({slice_:function(e,t,n){var r,a,i=On(e,"x","slice");if(0===i.rank)throw new Error("Slicing scalar is not possible");(r="number"==typeof t?[t].concat(new Array(i.rank-1).fill(0)):t.length<i.rank?t.concat(new Array(i.rank-t.length).fill(0)):t.slice()).forEach((function(e){he(-1!==e,(function(){return"slice() does not support negative begin indexing."}))})),a=(a=null==n?new Array(i.rank).fill(-1):"number"==typeof n?[n].concat(new Array(i.rank-1).fill(-1)):n.length<i.rank?n.concat(new Array(i.rank-n.length).fill(-1)):n).map((function(e,t){return e>=0?e:(he(-1===e,(function(){return"Negative size values should be exactly -1 but got "+e+" for the slice() size at index "+t+"."})),i.shape[t]-r[t])})),Xa(i,r,a);var s=i.shape,o={begin:r,size:a};return It.runKernelFunc((function(e){return e.slice(i,r,a)}),{x:i},(function(e){for(var t=[],n=0;n<e.rank;n++)t.push([r[n],s[n]-r[n]-a[n]]);return{x:function(){return pl(e,t)}}}),"Slice",o)}}),Cc=qn({slice1d_:function(e,t,n){var r=On(e,"x","slice1d");return he(1===r.rank,(function(){return"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"})),Ic(r,[t],[n])}}),Sc=qn({slice2d_:function(e,t,n){var r=On(e,"x","slice2d");return he(2===r.rank,(function(){return"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"})),Ic(r,t,n)}}),Nc=qn({slice3d_:function(e,t,n){var r=On(e,"x","slice3d");return he(3===r.rank,(function(){return"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"})),Ic(r,t,n)}}),Tc=qn({slice4d_:function(e,t,n){var r=On(e,"x","slice4d");return he(4===r.rank,(function(){return"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"})),Ic(r,t,n)}});function Ec(e,t,n,r,a){return t.rank<n.rank&&(t=t.reshape(zn(t.shape,r))),e.rank<n.rank&&(e=e.reshape(zn(e.shape,r))),{x:function(){var r=e.mul(n.equal(t).cast(e.dtype));return null==a?r:r.transpose(a)}}}var Rc=qn({all_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","all","bool"),a=Ie(t,r.shape),i=a,s=Vn(i,r.rank);null!=s&&(r=r.transpose(s),i=Gn(i.length,r.rank));var o=It.runKernelFunc((function(e){return e.all(r,i)}),{$x:r});if(n){var u=zn(o.shape,a);return o.reshape(u)}return o}}),Ac=qn({any_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","any","bool"),a=Ie(t,r.shape),i=a,s=Vn(i,r.rank);null!=s&&(r=r.transpose(s),i=Gn(i.length,r.rank));var o=It.runKernelFunc((function(e){return e.any(r,i)}),{$x:r});if(n){var u=zn(o.shape,a);return o.reshape(u)}return o}}),Dc=qn({argMax_:function(e,t){void 0===t&&(t=0);var n=On(e,"x","argMax");null==t&&(t=0);var r=Ie(t,n.shape),a=Vn(r,n.rank);null!=a&&(n=n.transpose(a),r=Gn(r.length,n.rank));var i={axis:r[0]},s=[n];return It.runKernelFunc((function(e,t){var a=e.argMax(n,r[0]);return t([n]),a}),{x:n},(function(e,t){var n=t[0];return{x:function(){return cr(n)}}}),"ArgMax",i,s)}}),Fc=qn({argMin_:function(e,t){void 0===t&&(t=0);var n=On(e,"x","argMin");null==t&&(t=0);var r=Ie(t,n.shape),a=Vn(r,n.rank);return null!=a&&(n=n.transpose(a),r=Gn(r.length,n.rank)),It.runKernelFunc((function(e,t){var a=e.argMin(n,r[0]);return t([n]),a}),{$x:n},(function(e,t){var n=t[0];return{$x:function(){return cr(n)}}}))}}),_c=qn({logSumExp_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","logSumExp"),a=Ie(t,r.shape),i=r.max(a,!0),s=r.sub(i).exp().sum(a).log(),o=i.reshape(s.shape).add(s);if(n){var u=zn(o.shape,a);return o.reshape(u)}return o}}),$c=qn({max_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","max"),a=r,i=Ie(t,r.shape),s=i,o=Vn(s,r.rank);null!=o&&(r=r.transpose(o),s=Gn(s.length,r.rank));var u=[r],l=It.runKernelFunc((function(e,t){var n=e.max(r,s);return t([a,n]),n}),{x:r},(function(e,t){return Ec(e,t[1],t[0],i,o)}),"Max",{axes:s},u,[!0]);if(n){var c=zn(l.shape,i);l=l.reshape(c)}return l}}),Oc=qn({mean_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","mean"),a=Ie(t,r.shape),i=me(Bn(r.shape,a)[1]);return ni((function(e){var r=Zn(i);return{value:(r.dtype===e.dtype?e:e.cast(r.dtype)).div(r).sum(t,n),gradFunc:function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(ar(e.shape,"float32")).div(i)}}}))(r)}}),Mc=qn({min_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","min"),a=r,i=Ie(t,r.shape),s=i,o=Vn(s,r.rank);null!=o&&(r=r.transpose(o),s=Gn(s.length,r.rank));var u=[r],l=It.runKernelFunc((function(e,t){var n=e.min(r,s);return t([a,n]),n}),{x:r},(function(e,t){return Ec(e,t[1],t[0],i,o)}),"Min",{axes:s},u,[!0]);if(n){var c=zn(l.shape,i);l=l.reshape(c)}return l}}),Lc=qn({moments_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Ie(t,(e=On(e,"x","moments")).shape),a=e.mean(r,n),i=a.shape;n||(i=zn(a.shape,r));var s=e.toFloat().sub(a.reshape(i)).square();return{mean:a,variance:s.mean(r,n)}}}),Pc=qn({sum_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","sum");"bool"===r.dtype&&(r=r.toInt());var a=Ie(t,r.shape);return ni((function(e){var t=Vn(a,e.rank),r=a,i=e;null!=t&&(i=e.transpose(t),r=Gn(r.length,e.rank));var s=function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(ar(e.shape,"float32"))},o={axes:r},u=It.runKernelFunc((function(e){return e.sum(i,r)}),{x:i},(function(e){return{x:function(){return s(e)}}}),"Sum",o);if(n){var l=zn(u.shape,a);u=u.reshape(l)}return{value:u,gradFunc:s}}))(r)}}),Bc=qn({prod_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=On(e,"x","prod");"bool"===r.dtype&&(r=r.toInt());var a=Ie(t,r.shape),i=Vn(a,r.rank),s=a,o=r;null!=i&&(o=r.transpose(i),s=Gn(s.length,r.rank));var u=It.runKernelFunc((function(e){return e.prod(o,s)}),{permutedX:o});if(n){var l=zn(u.shape,a);u=u.reshape(l)}return u}}),zc=qn({elu_:function(e){var t=On(e,"x","elu");return It.runKernelFunc((function(e,n){var r=e.elu(t);return n([r]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return It.runKernelFunc((function(t){return t.eluDer(e,n)}),{dy:e,y:n})}}}))}}),Wc=qn({leakyRelu_:function(e,t){void 0===t&&(t=.2);var n=On(e,"x","leakyRelu");return Ra(Zn(t).mul(n),n)}}),Vc=qn({prelu_:function(e,t){var n=On(e,"x","prelu"),r=On(t,"alpha","prelu");return It.runKernelFunc((function(e,t){var a=e.prelu(n,r);return t([n,r]),a}),{x:n,alpha:r},(function(e,t){var n=t[0],r=t[1],a=n.greater(0);return{x:function(){return sl(a,e,e.mul(r))},alpha:function(){var t=sl(a,cr(e),e.mul(n)),i=Ur(r.shape,e.shape);return i.length>0&&(t=t.sum(i)),t.reshape(r.shape)}}}),"Prelu")}}),Uc=qn({relu_:function(e){var t=On(e,"x","relu");return"bool"===t.dtype?t.toInt():It.runKernelFunc((function(e,n){var r=e.relu(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mulStrict(n.step().toFloat())}}}),"Relu")}}),Gc=qn({relu6_:function(e){var t=On(e,"x","relu6");return"bool"===t.dtype?t.toInt():It.runKernelFunc((function(e,n){var r=e.relu6(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0],r=n.lessEqual(6).mul(n.step());return{x:function(){return e.mulStrict(r.toFloat())}}}),"Relu6")}}),Hc=qn({selu_:function(e){var t=On(e,"x","selu");return It.runKernelFunc((function(e,n){var r=e.selu(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){var t=n.greater(Zn(0)),r=Zn(Jo),a=Zn(Zo),i=e.mul(a),s=e.mul(r).mul(n.toFloat().exp());return sl(t,i,s)}}}))}}),jc=qn({localResponseNormalization_:function(e,t,n,r,a){void 0===t&&(t=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===a&&(a=.5);var i=On(e,"x","localResponseNormalization");he(4===i.rank||3===i.rank,(function(){return"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank "+i.rank+"."})),he(ve(t),(function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+t+"."}));var s=i,o=!1;3===i.rank&&(o=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2]));var u=It.runKernelFunc((function(e,i){var o=e.localResponseNormalization4D(s,t,n,r,a);return i([s,o]),o}),{x4D:s},(function(e,i){var s=i[0],o=i[1];return{x4D:function(){return It.runKernelFunc((function(i){return i.LRNGrad(e,s,o,t,n,r,a)}),{})}}}));return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),qc=qn({norm_:function(e,t,n,r){void 0===t&&(t="euclidean"),void 0===n&&(n=null),void 0===r&&(r=!1);var a=function e(t,n,r){if(void 0===r&&(r=null),0===t.rank)return t.abs();if(1!==t.rank&&null===r)return e(t.reshape([-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return t.abs().sum(r);if(n===1/0)return t.abs().max(r);if(n===-1/0)return t.abs().min(r);if("euclidean"===n||2===n)return t.abs().pow(Zn(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return t.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return t.abs().sum(r[1]).max(r[0]);if(n===-1/0)return t.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return t.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=On(e,"x","norm"),t,n),i=a.shape;if(r){var s=Ie(n,e.shape);i=zn(a.shape,s)}return a.reshape(i)}}),Kc=qn({basicLSTMCell_:function(e,t,n,r,a,i){var s=On(e,"forgetBias","basicLSTMCell"),o=On(t,"lstmKernel","basicLSTMCell"),u=On(n,"lstmBias","basicLSTMCell"),l=On(r,"data","basicLSTMCell"),c=On(a,"c","basicLSTMCell"),h=On(i,"h","basicLSTMCell"),d=l.concat(h,1).matMul(o).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),v=d.slice([0,f],m),y=d.slice([0,2*f],m),b=d.slice([0,3*f],m),x=g.sigmoid().mulStrict(v.tanh()).addStrict(c.mulStrict(s.add(y).sigmoid())),w=x.tanh().mulStrict(b.sigmoid());return[x,w]}}),Xc=qn({multiRNNCell_:function(e,t,n,r){for(var a=On(t,"data","multiRNNCell"),i=Mn(n,"c","multiRNNCell"),s=Mn(r,"h","multiRNNCell"),o=a,u=[],l=0;l<e.length;l++){var c=e[l](o,i[l],s[l]);u.push(c[0]),u.push(c[1]),o=c[1]}var h=[],d=[];for(l=0;l<u.length;l+=2)h.push(u[l]),d.push(u[l+1]);return[h,d]}}),Yc=qn({movingAverage_:function(e,t,n,r,a){void 0===a&&(a=!0);var i=On(e,"v","movingAverage"),s=On(t,"x","movingAverage"),o=On(n,"decay","movingAverage");bt(i,s),he(ge(i.shape,s.shape),(function(){return"Shape mismatch in v and x"}));var u=Zn(1),l=u.sub(o),c=s.sub(i).mul(l);if(a){he(null!=r,(function(){return"When using zeroDebias: true, step is required."}));var h=On(r,"step","movingAverage");c=c.div(u.sub(La(o,h)))}return i.add(c)}}),Qc=qn({stridedSlice_:function(e,t,n,r,a,i,s,o,u){if(void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===o&&(o=0),void 0===u&&(u=0),null==r&&(r=new Array(t.length)),0!==s)throw new Error("ellipsis mask is not yet supported");var l=On(e,"x","stridedSlice"),c=Ya(o),h=l.shape.slice();c.forEach((function(e){t[e]=0,n[e]=1,h.splice(e,0,1)})),l=l.reshape(h);for(var d=0;d<l.rank;d++)t[d]=Ja(a,t,r,l.shape,d),n[d]=Za(i,n,r,l.shape,d),r[d]=r[d]||1;var p=Ya(u);p.forEach((function(e){n[e]=t[e]+1,r[e]=1}));var f=Qa(t,n,r),m=f.filter((function(e,t){return-1===p.indexOf(t)}));return r.every((function(e){return 1===e}))?Ic(l,t,f).reshape(m):It.runKernelFunc((function(e){return e.stridedSlice(l,t,n,r)}),{$x:l}).reshape(m)}}),Jc=qn({topk_:function(e,t,n){void 0===t&&(t=1),void 0===n&&(n=!0);var r=On(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");var a=r.shape[r.shape.length-1];if(t>a)throw new Error("'k' passed to topk() must be <= the last dimension ("+a+") but got "+t);var i=It.runKernelFunc((function(e){return e.topk(r,t,n)}),{$x:r});return{values:i[0],indices:i[1]}}}),Zc=qn({scatterND_:function(e,t,n){var r=On(e,"indices","scatterND","int32"),a=On(t,"updates","scatterND");return qa(a,r,n),It.runKernelFunc((function(e){return e.scatterND(r,a,n)}),{indices:r,updates:a},null,"ScatterNd",{shape:n})}}),eh=qn({fft_:function(e){he("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return It.runKernelFunc((function(e){return e.fft(r)}),{input:e}).reshape(e.shape)}}),th=qn({ifft_:function(e){he("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return It.runKernelFunc((function(e){return e.ifft(r)}),{input:e}).reshape(e.shape)}}),nh=qn({rfft_:function(e,t){he("float32"===e.dtype,(function(){return"The dtype for rfft() must be real value but got "+e.dtype}));var n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){var i=e.shape.map((function(e){return 0})),s=e.shape.map((function(e){return e}));s[e.shape.length-1]=t,n=e.slice(i,s),r=t}else if(null!=t&&t>r){var o=e.shape.map((function(e){return e}));o[e.shape.length-1]=t-r,n=e.concat(ir(o),e.shape.length-1),r=t}else n=e;var u=n.zerosLike(),l=Kn(n,u).as2D(a,r),c=eh(l),h=Math.floor(r/2)+1,d=Xn(c),p=Yn(c),f=d.split([h,r-h],d.shape.length-1),m=p.split([h,r-h],p.shape.length-1),g=n.shape.slice();return g[n.shape.length-1]=h,Kn(f[0],m[0]).reshape(g)}}),rh=qn({irfft_:function(e){var t=e.shape[e.shape.length-1],n=e.size/t;if(t<=2){var r=e.as2D(n,t),a=th(r);return Xn(a)}var i=[n,2*(t-1)],s=Xn(e).as2D(n,t),o=Yn(e).as2D(n,t),u=s.slice([0,1],[n,t-2]).reverse(1),l=o.slice([0,1],[n,t-2]).reverse(1).mul(Zn(-1)),c=s.concat(u,1),h=o.concat(l,1);return r=Kn(c,h).as2D(i[0],i[1]),a=th(r),Xn(a)}}),ah=Object.freeze({fft:eh,ifft:th,rfft:nh,irfft:rh}),ih=qn({sparseToDense_:function(e,t,n,r){void 0===r&&(r=0);var a=On(e,"sparseIndices","sparseToDense","int32"),i=On(t,"sparseValues","sparseToDense"),s=On(r,"defaultValue","sparseToDense",i.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+e.shape+".");var a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error("outputShape has incorrect number of elements:, "+n.length+", should be: "+i+".");var s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error("sparseValues has incorrect shape "+t.shape+", should be [] or ["+a+"]");if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,n,s),It.runKernelFunc((function(e){return e.sparseToDense(a,i,n,s)}),{$sparseIndices:a,$sparseValues:i,$defaultValue:s})}}),sh=qn({gatherND_:function(e,t){var n=On(t,"indices","gatherND","int32"),r=On(e,"x","gatherND");return It.runKernelFunc((function(e){return e.gatherND(r,n)}),{x:r,indices:n},null,"GatherNd")}}),oh=qn({diag_:function(e){var t=On(e,"x","diag").flatten(),n=e.shape.concat(e.shape);return It.runKernelFunc((function(e){return e.diag(t)}),{$x:t}).reshape(n)}}),uh=qn({dropout_:function(e,t,n,r){var a=On(e,"x","dropout");if(he("float32"===a.dtype,(function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+a.dtype+" tensor instead."})),he(t>=0&&t<1,(function(){return"rate must be a float in the range [0, 1), but got "+t+"."})),0===t)return e instanceof ot?a.clone():a;var i=function(e,t){if(null==t)return e.shape.slice();if(ge(e.shape,t))return t;if(e.shape.length===t.length){for(var n=[],r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=Tl(i,0,1,"float32",r).add(s).floor().div(s);return a.mul(o)}});function lh(e,t,n){for(var r=1-e%2,a=new Float32Array(e),i=0;i<e;++i){var s=2*Math.PI*i/(e+r-1);a[i]=t-n*Math.cos(s)}return er(a,"float32")}var ch,hh=qn({hannWindow_:function(e){return lh(e,.5,.5)}}),dh=qn({hammingWindow_:function(e){return lh(e,.54,.46)}}),ph=qn({frame_:function(e,t,n,r,a){void 0===r&&(r=!1),void 0===a&&(a=0);for(var i=0,s=[];i+t<=e.size;)s.push(Ic(e,i,t)),i+=n;if(r)for(;i<e.size;){var o=i+t-e.size,u=hr([Ic(e,i,t-o),sr([o],a)]);s.push(u),i+=n}return 0===s.length?tr([],[0,t]):hr(s).as2D(s.length,t)}}),fh=qn({stft_:function(e,t,n,r,a){var i;void 0===a&&(a=hh),null==r&&(i=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));for(var s=ph(e,t,n),o=Oa(s,a(t)),u=[],l=0;l<s.shape[0];l++)u.push(nh(o.slice([l,0],[1,t]),r));return hr(u)}}),mh=Object.freeze({hannWindow:hh,hammingWindow:dh,frame:ph,stft:fh});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ch||(ch={}));var gh=qn({absoluteDifference_:function(e,t,n,r){void 0===r&&(r=ch.SUM_BY_NONZERO_WEIGHTS);var a=On(e,"labels","absoluteDifference"),i=On(t,"predictions","absoluteDifference"),s=null;null!=n&&(s=On(n,"weights","absoluteDifference")),de(a.shape,i.shape,"Error in absoluteDifference: ");var o=a.sub(i).abs();return vh(o,s,r)}}),vh=qn({computeWeightedLoss_:function(e,t,n){void 0===n&&(n=ch.SUM_BY_NONZERO_WEIGHTS);var r=On(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=On(t,"weights","computeWeightedLoss"));var i=null==a?r:r.mul(a);if(n===ch.NONE)return i;if(n===ch.SUM)return i.sum();if(n===ch.MEAN){if(null==a)return i.mean();var s=r.size/a.size,o=i.sum().div(a.sum());return s>1?o.div(Zn(s)):o}if(n===ch.SUM_BY_NONZERO_WEIGHTS){if(null==a)return i.sum().div(Zn(r.size));var u=a.mul(ar(r.shape)).notEqual(Zn(0)).sum().toFloat();return i.sum().div(u)}throw Error("Unknown reduction: "+n)}}),yh=qn({cosineDistance_:function(e,t,n,r,a){void 0===a&&(a=ch.SUM_BY_NONZERO_WEIGHTS);var i=On(e,"labels","cosineDistance"),s=On(t,"predictions","cosineDistance"),o=null;null!=r&&(o=On(r,"weights","cosineDistance")),de(i.shape,s.shape,"Error in cosineDistance: ");var u=Zn(1).sub(i.mul(s).sum(n,!0));return vh(u,o,a)}}),bh=qn({hingeLoss_:function(e,t,n,r){void 0===r&&(r=ch.SUM_BY_NONZERO_WEIGHTS);var a=On(e,"labels","hingeLoss"),i=On(t,"predictions","hingeLoss"),s=null;null!=n&&(s=On(n,"weights","hingeLoss")),de(a.shape,i.shape,"Error in hingeLoss: ");var o=Zn(1);a=Zn(2).mul(a).sub(o);var u=o.sub(a.mul(i)).relu();return vh(u,s,r)}}),xh=qn({huberLoss_:function(e,t,n,r,a){void 0===r&&(r=1),void 0===a&&(a=ch.SUM_BY_NONZERO_WEIGHTS);var i=On(e,"labels","huberLoss"),s=On(t,"predictions","huberLoss"),o=null;null!=n&&(o=On(n,"weights","huberLoss")),de(i.shape,s.shape,"Error in huberLoss: ");var u=Zn(r),l=s.sub(i).abs(),c=Da(l,u),h=l.sub(c),d=Zn(.5).mul(c.square()).add(u.mul(h));return vh(d,o,a)}}),wh=qn({logLoss_:function(e,t,n,r,a){void 0===r&&(r=1e-7),void 0===a&&(a=ch.SUM_BY_NONZERO_WEIGHTS);var i=On(e,"labels","logLoss"),s=On(t,"predictions","logLoss"),o=null;null!=n&&(o=On(n,"weights","logLoss")),de(i.shape,s.shape,"Error in logLoss: ");var u=Zn(1),l=Zn(r),c=i.mul(s.add(l).log()).neg().sub(u.sub(i).mul(u.sub(s).add(l).log()));return vh(c,o,a)}}),kh=qn({meanSquaredError_:function(e,t,n,r){void 0===r&&(r=ch.SUM_BY_NONZERO_WEIGHTS);var a=On(e,"labels","meanSquaredError"),i=On(t,"predictions","meanSquaredError"),s=null;null!=n&&(s=On(n,"weights","meanSquaredError")),de(a.shape,i.shape,"Error in meanSquaredError: ");var o=a.squaredDifference(i);return vh(o,s,r)}}),Ih=qn({sigmoidCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=ch.SUM_BY_NONZERO_WEIGHTS);var i=On(e,"multiClassLabels","sigmoidCrossEntropy"),s=On(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=On(n,"weights","sigmoidCrossEntropy")),de(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=Zn(r),l=Zn(1),c=Zn(.5);i=i.mul(l.sub(u)).add(c.mul(u))}var h=function(e,t){var n=On(e,"labels","sigmoidCrossEntropyWithLogits"),r=On(t,"logits","sigmoidCrossEntropyWithLogits");de(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");var a=r.relu(),i=r.mul(n),s=r.abs().neg().exp().log1p();return a.sub(i).add(s)}(i,s);return vh(h,o,a)}}),Ch=qn({softmaxCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=ch.SUM_BY_NONZERO_WEIGHTS);var i=On(e,"onehotLabels","softmaxCrossEntropy"),s=On(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=On(n,"weights","softmaxCrossEntropy")),de(i.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){var u=Zn(r),l=Zn(1),c=Zn(i.shape[1]);i=i.mul(l.sub(u)).add(u.div(c))}var h=function(e,t,n){if(void 0===n&&(n=-1),-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+t.rank+" and dim was "+n);return ni((function(e,t,r){var a=t.logSumExp([n],!0),i=t.toFloat().sub(a);return r([e,i]),{value:i.mul(e).neg().sum([n]),gradFunc:function(e,t){var r=t[0],a=t[1],i=zn(e.shape,[n]);return[e.reshape(i).mul(r.toFloat().sub(a.exp())),e.reshape(i).mul(a.exp().sub(r.toFloat()))]}}}))(e,t)}(i,s);return vh(h,o,a)}}),Sh=Object.freeze({get Reduction(){return ch},absoluteDifference:gh,computeWeightedLoss:vh,cosineDistance:yh,hingeLoss:bh,huberLoss:xh,logLoss:wh,meanSquaredError:kh,sigmoidCrossEntropy:Ih,softmaxCrossEntropy:Ch});function Nh(e,t){return void 0===t&&(t=!1),It.tidy((function(){if(2!==e.shape.length)throw new Error("qr2d() requires a 2D Tensor, but got a "+e.shape.length+"D Tensor.");for(var n=e.shape[0],r=e.shape[1],a=cl(n),i=e.clone(),s=tr([[1]],[1,1]),o=s.clone(),u=n>=r?r:n,l=function(e){var t,u=i,l=o,c=a;t=It.tidy((function(){var t=i.slice([e,e],[n-e,1]),u=t.norm(),l=i.slice([e,e],[1,1]),c=tr([[-1]]).where(l.greater(0),tr([[1]])),h=l.sub(c.mul(u)),d=t.div(h);o=1===d.shape[0]?s.clone():s.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);var p=c.matMul(h).div(u).neg(),f=i.slice([e,0],[n-e,r]),m=p.mul(o),g=o.transpose();if(0===e)i=f.sub(m.matMul(g.matMul(f)));else{var v=f.sub(m.matMul(g.matMul(f)));i=i.slice([0,0],[e,r]).concat(v,0)}var y=m.transpose(),b=a.slice([0,e],[n,a.shape[1]-e]);if(0===e)a=b.sub(b.matMul(o).matMul(y));else{var x=b.sub(b.matMul(o).matMul(y));a=a.slice([0,0],[n,e]).concat(x,1)}return[o,i,a]})),o=t[0],i=t[1],a=t[2],Dn([u,l,c])},c=0;c<u;++c)l(c);return!t&&n>r&&(a=a.slice([0,0],[n,r]),i=i.slice([0,0],[r,r])),[a,i]}))}var Th=qn({bandPart_:function(e,t,n){if(t%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+t+".");if(n%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+n+".");var r=On(e,"a","bandPart");if(r.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+r.rank+".");var a=r.shape,i=r.shape.slice(-2),s=i[0],o=i[1];if(!(t<=s))throw new Error("bandPart(): numLower ("+t+") must not be greater than the number of rows ("+s+").");if(!(n<=o))throw new Error("bandPart(): numUpper ("+n+") must not be greater than the number of columns ("+o+").");t<0&&(t=s),n<0&&(n=o);var u=ur(0,s,1,"int32").reshape([-1,1]),l=ur(0,o,1,"int32"),c=za(u,l),h=nl(c.lessEqual(Zn(+t,"int32")),c.greaterEqual(Zn(-n,"int32"))),d=ir([s,o],r.dtype);return Nr(Tr(r.reshape([-1,s,o])).map((function(e){return sl(h,e,d)}))).reshape(a)}}),Eh=qn({gramSchmidt_:function(e){var t;if(Array.isArray(e)){t=!1,he(null!=e&&e.length>0,(function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"}));for(var n=e[0].shape[0],r=function(t){he(e[t].shape[0]===n,(function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+e[t].shape[0]+" vs. "+n+")"}))},a=1;a<e.length;++a)r(a)}else t=!0,e=gr(e,e.shape[0],0).map((function(e){return Sr(e,[0])}));he(e.length<=e[0].shape[0],(function(){return"Gram-Schmidt: Number of vectors ("+e.length+") exceeds number of dimensions ("+e[0].shape[0]+")."}));var i=[],s=e,o=function(e){i.push(It.tidy((function(){var t=s[e];if(e>0)for(var n=0;n<e;++n){var r=Pc(i[n].mulStrict(t)).mul(i[n]);t=t.sub(r)}return t.div(qc(t,"euclidean"))})))};for(a=0;a<e.length;++a)o(a);return t?Nr(i,0):i}}),Rh=qn({qr_:function(e,t){if(void 0===t&&(t=!1),e.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+e.rank);if(2===e.rank)return Nh(e,t);var n=e.shape.slice(0,e.shape.length-2).reduce((function(e,t){return e*t})),r=Tr(e.reshape([n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];return r.forEach((function(e){var n=Nh(e,t),r=n[0],s=n[1];a.push(r),i.push(s)})),[Nr(a,0).reshape(e.shape),Nr(i,0).reshape(e.shape)]}}),Ah=Object.freeze({bandPart:Th,gramSchmidt:Eh,qr:Rh});function Dh(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);var s=e.shape[0];return n=Math.min(n,s),he(0<=r&&r<=1,(function(){return"iouThreshold must be in [0, 1], but was '"+r+"'"})),he(2===e.rank,(function(){return"boxes must be a 2D tensor, but was of rank '"+e.rank+"'"})),he(4===e.shape[1],(function(){return"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]})),he(1===t.rank,(function(){return"scores must be a 1D tensor"})),he(t.shape[0]===s,(function(){return"scores has incompatible shape with boxes. Expected "+s+", but was "+t.shape[0]})),he(0<=i&&i<=1,(function(){return"softNmsSigma must be in [0, 1], but was '"+i+"'"})),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}var Fh=qn({resizeBilinear_:function(e,t,n){void 0===n&&(n=!1);var r=On(e,"images","resizeBilinear");he(3===r.rank||4===r.rank,(function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."})),he(2===t.length,(function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."}));var a=r,i=!1;3===r.rank&&(i=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var s=t[0],o=t[1],u=It.runKernelFunc((function(e,t){return t([a]),e.resizeBilinear(a,s,o,n)}),{x:a},(function(e,t){return{x:function(){return It.runKernelFunc((function(r){return r.resizeBilinearBackprop(e,t[0],n)}),{})}}}),"ResizeBilinear",{alignCorners:n,newHeight:s,newWidth:o});return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),_h=qn({resizeNearestNeighbor_:function(e,t,n){void 0===n&&(n=!1);var r=On(e,"images","resizeNearestNeighbor");he(3===r.rank||4===r.rank,(function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."})),he(2===t.length,(function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."})),he("float32"===r.dtype||"int32"===r.dtype,(function(){return"`images` must have `int32` or `float32` as dtype"}));var a=r,i=!1;3===r.rank&&(i=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var s=t[0],o=t[1],u=It.runKernelFunc((function(e,t){return t([a]),e.resizeNearestNeighbor(a,s,o,n)}),{batchImages:a},(function(e,t){return{batchImages:function(){return It.runKernelFunc((function(r){return r.resizeNearestNeighborBackprop(e,t[0],n)}),{})}}}));return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),$h=qn({nonMaxSuppression_:function(e,t,n,r,a){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY);var i=On(e,"boxes","nonMaxSuppression"),s=On(t,"scores","nonMaxSuppression"),o=Dh(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;var u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return It.runKernelFunc((function(e){return e.nonMaxSuppression(i,s,n,r,a)}),{boxes:i,scores:s},null,"NonMaxSuppressionV3",u)}}),Oh=qn({nonMaxSuppressionWithScore_:function(e,t,n,r,a,i){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===i&&(i=0);var s=On(e,"boxes","nonMaxSuppression"),o=On(t,"scores","nonMaxSuppression"),u=Dh(s,o,n,r,a,i),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},c=It.runKernel("NonMaxSuppressionV5",{boxes:s,scores:o},l);return{selectedIndices:c[0],selectedScores:c[1]}}}),Mh=qn({cropAndResize_:function(e,t,n,r,a,i){var s=On(e,"image","cropAndResize"),o=On(t,"boxes","cropAndResize","float32"),u=On(n,"boxInd","cropAndResize","int32");a=a||"bilinear",i=i||0;var l=o.shape[0];return he(4===s.rank,(function(){return"Error in cropAndResize: image must be rank 4,but got rank "+s.rank+"."})),he(2===o.rank&&4===o.shape[1],(function(){return"Error in cropAndResize: boxes must be have size ["+l+",4] but had shape "+o.shape+"."})),he(1===u.rank&&u.shape[0]===l,(function(){return"Error in cropAndResize: boxInd must be have size ["+l+"] but had shape "+o.shape+"."})),he(2===r.length,(function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."})),he(r[0]>=1&&r[1]>=1,(function(){return"cropSize must be atleast [1,1], but was "+r})),he("bilinear"===a||"nearest"===a,(function(){return"method must be bilinear or nearest, but was "+a})),It.runKernelFunc((function(e,t){return e.cropAndResize(s,o,u,r,a,i)}),{images:s,boxes:o,boxInd:u},null,"CropAndResize",{method:a,extrapolationValue:i,cropSize:r})}}),Lh=Object.freeze({resizeBilinear:Fh,resizeNearestNeighbor:_h,nonMaxSuppression:$h,nonMaxSuppressionAsync:function(e,t,n,r,a){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),K(this,void 0,void 0,(function(){var i,s,o,u,l,c,h;return X(this,(function(d){switch(d.label){case 0:return i=On(e,"boxes","nonMaxSuppressionAsync"),s=On(t,"scores","nonMaxSuppressionAsync"),o=Dh(i,s,n,r,a),n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold,[4,Promise.all([i.data(),s.data()])];case 1:return u=d.sent(),l=u[0],c=u[1],h=Ai(l,c,n,r,a),i!==e&&i.dispose(),s!==t&&s.dispose(),[2,h]}}))}))},nonMaxSuppressionWithScore:Oh,nonMaxSuppressionWithScoreAsync:function(e,t,n,r,a,i){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===i&&(i=0),K(this,void 0,void 0,(function(){var s,o,u,l,c,h,d;return X(this,(function(p){switch(p.label){case 0:return s=On(e,"boxes","nonMaxSuppressionAsync"),o=On(t,"scores","nonMaxSuppressionAsync"),u=Dh(s,o,n,r,a,i),n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma,[4,Promise.all([s.data(),o.data()])];case 1:return l=p.sent(),c=l[0],h=l[1],d=Di(c,h,n,r,a,i),s!==e&&s.dispose(),o!==t&&o.dispose(),[2,d]}}))}))},cropAndResize:Mh}),Ph=function(e,t){return!(e>0)||"linear"===t},Bh=function(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return e.mul(t.step());throw new Error("Gradient for activation "+n+" has not been implemented yet.")},zh=function(e,t){var n=t,r=Ur(e.shape,t.shape);return r.length>0&&(n=n.sum(r)),n.reshape(e.shape)},Wh=function(e,t,n){if("linear"===t)return e;if("relu"===t)return Uc(e);if("elu"===t)return zc(e);if("relu6"===t)return Gc(e);if("prelu"===t)return Vc(e,n);throw new Error("Unknown fused activation "+t+".")},Vh=qn({fusedMatMul_:function(e){var t,n=e.a,r=e.b,a=e.transposeA,i=void 0!==a&&a,s=e.transposeB,o=void 0!==s&&s,u=e.bias,l=e.activation,c=void 0===l?"linear":l,h=e.preluActivationWeights;if(!1===Ph(It.state.gradientDepth,c)){var d=oc(n,r,i,o);return null!=u&&(d=Wr(d,u)),Wh(d,c,h)}var p=On(n,"a","fused matMul"),f=On(r,"b","fused matMul");t=yt(p,f),p=t[0],f=t[1];var m=i?p.shape[p.rank-2]:p.shape[p.rank-1],g=o?f.shape[f.rank-1]:f.shape[f.rank-2],v=i?p.shape[p.rank-1]:p.shape[p.rank-2],y=o?f.shape[f.rank-2]:f.shape[f.rank-1],b=p.shape.slice(0,-2),x=f.shape.slice(0,-2),w=me(b),k=me(x);he(p.rank>=2&&f.rank>=2&&p.rank===f.rank,(function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+p.rank+" and "+f.rank+"."})),he(ge(b,x),(function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+x+") of Tensors with shapes "+p.shape+" and "+f.shape+" must match."})),he(m===g,(function(){return"Error in fused matMul: inner shapes ("+m+") and ("+g+") of Tensors with shapes "+p.shape+" and "+f.shape+" and transposeA="+i+" and transposeB="+o+" must match."}));var I,C,S=p.shape.slice(0,-2).concat([v,y]),N=i?p.as3D(w,m,v):p.as3D(w,v,m),T=o?f.as3D(k,y,g):f.as3D(k,g,y);null!=u&&Gr(S,(I=yt(I=On(u,"bias","fused matMul"),p)[0]).shape),null!=h&&(C=On(h,"prelu weights","fused matMul"));var E={a:N,b:T};null!=u&&(E.bias=I),null!=h&&(E.preluActivationWeights=C);var R=[N,T];return It.runKernelFunc((function(e,t){var n=e.fusedBatchMatMul({a:N,b:T,transposeA:i,transposeB:o,bias:I,activation:c,preluActivationWeights:C});return t([N,T,n]),n}),E,(function(e,t){var n=t[0],r=t[1],a=t[2],s=Bh(e,a,c),l={};return null!=u&&(l={bias:function(){return zh(I,s)}}),i||o?!i&&o?Object.assign({a:function(){return s.matMul(r,!1,!1)},b:function(){return s.matMul(n,!0,!1)}},l):i&&!o?Object.assign({a:function(){return r.matMul(s,!1,!0)},b:function(){return n.matMul(s,!1,!1)}},l):Object.assign({a:function(){return r.matMul(s,!0,!0)},b:function(){return s.matMul(n,!0,!0)}},l):Object.assign({a:function(){return s.matMul(r,!1,!0)},b:function(){return n.matMul(s,!0,!1)}},l)}),"_FusedMatMul",{transposeA:i,transposeB:o,activation:c},R,[!0]).reshape(S)}}),Uh=qn({fusedConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,i=e.dataFormat,s=void 0===i?"NHWC":i,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,d=void 0===h?"linear":h,p=e.preluActivationWeights;if(d=d||"linear",!1===Ph(It.state.gradientDepth,d)){var f=Ql(t,n,r,a,s,u,l);return null!=c&&(f=Wr(f,c)),Wh(f,d,p)}var m=On(t,"x","conv2d"),g=On(n,"filter","conv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),he(4===v.rank,(function(){return"Error in fused conv2d: input must be rank 4, but got rank "+v.rank+"."})),he(4===g.rank,(function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+g.rank+"."})),null!=l&&he(ve(a),(function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+l+" but got pad "+a+"."})),he(v.shape[3]===g.shape[2],(function(){return"Error in conv2d: depth of input ("+v.shape[3]+") must match input depth for filter "+g.shape[2]+"."})),he(bi(r,u),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),he("NHWC"===s,(function(){return"Error in conv2d: got dataFormat of "+s+" but only NHWC is currently supported."}));var b,x,w=hi(v.shape,g.shape,r,u,a,l);null!=c&&(b=yt(b=On(c,"bias","fused conv2d"),m)[0],Gr(w.outShape,b.shape)),null!=p&&(x=On(p,"prelu weights","fused conv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=p&&(k.preluActivationWeights=x);var I=[g,v],C=It.runKernelFunc((function(e,t){var n=e.fusedConv2d({input:v,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){var n=t,i=n[0],s=n[1],o=n[2],l=Bh(e,o,d);he(yi(u),(function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"}));var h={};return null!=c&&(h={bias:function(){return zh(b,l)}}),Object.assign({x:function(){return ec(s.shape,l,i,r,a)},filter:function(){return Zl(s,l,i.shape,r,a)}},h)}),"FusedConv2D",{convInfo:w,activation:d},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),Gh=qn({fusedDepthwiseConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,i=e.dataFormat,s=void 0===i?"NHWC":i,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,d=void 0===h?"linear":h,p=e.preluActivationWeights;if(!1===Ph(It.state.gradientDepth,d)){var f=tc(t,n,r,a,s,u,l);return null!=c&&(f=Wr(f,c)),Wh(f,d,p)}var m=On(t,"x","depthwiseConv2d"),g=On(n,"filter","depthwiseConv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),he(4===v.rank,(function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+v.rank+"."})),he(4===g.rank,(function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+g.rank+"."})),he(v.shape[3]===g.shape[2],(function(){return"Error in fused depthwiseConv2d: number of input channels ("+v.shape[3]+") must match the inChannels dimension in filter "+g.shape[2]+"."})),null==u&&(u=[1,1]),he(bi(r,u),(function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),null!=l&&he(ve(a),(function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+l+" but got pad "+a+"."}));var b,x,w=hi(v.shape,g.shape,r,u,a,l,!0);null!=c&&(b=yt(b=On(c,"bias","fused conv2d"),m)[0],Gr(w.outShape,b.shape)),null!=p&&(x=On(p,"prelu weights","fused depthwiseConv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=p&&(k.preluActivationWeights=x);var I=[g,v],C=It.runKernelFunc((function(e,t){var n=e.fusedDepthwiseConv2D({input:v,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){he(yi(u),(function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"}));var n=t[0],r=t[1],a=t[2],i=Bh(e,a,d),s={};return null!=c&&(s={bias:function(){return zh(b,i)}}),Object.assign({x:function(){return nc(r.shape,i,n,w)},filter:function(){return rc(r,i,n.shape,w)}},s)}),"FusedDepthwiseConv2D",{convInfo:w,activation:d},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),Hh=Object.freeze({matMul:Vh,conv2d:Uh,depthwiseConv2d:Gh}),jh=Object.freeze({image:Lh,linalg:Ah,losses:Sh,spectral:ah,fused:Hh,signal:mh,add:Wr,addN:Pu,batchNorm:Gu,batchNormalization:Uu,batchNorm2d:qu,batchNormalization2d:ju,batchNorm3d:Yu,batchNormalization3d:Xu,batchNorm4d:Zu,batchNormalization4d:Ju,broadcastTo:el,clone:tl,div:Va,divNoNan:ul,eye:cl,multinomial:hl,oneHot:dl,pad:pl,pad1d:fl,pad2d:ml,pad3d:gl,pad4d:vl,rand:yl,randomGamma:Sl,randomNormal:Nl,randomUniform:Tl,square:El,squaredDifference:Rl,tile:ll,truncatedNormal:Al,conv1d:Yl,conv2d:Ql,conv3d:Jl,depthwiseConv2d:tc,separableConv2d:ac,conv2dTranspose:ic,conv3dTranspose:sc,op:qn,booleanMaskAsync:function(e,t,n){return K(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m;return X(this,(function(g){switch(g.label){case 0:for(r=On(e,"tensor","boolMask"),a=On(t,"mask","boolMask","bool"),i=null==n?0:n,s=a.rank,o=r.shape,he(s>0,(function(){return"mask cannot be scalar"})),de(o.slice(i,i+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,"),u=1,l=i;l<i+s;l++)u*=o[l];return c=o.slice(0,i).concat([u],o.slice(i+s)),h=r.reshape(c),d=a.reshape([-1]),[4,ol(d)];case 1:return p=g.sent(),f=p.squeeze([1]),m=Hl(h,f,i),e!==r&&r.dispose(),t!==a&&a.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,m]}}))}))},complex:Kn,real:Xn,imag:Yn,concat:hr,concat1d:dr,concat2d:pr,concat3d:fr,concat4d:mr,split:gr,matMul:oc,dot:uc,outerProduct:lc,reverse:cc,reverse1d:hc,reverse2d:dc,reverse3d:pc,reverse4d:fc,maxPool:vc,avgPool:yc,pool:bc,maxPool3d:xc,avgPool3d:wc,maxPoolWithArgmax:kc,slice:Ic,slice1d:Cc,slice2d:Sc,slice3d:Nc,slice4d:Tc,abs:Hr,acos:jr,acosh:qr,asin:Kr,asinh:Xr,atan:Yr,atanh:Qr,ceil:Jr,clipByValue:Zr,cos:ea,cosh:ta,erf:na,exp:ra,expm1:aa,floor:ia,log:sa,log1p:oa,logSigmoid:ua,neg:la,reciprocal:ca,round:ha,rsqrt:da,sigmoid:pa,sign:fa,isNaN:ma,isInf:ga,isFinite:va,sin:ya,sinh:ba,softplus:xa,sqrt:wa,step:ka,tan:Ia,tanh:Ca,all:Rc,any:Ac,argMax:Dc,argMin:Fc,logSumExp:_c,max:$c,mean:Oc,min:Mc,moments:Lc,sum:Pc,prod:Bc,equal:Dl,equalStrict:Fl,greater:_l,greaterEqual:$l,greaterEqualStrict:Ol,greaterStrict:Ml,less:Ll,lessEqual:Pl,lessEqualStrict:Bl,lessStrict:zl,notEqual:Wl,notEqualStrict:Vl,addStrict:Sa,atan2:Na,divStrict:Ta,floorDiv:Ea,maximum:Ra,maximumStrict:Aa,minimum:Da,minimumStrict:Fa,mod:_a,modStrict:$a,mul:Oa,mulStrict:Ma,pow:La,powStrict:Pa,squaredDifferenceStrict:Ba,sub:za,subStrict:Wa,elu:zc,leakyRelu:Wc,prelu:Vc,relu:Uc,relu6:Gc,selu:Hc,logicalAnd:nl,logicalNot:rl,logicalOr:al,logicalXor:il,where:sl,whereAsync:ol,buffer:vr,print:function(e,t){void 0===t&&(t=!1),console.log(e.toString(t))},batchToSpaceND:yr,cast:br,cumsum:xr,depthToSpace:wr,expandDims:kr,reshape:Ir,spaceToBatchND:Cr,squeeze:Sr,stack:Nr,unstack:Tr,setdiff1dAsync:Er,fill:sr,linspace:or,ones:ar,range:ur,scalar:Zn,tensor:Qn,tensor1d:er,tensor2d:tr,tensor3d:nr,tensor4d:rr,tensor5d:function(e,t,n){if(pe(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");var r=_n(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Jn(e,t,r,n)},tensor6d:function(e,t,n){if(pe(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");var r=_n(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Jn(e,t=t||r,r,n)},variable:function(e,t,n,r){return void 0===t&&(t=!0),It.makeVariable(e,t,n,r)},zeros:ir,onesLike:lr,zerosLike:cr,transpose:ii,softmax:ri,logSoftmax:ai,localResponseNormalization:jc,norm:qc,gather:Hl,unsortedSegmentSum:jl,basicLSTMCell:Kc,multiRNNCell:Xc,movingAverage:Yc,stridedSlice:Qc,topk:Jc,scatterND:Zc,fft:eh,ifft:th,rfft:nh,irfft:rh,sparseToDense:ih,gatherND:sh,diag:oh,dropout:uh,hannWindow:hh,hammingWindow:dh,frame:ph,stft:fh,inTopKAsync:function(e,t,n){return void 0===n&&(n=1),K(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g;return X(this,(function(v){switch(v.label){case 0:return r=On(e,"predictions","inTopK"),a=On(t,"targets","inTopK"),he(r.rank>1,(function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank})),he(r.rank-1===a.rank,(function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+a.rank})),de(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),i=r.shape[r.shape.length-1],he(n>0&&n<=i,(function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+i+"), but got "+n})),[4,r.data()];case 1:return s=v.sent(),[4,a.data()];case 2:for(o=v.sent(),u=[s.length/i,i],c=u[1],h=Se("bool",l=u[0]),d=0;d<l;d++){for(p=d*c,f=s.subarray(p,p+c),m=[],g=0;g<f.length;g++)m.push({value:f[g],index:g});for(m.sort((function(e,t){return t.value-e.value})),h[d]=0,g=0;g<n;g++)if(m[g].index===o[d]){h[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),[2,Qn(h,a.shape,"bool")]}}))}))}});function qh(e,t){Array.isArray(e)||(e=[e]),e.forEach((function(e){null!=e&&he("complex64"!==e.dtype,(function(){return t+" does not support complex64 tensors."}))}))}function Kh(e,t,n,r,a,i){for(var s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=vr(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3],x=0;x<a.batchSize;++x)for(var w=x*v,k=x*r[0],I=0;I<a.inChannels;++I)for(var C=0;C<a.outHeight;++C)for(var S=C*s-d,N=Math.max(0,S),T=Math.min(a.inHeight,c+S),E=w+C*y,R=0;R<a.outWidth;++R){for(var A=R*o-p,D=Math.max(0,A),F=Math.min(a.inWidth,h+A),_=f,$=0,O=0,M=N;M<T;M+=u){for(var L=k+M*r[1],P=D;P<F;P+=l){var B=e[L+P*r[2]+I];"max"===i&&B>_?_=B:"avg"===i&&($+=B,O++)}if(isNaN(_))break}g[E+R*b+I]="avg"===i?$/O:_}return m}function Xh(e,t,n,r,a,i){void 0===a&&(a=!1),void 0===i&&(i=!1);for(var s=vr(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=vr(t,n,e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.outHeight;++y){for(var b=y*o-p,x=b;x<0;)x+=l;for(var w=Math.min(r.inHeight,h+b),k=0;k<r.outWidth;++k){for(var I=k*u-f,C=I;C<0;)C+=c;for(var S=Math.min(r.inWidth,d+I),N=Number.NEGATIVE_INFINITY,T=-1,E=x;E<w;E+=l)for(var R=E-b,A=C;A<S;A+=c){var D=A-I,F=m.get(g,E,A,v);F>N&&(N=F,T=a?i?((g*r.inHeight+E)*r.inWidth+A)*r.inChannels+v:(E*r.inWidth+A)*r.inChannels+v:R*d+D)}s.set(T,g,y,k,v)}}return s}function Yh(e,t,n,r){if("linear"===n)return e.linear(t);if("relu"===n)return e.relu(t);if("elu"===n)return e.elu(t);if("relu6"===n)return e.relu6(t);if("prelu"===n)return e.prelu(t,r);throw new Error("Activation "+n+" has not been implemented for the CPU backend.")}var Qh=function(e){function t(){var t=e.call(this)||this;return t.blockSize=48,t.firstUse=!0,t.data=new si(t,It),t}return q(t,e),t.prototype.write=function(e,t,n){this.firstUse&&(this.firstUse=!1,Q().get("IS_NODE")&&Fn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var r={};return this.data.set(r,{values:e,dtype:n}),r},t.prototype.move=function(e,t,n,r){this.data.set(e,{values:t,dtype:r})},t.prototype.numDataIds=function(){return this.data.numDataIds()},t.prototype.read=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(t){return[2,this.readSync(e)]}))}))},t.prototype.readSync=function(e){var t=this.data.get(e),n=t.dtype,r=t.complexTensors;return"complex64"===n?Ci(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(e).values},t.prototype.bufferSync=function(e){var t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((function(e){return qe(e)}))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return vr(e.shape,e.dtype,n)},t.prototype.makeOutput=function(e,t,n){var r=this.write(e,t,n);return It.makeTensorFromDataId(r,t,n,this)},t.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.data.delete(e)}},t.prototype.time=function(e){return K(this,void 0,void 0,(function(){var t;return X(this,(function(n){return t=Ge(),e(),[2,{kernelMs:Ge()-t}]}))}))},t.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},t.prototype.complex=function(e,t){var n=this.makeOutput(null,e.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:It.keep(e.clone()),imag:It.keep(t.clone())},n},t.prototype.real=function(e){return this.data.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.data.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(qh(e,"slice"),ei(e.shape,t,n)){var r=ti(t,e.strides),a=me(n);return Qn(this.readSync(e.dataId).subarray(r,r+a),n,e.dtype)}for(var i=vr(n,e.dtype),s=this.bufferSync(e),o=0;o<i.size;++o){var u=i.indexToLoc(o).map((function(e,n){return e+t[n]}));i.values[o]=s.get.apply(s,u)}return i.toTensor()},t.prototype.stridedSlice=function(e,t,n,r){qh(e,"stridedSlice");var a=Qa(t,n,r);if(a.some((function(e){return 0===e})))return Qn([],a);for(var i=vr(a,e.dtype),s=this.bufferSync(e),o=0;o<i.size;o++){for(var u=i.indexToLoc(o),l=new Array(u.length),c=0;c<l.length;c++)l[c]=u[c]*r[c]+t[c];i.set.apply(i,[s.get.apply(s,l)].concat(u))}return i.toTensor()},t.prototype.diag=function(e){for(var t=this.readSync(e.dataId),n=vr([e.size,e.size],e.dtype),r=n.values,a=0;a<t.length;a++)r[a*e.size+a]=t[a];return n.toTensor()},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,i=0;i<e.rank;i++)i!==t&&(r[a++]=e.shape[i]);var s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(i=0;i<u.length;i++)s[t]=i,u[i]=this.slice(e,s,o).reshape(r);return u},t.prototype.reverse=function(e,t){qh(e,"reverse");for(var n=vr(e.shape,e.dtype),r=this.bufferSync(e),a=function(a){var i=n.indexToLoc(a),s=i.slice();t.forEach((function(t){return s[t]=e.shape[t]-1-s[t]})),n.set.apply(n,[r.get.apply(r,s)].concat(i))},i=0;i<n.size;i++)a(i);return n.toTensor()},t.prototype.concat=function(e,t){var n=this;if("complex64"===e[0].dtype){var r=e.map((function(e){return Xn(e)})),a=e.map((function(e){return Yn(e)}));return Kn(this.concat(r,t),this.concat(a,t))}var i=e.map((function(e){var n=me(e.shape.slice(t));return e.as2D(-1,n)})),s=jn(i.map((function(e){return e.shape})),1),o=vr(s,e[0].dtype).values;if(1===i[0].shape[0]){var u=0;i.forEach((function(e){o.set(n.readSync(e.dataId),u),u+=e.size}))}else{var l=0;i.forEach((function(e){for(var t=n.readSync(e.dataId),r=0,a=0;a<e.shape[0];++a)for(var i=a*s[1]+l,u=0;u<e.shape[1];++u)o[i+u]=t[r++];l+=e.shape[1]}))}var c=jn(e.map((function(e){return e.shape})),t);return Qn(o,c,e[0].dtype)},t.prototype.neg=function(e){return qh(e,"neg"),this.multiply(Zn(-1),e)},t.prototype.add=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e+n,imag:t+r}})):this.broadcastedBinaryOp(e,t,gt(e.dtype,t.dtype),(function(e,t){return e+t}))},t.prototype.addN=function(e){var t=this;qh(e,"addN");for(var n=e.map((function(e){return t.readSync(e.dataId)})),r=vr(e[0].shape,e[0].dtype),a=r.values,i=0;i<e.length;i++)for(var s=n[i],o=0;o<a.length;o++)a[o]+=s[o];return r.toTensor()},t.prototype.softmax=function(e,t){var n=Ie([t],e.shape),r=this.max(e,n),a=zn(r.shape,n),i=this.subtract(e,r.reshape(a)),s=this.exp(i),o=this.sum(s,n).reshape(a);return Va(s,o)},t.prototype.subtract=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e-n,imag:t-r}})):this.broadcastedBinaryOp(e,t,gt(e.dtype,t.dtype),(function(e,t){return e-t}))},t.prototype.pow=function(e,t){return qh([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.pow(e,t)}))},t.prototype.batchMatMul=function(e,t,n,r){qh([e,t],"matMul");for(var a=n?e.shape[1]:e.shape[2],i=n?e.shape[2]:e.shape[1],s=r?t.shape[1]:t.shape[2],o=e.shape[0],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=n?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],h=c[0],d=c[1],p=c[2],f=r?[1,t.strides[1],t.strides[0]]:[t.strides[1],1,t.strides[0]],m=f[0],g=f[1],v=f[2],y=i*s,b=vr([o,i,s],e.dtype),x=b.values,w=this.blockSize,k=0;k<o;k++)for(var I=0;I<i;I+=w)for(var C=0;C<s;C+=w)for(var S=0;S<a;S+=w)for(var N=Math.min(I+w,i),T=Math.min(C+w,s),E=Math.min(S+w,a),R=I;R<N;R++)for(var A=C;A<T;A++){for(var D=0,F=S;F<E;F++)D+=u[k*h+R*d+F*p]*l[F*m+A*g+k*v];x[k*y+(R*s+A)]+=D}return b.toTensor()},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=this.batchMatMul(t,n,r,a);return i&&(u=this.add(u,i)),s&&(u=Yh(this,u,s,o)),u},t.prototype.multiply=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e*n-t*r,imag:e*r+t*n}})):this.broadcastedBinaryOp(e,t,gt(e.dtype,t.dtype),(function(e,t){return e*t}))},t.prototype.floorDiv=function(e,t){return qh([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",(function(e,t){return Math.floor(e/t)}))},t.prototype.sum=function(e,t){qh(e,"sum"),Wn("sum",t,e.rank);for(var n=Bn(e.shape,t),r=n[0],a=n[1],i=ir(r,gt(e.dtype,"int32")),s=me(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=0,d=0;d<s;++d)h+=u[c+d];o[l]=h}return i},t.prototype.prod=function(e,t){qh(e,"sum");for(var n=Bn(e.shape,t),r=n[0],a=n[1],i=ir(r,gt(e.dtype,"int32")),s=me(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=1,d=0;d<s;++d)h*=u[c+d];o[l]=h}return i},t.prototype.unsortedSegmentSum=function(e,t,n){qh(e,"unsortedSegmentSum");for(var r=[],a=e.rank-t.rank,i=0;i<a;++i)t=t.expandDims(i+1);for(i=0;i<n;++i){var s=Zn(i,"int32"),o=Dl(s,t).asType("float32").mul(e).sum(0);r.push(o)}return Nr(r)},t.prototype.argMin=function(e,t){qh(e,"argMin");var n=[t];Wn("argMin",n,e.rank);for(var r=Bn(e.shape,n),a=r[0],i=r[1],s=ir(a,"int32"),o=me(i),u=this.readSync(s.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,d=l[h],p=0,f=0;f<o;++f){var m=l[h+f];m<d&&(d=m,p=f)}u[c]=p}return s},t.prototype.argMax=function(e,t){qh(e,"argMax");var n=[t];Wn("argMax",n,e.rank);for(var r=Bn(e.shape,n),a=r[0],i=r[1],s=ir(a,"int32"),o=me(i),u=this.readSync(s.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,d=l[h],p=0,f=0;f<o;++f){var m=l[h+f];m>d&&(d=m,p=f)}u[c]=p}return s},t.prototype.cumsum=function(e,t,n,r){if(qh(e,"cumsum"),t!==e.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(e.rank-1)+" but got axis="+t);for(var a=gt(e.dtype,"int32"),i=ir(e.shape,a),s=this.readSync(i.dataId),o=this.readSync(e.dataId),u=e.shape[e.rank-1],l=r?function(e,t){return e+u-t-1}:function(e,t){return e+t},c=0;c<o.length;c+=u)for(var h=0;h<u;h++){var d=l(c,h);if(0===h)s[d]=n?0:o[d];else{var p=l(c,h-1);s[d]=n?o[p]+s[p]:o[d]+s[p]}}return i},t.prototype.equal=function(e,t){return qh([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e===t?1:0}))},t.prototype.notEqual=function(e,t){return qh([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e!==t?1:0}))},t.prototype.less=function(e,t){return qh([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<t?1:0}))},t.prototype.lessEqual=function(e,t){return qh([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<=t?1:0}))},t.prototype.greater=function(e,t){return qh([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>t?1:0}))},t.prototype.greaterEqual=function(e,t){return qh([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>=t?1:0}))},t.prototype.logicalNot=function(e){qh(e,"logicalNot");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t[r]?0:1;return this.makeOutput(n,e.shape,"bool")},t.prototype.logicalAnd=function(e,t){return qh([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e&&t}))},t.prototype.logicalOr=function(e,t){return qh([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e||t}))},t.prototype.select=function(e,t,n){qh([e,t,n],"select");for(var r=this.readSync(e.dataId),a=this.readSync(t.dataId),i=this.readSync(n.dataId),s=ir(t.shape,gt(t.dtype,n.dtype)),o=this.readSync(s.dataId),u=0,l=0===e.rank||e.rank>1||1===t.rank?1:me(t.shape.slice(1)),c=0;c<r.length;c++)for(var h=0;h<l;h++)1===r[c]?o[u++]=a[c]:o[u++]=i[c];return s},t.prototype.where=function(e){qh([e],"where");var t=this.readSync(e.dataId);return Bi(e.shape,t)},t.prototype.topk=function(e,t,n){return qh(e,"topk"),Pi(this.readSync(e.dataId),e.shape,e.dtype,t)},t.prototype.min=function(e,t){qh(e,"min"),Wn("min",t,e.rank);for(var n=Bn(e.shape,t),r=n[0],a=n[1],i=ir(r,e.dtype),s=me(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];p<h&&(h=p)}o[l]=h}return i},t.prototype.minimum=function(e,t){return qh([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.min(e,t)}))},t.prototype.mod=function(e,t){return qh([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))},t.prototype.max=function(e,t){qh(e,"max"),Wn("max",t,e.rank);for(var n=Bn(e.shape,t),r=n[0],a=n[1],i=ir(r,e.dtype),s=me(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];p>h&&(h=p)}o[l]=h}return i},t.prototype.maximum=function(e,t){return qh([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.max(e,t)}))},t.prototype.all=function(e,t){qh(e,"all"),Wn("all",t,e.rank);for(var n=Bn(e.shape,t),r=n[0],a=n[1],i=ir(r,e.dtype),s=me(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];h=h&&p}o[l]=h}return i},t.prototype.any=function(e,t){qh(e,"any"),Wn("any",t,e.rank);for(var n=Bn(e.shape,t),r=n[0],a=n[1],i=ir(r,e.dtype),s=me(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];h=h||p}o[l]=h}return i},t.prototype.squaredDifference=function(e,t){return qh([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e-t;return n*n}))},t.prototype.ceil=function(e){qh(e,"ceil");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.ceil(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.floor=function(e){qh(e,"floor");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.floor(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.sign=function(e){qh(e,"x");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)t[r]<0?n[r]=-1:t[r]>0?n[r]=1:n[r]=0;return this.makeOutput(n,e.shape,"float32")},t.prototype.isNaN=function(e){qh(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isNaN(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isInf=function(e){qh(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Math.abs(t[r])===1/0&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isFinite=function(e){qh(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isFinite(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.round=function(e){qh(e,"round");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=Math.floor(t[r]);t[r]-a<.5?n[r]=Math.floor(t[r]):t[r]-a>.5?n[r]=Math.ceil(t[r]):n[r]=a%2==0?a:a+1}return this.makeOutput(n,e.shape,"float32")},t.prototype.exp=function(e){qh(e,"exp");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.exp(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.expm1=function(e){qh(e,"expm1");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.expm1(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.log=function(e){qh(e,"log");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.log1p=function(e){qh(e,"log1p");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log1p(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.sqrt=function(e){qh(e,"sqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.rsqrt=function(e){qh(e,"rsqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=1/Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.reciprocal=function(e){qh(e,"reciprocal");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=1/t[r];return this.makeOutput(n,e.shape,"float32")},t.prototype.linear=function(e){return e},t.prototype.relu=function(e){qh(e,"relu");for(var t=ir(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.max(0,r[a]);return t},t.prototype.relu6=function(e){qh(e,"relu");for(var t=ir(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.min(Math.max(0,r[a]),6);return t},t.prototype.prelu=function(e,t){return qh([e,t],"prelu"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return e<0?t*e:e}))},t.prototype.elu=function(e){qh(e,"elu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?a:Math.exp(a)-1}return this.makeOutput(t,e.shape,"float32")},t.prototype.eluDer=function(e,t){qh([e,t],"eluDer");for(var n=new Float32Array(t.size),r=this.readSync(t.dataId),a=this.readSync(e.dataId),i=0;i<r.length;++i){var s=r[i];n[i]=s>=1?a[i]:a[i]*(s+1)}return this.makeOutput(n,t.shape,"float32")},t.prototype.selu=function(e){qh(e,"selu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?1.0507009873554805*a:1.7580993408473768*(Math.exp(a)-1)}return this.makeOutput(t,e.shape,"float32")},t.prototype.clip=function(e,t,n){qh(e,"clip");for(var r=new Float32Array(e.size),a=this.readSync(e.dataId),i=0;i<a.length;++i){var s=a[i];r[i]=s>n?n:s<t?t:s}return this.makeOutput(r,e.shape,"float32")},t.prototype.abs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.abs(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.complexAbs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<e.size;++r){var a=n[2*r],i=n[2*r+1];t[r]=Math.hypot(a,i)}return this.makeOutput(t,e.shape,"float32")},t.prototype.int=function(e){qh(e,"int");for(var t=new Int32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=n[r];return this.makeOutput(t,e.shape,"int32")},t.prototype.sigmoid=function(e){qh(e,"sigmoid");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=1/(1+Math.exp(-n[r]));return this.makeOutput(t,e.shape,"float32")},t.prototype.softplus=function(e){qh(e,"softplus");for(var t=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var i,s=r[a]>-t,o=r[a]<t,u=Math.exp(r[a]);i=o?u:s?r[a]:Math.log(1+u),n[a]=i}return this.makeOutput(n,e.shape,"float32")},t.prototype.sin=function(e){qh(e,"sin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cos=function(e){qh(e,"cos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tan=function(e){qh(e,"tan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.tan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asin=function(e){qh(e,"asin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acos=function(e){qh(e,"acos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan=function(e){qh(e,"atan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan2=function(e,t){return qh([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.atan2(e,t)}))},t.prototype.sinh=function(e){qh(e,"sinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cosh=function(e){qh(e,"cosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tanh=function(e){qh(e,"tanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=ye(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asinh=function(e){qh(e,"asinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acosh=function(e){qh(e,"acosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atanh=function(e){qh(e,"atanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atanh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.erf=function(e){qh(e,"erf");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=Math.sign(n[r]),i=Math.abs(n[r]),s=1/(1+.3275911*i);t[r]=a*(1-((((1.061405429*s-1.453152027)*s+1.421413741)*s-.284496736)*s+.254829592)*s*Math.exp(-i*i))}return this.makeOutput(t,e.shape,"float32")},t.prototype.step=function(e,t){void 0===t&&(t=0),qh(e,"step");for(var n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var i=r[a];isNaN(i)?n[a]=NaN:n[a]=i>0?1:t}return this.makeOutput(n,e.shape,"float32")},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights,o=this.conv2d(t,n,r);return a&&(o=this.add(o,a)),i&&(o=Yh(this,o,i,s)),o},t.prototype.conv2d=function(e,t,n){qh([e,t],"conv2d");for(var r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,s=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l="channelsLast"===n.dataFormat,c=vr(n.outShape,e.dtype),h=e.strides[0],d=l?e.strides[1]:e.strides[2],p=l?e.strides[2]:1,f=l?1:e.strides[1],m=c.strides[0],g=l?c.strides[1]:c.strides[2],v=l?c.strides[2]:1,y=l?1:c.strides[1],b=this.readSync(e.dataId),x=this.readSync(t.dataId),w=c.values,k=0;k<n.batchSize;++k)for(var I=k*h,C=k*m,S=0;S<n.outHeight;++S)for(var N=C+S*g,T=S*n.strideHeight-u,E=0;E<r;E++){var R=T+E*i;if(!(R<0||R>=n.inHeight))for(var A=E*t.strides[0],D=I+R*d,F=0;F<n.outWidth;++F)for(var _=N+F*v,$=F*n.strideWidth-o,O=0;O<a;O++){var M=$+O*s;if(!(M<0||M>=n.inWidth))for(var L=D+M*p,P=A+O*t.strides[1],B=0;B<n.inChannels;++B){for(var z=b[L+B*f],W=0;W<n.outChannels;++W)w[_+W*y]+=z*x[P+W];P+=n.outChannels}}}return c.toTensor()},t.prototype.conv3d=function(e,t,n){for(var r=n.filterDepth,a=n.filterHeight,i=n.filterWidth,s=n.dilationDepth,o=n.dilationHeight,u=n.dilationWidth,l=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=vr(n.outShape,e.dtype),p=this.readSync(e.dataId),f=this.readSync(t.dataId),m=d.values,g=0;g<n.batchSize;++g)for(var v=g*e.strides[0],y=g*d.strides[0],b=0;b<n.outDepth;++b)for(var x=y+b*d.strides[1],w=b*n.strideDepth-l,k=0;k<r;k++){var I=w+k*s;if(!(I<0||I>=n.inDepth))for(var C=k*t.strides[0],S=v+I*e.strides[1],N=0;N<n.outHeight;++N)for(var T=x+N*d.strides[2],E=N*n.strideHeight-h,R=0;R<a;R++){var A=E+R*o;if(!(A<0||A>=n.inHeight))for(var D=C+R*t.strides[1],F=S+A*e.strides[2],_=0;_<n.outWidth;++_)for(var $=T+_*n.outChannels,O=_*n.strideWidth-c,M=0;M<i;M++){var L=O+M*u;if(!(L<0||L>=n.inWidth))for(var P=D+M*t.strides[2],B=F+L*n.inChannels,z=P,W=0;W<n.inChannels;++W){for(var V=p[B+W],U=0;U<n.outChannels;++U)m[$+U]+=V*f[z+U];z+=n.outChannels}}}}return d.toTensor()},t.prototype.conv2dDerInput=function(e,t,n){qh([e,t],"conv2dDerInput");for(var r=vr(n.inShape,"float32"),a=r.values,i=this.readSync(e.dataId),s=this.readSync(t.dataId),o=t.strides,u=o[0],l=o[1],c=o[2],h=n.batchSize,d=n.filterHeight,p=n.filterWidth,f=n.inChannels,m=n.inHeight,g=n.inWidth,v=n.outChannels,y=n.outHeight,b=n.outWidth,x=n.strideHeight,w=n.strideWidth,k=n.dataFormat,I=d-1-n.padInfo.top,C=p-1-n.padInfo.left,S="channelsLast"===k,N=r.strides[0],T=S?r.strides[1]:r.strides[2],E=S?r.strides[2]:1,R=S?1:r.strides[1],A=e.strides[0],D=S?e.strides[1]:e.strides[2],F=S?e.strides[2]:1,_=S?1:e.strides[1],$=0;$<h;++$)for(var O=0;O<f;++O)for(var M=0;M<m;++M)for(var L=M-I,P=Math.max(0,Math.ceil(L/x)),B=Math.min(y,(d+L)/x),z=0;z<g;++z){for(var W=z-C,V=Math.max(0,Math.ceil(W/w)),U=Math.min(b,(p+W)/w),G=0,H=P;H<B;++H)for(var j=H*x-L,q=V;q<U;++q)for(var K=A*$+D*H+F*q,X=u*(d-1-j)+l*(p-1-(q*w-W))+c*O,Y=0;Y<v;++Y)G+=i[K+_*Y]*s[X+Y];a[N*$+T*M+E*z+R*O]=G}return r.toTensor()},t.prototype.conv3dDerInput=function(e,t,n){for(var r=vr(n.inShape,"float32"),a=r.values,i=r.strides,s=i[0],o=i[1],u=i[2],l=i[3],c=this.readSync(e.dataId),h=e.strides,d=h[0],p=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=n.batchSize,I=n.filterDepth,C=n.filterHeight,S=n.filterWidth,N=n.inChannels,T=n.inDepth,E=n.inHeight,R=n.inWidth,A=n.outChannels,D=n.outDepth,F=n.outHeight,_=n.outWidth,$=n.strideDepth,O=n.strideHeight,M=n.strideWidth,L=I-1-n.padInfo.front,P=C-1-n.padInfo.top,B=S-1-n.padInfo.left,z=0;z<k;++z)for(var W=0;W<N;++W)for(var V=0;V<T;++V)for(var U=V-L,G=Math.max(0,Math.ceil(U/$)),H=Math.min(D,(I+U)/$),j=0;j<E;++j)for(var q=j-P,K=Math.max(0,Math.ceil(q/O)),X=Math.min(F,(C+q)/O),Y=0;Y<R;++Y){for(var Q=Y-B,J=Math.max(0,Math.ceil(Q/M)),Z=Math.min(_,(S+Q)/M),ee=0,te=G;te<H;++te)for(var ne=te*$-U,re=K;re<X;++re)for(var ae=re*O-q,ie=J;ie<Z;++ie)for(var se=d*z+p*te+f*re+m*ie,oe=y*(I-1-ne)+b*(C-1-ae)+x*(S-1-(ie*M-Q))+w*W,ue=0;ue<A;++ue)ee+=c[se+ue]*g[oe+ue];a[s*z+o*V+u*j+l*Y+W]=ee}return r.toTensor()},t.prototype.conv2dDerFilter=function(e,t,n){qh([e,t],"conv2dDerFilter");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o="channelsLast"===n.dataFormat,u=vr(n.filterShape,"float32"),l=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(e),d=this.bufferSync(t),p=0;p<i;++p)for(var f=Math.max(0,Math.ceil((c-p)/r)),m=Math.min(n.outHeight,(n.inHeight+c-p)/r),g=0;g<s;++g)for(var v=Math.max(0,Math.ceil((l-g)/a)),y=Math.min(n.outWidth,(n.inWidth+l-g)/a),b=0;b<n.inChannels;++b)for(var x=0;x<n.outChannels;++x){for(var w=0,k=0;k<n.batchSize;++k)for(var I=f;I<m;++I)for(var C=p+I*r-c,S=v;S<y;++S){var N=g+S*a-l;w+=o?h.get(k,C,N,b)*d.get(k,I,S,x):h.get(k,b,C,N)*d.get(k,x,I,S)}u.set(w,p,g,b,x)}return u.toTensor()},t.prototype.conv3dDerFilter=function(e,t,n){for(var r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,s=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=vr(n.filterShape,"float32"),c=l.values,h=l.strides,d=h[0],p=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=this.readSync(e.dataId),I=e.strides,C=I[0],S=I[1],N=I[2],T=I[3],E=n.padInfo.front,R=n.padInfo.left,A=n.padInfo.top,D=0;D<s;++D)for(var F=Math.max(0,Math.ceil((E-D)/r)),_=Math.min(n.outDepth,(n.inDepth+E-D)/r),$=D*d,O=0;O<o;++O)for(var M=Math.max(0,Math.ceil((A-O)/a)),L=Math.min(n.outHeight,(n.inHeight+A-O)/a),P=O*p+$,B=0;B<u;++B)for(var z=Math.max(0,Math.ceil((R-B)/i)),W=Math.min(n.outWidth,(n.inWidth+R-B)/i),V=B*f+P,U=0;U<n.inChannels;++U)for(var G=U*m+V,H=0;H<n.outChannels;++H){for(var j=0,q=0;q<n.batchSize;++q)for(var K=q*C,X=q*y,Y=F;Y<_;++Y)for(var Q=(D+Y*r-E)*S+K,J=Y*b+X,Z=M;Z<L;++Z)for(var ee=(O+Z*a-A)*N+Q,te=Z*x+J,ne=z;ne<W;++ne){var re=ne*w+te;j+=k[(B+ne*i-R)*T+ee+U]*g[re+H]}c[G+H]=j}return l.toTensor()},t.prototype.fusedDepthwiseConv2D=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights,o=this.depthwiseConv2D(t,n,r);return a&&(o=this.add(o,a)),i&&(o=Yh(this,o,i,s)),o},t.prototype.depthwiseConv2D=function(e,t,n){qh([e,t],"depthwiseConv2D");for(var r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,s=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l=n.outChannels/n.inChannels,c=vr(n.outShape,e.dtype),h=this.readSync(e.dataId),d=this.readSync(t.dataId),p=c.values,f=0;f<n.batchSize;++f)for(var m=f*e.strides[0],g=f*c.strides[0],v=0;v<n.outHeight;++v)for(var y=g+v*c.strides[1],b=v*n.strideHeight-o,x=0;x<r;++x){var w=b+x*i;if(!(w<0||w>=n.inHeight))for(var k=x*t.strides[0],I=m+w*e.strides[1],C=0;C<n.outWidth;++C)for(var S=y+C*c.strides[2],N=C*n.strideWidth-u,T=0;T<a;++T){var E=N+T*s;if(!(E<0||E>=n.inWidth))for(var R=k+T*t.strides[1],A=I+E*n.inChannels,D=S,F=R,_=0;_<n.inChannels;++_){for(var $=h[A+_],O=0;O<l;++O)p[D+O]+=$*d[F+O];D+=l,F+=l}}}return c.toTensor()},t.prototype.depthwiseConv2DDerInput=function(e,t,n){qh([e,t],"depthwiseConv2DDerInput");for(var r=vr(n.inShape,"float32"),a=r.values,i=r.strides,s=i[0],o=i[1],u=i[2],l=this.readSync(e.dataId),c=e.strides,h=c[0],d=c[1],p=c[2],f=this.readSync(t.dataId),m=t.strides,g=m[0],v=m[1],y=m[2],b=n.batchSize,x=n.filterHeight,w=n.filterWidth,k=n.inChannels,I=n.inHeight,C=n.inWidth,S=n.outChannels,N=n.outHeight,T=n.outWidth,E=n.strideHeight,R=n.strideWidth,A=x-1-n.padInfo.top,D=w-1-n.padInfo.left,F=S/k,_=0;_<b;++_)for(var $=0;$<k;++$)for(var O=0;O<I;++O)for(var M=O-A,L=Math.max(0,Math.ceil(M/E)),P=Math.min(N,(x+M)/E),B=0;B<C;++B){for(var z=B-D,W=Math.max(0,Math.ceil(z/R)),V=Math.min(T,(w+z)/R),U=0,G=L;G<P;++G)for(var H=G*E-M,j=W;j<V;++j)for(var q=h*_+d*G+p*j,K=g*(x-1-H)+v*(w-1-(j*R-z))+y*$,X=0;X<F;++X)U+=l[q+($*F+X)]*f[K+X];a[s*_+o*O+u*B+$]=U}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){qh([e,t],"depthwiseConv2DDerFilter");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o=vr(n.filterShape,"float32"),u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(e),d=this.bufferSync(t),p=0;p<i;++p)for(var f=Math.max(0,Math.ceil((l-p)/r)),m=Math.min(n.outHeight,(n.inHeight+l-p)/r),g=0;g<s;++g)for(var v=Math.max(0,Math.ceil((u-g)/a)),y=Math.min(n.outWidth,(n.inWidth+u-g)/a),b=0;b<n.outChannels;++b){for(var x=Math.trunc(b/c),w=b%c,k=0,I=0;I<n.batchSize;++I)for(var C=f;C<m;++C)for(var S=p+C*r-l,N=v;N<y;++N){var T=g+N*a-u;k+=h.get(I,S,T,x)*d.get(I,C,N,b)}o.set(k,p,g,x,w)}return o.toTensor()},t.prototype.tile=function(e,t){return qh(e,"tile"),Li(this.bufferSync(e),t)},t.prototype.pad=function(e,t,n){qh(e,"pad");var r=t.map((function(t,n){return t[0]+e.shape[n]+t[1]})),a=t.map((function(e){return e[0]})),i=this.bufferSync(e),s=vr(r,e.dtype);0!==n&&s.values.fill(n);for(var o=0;o<e.size;o++){var u=i.indexToLoc(o),l=u.map((function(e,t){return e+a[t]}));s.set.apply(s,[i.get.apply(i,u)].concat(l))}return s.toTensor()},t.prototype.gather=function(e,t,n){qh([e,t],"gather");var r=e.shape.slice(),a=this.readSync(t.dataId);r[n]=a.length;for(var i=vr(r,e.dtype),s=this.bufferSync(e),o=0;o<i.size;++o){var u=i.indexToLoc(o),l=u.slice();l[n]=a[u[n]];var c=s.locToIndex(l);i.values[o]=s.values[c]}return i.toTensor()},t.prototype.batchToSpaceND=function(e,t,n){qh([e],"batchToSpaceND");var r=t.reduce((function(e,t){return e*t})),a=Rr(e.shape,t,r),i=Ar(a.length,t.length),s=Dr(e.shape,t,r),o=Fr(n,t.length),u=_r(s,n,t.length);return ii(e.reshape(a),i).reshape(s).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){qh([e],"spaceToBatchND");var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var i=1+t.length;i<e.shape.length;++i)a.push([0,0]);var s=e.pad(a),o=Rr(s.shape,t,r,!1),u=Ar(o.length,t.length,!1),l=Dr(s.shape,t,r,!1);return ii(s.reshape(o),u).reshape(l)},t.prototype.maxPool=function(e,t){return qh(e,"maxPool"),Kh(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"max").toTensor()},t.prototype.maxPoolBackprop=function(e,t,n,r){qh([t,n],"maxPoolBackprop");for(var a=this.readSync(t.dataId),i=vr(r.outShape,t.dtype,Xh(a,t.shape,t.dtype,r).values),s=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=vr(t.shape,"float32"),m=this.bufferSync(e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.inHeight;++y)for(var b=0;b<r.inWidth;++b){for(var x=y-p,w=b-d,k=0,I=0;I<c;I+=u){var C=(x+I)/s;if(!(C<0||C>=r.outHeight||Math.floor(C)!==C))for(var S=0;S<h;S+=l){var N=(w+S)/o;if(!(N<0||N>=r.outWidth||Math.floor(N)!==N)){var T=c*h-1-i.get(g,C,N,v)===I*h+S?1:0;0!==T&&(k+=m.get(g,C,N,v)*T)}}}f.set(k,g,y,b,v)}return f.toTensor()},t.prototype.avgPoolBackprop=function(e,t,n){qh([e,t],"avgPoolBackprop");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o=n.dilationHeight,u=n.dilationWidth,l=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=l-1-n.padInfo.top,p=vr(t.shape,"float32"),f=1/(i*s),m=this.bufferSync(e),g=0;g<n.batchSize;++g)for(var v=0;v<n.inChannels;++v)for(var y=0;y<n.inHeight;++y)for(var b=0;b<n.inWidth;++b){for(var x=y-d,w=b-h,k=0,I=0;I<l;I+=o){var C=(x+I)/r;if(!(C<0||C>=n.outHeight||Math.floor(C)!==C))for(var S=0;S<c;S+=u){var N=(w+S)/a;N<0||N>=n.outWidth||Math.floor(N)!==N||(k+=m.get(g,C,N,v))}}p.set(k*f,g,y,b,v)}return p.toTensor()},t.prototype.pool3d=function(e,t,n){qh(e,"pool3d");for(var r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(e.dataId),v=vr(t.outShape,e.dtype),y=v.values,b=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],x=t.outShape[2]*t.outShape[3]*t.outShape[4],w=t.outShape[3]*t.outShape[4],k=t.outShape[4],I=0;I<t.batchSize;++I)for(var C=I*b,S=I*e.strides[0],N=0;N<t.inChannels;++N)for(var T=0;T<t.outDepth;++T){for(var E=T*r-d,R=E;R<0;)R+=s;for(var A=Math.min(t.inDepth,l+E),D=C+T*x,F=0;F<t.outHeight;++F){for(var _=F*a-p,$=_;$<0;)$+=o;for(var O=Math.min(t.inHeight,c+_),M=D+F*w,L=0;L<t.outWidth;++L){for(var P=L*i-f,B=P;B<0;)B+=u;for(var z=Math.min(t.inWidth,h+P),W=M+L*k,V=m,U=0,G=0,H=R;H<A;H+=s){for(var j=S+H*e.strides[1],q=$;q<O;q+=o){for(var K=j+q*e.strides[2],X=B;X<z;X+=u){var Y=g[K+X*e.strides[3]+N];if("max"===n&&Y>V?V=Y:"avg"===n&&(U+=Y,G++),isNaN(V))break}if(isNaN(V))break}if(isNaN(V))break}y[W+N]="avg"===n?U/G:V}}}return v.toTensor()},t.prototype.avgPool3d=function(e,t){return qh(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()},t.prototype.avgPool3dBackprop=function(e,t,n){qh([e,t],"avgPool3dBackprop");for(var r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,s=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=d-1-n.padInfo.front,g=f-1-n.padInfo.left,v=p-1-n.padInfo.top,y=vr(t.shape,"float32"),b=1/(s*o*u),x=this.bufferSync(e),w=0;w<n.batchSize;++w)for(var k=0;k<n.inChannels;++k)for(var I=0;I<n.inDepth;++I)for(var C=0;C<n.inHeight;++C)for(var S=0;S<n.inWidth;++S){for(var N=I-m,T=C-v,E=S-g,R=0,A=0;A<d;A+=l){var D=(N+A)/r;if(!(D<0||D>=n.outDepth||Math.floor(D)!==D))for(var F=0;F<p;F+=c){var _=(T+F)/a;if(!(_<0||_>=n.outHeight||Math.floor(_)!==_))for(var $=0;$<f;$+=h){var O=(E+$)/i;O<0||O>=n.outWidth||Math.floor(O)!==O||(R+=x.get(w,D,_,O,k))}}}y.set(R*b,w,I,C,S,k)}return y.toTensor()},t.prototype.maxPool3d=function(e,t){return qh(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()},t.prototype.maxPool3dPositions=function(e,t){for(var n=vr(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m=this.bufferSync(e),g=0;g<t.batchSize;++g)for(var v=0;v<t.inChannels;++v)for(var y=0;y<t.outDepth;++y){for(var b=y*r-d,x=b;x<0;)x+=s;for(var w=Math.min(t.inDepth,l+b),k=0;k<t.outHeight;++k){for(var I=k*a-p,C=I;C<0;)C+=o;for(var S=Math.min(t.inHeight,c+I),N=0;N<t.outWidth;++N){for(var T=N*i-f,E=T;E<0;)E+=u;for(var R=Math.min(t.inWidth,h+T),A=Number.NEGATIVE_INFINITY,D=-1,F=x;F<w;F+=s)for(var _=F-b,$=C;$<S;$+=o)for(var O=$-I,M=E;M<R;M+=u){var L=M-T,P=m.get(g,F,$,M,v);P>=A&&(A=P,D=_*c*h+O*c+L)}n.set(D,g,y,k,N,v)}}}return n.toTensor()},t.prototype.maxPool3dBackprop=function(e,t,n,r){qh([t,n],"maxPool3dBackprop");for(var a=this.maxPool3dPositions(t,r),i=r.strideDepth,s=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=p-1-r.padInfo.left,g=d-1-r.padInfo.top,v=vr(t.shape,"float32"),y=this.bufferSync(a),b=this.bufferSync(e),x=0;x<r.batchSize;++x)for(var w=0;w<r.inChannels;++w)for(var k=0;k<r.inDepth;++k)for(var I=0;I<r.inHeight;++I)for(var C=0;C<r.inWidth;++C){for(var S=k-f,N=I-g,T=C-m,E=0,R=0;R<h;R+=u){var A=(S+R)/i;if(!(A<0||A>=r.outDepth||Math.floor(A)!==A))for(var D=0;D<d;D+=l){var F=(N+D)/s;if(!(F<0||F>=r.outHeight||Math.floor(F)!==F))for(var _=0;_<p;_+=c){var $=(T+_)/o;if(!($<0||$>=r.outWidth||Math.floor($)!==$)){var O=h*d*p-1-y.get(x,A,F,$,w)===R*d*p+D*p+_?1:0;0!==O&&(E+=b.get(x,A,F,$,w)*O)}}}}v.set(E,x,k,I,C,w)}return v.toTensor()},t.prototype.cast=function(e,t){return wi(e,t,this)},t.prototype.reshape=function(e,t){return ki(e,t)},t.prototype.avgPool=function(e,t){return qh(e,"avgPool"),qh(e,"maxPool"),Kh(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"avg").toTensor().toFloat()},t.prototype.resizeBilinear=function(e,t,n,r){qh(e,"resizeBilinear");for(var a=e.shape,i=a[0],s=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(me([i,t,n,u])),h=[r&&t>1?s-1:s,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=0,f=h[0]/d[0],m=h[1]/d[1],g=0;g<i;g++)for(var v=0;v<t;v++)for(var y=f*v,b=Math.floor(y),x=y-b,w=Math.min(s-1,Math.ceil(y)),k=g*e.strides[0]+b*e.strides[1],I=g*e.strides[0]+w*e.strides[1],C=0;C<n;C++)for(var S=m*C,N=Math.floor(S),T=S-N,E=Math.min(o-1,Math.ceil(S)),R=k+N*e.strides[2],A=I+N*e.strides[2],D=k+E*e.strides[2],F=I+E*e.strides[2],_=0;_<u;_++){var $=l[R+_],O=l[A+_],M=$+(l[D+_]-$)*T,L=M+(O+(l[F+_]-O)*T-M)*x;c[p++]=L}return Qn(c,[i,t,n,u])},t.prototype.resizeBilinearBackprop=function(e,t,n){qh([e,t],"resizeBilinearBackprop");for(var r=t.shape,a=r[0],i=r[1],s=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*i*s*o),d=[n&&l>1?i-1:i,n&&c>1?s-1:s],p=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=d[0]/p[0],m=d[1]/p[1],g=this.readSync(e.dataId),v=0,y=0;y<a;y++)for(var b=y*t.strides[0],x=0;x<l;x++)for(var w=x*f,k=Math.floor(w),I=Math.min(Math.ceil(w),i-1),C=b+k*t.strides[1],S=b+I*t.strides[1],N=w-k,T=1-N,E=0;E<c;E++)for(var R=E*m,A=Math.floor(R),D=Math.min(Math.ceil(R),s-1),F=R-A,_=1-F,$=C+A*t.strides[2],O=C+D*t.strides[2],M=S+A*t.strides[2],L=S+D*t.strides[2],P=T*_,B=T*F,z=N*_,W=N*F,V=0;V<o;V++){var U=g[v++];h[$+V]+=U*P,h[O+V]+=U*B,h[M+V]+=U*z,h[L+V]+=U*W}return rr(h,[a,s,i,o],t.dtype)},t.prototype.resizeNearestNeighbor=function(e,t,n,r){qh(e,"resizeNearestNeighbor");for(var a=e.shape,i=a[0],s=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(i*t*n*u),h=[r&&t>1?s-1:s,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=h[0]/d[0],f=h[1]/d[1],m=0,g=0;g<i;g++)for(var v=g*e.strides[0],y=0;y<t;y++)for(var b=p*y,x=v+Math.min(s-1,r?Math.round(b):Math.floor(b))*e.strides[1],w=0;w<n;w++)for(var k=f*w,I=x+Math.min(o-1,r?Math.round(k):Math.floor(k))*e.strides[2],C=0;C<u;C++){var S=l[I+C];c[m++]=S}return Qn(c,[i,t,n,u],e.dtype)},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){qh([e,t],"resizeNearestNeighborBackprop");for(var r=t.shape,a=r[0],i=r[1],s=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*i*s*o),d=this.readSync(e.dataId),p=[n&&l>1?i-1:i,n&&c>1?s-1:s],f=[n&&l>1?l-1:l,n&&c>1?c-1:c],m=p[0]/f[0],g=p[1]/f[1],v=1/m,y=1/g,b=2*Math.ceil(v)+2,x=2*Math.ceil(y)+2,w=0;w<a;w++)for(var k=w*t.strides[0],I=0;I<i;I++)for(var C=k+I*t.strides[1],S=Math.floor(I*v),N=Math.floor(S-b/2),T=0;T<s;T++)for(var E=C+T*t.strides[2],R=Math.floor(T*y),A=Math.floor(R-x/2),D=0;D<o;D++){for(var F=0,_=0;_<b;_++){var $=_+N;if(!($<0||$>=l)){var O=k+$*e.strides[1],M=$*m;if(I===Math.min(i-1,n?Math.round(M):Math.floor(M)))for(var L=0;L<x;L++){var P=L+A;if(!(P<0||P>=c)){var B=O+P*e.strides[2],z=P*g;T===Math.min(s-1,n?Math.round(z):Math.floor(z))&&(F+=d[B+D])}}}}h[E+D]=F}return rr(h,t.shape,t.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,i){qh([e,t,n,a,i],"batchNorm");for(var s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=this.readSync(n.dataId),l=a?this.readSync(a.dataId):new Float32Array([1]),c=i?this.readSync(i.dataId):new Float32Array([0]),h=new Float32Array(s.length),d=c.length,p=l.length,f=u.length,m=o.length,g=0,v=0,y=0,b=0,x=0;x<s.length;++x)h[x]=c[g++]+(s[x]-o[v++])*l[y++]/Math.sqrt(u[b++]+r),g>=d&&(g=0),v>=m&&(v=0),y>=p&&(y=0),b>=f&&(b=0);return rr(h,e.shape)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){qh(e,"localResponseNormalization4D");var i=e.shape[3],s=i-1,o=this.readSync(e.dataId),u=e.size,l=new Float32Array(u);function c(e){for(var n=e%i,r=e-n+Math.max(0,n-t),a=e-n+Math.min(n+t,s),u=0;r<=a;r++){var l=o[r];u+=l*l}return u}for(var h=0;h<u;h++){var d=c(h),p=o[h]*Math.pow(n+r*d,-a);l[h]=p}return rr(l,e.shape)},t.prototype.LRNGrad=function(e,t,n,r,a,i,s){qh(e,"LRNGrad");for(var o=e.shape[3],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=this.readSync(n.dataId),h=new Float32Array(e.size),d=e.size,p=0;p<d;p++){for(var f=p%o,m=p-f+Math.max(0,f-r),g=p-f+Math.min(o,f+r+1),v=0,y=m;y<g;y++)v+=Math.pow(l[y],2);for(v=i*v+a,y=m;y<g;y++){var b=-2*i*s*l[y]*c[p]/v;p===y&&(b+=Math.pow(v,-s)),b*=u[p],h[y]+=b}}return rr(h,e.shape)},t.prototype.multinomial=function(e,t,n,r){qh(e,"multinomial");for(var a=t?e:ri(e),i=a.shape[0],s=a.shape[1],o=ir([i,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(a.dataId),c=0;c<i;++c){var h=c*s,d=new Float32Array(s-1);d[0]=l[h];for(var p=1;p<d.length;++p)d[p]=d[p-1]+l[h+p];for(var f=Lu(r.toString()),m=c*n,g=0;g<n;++g){var v=f();u[m+g]=d.length;for(var y=0;y<d.length;y++)if(v<d[y]){u[m+g]=y;break}}}return o},t.prototype.oneHot=function(e,t,n,r){qh(e,"oneHot");var a=new Float32Array(e.size*t);a.fill(r);for(var i=this.readSync(e.dataId),s=0;s<e.size;++s)i[s]>=0&&i[s]<t&&(a[s*t+i[s]]=n);return tr(a,[e.size,t],"int32")},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return qh(e,"nonMaxSuppression"),Ai(this.readSync(e.dataId),this.readSync(t.dataId),n,r,a)},t.prototype.fft=function(e){return this.fftBatch(e,!1)},t.prototype.ifft=function(e){return this.fftBatch(e,!0)},t.prototype.fftBatch=function(e,t){for(var n=e.shape[0],r=e.shape[1],a=vr(e.shape,"float32"),i=vr(e.shape,"float32"),s=Xn(e).as2D(n,r),o=Yn(e).as2D(n,r),u=0;u<n;u++)for(var l=s.slice([u,0],[1,r]),c=o.slice([u,0],[1,r]),h=Kn(l,c),d=this.readSync(this.fftImpl(h,t).dataId),p=0;p<r;p++){var f=Si(d,p);a.values[u*r+p]=f.real,i.values[u*r+p]=f.imag}return Kn(a.toTensor(),i.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(e,t){var n=e.as1D(),r=n.size;if(this.isExponentOf2(r)){var a=this.fftRadix2(n,r,t).as2D(e.shape[0],e.shape[1]);return t&&(a=Kn(Xn(a).div(Zn(r)),Yn(a).div(Zn(r)))),a}var i=this.readSync(e.dataId),s=function(e){for(var t=new Float32Array(e.length/2),n=new Float32Array(e.length/2),r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}(this.fourierTransformByMatmul(i,r,t));return Kn(s.real,s.imag).as2D(e.shape[0],e.shape[1])},t.prototype.isExponentOf2=function(e){return 0==(e&e-1)},t.prototype.fftRadix2=function(e,t,n){if(1===t)return e;var r=this.readSync(e.dataId),a=t/2,i=function(e){for(var t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),s=Kn(i.real,i.imag).as1D(),o=function(e){for(var t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),u=Kn(o.real,o.imag).as1D();s=this.fftRadix2(s,a,n),u=this.fftRadix2(u,a,n);var l=function(e,t){for(var n=new Float32Array(e/2),r=new Float32Array(e/2),a=0;a<Math.ceil(e/2);a++){var i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}(t,n),c=Kn(l.real,l.imag).mul(u),h=s.add(c),d=s.sub(c),p=Xn(h).concat(Xn(d)),f=Yn(h).concat(Yn(d));return Kn(p,f).as1D()},t.prototype.fourierTransformByMatmul=function(e,t,n){for(var r=new Float32Array(2*t),a=0;a<t;a++){for(var i=0,s=0,o=0;o<t;o++){var u=Ti(a*o,t,n),l=Si(e,o);i+=l.real*u.real-l.imag*u.imag,s+=l.real*u.imag+l.imag*u.real}n&&(i/=t,s/=t),Ni(r,i,s,a)}return r},t.prototype.depthToSpace=function(e,t,n){he("NHWC"===n,(function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n})),he(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));for(var r=e.shape[0],a=e.shape[1],i=e.shape[2],s=e.shape[3],o=a*t,u=i*t,l=s/(t*t),c=this.readSync(e.dataId),h=new Float32Array(r*o*u*l),d=0,p=0;p<r;++p)for(var f=0;f<o;++f)for(var m=Math.floor(f/t),g=f%t,v=0;v<u;++v)for(var y=Math.floor(v/t),b=(g*t+v%t)*l,x=0;x<l;++x){var w=x+b+s*(y+i*(m+a*p));h[d++]=c[w]}return rr(h,[r,o,u,l])},t.prototype.broadcastedBinaryOp=function(e,t,n,r){var a=Gr(e.shape,t.shape),i=vr(a,n),s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Vr(e.shape,a),l=Vr(t.shape,a),c=i.values;if(u.length+l.length===0)for(var h=0;h<c.length;++h)c[h]=r(s[h%s.length],o[h%o.length]);else{var d=this.bufferSync(e),p=this.bufferSync(t),f=function(n){var a=i.indexToLoc(n),h=a.slice(-e.rank);u.forEach((function(e){return h[e]=0}));var f=d.locToIndex(h),m=a.slice(-t.rank);l.forEach((function(e){return m[e]=0}));var g=p.locToIndex(m);c[n]=r(s[f],o[g])};for(h=0;h<c.length;++h)f(h)}return i.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(e,t,n){var r=Gr(e.shape,t.shape),a=vr(r,"float32"),i=vr(r,"float32"),s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Vr(e.shape,r),l=Vr(t.shape,r),c=a.values,h=i.values;if(u.length+l.length===0)for(var d=0;d<c.length;d++){var p=d%s.length,f=d%o.length,m=n(s[2*p],s[2*p+1],o[2*f],o[2*f+1]);c[d]=m.real,h[d]=m.imag}else{var g=this.bufferSync(this.data.get(e.dataId).complexTensors.real),v=this.bufferSync(this.data.get(t.dataId).complexTensors.real),y=function(r){var i=a.indexToLoc(r),d=i.slice(-e.rank);u.forEach((function(e){return d[e]=0}));var p=g.locToIndex(d),f=i.slice(-t.rank);l.forEach((function(e){return f[e]=0}));var m=v.locToIndex(f),y=n(s[2*p],s[2*p+1],o[2*m],o[2*m+1]);c[r]=y.real,h[r]=y.imag};for(d=0;d<c.length;d++)y(d)}return this.complex(a.toTensor(),i.toTensor())},t.prototype.split=function(e,t,n){return Mi(e,t,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.epsilon=function(){return 1e-7},t.prototype.cropAndResize=function(e,t,n,r,a,i){for(var s=e.shape,o=s[0],u=s[1],l=s[2],c=s[3],h=t.shape[0],d=r[0],p=r[1],f=vr([h,d,p,c],"float32"),m=this.readSync(t.dataId),g=this.readSync(n.dataId),v=this.readSync(e.dataId),y=e.strides,b=f.strides,x=0;x<h;x++){var w=4*x,k=m[w],I=m[w+1],C=m[w+2],S=m[w+3],N=g[x];if(!(N>=o))for(var T=d>1?(C-k)*(u-1)/(d-1):0,E=p>1?(S-I)*(l-1)/(p-1):0,R=0;R<d;R++){var A=d>1?k*(u-1)+R*T:.5*(k+C)*(u-1);if(A<0||A>u-1)for(var D=0;D<p;D++)for(var F=0;F<c;F++){var _=F+D*b[2]+R*b[1]+x*b[0];f.values[_]=i}else if("bilinear"===a){var $=Math.floor(A),O=Math.ceil(A),M=A-$;for(D=0;D<p;D++)if((H=p>1?I*(l-1)+D*E:.5*(I+S)*(l-1))<0||H>l-1)for(F=0;F<c;F++)_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=i;else{var L=Math.floor(H),P=Math.ceil(H),B=H-L;for(F=0;F<c;F++){var z=v[_=F+L*y[2]+$*y[1]+N*y[0]],W=v[_=F+P*y[2]+$*y[1]+N*y[0]],V=v[_=F+L*y[2]+O*y[1]+N*y[0]],U=z+(W-z)*B,G=V+(v[_=F+P*y[2]+O*y[1]+N*y[0]]-V)*B;_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=U+(G-U)*M}}}else for(D=0;D<p;++D){var H;if((H=p>1?I*(l-1)+D*E:.5*(I+S)*(l-1))<0||H>l-1)for(F=0;F<c;F++)_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=i;else{var j=Math.round(H),q=Math.round(A);for(F=0;F<c;F++){var K=F+j*y[2]+q*y[1]+N*y[0],X=F+D*b[2]+R*b[1]+x*b[0];f.values[X]=v[K]}}}}}return f.toTensor()},t.prototype.sparseToDense=function(e,t,n,r){var a=Ka(0,e,n),i=a.sliceRank,s=a.numUpdates,o=a.sliceSize,u=a.strides,l=a.outputSize;return this.scatter(e,t,n,l,o,s,i,u,r,!1)},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=Ua(e,t),i=a[0],s=a[1],o=a[2],u=a[3];if(0===s)return Qn([],i,e.dtype);for(var l=new rt([s,o],e.dtype),c=this.readSync(t.dataId),h=this.readSync(e.dataId),d=0;d<s;d++){for(var p=[],f=0,m=0;m<r;m++){var g=c[d*r+m];f+=g*u[m],p.push(g)}if(f<0||f>=e.size/o)throw new Error("Invalid indices: "+p+" does not index into "+e.shape);for(var v=0;v<o;v++)l.values[d*o+v]=h[f*o+v]}return l.toTensor().reshape(i)},t.prototype.scatterND=function(e,t,n){var r=Ka(0,e,n),a=r.sliceRank,i=r.numUpdates,s=r.sliceSize,o=r.strides,u=r.outputSize,l=Zn(0);return this.scatter(e,t,n,u,s,i,a,o,l,!0)},t.prototype.fill=function(e,t,n){var r=Ne(n=n||Me(t),me(e));return r.fill(t),It.makeTensor(r,e,n,this)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){var t=Ne(e.dtype,me(e.shape));return this.makeOutput(t,e.shape,e.dtype)},t.prototype.linspace=function(e,t,n){return Ii(e,t,n)},t.prototype.scatter=function(e,t,n,r,a,i,s,o,u,l){var c=[r/a,a],h=this.readSync(e.dataId),d=this.readSync(t.dataId);if(0===r)return Qn([],n,t.dtype);var p=new rt(c,t.dtype);p.values.fill(this.readSync(u.dataId)[0]);for(var f=0;f<i;f++){for(var m=[],g=0,v=0;v<s;v++){var y=h[f*s+v];m.push(y),g+=y*o[v]}if(g<0||g>=r/a)throw new Error("Invalid indices: "+m+" does not index into "+n);for(var b=0;b<a;b++)l?p.values[g*a+b]+=d[f*a+b]:p.values[g*a+b]=0===t.rank?d[0]:d[f*a+b]}return p.toTensor().reshape(n)},t}(oi);function Jh(e,t){return{kernelName:e,backendName:"cpu",kernelFunc:function(n){var r=n.inputs,a=n.backend,i=r,s=i.a,o=i.b,u=a;qh([s,o],e);var l=u.data.get(s.dataId).values,c=u.data.get(o.dataId).values,h=t(s.shape,o.shape,l,c,s.dtype),d=h[0],p=h[1];return{dataId:u.write(d,p,s.dtype),shape:p,dtype:s.dtype}}}}function Zh(e){return function(t,n,r,a,i){var s=Gr(t,n),o=s.length,u=Be(s),l=Se(i,me(s)),c=t.length,h=n.length,d=Be(t),p=Be(n),f=Vr(t,s),m=Vr(n,s);if(f.length+m.length===0)for(var g=0;g<l.length;++g)l[g]=e(r[g%r.length],a[g%a.length]);else{var v=function(t){var n=Xe(t,o,u),i=n.slice(-c);f.forEach((function(e){return i[e]=0}));var s=Ke(i,c,d),g=n.slice(-h);m.forEach((function(e){return g[e]=0}));var v=Ke(g,h,p);l[t]=e(r[s],a[v])};for(g=0;g<l.length;++g)v(g)}return[l,s]}}It.registerBackend("cpu",(function(){return new Qh}),1);var ed=Zh((function(e,t){return e/t})),td=Jh($r,ed),nd={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n,s=i.filterSize,o=i.strides,u=i.pad,l=i.includeBatchInIndex,c=r;qh(a,"MaxPoolWithArgmax");var h=c.data.get(a.dataId).values,d=li(a.shape,s,o,[1,1],u),p=function(e,t,n,r,a){var i=Kh(e,0,n,Be(t),a,"max"),s=Xh(e,t,n,a,!0,r);return[i.values,s.values]}(h,a.shape,a.dtype,l,d),f=p[0],m=p[1],g=c.write(f,d.outShape,a.dtype),v=c.write(m,d.outShape,a.dtype);return[{dataId:g,shape:d.outShape,dtype:a.dtype},{dataId:v,shape:d.outShape,dtype:"int32"}]}},rd={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t,i=a.boxes,s=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,d=n;qh(i,"NonMaxSuppressionWithScore");var p=Di(d.data.get(i.dataId).values,d.data.get(s.dataId).values,u,l,c,h);return[p.selectedIndices,p.selectedScores]}},ad={kernelName:"Square",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n;qh(r,"square");for(var i=a.data.get(r.dataId).values,s=new Float32Array(i.length),o=0;o<i.length;++o){var u=i[o];s[o]=u*u}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},id=Zh((function(e,t){var n=e-t;return n*n}));function sd(e,t,n,r,a){for(var i=me(t),s=t.length,o=Be(t),u=Be(a),l=Se(n,me(a)),c=0;c<i;++c){for(var h=Xe(c,s,o),d=new Array(h.length),p=0;p<d.length;p++)d[p]=h[r[p]];l[Ke(d,s,u)]=e[c]}return l}for(var od=0,ud=[rd,ad,Jh(Or,id),td,{kernelName:"Transpose",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n.perm,s=r;qh(a,"transpose");for(var o=a.shape.length,u=new Array(o),l=0;l<u.length;l++)u[l]=a.shape[i[l]];var c=sd(s.data.get(a.dataId).values,a.shape,a.dtype,i,u);return{dataId:s.write(c,u,a.dtype),shape:u,dtype:a.dtype}}},nd];od<ud.length;od++)ae(ud[od]);for(var ld,cd=function(e){this.variableNames=["A"];var t=Hi(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+r+".0, "+n+".0);\n\n        vec4 values = "+t.texture2D+"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    "},hd=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=Hi(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2("+r+".0, "+n+".0);\n            vec4 values = "+t.texture2D+"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        "+t.output+" = result;\n      }\n    "},dd=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;var a=as(this.rank),i=function(e){var t=e.length;if(t>6)throw Error("Transpose for rank "+t+" is not yet supported");for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t),a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode="\n    void main() {\n      "+a+" resRC = getOutputCoords();\n      setOutput(getA("+i+"));\n    }\n    "},pd=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var a=as(this.rank),i=Ui("rc",this.rank),s=new Array(this.rank);for(r=0;r<t.length;r++)s[t[r]]=i[r];var o="vec2("+s.slice(-2).join()+")",u="++"+i[this.rank-1]+" < "+n[this.rank-1],l="getChannel(getA("+s.join()+"), "+o+")";this.userCode="\n    void main() {\n      "+a+" rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = "+l+";\n      if("+u+") {\n        result[1] = "+l+";\n      }\n      --"+i[this.rank-1]+";\n      if(++"+i[this.rank-2]+" < "+n[this.rank-2]+") {\n        result[2] = "+l+";\n        if("+u+") {\n          result[3] = "+l+";\n        }\n      }\n      setOutput(result);\n    }\n    "},fd=0,md=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t.pixels,i=r.numChannels,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,u=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=u[0],c=u[1],h=[c,l],d=[c,l,i];(o||s)&&(null==ld&&(ld=document.createElement("canvas").getContext("2d")),ld.canvas.width=l,ld.canvas.height=c,ld.drawImage(a,0,0,l,c),a=ld.canvas);var p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=Tt.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);var f=Q().getBool("WEBGL_PACK")?new hd(d):new cd(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}},{kernelName:$r,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t;return function(e,t,n){var r=new vs("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",e.shape,t.shape);return Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new bs("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",e.shape,t.shape,!0)),n.runWebGLProgram(r,[e,t],"float32")}(r.a,r.b,n)}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs;Fn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var a=t,i=a.boxes,s=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,d=n,p=Di(d.readSync(i.dataId),d.readSync(s.dataId),u,l,c,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n,i=new eu(r.shape,"return x * x;");return a.runWebGLProgram(i,[r],r.dtype)}},{kernelName:Or,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t,a=r.a,i=r.b,s=n,o=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bs("return (a - b) * (a - b);",a.shape,i.shape):new vs("return (a - b) * (a - b);",a.shape,i.shape);return s.compileAndRun(o,[a,i])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:function(e){for(var t,n=e.inputs,r=e.attrs,a=e.backend,i=n.x,s=r.perm,o=a,u=i.shape.length,l=new Array(u),c=0;c<l.length;c++)l[c]=i.shape[s[c]];if(o.shouldExecuteOnCPU([i])){var h=sd(o.texData.get(i.dataId).values,i.shape,i.dtype,s,l);t=o.makeTensorInfo(l,i.dtype),o.texData.get(t.dataId).values=h}else t=function(e,t,n){var r=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pd(e.shape,t):new dd(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}(i,s,o);return t}},{kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n,s=i.filterSize,o=i.strides,u=i.pad,l=i.includeBatchInIndex,c=r;he(4===a.shape.length,(function(){return"Error in maxPool: input must be rank 4 but got rank "+a.shape.length+"."}));var h=[1,1];he(bi(o,h),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+o+" and dilations '"+h+"'"}));var d=li(a.shape,s,o,h,u),p=function(e,t,n,r){var a=new Ao(n,"max",!1),i=r.runWebGLProgram(a,[e],"float32");return a=new Ao(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(a,l,d,c);return[p[0],p[1]]}}];fd<md.length;fd++)ae(md[fd]);for(var gd=0,vd=[{kernelName:"Add",inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Gr(n.shape,r.shape);return{a:function(){var t=e,r=Ur(n.shape,a);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},b:function(){var t=e,n=Ur(r.shape,a);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)}}}},{kernelName:"AddN",saveAllInputs:!0,gradFunc:function(e,t){var n={};return t.forEach((function(t,r){n[r]=function(){return e.clone()}})),n}},{kernelName:Mr,gradFunc:function(e,t,n){for(var r=n,a=r.inputShape,i=r.shape,s=Array.from(i),o=a.length-1;o>=0;o--)if(a[o]===i[o])s[o]=1;else if(1!==a[o])throw new Error("broadcastTo(): ["+a+"] cannot be broadcast to ["+i+"].");var u=[];for(o=0;o<s.length;o++)s[o]>1&&u.push(o);return{x:function(){return e.sum(u,!0)}}}},{kernelName:$r,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Gr(n.shape,r.shape);return{a:function(){var t=Va(e,r.toFloat()),i=Ur(n.shape,a);return i.length>0?Pc(t,i).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),i=Ur(r.shape,a);i.length>0&&(t=Pc(t,i).reshape(r.shape));var s=El(r);return la(Va(t,s.toFloat()))}}}},{kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:function(e,t,n){var r=n.varianceEpsilon,a=t[0],i=t[1],s=t[2],o=t[3],u=zu(a),l=null==o?Zn(1):o,c=Ur(i.shape,u.shape),h=[];if(1===i.rank){for(var d=0;d<u.shape.length-1;++d)h.push(u.shape[d]);h.push(1)}var p=za(a,i),f=Oa(e,l),m=da(Wr(s,Zn(r))),g=Oa(Oa(Oa(m,m),m),Zn(-.5));return{x:function(){return 1===i.rank?Ir(Oa(Oa(e,ll(m.as4D(1,1,1,i.shape[0]),h)),l),a.shape):Ir(Oa(Oa(e,m),l),a.shape)},mean:function(){var e=Oa(Oa(m,Zn(-1)),f);return 1===i.rank&&(e=Pc(e,c)),Ir(e,i.shape)},variance:function(){var e=Oa(Oa(g,p),f);return 1===i.rank&&(e=Pc(e,c)),Ir(e,i.shape)},scale:function(){var t=Oa(p,m),n=Oa(e,t);return 1===i.rank&&(n=Pc(n,c)),Ir(n,i.shape)},offset:function(){var t=e;return 1===i.rank&&(t=Pc(t,c)),Ir(t,i.shape)}}}},{kernelName:Pr,gradFunc:function(e){return{x:function(){return e.toFloat()}}}},{kernelName:Lr,inputsToSave:["indices"],gradFunc:function(e,t){var n=t[0];return{indices:function(){return ir(n.shape,"float32")}}}},{kernelName:zr,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.paddings.map((function(e){return e[0]}));return{x:function(){return e.slice(a,r.shape)}}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().mul(2))}}}},{kernelName:Or,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Zn(2);return{a:function(){return Oa(e,Oa(a,za(n,r)))},b:function(){return Oa(e,Oa(a,za(r,n)))}}}},{kernelName:Br,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.reps;return{x:function(){var t=cr(r);if(1===r.rank)for(var n=0;n<a[0];++n)t=t.add(e.slice([n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(n=0;n<a[0];++n)for(var i=0;i<a[1];++i)t=t.add(e.slice([n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(n=0;n<a[0];++n)for(i=0;i<a[1];++i)for(var s=0;s<a[2];++s)t=t.add(e.slice([n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(n=0;n<a[0];++n)for(i=0;i<a[1];++i)for(s=0;s<a[2];++s)for(var o=0;o<a[3];++o)t=t.add(e.slice([n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:function(e,t,n){var r=Un(n.perm);return{x:function(){return ii(e,r)}}}}];gd<vd.length;gd++)ie(vd[gd]);var yd=function(){function e(){}return e.prototype.fetch=function(e,t){return fetch(e,t)},e.prototype.now=function(){return performance.now()},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return new TextDecoder(t).decode(e)},e}();Q().get("IS_BROWSER")&&Q().setPlatform("browser",new yd);var bd,xd=function(){function e(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}return e.prototype.fetch=function(e,t){return null!=Q().global.fetch?Q().global.fetch(e,t):(null==bd&&(bd=require("node-fetch")),bd(e,t))},e.prototype.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)},e}();Q().get("IS_NODE")&&Q().setPlatform("node",new xd);var wd={float32:4,int32:4,uint16:2,uint8:1,bool:1},kd=4;function Id(e,t){for(var n={},r=0,a=function(t){var a=t.name,i=t.dtype,s=t.shape,o=me(s),u=void 0;if("quantization"in t){var l=t.quantization;if("uint8"!==l.dtype&&"uint16"!==l.dtype)throw new Error("Weight "+t.name+" has unknown quantization dtype "+l.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var c=wd[l.dtype],h=e.slice(r,r+o*c),d="uint8"===l.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===i)u=Float32Array.from(d,(function(e){return e*l.scale+l.min}));else{if("int32"!==i)throw new Error("Unsupported dtype in weight '"+a+"': "+i);u=Int32Array.from(d,(function(e){return Math.round(e*l.scale+l.min)}))}r+=o*c}else if("string"===i){var p=me(t.shape);u=[];for(var f=0;f<p;f++){var m=new Uint32Array(e.slice(r,r+kd))[0];r+=kd;var g=new Uint8Array(e.slice(r,r+m));u.push(g),r+=m}}else{var v=wd[i];if(h=e.slice(r,r+o*v),"float32"===i)u=new Float32Array(h);else if("int32"===i)u=new Int32Array(h);else{if("bool"!==i)throw new Error("Unsupported dtype in weight '"+a+"': "+i);u=new Uint8Array(h)}r+=o*v}n[a]=Qn(u,s,i)},i=0,s=t;i<s.length;i++)a(s[i]);return n}function Cd(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));var t=0,n=[];e.forEach((function(e){if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));var r=new Uint8Array(t),a=0;return n.forEach((function(e){r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var Sd="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Nd(e){return Sd?Buffer.byteLength(e):new Blob([e]).size}function Td(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ed(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);var t=e.split("/");return t[t.length-1]}function Rd(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Nd(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Nd(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}var Ad=function(){function e(){this.saveRouters=[],this.loadRouters=[]}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerSaveRouter=function(t){e.getInstance().saveRouters.push(t)},e.registerLoadRouter=function(t){e.getInstance().loadRouters.push(t)},e.getSaveHandlers=function(t){return e.getHandlers(t,"save")},e.getLoadHandlers=function(t,n){return e.getHandlers(t,"load",n)},e.getHandlers=function(t,n,r){var a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach((function(e){var n=e(t,r);null!==n&&a.push(n)})),a},e}(),Dd="://",Fd=function(){function e(){this.managers={}}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerManager=function(t,n){he(null!=t,(function(){return"scheme must not be undefined or null."})),t.endsWith(Dd)&&(t=t.slice(0,t.indexOf(Dd))),he(t.length>0,(function(){return"scheme must not be an empty string."}));var r=e.getInstance();he(null==r.managers[t],(function(){return"A model store manager is already registered for scheme '"+t+"'."})),r.managers[t]=n},e.getManager=function(e){var t=this.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '"+e+"'");return t},e.getSchemes=function(){return Object.keys(this.getInstance().managers)},e}();function _d(e){if(-1===e.indexOf(Dd))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Fd.getSchemes().join(","));return{scheme:e.split(Dd)[0],path:e.split(Dd)[1]}}function $d(e,t,n){return void 0===n&&(n=!1),K(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h;return X(this,(function(d){switch(d.label){case 0:return he(e!==t,(function(){return"Old path and new path are the same: '"+e+"'"})),he((r=Ad.getLoadHandlers(e)).length>0,(function(){return"Copying failed because no load handler is found for source URL "+e+"."})),he(r.length<2,(function(){return"Copying failed because more than one ("+r.length+") load handlers for source URL "+e+"."})),a=r[0],he((i=Ad.getSaveHandlers(t)).length>0,(function(){return"Copying failed because no save handler is found for destination URL "+t+"."})),he(i.length<2,(function(){return"Copying failed because more than one ("+r.length+") save handlers for destination URL "+t+"."})),s=i[0],o=_d(e).scheme,u=_d(e).path,l=o===_d(e).scheme,[4,a.load()];case 1:return c=d.sent(),n&&l?[4,Fd.getManager(o).removeModel(u)]:[3,3];case 2:d.sent(),d.label=3;case 3:return[4,s.save(c)];case 4:return h=d.sent(),!n||l?[3,6]:[4,Fd.getManager(o).removeModel(u)];case 5:d.sent(),d.label=6;case 6:return[2,h.modelArtifactsInfo]}}))}))}var Od="models_store",Md="model_info_store";function Ld(){if(!Q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var e=window||self,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Pd(e){var t=e.result;t.createObjectStore(Od,{keyPath:"modelPath"}),t.createObjectStore(Md,{keyPath:"modelPath"})}var Bd=function(){function e(e){if(this.indexedDB=Ld(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}return e.prototype.save=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,e)]}))}))},e.prototype.load=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){return[2,this.databaseAction(this.modelPath)]}))}))},e.prototype.databaseAction=function(e,t){var n=this;return new Promise((function(e,r){var a=n.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return Pd(a)},a.onsuccess=function(){var i=a.result;if(null==t){var s=i.transaction(Od,"readonly"),o=s.objectStore(Od).get(n.modelPath);o.onsuccess=function(){if(null==o.result)return i.close(),r(new Error("Cannot find model with path '"+n.modelPath+"' in IndexedDB."));e(o.result.modelArtifacts)},o.onerror=function(e){return i.close(),r(o.error)},s.oncomplete=function(){return i.close()}}else{var u,l=Rd(t),c=i.transaction(Md,"readwrite"),h=c.objectStore(Md),d=h.put({modelPath:n.modelPath,modelArtifactsInfo:l});d.onsuccess=function(){var a=(u=i.transaction(Od,"readwrite")).objectStore(Od).put({modelPath:n.modelPath,modelArtifacts:t,modelArtifactsInfo:l});a.onsuccess=function(){return e({modelArtifactsInfo:l})},a.onerror=function(e){var t=(h=c.objectStore(Md)).delete(n.modelPath);t.onsuccess=function(){return i.close(),r(a.error)},t.onerror=function(e){return i.close(),r(a.error)}}},d.onerror=function(e){return i.close(),r(d.error)},c.oncomplete=function(){null==u?i.close():u.oncomplete=function(){return i.close()}}}},a.onerror=function(e){return r(a.error)}}))},e.URL_SCHEME="indexeddb://",e}(),zd=function(e){return Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Bd.URL_SCHEME)?(t=e.slice(Bd.URL_SCHEME.length),new Bd(t)):null;var t};Ad.registerSaveRouter(zd),Ad.registerLoadRouter(zd);var Wd=function(){function e(){this.indexedDB=Ld()}return e.prototype.listModels=function(){return K(this,void 0,void 0,(function(){var e=this;return X(this,(function(t){return[2,new Promise((function(t,n){var r=e.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=function(){return Pd(r)},r.onsuccess=function(){var e=r.result,a=e.transaction(Md,"readonly"),i=a.objectStore(Md).getAll();i.onsuccess=function(){for(var e={},n=0,r=i.result;n<r.length;n++){var a=r[n];e[a.modelPath]=a.modelArtifactsInfo}t(e)},i.onerror=function(t){return e.close(),n(i.error)},a.oncomplete=function(){return e.close()}},r.onerror=function(e){return n(r.error)}}))]}))}))},e.prototype.removeModel=function(e){return K(this,void 0,void 0,(function(){var t=this;return X(this,(function(n){var r;return e=(r=e).startsWith(Bd.URL_SCHEME)?r.slice(Bd.URL_SCHEME.length):r,[2,new Promise((function(n,r){var a=t.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return Pd(a)},a.onsuccess=function(){var t,i=a.result,s=i.transaction(Md,"readwrite"),o=s.objectStore(Md),u=o.get(e);u.onsuccess=function(){if(null==u.result)return i.close(),r(new Error("Cannot find model with path '"+e+"' in IndexedDB."));var a=o.delete(e),s=function(){var a=(t=i.transaction(Od,"readwrite")).objectStore(Od).delete(e);a.onsuccess=function(){return n(u.result.modelArtifactsInfo)},a.onerror=function(e){return r(u.error)}};a.onsuccess=s,a.onerror=function(e){return s(),i.close(),r(u.error)}},u.onerror=function(e){return i.close(),r(u.error)},s.oncomplete=function(){null==t?i.close():t.oncomplete=function(){return i.close()}}},a.onerror=function(e){return r(a.error)}}))]}))}))},e}();if(Q().getBool("IS_BROWSER"))try{Fd.registerManager(Bd.URL_SCHEME,new Wd)}catch(j){}var Vd="/",Ud="tensorflowjs_models",Gd="info",Hd="model_topology",jd="weight_specs",qd="weight_data",Kd="model_metadata";function Xd(e){return{info:[Ud,e,Gd].join(Vd),topology:[Ud,e,Hd].join(Vd),weightSpecs:[Ud,e,jd].join(Vd),weightData:[Ud,e,qd].join(Vd),modelMetadata:[Ud,e,Kd].join(Vd)}}function Yd(e){var t=e.split(Vd);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Vd)}var Qd=function(){function e(e){if(!Q().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Xd(this.modelPath)}return e.prototype.save=function(e){return K(this,void 0,void 0,(function(){var t,n,r;return X(this,(function(a){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Rd(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Sd)return Buffer.from(e).toString("base64");for(var t=new Uint8Array(e),n="",r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),[2,{modelArtifactsInfo:r}]}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+r.modelTopologyBytes+", weightSpecsBytes="+r.weightSpecsBytes+", weightDataBytes="+r.weightDataBytes+".")}return[2]}))}))},e.prototype.load=function(){return K(this,void 0,void 0,(function(){var e,t,n,r,a,i,s;return X(this,(function(o){if(null==(e=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(t={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(t.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(t.weightSpecs=r,null!=(a=this.LS.getItem(this.keys.modelMetadata))&&(i=JSON.parse(a),t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,t.userDefinedMetadata=i.userDefinedMetadata),null==(s=this.LS.getItem(this.keys.weightData)))throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return t.weightData=function(e){if(Sd){var t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}for(var n=atob(e),r=new Uint8Array(n.length),a=0;a<n.length;++a)r.set([n.charCodeAt(a)],a);return r.buffer}(s),[2,t]}))}))},e.URL_SCHEME="localstorage://",e}(),Jd=function(e){return Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qd.URL_SCHEME)?(t=e.slice(Qd.URL_SCHEME.length),new Qd(t)):null;var t};Ad.registerSaveRouter(Jd),Ad.registerLoadRouter(Jd);var Zd=function(){function e(){he(Q().getBool("IS_BROWSER"),(function(){return"Current environment is not a web browser"})),he("undefined"==typeof window||void 0!==window.localStorage,(function(){return"Current browser does not appear to support localStorage"})),this.LS=window.localStorage}return e.prototype.listModels=function(){return K(this,void 0,void 0,(function(){var e,t,n,r,a,i;return X(this,(function(s){for(e={},t=Ud+Vd,n=Vd+Gd,r=0;r<this.LS.length;++r)(a=this.LS.key(r)).startsWith(t)&&a.endsWith(n)&&(i=Yd(a),e[i]=JSON.parse(this.LS.getItem(a)));return[2,e]}))}))},e.prototype.removeModel=function(e){return K(this,void 0,void 0,(function(){var t,n;return X(this,(function(r){var a;if(e=(a=e).startsWith(Qd.URL_SCHEME)?a.slice(Qd.URL_SCHEME.length):a,t=Xd(e),null==this.LS.getItem(t.info))throw new Error("Cannot find model at path '"+e+"'");return n=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,n]}))}))},e}();if(Q().getBool("IS_BROWSER"))try{Fd.registerManager(Qd.URL_SCHEME,new Zd)}catch(j){}function ep(e){return new Promise((function(e){return setTimeout(e)})).then(e)}var tp=function(){function e(t){if(!Q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}return e.prototype.save=function(e){return K(this,void 0,void 0,(function(){var t,n,r,a,i,s;return X(this,(function(o){switch(o.label){case 0:if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),(i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,i.href=a,[4,ep((function(){return i.dispatchEvent(new MouseEvent("click"))}))];case 2:return o.sent(),null==e.weightData?[3,4]:((s=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,s.href=t,[4,ep((function(){return s.dispatchEvent(new MouseEvent("click"))}))]);case 3:o.sent(),o.label=4;case 4:return[2,{modelArtifactsInfo:Rd(e)}]}}))}))},e.URL_SCHEME="downloads://",e}(),np=function(){function e(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}return e.prototype.load=function(){return K(this,void 0,void 0,(function(){var e,t,n=this;return X(this,(function(r){return e=this.files[0],t=this.files.slice(1),[2,new Promise((function(r,a){var i=new FileReader;i.onload=function(i){var s=JSON.parse(i.target.result),o=s.modelTopology;if(null!=o){0===t.length&&r({modelTopology:o});var u=s.weightsManifest;if(null!=u){var l;try{l=n.checkManifestAndWeightFiles(u,t)}catch(e){return void a(e)}var c=[],h=[],d=[];u.forEach((function(e){e.paths.forEach((function(e){h.push(e),d.push(null)})),c.push.apply(c,e.weights)})),u.forEach((function(e){e.paths.forEach((function(e){var t=new FileReader;t.onload=function(t){var n=t.target.result,a=h.indexOf(e);d[a]=n,-1===d.indexOf(null)&&r({modelTopology:o,weightSpecs:c,weightData:Td(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},t.onerror=function(t){return a("Failed to weights data from file of path '"+e+"'.")},t.readAsArrayBuffer(l[e])}))}))}else a(new Error("weightManifest field is missing from file "+e.name))}else a(new Error("modelTopology field is missing from file "+e.name))},i.onerror=function(t){return a("Failed to read model topology and weights manifest JSON from file '"+e.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},i.readAsText(e)}))]}))}))},e.prototype.checkManifestAndWeightFiles=function(e,t){for(var n=[],r=t.map((function(e){return Ed(e.name)})),a={},i=0,s=e;i<s.length;i++)s[i].paths.forEach((function(e){var i=Ed(e);if(-1!==n.indexOf(i))throw new Error("Duplicate file basename found in weights manifest: '"+i+"'");if(n.push(i),-1===r.indexOf(i))throw new Error("Weight file with basename '"+i+"' is not provided.");a[e]=t[r.indexOf(i)]}));if(n.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest ("+n.length+") and the number of weight files provided ("+t.length+").");return a},e}();function rp(e,t,n,r){!function(e){he(null!=e&&Array.isArray(e)&&e.length>0,(function(){return"promises must be a none empty array"}))}(e),function(e,t){he(e>=0&&e<=1,(function(){return"Progress fraction must be in range [0, 1], but got startFraction "+e})),he(t>=0&&t<=1,(function(){return"Progress fraction must be in range [0, 1], but got endFraction "+t})),he(t>=e,(function(){return"startFraction must be no more than endFraction, but got startFraction "+e+" and endFraction "+t}))}(n=null==n?0:n,r=null==r?1:r);var a=0;return Promise.all(e.map((function(i){return i.then((function(i){var s=n+ ++a/e.length*(r-n);return t(s),i})),i})))}function ap(e,t){return K(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c;return X(this,(function(h){switch(h.label){case 0:return null==t&&(t={}),n=null==t.fetchFunc?Q().platform.fetch:t.fetchFunc,r=e.map((function(e){return n(e,t.requestInit,{isBinary:!0})})),a=0,i=.5,null!=t.onProgress?[3,2]:[4,Promise.all(r)];case 1:return s=h.sent(),[3,4];case 2:return[4,rp(r,t.onProgress,a,i)];case 3:s=h.sent(),h.label=4;case 4:return o=s.map((function(e){return e.arrayBuffer()})),u=.5,l=1,null!=t.onProgress?[3,6]:[4,Promise.all(o)];case 5:return c=h.sent(),[3,8];case 6:return[4,rp(o,t.onProgress,u,l)];case 7:c=h.sent(),h.label=8;case 8:return[2,c]}}))}))}function ip(e){var t=this;return function(n,r,a){return void 0===r&&(r=""),K(t,void 0,void 0,(function(){var t,i,s,o,u,l,c,h,d,p;return X(this,(function(f){switch(f.label){case 0:if(t=n.map((function(){return!1})),i={},s=null!=a?a.map((function(){return!1})):[],o=[],n.forEach((function(e,n){var r=0;e.weights.forEach((function(e){var u="quantization"in e?e.quantization.dtype:e.dtype,l=wd[u]*me(e.shape),c=function(){t[n]=!0,null==i[n]&&(i[n]=[]),i[n].push({manifestEntry:e,groupOffset:r,sizeBytes:l})};null!=a?a.forEach((function(t,n){t===e.name&&(c(),s[n]=!0)})):c(),o.push(e.name),r+=l}))})),!s.every((function(e){return e})))throw u=a.filter((function(e,t){return!s[t]})),new Error("Could not find weights in manifest with names: "+u.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".");return l=t.reduce((function(e,t,n){return t&&e.push(n),e}),[]),c=[],l.forEach((function(e){n[e].paths.forEach((function(e){var t=r+(r.endsWith("/")?"":"/")+e;c.push(t)}))})),[4,e(c)];case 1:return h=f.sent(),d={},p=0,l.forEach((function(e){for(var t=n[e].paths.length,r=0,a=0;a<t;a++)r+=h[p+a].byteLength;for(var s=new ArrayBuffer(r),o=new Uint8Array(s),u=0,l=0;l<t;l++){var c=new Uint8Array(h[p+l]);o.set(c,u),u+=c.byteLength}i[e].forEach((function(e){var t=Id(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(var n in t)d[n]=t[n]})),p+=t})),[2,d]}}))}))}}Ad.registerSaveRouter((function(e){return Q().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(tp.URL_SCHEME)?function(e){return void 0===e&&(e="model"),new tp(e)}(e.slice(tp.URL_SCHEME.length)):null}));var sp=function(){function e(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(he("function"==typeof t.fetchFunc,(function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"})),this.fetch=t.fetchFunc):this.fetch=Q().platform.fetch,he(null!=e&&e.length>0,(function(){return"URL path for http must not be null, undefined or empty."})),Array.isArray(e)&&he(2===e.length,(function(){return"URL paths for http must have a length of 2, (actual length is "+e.length+")."})),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}return e.prototype.save=function(e){return K(this,void 0,void 0,(function(){var t,n,r,a;return X(this,(function(i){switch(i.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n},t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,t)];case 1:if((a=i.sent()).ok)return[2,{modelArtifactsInfo:Rd(e),responses:[a]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}}))}))},e.prototype.load=function(){return K(this,void 0,void 0,(function(){var e,t,n,r,a,i,s,o,u,l,c,h;return X(this,(function(d){switch(d.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(e=d.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+e.status+". Please verify this URL points to the model JSON of the model to load.");d.label=2;case 2:return d.trys.push([2,4,,5]),[4,e.json()];case 3:return t=d.sent(),[3,5];case 4:throw d.sent(),n="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?n+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":n+=" Please make sure the server is serving valid JSON for this request.",new Error(n);case 5:if(r=t.modelTopology,a=t.weightsManifest,i=t.generatedBy,s=t.convertedBy,o=t.format,u=t.userDefinedMetadata,null==r&&null==a)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return null==a?[3,7]:[4,this.loadWeights(a)];case 6:h=d.sent(),l=h[0],c=h[1],d.label=7;case 7:return[2,{modelTopology:r,weightSpecs:l,weightData:c,userDefinedMetadata:u,generatedBy:i,convertedBy:s,format:o}]}}))}))},e.prototype.loadWeights=function(e){return K(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u,l,c,h;return X(this,(function(d){switch(d.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,n=function(e){var t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=n[0],a=n[1],i=this.weightPathPrefix||r,s=[],o=0,u=e;o<u.length;o++)l=u[o],s.push.apply(s,l.weights);return c=[],e.forEach((function(e){e.paths.forEach((function(e){c.push(i+e+a)}))})),[4,ap(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return h=d.sent(),[2,[s,Td(h)]]}}))}))},e.URL_SCHEME_REGEX=/^https?:\/\//,e}();function op(e){return null!=e.match(sp.URL_SCHEME_REGEX)}var up=function(e,t){return"undefined"==typeof fetch?null:(Array.isArray(e)?e.every((function(e){return op(e)})):op(e))?lp(e,{onProgress:t}):null};function lp(e,t){return new sp(e,t)}Ad.registerSaveRouter(up),Ad.registerLoadRouter(up);var cp,hp=function(){function e(e){this.modelArtifacts=e}return e.prototype.load=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){return[2,this.modelArtifacts]}))}))},e}(),dp=function(){function e(e){this.saveHandler=e}return e.prototype.save=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(t){return[2,this.saveHandler(e)]}))}))},e}(),pp=Object.freeze({browserFiles:function(e){return new np(e)},browserHTTPRequest:function(e,t){return lp(e,t)},concatenateArrayBuffers:Td,decodeWeights:Id,encodeWeights:function(e,t){return K(this,void 0,void 0,(function(){var n,r,a,i,s,o=this;return X(this,(function(u){switch(u.label){case 0:for(n=[],r=[],a=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e),i=function(i){var s=a[i],u=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype)throw new Error("Unsupported dtype in weight '"+s+"': "+u.dtype);var l={name:s,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){var c=new Promise((function(e){return K(o,void 0,void 0,(function(){var t,n,r,a,i,s,o;return X(this,(function(l){switch(l.label){case 0:return[4,u.bytes()];case 1:for(t=l.sent(),n=t.reduce((function(e,t){return e+t.length}),0)+kd*t.length,r=new Uint8Array(n),a=0,i=0;i<t.length;i++)s=t[i],o=new Uint8Array(new Uint32Array([s.length]).buffer),r.set(o,a),a+=kd,r.set(s,a),a+=s.length;return e(r),[2]}}))}))}));r.push(c)}else r.push(u.data());null!=t&&(l.group=t),n.push(l)},s=0;s<a.length;++s)i(s);return[4,Promise.all(r)];case 1:return[2,{data:Cd(u.sent()),specs:n}]}}))}))},fromMemory:function(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new hp(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new hp({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new hp({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))},getLoadHandlers:function(e,t){return Ad.getLoadHandlers(e,t)},getModelArtifactsInfoForJSON:Rd,getSaveHandlers:function(e){return Ad.getSaveHandlers(e)},http:lp,isHTTPScheme:op,loadWeights:function(e,t,n,r){return void 0===t&&(t=""),K(this,void 0,void 0,(function(){return X(this,(function(a){return[2,ip((function(e){return ap(e,{requestInit:r})}))(e,t,n)]}))}))},registerLoadRouter:function(e){return Ad.registerLoadRouter(e)},registerSaveRouter:function(e){return Ad.registerSaveRouter(e)},weightsLoaderFactory:ip,withSaveHandler:function(e){return new dp(e)},copyModel:function(e,t){return K(this,void 0,void 0,(function(){return X(this,(function(n){return[2,$d(e,t,!1)]}))}))},listModels:function(){return K(this,void 0,void 0,(function(){var e,t,n,r,a,i,s;return X(this,(function(o){switch(o.label){case 0:e=Fd.getSchemes(),t={},n=0,r=e,o.label=1;case 1:return n<r.length?(a=r[n],[4,Fd.getManager(a).listModels()]):[3,4];case 2:for(s in i=o.sent())t[a+Dd+s]=i[s];o.label=3;case 3:return n++,[3,1];case 4:return[2,t]}}))}))},moveModel:function(e,t){return K(this,void 0,void 0,(function(){return X(this,(function(n){return[2,$d(e,t,!0)]}))}))},removeModel:function(e){return K(this,void 0,void 0,(function(){var t;return X(this,(function(n){return t=_d(e),[2,Fd.getManager(t.scheme).removeModel(t.path)]}))}))}}),fp=qn({confusionMatrix_:function(e,t,n){var r=On(e,"labels","confusionMatrix"),a=On(t,"predictions","confusionMatrix");he(null==n||n>0&&Number.isInteger(n),(function(){return"If provided, numClasses must be a positive integer, but got "+n})),he(1===r.rank,(function(){return"Expected the rank of labels to be 1, but got "+r.rank})),he(1===a.rank,(function(){return"Expected the rank of predictions to be 1, but got "+a.rank})),he(r.shape[0]===a.shape[0],(function(){return"Mismatch in the number of examples: "+r.shape[0]+" vs. "+a.shape[0]+". Labels and predictions should have the same number of elements."})),he(n>0&&Number.isInteger(n),(function(){return"numClasses is required to be a positive integer, but got "+n}));var i=dl(r.asType("int32"),n),s=dl(a.asType("int32"),n);return i.transpose().matMul(s).asType("int32")}});Object.freeze({confusionMatrix:fp});var mp=qn({fromPixels_:function(e,t){if(void 0===t&&(t=3),t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var n=!1,r=!1,a=!1,i=!1,s=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);s=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=te("FromPixels",It.backendName))return It.runKernel("FromPixels",{pixels:e},{numChannels:t});var o,u,l=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],c=l[0],h=l[1];if(s?o=e.getContext("2d").getImageData(0,0,c,h).data:r||n?o=e.data:(i||a)&&(null==cp&&(cp=document.createElement("canvas").getContext("2d")),cp.canvas.width=c,cp.canvas.height=h,cp.drawImage(e,0,0,c,h),o=cp.getImageData(0,0,c,h).data),4===t)u=new Int32Array(o);else{var d=c*h;u=new Int32Array(d*t);for(var p=0;p<d;p++)for(var f=0;f<t;++f)u[p*t+f]=o[4*p+f]}return nr(u,[h,c,t],"int32")}});Object.freeze({toPixels:function(e,t){return K(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k,I,C;return X(this,(function(S){switch(S.label){case 0:if(n=On(e,"img","toPixels"),e instanceof ot||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank "+n.rank+".");if(r=n.shape.slice(0,2),a=r[0],i=r[1],(s=2===n.rank?1:n.shape[2])>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);return[4,n.data()];case 1:return o=S.sent(),u=n.min(),l=n.max(),[4,Promise.all([u.data(),l.data()])];case 2:if(c=S.sent(),h=c[0],d=c[1],p=h[0],f=d[0],u.dispose(),l.dispose(),"float32"===n.dtype){if(p<0||f>1)throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range ["+p+" - "+f+"].")}else{if("int32"!==n.dtype)throw new Error("Unsupported type for toPixels: "+n.dtype+". Please use float32 or int32 tensors.");if(p<0||f>255)throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range ["+p+" - "+f+"].")}for(m="float32"===n.dtype?255:1,g=new Uint8ClampedArray(i*a*4),v=0;v<a*i;++v)y=void 0,b=void 0,x=void 0,w=void 0,1===s?(y=o[v]*m,b=o[v]*m,x=o[v]*m,w=255):3===s?(y=o[3*v]*m,b=o[3*v+1]*m,x=o[3*v+2]*m,w=255):4===s&&(y=o[4*v]*m,b=o[4*v+1]*m,x=o[4*v+2]*m,w=o[4*v+3]*m),g[0+(k=4*v)]=Math.round(y),g[k+1]=Math.round(b),g[k+2]=Math.round(x),g[k+3]=Math.round(w);return null!=t&&(t.width=i,t.height=a,I=t.getContext("2d"),C=new ImageData(g,i,a),I.putImageData(C,0,0)),n!==e&&n.dispose(),[2,g]}}))}))},fromPixels:mp});var gp=function(){function e(){}return e.prototype.getClassName=function(){return this.constructor.className},e.fromConfig=function(e,t){return new e(t)},e}(),vp=function(){function e(){this.classNameMap={}}return e.getMap=function(){return null==e.instance&&(e.instance=new e),e.instance},e.register=function(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]},e}();function yp(e){he(null!=e.className,(function(){return"Class being registered does not have the static className property defined."})),he("string"==typeof e.className,(function(){return"className is required to be a string, but got type "+typeof e.className})),he(e.className.length>0,(function(){return"Class being registered has an empty-string as its className, which is disallowed."})),vp.register(e)}Object.freeze({Serializable:gp,SerializationMap:vp,registerClass:yp}),Object.freeze({gpgpu_util:mo,webgl_util:Tn,forceHalfFloat:function(){Q().set("WEBGL_FORCE_F16_TEXTURES",!0)},MathBackendWebGL:Eu,setWebGLContext:Dt,GPGPUContext:go});var bp=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return q(t,e),t.prototype.minimize=function(e,t,n){void 0===t&&(t=!1);var r=this.computeGradients(e,n),a=r.value,i=r.grads;if(null!=n){var s=n.map((function(e){return{name:e.name,tensor:i[e.name]}}));this.applyGradients(s)}else this.applyGradients(i);return Dn(i),t?a:(a.dispose(),null)},Object.defineProperty(t.prototype,"iterations",{get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),t.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},t.prototype.computeGradients=function(e,t){return function(e,t){he(Le(e),(function(){return"The f passed in variableGrads(f) must be a function"})),he(null==t||Array.isArray(t)&&t.every((function(e){return e instanceof pt})),(function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"}));var n=null!=t;if(!n)for(var r in t=[],It.registeredVariables)t.push(It.registeredVariables[r]);var a=n?t.filter((function(e){return!e.trainable})):null,i=t.length;he((t=t.filter((function(e){return e.trainable}))).length>0,(function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+i+" variables is trainable."}));var s=It.gradients(e,t,null,!0),o=s.value,u=s.grads;he(u.some((function(e){return null!=e})),(function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."})),he(0===o.rank,(function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+o.rank+" tensor"}));var l={};return t.forEach((function(e,t){null!=u[t]&&(l[e.name]=u[t])})),null!=a&&a.forEach((function(e){return l[e.name]=null})),{value:o,grads:l}}(e,t)},t.prototype.dispose=function(){null!=this.iterations_&&Dn(this.iterations_)},t.prototype.saveIterations=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){return null==this.iterations_&&(this.iterations_=0),[2,{name:"iter",tensor:Zn(this.iterations_,"int32")}]}))}))},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){throw new Error("getWeights() is not implemented for this optimizer yet.")}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}))}))},t.prototype.extractIterations=function(e){return K(this,void 0,void 0,(function(){var t;return X(this,(function(n){switch(n.label){case 0:return t=this,[4,e[0].tensor.data()];case 1:return t.iterations_=n.sent()[0],[2,e.slice(1)]}}))}))},t}(gp);Object.defineProperty(bp,Symbol.hasInstance,{value:function(e){return null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients}});var xp=function(e){function t(t,n,r){void 0===r&&(r=null);var a=e.call(this)||this;return a.learningRate=t,a.rho=n,a.epsilon=r,a.accumulatedGrads=[],a.accumulatedUpdates=[],null==r&&(a.epsilon=It.backend.epsilon()),a}return q(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=It.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accum_grad",variable:An((function(){return cr(a).variable(!1)}))}),null==t.accumulatedUpdates[r]&&(t.accumulatedUpdates[r]={originalName:n+"/accum_var",variable:An((function(){return cr(a).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedGrads[r].variable,o=t.accumulatedUpdates[r].variable;An((function(){var e=s.mul(t.rho).add(i.square().mul(1-t.rho)),n=o.add(t.epsilon).sqrt().div(s.add(t.epsilon).sqrt()).mul(i),r=o.mul(t.rho).add(n.square().mul(1-t.rho));s.assign(e),o.assign(r);var u=n.mul(-t.learningRate).add(a);a.assign(u)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedUpdates&&(Dn(this.accumulatedGrads.map((function(e){return e.variable}))),Dn(this.accumulatedUpdates.map((function(e){return e.variable}))))},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return e=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){var t;return X(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=e.length/2,this.accumulatedGrads=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedUpdates=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.rho,t.epsilon)},t.className="Adadelta",t}(bp);yp(xp);var wp=function(e){function t(t,n){void 0===n&&(n=.1);var r=e.call(this)||this;return r.learningRate=t,r.initialAccumulatorValue=n,r.accumulatedGrads=[],r}return q(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=It.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accumulator",variable:An((function(){return sr(a.shape,t.initialAccumulatorValue).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedGrads[r].variable;An((function(){var e=s.add(i.square());s.assign(e);var n=i.div(e.add(It.backend.epsilon()).sqrt()).mul(-t.learningRate).add(a);a.assign(n)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedGrads&&Dn(this.accumulatedGrads.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulatedGrads.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulatedGrads=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},t.fromConfig=function(e,t){return new e(t.learningRate,t.initialAccumulatorValue)},t.className="Adagrad",t}(bp);yp(wp);var kp=function(e){function t(t,n,r,a){void 0===a&&(a=null);var i=e.call(this)||this;return i.learningRate=t,i.beta1=n,i.beta2=r,i.epsilon=a,i.accumulatedFirstMoment=[],i.accumulatedSecondMoment=[],An((function(){i.accBeta1=Zn(n).variable(),i.accBeta2=Zn(r).variable()})),null==a&&(i.epsilon=It.backend.epsilon()),i}return q(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);An((function(){var r=za(1,t.accBeta1),a=za(1,t.accBeta2);n.forEach((function(n,i){var s=It.registeredVariables[n];null==t.accumulatedFirstMoment[i]&&(t.accumulatedFirstMoment[i]={originalName:n+"/m",variable:An((function(){return cr(s).variable(!1)}))}),null==t.accumulatedSecondMoment[i]&&(t.accumulatedSecondMoment[i]={originalName:n+"/v",variable:An((function(){return cr(s).variable(!1)}))});var o=Array.isArray(e)?e[i].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[i].variable,l=t.accumulatedSecondMoment[i].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2).add(o.square().mul(1-t.beta2)),d=c.div(r),p=h.div(a);u.assign(c),l.assign(h);var f=d.div(p.sqrt().add(t.epsilon)).mul(-t.learningRate).add(s);s.assign(f)}})),t.accBeta1.assign(t.accBeta1.mul(t.beta1)),t.accBeta2.assign(t.accBeta2.mul(t.beta2))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Dn(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedSecondMoment&&Dn(this.accumulatedSecondMoment.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return e=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){var t,n=this;return X(this,(function(r){switch(r.label){case 0:return[4,this.extractIterations(e)];case 1:return e=r.sent(),An((function(){n.accBeta1.assign(La(n.beta1,n.iterations_+1)),n.accBeta2.assign(La(n.beta2,n.iterations_+1))})),t=e.length/2,this.accumulatedFirstMoment=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedSecondMoment=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)},t.className="Adam",t}(bp);yp(kp);var Ip=function(e){function t(t,n,r,a,i){void 0===a&&(a=null),void 0===i&&(i=0);var s=e.call(this)||this;return s.learningRate=t,s.beta1=n,s.beta2=r,s.epsilon=a,s.decay=i,s.accumulatedFirstMoment=[],s.accumulatedWeightedInfNorm=[],An((function(){s.iteration=Zn(0).variable(),s.accBeta1=Zn(n).variable()})),null==a&&(s.epsilon=It.backend.epsilon()),s}return q(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);An((function(){var r=za(1,t.accBeta1),a=Va(-t.learningRate,t.iteration.mul(t.decay).add(1));n.forEach((function(n,i){var s=It.registeredVariables[n];null==t.accumulatedFirstMoment[i]&&(t.accumulatedFirstMoment[i]={originalName:n+"/m",variable:cr(s).variable(!1)}),null==t.accumulatedWeightedInfNorm[i]&&(t.accumulatedWeightedInfNorm[i]={originalName:n+"/v",variable:cr(s).variable(!1)});var o=Array.isArray(e)?e[i].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[i].variable,l=t.accumulatedWeightedInfNorm[i].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2),d=o.abs(),p=h.maximum(d);u.assign(c),l.assign(p);var f=a.div(r).mul(c.div(p.add(t.epsilon))).add(s);s.assign(f)}})),t.iteration.assign(t.iteration.add(1)),t.accBeta1.assign(t.accBeta1.mul(t.beta1))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Dn(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedWeightedInfNorm&&Dn(this.accumulatedWeightedInfNorm.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){throw new Error("getWeights() is not implemented for Adamax yet.")}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(e){throw new Error("setWeights() is not implemented for Adamax yet.")}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)},t.className="Adamax",t}(bp);yp(Ip);var Cp=function(e){function t(t){var n=e.call(this)||this;return n.learningRate=t,n.setLearningRate(t),n}return q(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Array.isArray(e)?e[r].tensor:e[n];if(null!=a){var i=It.registeredVariables[n];An((function(){var e=t.c.mul(a).add(i);i.assign(e)}))}})),this.incrementIterations()},t.prototype.setLearningRate=function(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=function(e){return It.keep(e)}(Zn(-e))},t.prototype.dispose=function(){this.c.dispose()},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()]]}}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:if(0!==(e=t.sent()).length)throw new Error("SGD optimizer does not have settable weights.");return[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate}},t.fromConfig=function(e,t){return new e(t.learningRate)},t.className="SGD",t}(bp);yp(Cp);var Sp=function(e){function t(t,n,r){void 0===r&&(r=!1);var a=e.call(this,t)||this;return a.learningRate=t,a.momentum=n,a.useNesterov=r,a.accumulations=[],a.m=Zn(a.momentum),a}return q(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=It.registeredVariables[n];null==t.accumulations[r]&&(t.accumulations[r]={originalName:n+"/momentum",variable:An((function(){return cr(a).variable(!1)}))});var i=t.accumulations[r].variable,s=Array.isArray(e)?e[r].tensor:e[n];null!=s&&An((function(){var e,n=t.m.mul(i).add(s);e=t.useNesterov?t.c.mul(s.add(n.mul(t.m))).add(a):t.c.mul(n).add(a),i.assign(n),a.assign(e)}))})),this.incrementIterations()},t.prototype.dispose=function(){this.m.dispose(),null!=this.accumulations&&Dn(this.accumulations.map((function(e){return e.variable})))},t.prototype.setMomentum=function(e){this.momentum=e},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){return X(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulations.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){return X(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulations=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},t.fromConfig=function(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)},t.className="Momentum",t}(Cp);yp(Sp);var Np=function(e){function t(t,n,r,a,i){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===a&&(a=null),void 0===i&&(i=!1);var s=e.call(this)||this;if(s.learningRate=t,s.decay=n,s.momentum=r,s.epsilon=a,s.accumulatedMeanSquares=[],s.accumulatedMoments=[],s.accumulatedMeanGrads=[],s.centered=i,null==a&&(s.epsilon=It.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.");return s}return q(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=It.registeredVariables[n];null==t.accumulatedMeanSquares[r]&&(t.accumulatedMeanSquares[r]={originalName:n+"/rms",variable:An((function(){return cr(a).variable(!1)}))}),null==t.accumulatedMoments[r]&&(t.accumulatedMoments[r]={originalName:n+"/momentum",variable:An((function(){return cr(a).variable(!1)}))}),null==t.accumulatedMeanGrads[r]&&t.centered&&(t.accumulatedMeanGrads[r]={originalName:n+"/mg",variable:An((function(){return cr(a).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedMeanSquares[r].variable,o=t.accumulatedMoments[r].variable;An((function(){var e=s.mul(t.decay).add(i.square().mul(1-t.decay));if(t.centered){var n=t.accumulatedMeanGrads[r].variable,u=n.mul(t.decay).add(i.mul(1-t.decay)),l=o.mul(t.momentum).add(i.mul(t.learningRate).div(e.sub(u.square().add(t.epsilon)).sqrt()));s.assign(e),n.assign(u),o.assign(l);var c=a.sub(l);a.assign(c)}else{var h=s.mul(t.decay).add(i.square().mul(1-t.decay));l=o.mul(t.momentum).add(i.mul(t.learningRate).div(h.add(t.epsilon).sqrt())),s.assign(h),o.assign(l),c=a.sub(l),a.assign(c)}}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedMeanSquares&&Dn(this.accumulatedMeanSquares.map((function(e){return e.variable}))),null!=this.accumulatedMeanGrads&&this.centered&&Dn(this.accumulatedMeanGrads.map((function(e){return e.variable}))),null!=this.accumulatedMoments&&Dn(this.accumulatedMoments.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return K(this,void 0,void 0,(function(){var e;return X(this,(function(t){switch(t.label){case 0:return e=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&e.push.apply(e,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return K(this,void 0,void 0,(function(){var t;return X(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=this.centered?e.length/3:e.length/2,this.accumulatedMeanSquares=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedMoments=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}}))),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},t.fromConfig=function(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)},t.className="RMSProp",t}(bp);yp(Np),"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate&&setImmediate,ot.prototype.add=function(e){return Wr(this,e)},ot.prototype.broadcastTo=function(e){return el(this,e)},ot.prototype.div=function(e){return Va(this,e)},ot.prototype.divNoNan=function(e){return ul(this,e)},ot.prototype.squaredDifference=function(e){return Rl(this,e)},ot.prototype.tile=function(e){return ll(this,e)},ot.prototype.oneHot=function(e,t,n){return void 0===t&&(t=1),void 0===n&&(n=0),dl(this,e,t,n)},ot.prototype.transpose=function(e){return ii(this,e)},ot.prototype.pad=function(e,t){return pl(this,e,t)},ot.prototype.batchNorm=function(e,t,n,r,a){return Gu(this,e,t,n,r,a)},it=jh;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Tp,Ep,Rp=function(){return(Rp=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function Ap(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function Dp(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Tp||(Tp={})),function(e){!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Ep||(Ep={}));var Fp={};function _p(e){return Fp[e]}function $p(e,t,n,r){var a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){var i=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?i+1:a.inputIndexEnd;if("tensor"===a.type)return Op(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type)return t.inputNames.slice(i,s).map((function(e){return Op(e,n,r)}));var o=Array.prototype.slice.call(Op(t.inputNames.slice(i)[0],n,r).dataSync());return"number"===a.type?o[0]:o}var u=t.attrParams[e];return u&&u.value}function Op(e,t,n){var r=Pp(e),a=r[0],i=r[1],s=n.currentContextIds.find((function(e){return!!t[Lp(a,e)]}));return void 0!==s?t[Lp(a,s)][i]:void 0}function Mp(e,t){var n=Pp(e),r=n[0],a=n[1];return[Lp(r,t&&t.currentContextId),a]}function Lp(e,t){return t?e+"-"+t:e}function Pp(e){var t=e.lastIndexOf(":");return-1===t?[e,0]:[e.substring(0,t),Number(e.substring(t+1))]}function Bp(e,t){for(var n=[],r=0;r<e.length;r+=t)n.push(e.slice(r,r+t));return n}var zp=Object.freeze({json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Wp=Object.freeze({json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Vp=Object.freeze({json:[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}]}),Up=Object.freeze({json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}]}),Gp=Object.freeze({json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),Hp=Object.freeze({json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),jp=Object.freeze({json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]}),qp=Object.freeze({json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),Kp=Object.freeze({json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]}),Xp=Object.freeze({json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Yp=Object.freeze({json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Qp=Object.freeze({json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]}),Jp=Object.freeze({json:[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}]}),Zp=Object.freeze({json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]}),ef=Object.freeze({json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),tf=Object.freeze({json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}]}),nf=function(){function e(){var e=[zp,Wp,Vp,Up,Gp,Hp,jp,Xp,Kp,qp,Yp,Qp,Jp,Zp,ef,tf],t=[].concat.apply([],e.map((function(e){return e.json})));this.opMappers=t.reduce((function(e,t){return e[t.tfOpName]=t,e}),{})}return Object.defineProperty(e,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.transformGraph=function(e,t){var n=this;void 0===t&&(t={});var r=[],a=[],i=e.node.reduce((function(e,t){return e[t.name]=n.mapNode(t),t.op.startsWith("Placeholder")&&r.push(e[t.name]),"Const"===t.op&&a.push(e[t.name]),e}),{}),s=[],o=[],u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));var c=Object.keys(i);return c.forEach((function(e){var t=i[e];t.inputNames.forEach((function(e){var n=Mp(e)[0];t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(l).length?c.forEach((function(e){var t=i[e];0===t.children.length&&o.push(t)})):Object.keys(l).forEach((function(e){var t=Mp(e)[0],n=i[t];null!=n&&(n.signatureKey=l[e],o.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((function(e){var t=Mp(e)[0],n=i[t];n&&(n.signatureKey=u[e],s.push(n))})):s=r,{nodes:i,inputs:s,outputs:o,weights:a,placeholders:r,signature:t}},e.prototype.mapSignatureEntries=function(e){return Object.keys(e||{}).reduce((function(t,n){return t[e[n].name]=n,t}),{})},e.prototype.mapNode=function(e){var t=_p(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});var n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((function(e){return e.startsWith("^")?e.substr(1):e})),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((function(e,t){return e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e}),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((function(t,n){var r=n.type,a=void 0;switch(n.type){case"string":void 0===(a=af(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=af(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(a=ff(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=ff(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(a=of(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(a=of(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(a=pf(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=pf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(a=sf(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=sf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(a=gf(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=gf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(a=df(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=df(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(a=mf(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=mf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(a=lf(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=lf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(a=cf(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=cf(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+n.type+" for op: "+e.op)}return t[n.name]={value:a,type:r},t}),{})),n},e}();function rf(e,t){var n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){var t=Q().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function af(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return null!=a?rf(a.s,r):n}function sf(e,t,n){var r=e[t];return r?r.b:n}function of(e,t,n){var r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function uf(e){switch("string"==typeof e&&(e=Tp[e]),e){case Tp.DT_FLOAT:return"float32";case Tp.DT_INT32:case Tp.DT_INT64:case Tp.DT_INT8:case Tp.DT_UINT8:return"int32";case Tp.DT_BOOL:return"bool";case Tp.DT_DOUBLE:return"float32";case Tp.DT_STRING:return"string";default:return null}}function lf(e,t,n){var r=e[t];return r&&r.type?uf(r.type):n}function cf(e,t,n){var r=e[t];return r&&r.list&&r.list.type?r.list.type.map((function(e){return uf(e)})):n}function hf(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((function(e){return"number"==typeof e.size?e.size:parseInt(e.size,10)})):[]}function df(e,t,n){var r=e[t];return r&&r.shape?hf(r.shape):n}function pf(e,t,n){var r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((function(e){return"number"==typeof e?e:parseInt(e,10)})):n}function ff(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return a&&a.list&&a.list.s?a.list.s.map((function(e){return rf(e,r)})):n}function mf(e,t,n){var r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((function(e){return hf(e)})):n}function gf(e,t,n){var r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var vf=function(){function e(e,t,n){var r=this;this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((function(e){return r.getInput(e)})),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((function(e,t){return e[t]=r.getAttr(t),e}),{}))}return e.prototype.getInput=function(e){return Op(e,this.tensorMap,this.context)},e.prototype.getAttr=function(e,t){var n=this.node.rawAttrs[e];if(null!=n.tensor)return Op(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return of(this.node.rawAttrs,e,t);if(null!=n.s)return af(this.node.rawAttrs,e,t);if(null!=n.b)return sf(this.node.rawAttrs,e,t);if(null!=n.shape)return df(this.node.rawAttrs,e,t);if(null!=n.type)return lf(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pf(this.node.rawAttrs,e,t);if(null!=n.list.s)return ff(this.node.rawAttrs,e,t);if(null!=n.list.shape)return mf(this.node.rawAttrs,e,t);if(null!=n.list.b)return gf(this.node.rawAttrs,e,t);if(null!=n.list.type)return cf(this.node.rawAttrs,e,t)}return t},e}(),yf=function(){function e(t,n,r,a,i,s,o){this.name=t,this.dtype=n,this.maxSize=r,this.elementShape=a,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.id=e.nextId++}return Object.defineProperty(e.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),e.prototype.clearAndClose=function(){this.tensors.forEach((function(e){return e.tensor.dispose()})),this.tensors=[],this.closed_=!0},e.prototype.size=function(){return this.tensors.length},e.prototype.read=function(e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||e>=this.tensors.length)throw new Error("Tried to read from index "+e+", but array size is: "+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+e+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},e.prototype.readMany=function(e){var t=this;return e.map((function(e){return t.read(e)}))},e.prototype.write=function(e,t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index "+e+", but array is not resizeable and size is: "+this.maxSize);var n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+",\n          because the value dtype is "+t.dtype+", but TensorArray dtype is "+this.dtype+".");if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+e+"."),n&&n.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been read.");if(n&&n.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been written.");n.tensor=t,n.written=!0,this.tensors[e]=n},e.prototype.writeMany=function(e,t){var n=this;if(e.length!==t.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+e.length+" is not the same as tensors size: "+t.length+".");e.forEach((function(e,r){return n.write(e,t[r])}))},e.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+t);if(!e){e=[];for(var n=0;n<this.size();n++)e.push(n)}if(0===e.length)return Qn([],[0].concat(this.elementShape));var r=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Nr(r,0)},e.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+e);if(0===this.size())return Qn([],[0].concat(this.elementShape));for(var t=[],n=0;n<this.size();n++)t.push(n);var r=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+r[0].shape+")"),hr(r,0)},e.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+e.length+" vs. "+t.shape[0]);var n=Math.max.apply(Math,e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size ("+n+"  vs. "+this.maxSize+")");this.writeMany(e,Tr(t,0))},e.prototype.split=function(e,t){var n=this;if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);var r=0,a=e.map((function(e){return r+=e}));if(r!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        "+r+", and tensor's shape is: "+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+e.length+"), and the TensorArray is not marked as dynamically resizeable");var i=0===r?0:t.size/r,s=[];An((function(){t=t.reshape([1,r,i]);for(var o=0;o<e.length;++o){var u=[0,0===o?0:a[o-1],0],l=[1,e[o],i];s[o]=Ic(t,u,l).reshape(n.elementShape)}return s}));for(var o=[],u=0;u<e.length;u++)o[u]=u;this.writeMany(o,s)},e.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,n){void 0===n&&(n=""),Ye.assert(this.shapesEqualAllowUndefinedSize(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))},e.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0},e.nextId=0,e}();function bf(e,t,n){var r=function(e,t,n){switch(e.category){case"arithmetic":return An((function(){return function(e,t,n){switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Wr($p("a",e,t,n),$p("b",e,t,n))];case"AddN":return[Pu($p("tensors",e,t,n))];case"FloorMod":case"Mod":return[_a($p("a",e,t,n),$p("b",e,t,n))];case"Mul":return[Oa($p("a",e,t,n),$p("b",e,t,n))];case"RealDiv":case"Div":return[Va($p("a",e,t,n),$p("b",e,t,n))];case"DivNoNan":return[ul($p("a",e,t,n),$p("b",e,t,n))];case"FloorDiv":return[Ea($p("a",e,t,n),$p("b",e,t,n))];case"Sub":return[za($p("a",e,t,n),$p("b",e,t,n))];case"Minimum":return[Da($p("a",e,t,n),$p("b",e,t,n))];case"Maximum":return[Ra($p("a",e,t,n),$p("b",e,t,n))];case"Pow":return[La($p("a",e,t,n),$p("b",e,t,n))];case"SquaredDifference":return[Rl($p("a",e,t,n),$p("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"basic_math":return An((function(){return function(e,t,n){switch(e.op){case"Abs":case"ComplexAbs":return[Hr($p("x",e,t,n))];case"Acos":return[jr($p("x",e,t,n))];case"Acosh":return[qr($p("x",e,t,n))];case"Asin":return[Kr($p("x",e,t,n))];case"Asinh":return[Xr($p("x",e,t,n))];case"Atan":return[Yr($p("x",e,t,n))];case"Atan2":return[Na($p("x",e,t,n),$p("y",e,t,n))];case"Atanh":return[Qr($p("x",e,t,n))];case"Ceil":return[Jr($p("x",e,t,n))];case"Complex":return[Kn($p("real",e,t,n),$p("imag",e,t,n))];case"Cos":return[ea($p("x",e,t,n))];case"Cosh":return[ta($p("x",e,t,n))];case"Elu":return[zc($p("x",e,t,n))];case"Erf":return[na($p("x",e,t,n))];case"Exp":return[ra($p("x",e,t,n))];case"Expm1":return[aa($p("x",e,t,n))];case"Floor":return[ia($p("x",e,t,n))];case"Log":return[sa($p("x",e,t,n))];case"Log1p":return[oa($p("x",e,t,n))];case"Imag":return[Yn($p("x",e,t,n))];case"Neg":return[la($p("x",e,t,n))];case"Reciprocal":return[ca($p("x",e,t,n))];case"Real":return[Xn($p("x",e,t,n))];case"Relu":return[Uc($p("x",e,t,n))];case"Round":return[ha($p("x",e,t,n))];case"Selu":return[Hc($p("x",e,t,n))];case"Sigmoid":return[pa($p("x",e,t,n))];case"Sin":return[ya($p("x",e,t,n))];case"Sign":return[fa($p("x",e,t,n))];case"Sinh":return[ba($p("x",e,t,n))];case"Softplus":return[xa($p("x",e,t,n))];case"Sqrt":return[wa($p("x",e,t,n))];case"Square":return[El($p("x",e,t,n))];case"Tanh":return[Ca($p("x",e,t,n))];case"Tan":return[Ia($p("x",e,t,n))];case"Relu6":case"ClipByValue":return[Zr($p("x",e,t,n),$p("clipValueMin",e,t,n),$p("clipValueMax",e,t,n))];case"Rsqrt":return[da(Op(e.inputNames[0],t,n))];case"Prod":return[Bc($p("x",e,t,n),$p("axes",e,t,n))];case"LeakyRelu":return[Wc($p("x",e,t,n),$p("alpha",e,t,n))];case"Prelu":return[Vc($p("x",e,t,n),$p("alpha",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"control":return function(e,t,n){return Ap(void 0,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k,I,C,S,N,T,E,R,A,D,F,_,$,O,M;return Dp(this,(function(L){switch(L.label){case 0:switch(e.op){case"LoopCond":return[3,1];case"Switch":return[3,2];case"Merge":return[3,4];case"Enter":return[3,5];case"Exit":return[3,6];case"NextIteration":return[3,7];case"TensorArrayV3":return[3,8];case"TensorArrayWriteV3":return[3,9];case"TensorArrayReadV3":return[3,10];case"TensorArrayGatherV3":return[3,11];case"TensorArrayScatterV3":return[3,12];case"TensorArrayConcatV3":return[3,13];case"TensorArraySplitV3":return[3,14];case"TensorArraySizeV3":return[3,15];case"TensorArrayCloseV3":return[3,16]}return[3,17];case 1:return[2,[$p("pred",e,t,n).clone()]];case 2:return r=$p("pred",e,t,n),a=$p("data",e,t,n),[4,r.data()];case 3:return[2,L.sent()[0]?[void 0,a.clone()]:[a.clone(),void 0]];case 4:return[2,(i=e.inputNames.find((function(e){return void 0!==Op(e,t,n)})))?[Op(i,t,n).clone()]:void 0];case 5:return s=$p("frameName",e,t,n),o=$p("tensor",e,t,n),n.enterFrame(s),[2,[o.clone()]];case 6:return u=$p("tensor",e,t,n),n.exitFrame(),[2,[u.clone()]];case 7:return l=$p("tensor",e,t,n),n.nextIteration(),[2,[l.clone()]];case 8:return c=$p("size",e,t,n),h=$p("dtype",e,t,n),d=$p("elementShape",e,t,n),p=$p("dynamicSize",e,t,n),f=$p("clearAfterRead",e,t,n),m=$p("identicalElementShapes",e,t,n),g=$p("name",e,t,n),v=new yf(g,h,c,d,m,p,f),n.addTensorArray(v),[2,[Zn(v.id),Zn(1)]];case 9:return y=$p("tensorArrayId",e,t,n),b=$p("index",e,t,n),x=$p("tensor",e,t,n),n.getTensorArray(y).write(b,x),[2,[Zn(1)]];case 10:return w=$p("tensorArrayId",e,t,n),k=$p("index",e,t,n),[2,[n.getTensorArray(w).read(k)]];case 11:return I=$p("tensorArrayId",e,t,n),C=$p("indices",e,t,n),S=$p("dtype",e,t,n),[2,[n.getTensorArray(I).gather(C,S)]];case 12:return N=$p("tensorArrayId",e,t,n),T=$p("indices",e,t,n),E=$p("tensor",e,t,n),n.getTensorArray(N).scatter(T,E),[2,[Zn(1)]];case 13:return R=$p("tensorArrayId",e,t,n),A=n.getTensorArray(R),D=$p("dtype",e,t,n),[2,[A.concat(D)]];case 14:return F=$p("tensorArrayId",e,t,n),_=$p("tensor",e,t,n),$=$p("lengths",e,t,n),n.getTensorArray(F).split($,_),[2,[Zn(1)]];case 15:return O=$p("tensorArrayId",e,t,n),[2,[Zn(n.getTensorArray(O).size(),"int32")]];case 16:return M=$p("tensorArrayId",e,t,n),n.getTensorArray(M).clearAndClose(),[2,[Zn(0)]];case 17:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"convolution":return An((function(){return function(e,t,n){switch(e.op){case"Conv1D":var r=$p("stride",e,t,n),a=$p("pad",e,t,n),i=$p("dataFormat",e,t,n).toUpperCase(),s=$p("dilation",e,t,n);return[Yl($p("x",e,t,n),$p("filter",e,t,n),r,a,i,s)];case"Conv2D":r=$p("strides",e,t,n),a=$p("pad",e,t,n),i=$p("dataFormat",e,t,n).toUpperCase();var o=$p("dilations",e,t,n);return[Ql($p("x",e,t,n),$p("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])];case"_FusedConv2D":case"FusedDepthwiseConv2dNative":var u=$p("fusedOps",e,t,n),l=u[0],c=u[1],h="biasadd"===l,d="prelu"===c,p="fusedbatchnorm"===l,f=$p("numArgs",e,t,n);if(h){if(d&&2!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&1!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");r=$p("strides",e,t,n),a=$p("pad",e,t,n),i=$p("dataFormat",e,t,n).toUpperCase(),o=$p("dilations",e,t,n);var m=$p("args",e,t,n),g=m[0],v=m[1];return[("_FusedConv2D"===e.op?Hh.conv2d:Hh.depthwiseConv2d)({x:$p("x",e,t,n),filter:$p("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:g,activation:c,preluActivationWeights:v})];case"Conv2DBackpropInput":case"Conv2dTranspose":var y=$p("outputShape",e,t,n);return r=$p("strides",e,t,n),a=$p("pad",e,t,n),[ic($p("x",e,t,n),$p("filter",e,t,n),y,[r[1],r[2]],a)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":return r=$p("strides",e,t,n),a=$p("pad",e,t,n),o=$p("dilations",e,t,n),i=$p("dataFormat",e,t,n).toUpperCase(),[tc($p("input",e,t,n),$p("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])];case"Conv3D":return r=$p("strides",e,t,n),a=$p("pad",e,t,n),i=$p("dataFormat",e,t,n).toUpperCase(),o=$p("dilations",e,t,n),[Jl($p("x",e,t,n),$p("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])];case"AvgPool":r=$p("strides",e,t,n),a=$p("pad",e,t,n);var b=$p("kernelSize",e,t,n);return[yc($p("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a)];case"MaxPool":return r=$p("strides",e,t,n),a=$p("pad",e,t,n),b=$p("kernelSize",e,t,n),[vc($p("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a)];case"MaxPoolWithArgmax":r=$p("strides",e,t,n),a=$p("pad",e,t,n),b=$p("kernelSize",e,t,n);var x=$p("includeBatchInIndex",e,t,n),w=kc($p("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a,x);return[w.result,w.indexes];case"AvgPool3D":return r=$p("strides",e,t,n),a=$p("pad",e,t,n),b=$p("kernelSize",e,t,n),[wc($p("x",e,t,n),[b[1],b[2],b[3]],[r[1],r[2],r[3]],a)];case"MaxPool3D":return r=$p("strides",e,t,n),a=$p("pad",e,t,n),b=$p("kernelSize",e,t,n),[xc($p("x",e,t,n),[b[1],b[2],b[3]],[r[1],r[2],r[3]],a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"creation":return An((function(){return function(e,t,n){switch(e.op){case"Fill":var r=$p("shape",e,t,n),a=$p("dtype",e,t,n);return[sr(r,$p("value",e,t,n),a)];case"LinSpace":var i=$p("start",e,t,n);return[or(i,$p("stop",e,t,n),$p("num",e,t,n))];case"Multinomial":var s=$p("logits",e,t,n),o=$p("numSamples",e,t,n),u=$p("seed",e,t,n);return[hl(s,o,u)];case"OneHot":var l=$p("indices",e,t,n),c=$p("depth",e,t,n),h=$p("onValue",e,t,n),d=$p("offValue",e,t,n);return[dl(l,c,h,d)];case"Ones":return[ar($p("shape",e,t,n),$p("dtype",e,t,n))];case"OnesLike":return[lr($p("x",e,t,n))];case"RandomUniform":return[Tl($p("shape",e,t,n),$p("minval",e,t,n),$p("maxval",e,t,n),$p("dtype",e,t,n))];case"Range":return[ur(i=$p("start",e,t,n),$p("stop",e,t,n),$p("step",e,t,n),$p("dtype",e,t,n))];case"TruncatedNormal":r=$p("shape",e,t,n);var p=$p("mean",e,t,n),f=$p("stdDev",e,t,n);return u=$p("seed",e,t,n),[Al(r,p,f,$p("dtype",e,t,n),u)];case"Zeros":return[ir($p("shape",e,t,n),$p("dtype",e,t,n))];case"ZerosLike":return[cr($p("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"dynamic":return function(e,t,n){return Ap(void 0,void 0,void 0,(function(){var r,a,i,s,o,u,l,c;return Dp(this,(function(h){switch(h.label){case 0:switch(e.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":return[3,1];case"Where":return[3,5];case"ListDiff":return[3,7]}return[3,8];case 1:return r=$p("boxes",e,t,n),a=$p("scores",e,t,n),i=$p("maxOutputSize",e,t,n),s=$p("iouThreshold",e,t,n),o=$p("scoreThreshold",e,t,n),"NonMaxSuppressionV5"!==e.op?[3,3]:(u=$p("softNmsSigma",e,t,n),[4,Lh.nonMaxSuppressionWithScoreAsync(r,a,i,s,o,u)]);case 2:return[2,[(c=h.sent()).selectedIndices,c.selectedScores]];case 3:return[4,Lh.nonMaxSuppressionAsync(r,a,i,s,o)];case 4:return[2,[h.sent()]];case 5:return l=$p("condition",e,t,n).asType("bool"),[4,ol(l)];case 6:return c=[h.sent()],l.dispose(),[2,c];case 7:return[2,Er($p("x",e,t,n),$p("y",e,t,n))];case 8:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"evaluation":return An((function(){return function(e,t,n){if("TopKV2"===e.op){var r=$p("x",e,t,n),a=$p("k",e,t,n),i=$p("sorted",e,t,n),s=Jc(r,a,i);return[s.values,s.indices]}throw TypeError("Node type "+e.op+" is not implemented")}(e,t,n)}));case"image":return An((function(){return function(e,t,n){switch(e.op){case"ResizeBilinear":var r=$p("images",e,t,n),a=$p("size",e,t,n),i=$p("alignCorners",e,t,n);return[Lh.resizeBilinear(r,[a[0],a[1]],i)];case"ResizeNearestNeighbor":return r=$p("images",e,t,n),a=$p("size",e,t,n),i=$p("alignCorners",e,t,n),[Lh.resizeNearestNeighbor(r,[a[0],a[1]],i)];case"CropAndResize":var s=$p("image",e,t,n),o=$p("boxes",e,t,n),u=$p("boxInd",e,t,n),l=$p("cropSize",e,t,n),c=$p("method",e,t,n),h=$p("extrapolationValue",e,t,n);return[Lh.cropAndResize(s,o,u,l,c,h)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"graph":return An((function(){return function(e,t,n){switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":var r=$p("default",e,t,n);return[Op(e.name,t,n)||r];case"Placeholder":return[Op(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[$p("x",e,t,n).clone()];case"IdentityN":return $p("x",e,t,n).map((function(e){return e.clone()}));case"Shape":return[er($p("x",e,t,n).shape,"int32")];case"ShapeN":return $p("x",e,t,n).map((function(e){return er(e.shape)}));case"Size":return[Zn($p("x",e,t,n).size,"int32")];case"Rank":return[Zn($p("x",e,t,n).rank,"int32")];case"NoOp":return[Zn(1)];case"Print":var a=$p("x",e,t,n),i=$p("data",e,t,n),s=$p("message",e,t,n),o=$p("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(var u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,o));return[a];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"logical":return An((function(){return function(e,t,n){switch(e.op){case"Equal":return[Dl($p("a",e,t,n),$p("b",e,t,n))];case"NotEqual":return[Wl($p("a",e,t,n),$p("b",e,t,n))];case"Greater":return[_l($p("a",e,t,n),$p("b",e,t,n))];case"GreaterEqual":return[$l($p("a",e,t,n),$p("b",e,t,n))];case"Less":return[Ll($p("a",e,t,n),$p("b",e,t,n))];case"LessEqual":return[Pl($p("a",e,t,n),$p("b",e,t,n))];case"LogicalAnd":return[nl($p("a",e,t,n),$p("b",e,t,n))];case"LogicalNot":return[rl($p("a",e,t,n))];case"LogicalOr":return[al($p("a",e,t,n),$p("b",e,t,n))];case"Select":case"SelectV2":return[sl($p("condition",e,t,n),$p("a",e,t,n),$p("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"matrices":return An((function(){return function(e,t,n){switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[oc($p("a",e,t,n),$p("b",e,t,n),$p("transposeA",e,t,n),$p("transposeB",e,t,n))];case"Transpose":return[ii($p("x",e,t,n),$p("perm",e,t,n))];case"_FusedMatMul":var r=$p("fusedOps",e,t,n),a=r[0],i=r[1],s="biasadd"===a,o="prelu"===i,u=$p("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var l=$p("args",e,t,n),c=l[0],h=l[1];return[Hh.matMul({a:$p("a",e,t,n),b:$p("b",e,t,n),transposeA:$p("transposeA",e,t,n),transposeB:$p("transposeB",e,t,n),bias:c,activation:i,preluActivationWeights:h})];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"normalization":return An((function(){return function(e,t,n){switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Gu($p("x",e,t,n),$p("mean",e,t,n),$p("variance",e,t,n),$p("offset",e,t,n),$p("scale",e,t,n),$p("epsilon",e,t,n))];case"LRN":return[jc($p("x",e,t,n),$p("radius",e,t,n),$p("bias",e,t,n),$p("alpha",e,t,n),$p("beta",e,t,n))];case"Softmax":return[ri($p("x",e,t,n))];case"LogSoftmax":return[ai($p("x",e,t,n))];case"SparseToDense":return[ih($p("sparseIndices",e,t,n),$p("outputShape",e,t,n),$p("sparseValues",e,t,n),$p("defaultValue",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"reduction":return An((function(){return function(e,t,n){switch(e.op){case"Max":var r=$p("axis",e,t,n),a=$p("keepDims",e,t,n);return[$c($p("x",e,t,n),r,a)];case"Mean":return r=$p("axis",e,t,n),a=$p("keepDims",e,t,n),[Oc($p("x",e,t,n),r,a)];case"Min":return r=$p("axis",e,t,n),a=$p("keepDims",e,t,n),[Mc($p("x",e,t,n),r,a)];case"Sum":return r=$p("axis",e,t,n),a=$p("keepDims",e,t,n),[Pc($p("x",e,t,n),r,a)];case"All":return r=$p("axis",e,t,n),a=$p("keepDims",e,t,n),[Rc($p("x",e,t,n),r,a)];case"Any":return r=$p("axis",e,t,n),a=$p("keepDims",e,t,n),[Ac($p("x",e,t,n),r,a)];case"ArgMax":return r=$p("axis",e,t,n),[Dc($p("x",e,t,n),r)];case"ArgMin":return r=$p("axis",e,t,n),[Fc($p("x",e,t,n),r)];case"Prod":return r=$p("axis",e,t,n),a=$p("keepDims",e,t,n),[Bc($p("x",e,t,n),r,a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"slice_join":return An((function(){return function(e,t,n){switch(e.op){case"ConcatV2":case"Concat":var r=$p("n",e,t,n),a=$p("axis",e,t,n),i=$p("tensors",e,t,n);return i=i.slice(0,r),[hr(i,a)];case"GatherV2":case"Gather":a=$p("axis",e,t,n);var s=$p("x",e,t,n),o=$p("indices",e,t,n);return[Hl(s,o.asType("int32"),a)];case"ReverseV2":case"Reverse":return a=$p("axis",e,t,n),s=$p("x",e,t,n),[cc(s,a)];case"Slice":var u=$p("begin",e,t,n),l=$p("size",e,t,n);return[Ic($p("x",e,t,n),u,l)];case"StridedSlice":u=$p("begin",e,t,n);var c=$p("end",e,t,n),h=$p("strides",e,t,n),d=$p("beginMask",e,t,n),p=$p("endMask",e,t,n),f=$p("ellipsisMask",e,t,n),m=$p("newAxisMask",e,t,n),g=$p("shrinkAxisMask",e,t,n),v=$p("x",e,t,n);if(1===u.length&&v.shape.length>1)for(var y=1;y<v.shape.length;y++)u.push(0),c.push(v.shape[y]),h.push(h[0]);return[Qc(v,u,c,h,d,p,f,m,g)];case"Pack":return An((function(){var r=$p("axis",e,t,n),a=$p("tensors",e,t,n),i=a[0].shape,s=a[0].squeeze().shape,o=a.map((function(e){var t=Ye.arraysEqual(e.shape,i);if(!t&&!Ye.arraysEqual(e.squeeze().shape,s))throw new Error("the input tensors shape does not match");return t?e:e.reshape(i)}));return[Nr(o,r)]}));case"Unpack":return An((function(){var r=$p("axis",e,t,n),a=$p("tensor",e,t,n);return Tr(a,r)}));case"Tile":var b=$p("reps",e,t,n);return[ll($p("x",e,t,n),b)];case"Split":case"SplitV":a=$p("axis",e,t,n);var x=$p("numOrSizeSplits",e,t,n);return gr($p("x",e,t,n),x,a);case"ScatterNd":o=$p("indices",e,t,n);var w=$p("values",e,t,n),k=$p("shape",e,t,n);return[Zc(o,w,k)];case"GatherNd":var I=$p("x",e,t,n);return o=$p("indices",e,t,n),[sh(I,o)];case"SparseToDense":o=$p("sparseIndices",e,t,n),k=$p("outputShape",e,t,n);var C=$p("sparseValues",e,t,n),S=$p("defaultValue",e,t,n);return[ih(o,C,k,C.dtype===S.dtype?S:S.asType(C.dtype))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"spectral":return An((function(){return function(e,t,n){switch(e.op){case"FFT":return[eh($p("x",e,t,n))];case"IFFT":return[th($p("x",e,t,n))];case"RFFT":return[nh($p("x",e,t,n))];case"IRFFT":return[rh($p("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"transformation":return An((function(){return function(e,t,n){switch(e.op){case"Cast":return[br($p("x",e,t,n),$p("dtype",e,t,n))];case"ExpandDims":var r=$p("axis",e,t,n);return[kr($p("x",e,t,n),r)];case"Squeeze":return r=$p("axis",e,t,n),[Sr($p("x",e,t,n),r)];case"Reshape":return[Ir($p("x",e,t,n),$p("shape",e,t,n))];case"PadV2":case"Pad":return[pl($p("x",e,t,n),Bp($p("padding",e,t,n),2),$p("constantValue",e,t,n))];case"SpaceToBatchND":var a=$p("blockShape",e,t,n),i=Bp($p("paddings",e,t,n),2);return[Cr($p("x",e,t,n),a,i)];case"BatchToSpaceND":a=$p("blockShape",e,t,n);var s=Bp($p("crops",e,t,n),2);return[yr($p("x",e,t,n),a,s)];case"DepthToSpace":var o=$p("blockSize",e,t,n),u=$p("dataFormat",e,t,n).toUpperCase();return[wr($p("x",e,t,n),o,u)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"custom":var r=_p(e.op);if(r&&r.customExecutor)return r.customExecutor(new vf(e,t,n));throw TypeError("Custom op "+e.op+" is not registered.");default:throw TypeError("Unknown op '"+e.op+"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(e,t,n);return r instanceof Promise?r.then((function(e){return[].concat(e)})):[].concat(r)}var xf=function(){function e(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return e.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(e.prototype,"currentContext",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),e.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e},e.prototype.contextIdforContexts=function(e){return e?e.map((function(e){return 0===e.id&&0===e.iterationId?"":e.frameName+"-"+e.iterationId})).join("/"):""},e.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},e.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},e.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},e.prototype.getWeight=function(e){return this.weightMap[e]},e.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},e.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},e}();function wf(e,t,n){for(var r=new Set,a=[],i=null,s=null,o=new Set,u=Object.keys(e).map((function(e){return Pp(e)[0]})),l=t.slice();l.length>0;){var c=l.pop();(Cf(c)||Sf(c))&&null==i&&(s=(i=c).children.map((function(e){return e.name})).filter((function(e){return r.has(e)}))),r.add(c.name),null==n[c.name]&&-1===u.indexOf(c.name)&&(0!==c.inputs.length?c.inputs.forEach((function(e){o.has(e.name)||(o.add(e.name),l.push(e))})):a.push(c.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:s}}var kf=["Switch","Merge","Enter","Exit","NextIteration"],If=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function Cf(e){return kf.indexOf(e.op)>=0}function Sf(e){return If.indexOf(e.op)>=0}var Nf=function(){function e(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature}return Object.defineProperty(e.prototype,"weightMap",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map((function(t){return e[t].map((function(e){return e.id}))}));this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this._inputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this._outputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this._inputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this._outputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),e.prototype.getCompilationKey=function(e,t){var n=e.map((function(e){return e.name})).sort(),r=t.map((function(e){return e.name})).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)},e.prototype.compile=function(e,t){var n=wf(e,t,this.weightMap),r=n.missingInputs,a=n.dynamicNode,i=n.syncInputs;if(null!=a)throw new Error("This execution contains the node '"+a.name+"', which has the dynamic op '"+a.op+"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs ["+i+"]");if(r.length>0){var s=t.map((function(e){return e.name})),o=Object.keys(e);throw new Error("Cannot compute the outputs ["+s+"] from the provided inputs ["+o+"]. Missing the following inputs: ["+r+"]")}return function(e,t,n){var r=n.usedNodes,a=n.inputs,i=[];Object.keys(a).map((function(e){return Pp(e)[0]})).map((function(t){return e.nodes[t]})).forEach((function(e){r.has(e.name)&&i.push(e)})),e.weights.forEach((function(e){r.has(e.name)&&i.push(e)}));for(var s=new Set,o=[];i.length>0;){var u=i.pop();s.add(u.name),t[u.name]||o.push(u),u.children.forEach((function(e){!s.has(e.name)&&r.has(e.name)&&e.inputs.every((function(e){return s.has(e.name)}))&&i.push(e)}))}return o}(this.graph,this.weightMap,n)},e.prototype.execute=function(e,t){var n=this;e=this.mapInputs(e);var r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);var a=r.map((function(e){return n.graph.nodes[Pp(e)[0]]})),i=t.map((function(e){return n.graph.nodes[Pp(e)[0]]})),s=this.getCompilationKey(a,i),o=this.compiledMap.get(s);null==o&&(o=this.compile(e,i),this.compiledMap.set(s,o));var u={};return An((function(){var r=new xf(n._weightMap,u),a=Rp({},n.weightMap);Object.keys(e).forEach((function(t){var n=Pp(t),r=n[0],i=[];i[n[1]]=e[t],a[r]=i}));for(var i=n.getFrozenTensorIds(a),s={},l=0;l<o.length;l++){var c=o[l];if(!a[c.name]){var h=bf(c,a,r);if(h instanceof Promise)throw new Error("The execution of the op '"+c.op+"' returned a promise. Please use model.executeAsync() instead.");a[c.name]=h,n.checkTensorForDisposal(c.name,c,a,r,i,t,s)}}return t.map((function(e){return Op(e,a,r)}))}))},e.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map((function(t){return e[t]})).map((function(e){return e.map((function(e){return e.id}))})));return new Set(t)},e.prototype.checkTensorForDisposal=function(e,t,n,r,a,i,s){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((function(e){null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)})),t.inputs.forEach((function(e){if("control"!==e.category){var t=function(e,t,n){return t[Lp(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((function(e){if(e&&!a.has(e.id)){var t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}))}})))},e.prototype.executeAsync=function(e,t){return Ap(this,void 0,void 0,(function(){var n,r,a,i,s,o,u=this;return Dp(this,(function(l){switch(l.label){case 0:return e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t),n={},r=new xf(this._weightMap,n),[4,this.executeWithControlFlow(e,r,t)];case 1:return a=l.sent(),i=t.map((function(e){return Op(e,a,r)})),s=new Set(i.map((function(e){return e.id}))),o=new Set(Object.keys(e).map((function(t){return e[t].id}))),Object.keys(a).forEach((function(e){a[e].forEach((function(e){!e||e.isDisposed||s.has(e.id)||o.has(e.id)||-1!==u.weightIds.indexOf(e.id)||e.dispose()}))})),[2,i]}}))}))},e.prototype.executeWithControlFlow=function(e,t,n){return Ap(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b=this;return Dp(this,(function(x){switch(x.label){case 0:r=Object.keys(e),a=r.map((function(e){return b.graph.nodes[Pp(e)[0]]})),i=n.map((function(e){return b.graph.nodes[Pp(e)[0]]})),s=wf(e,i,this.weightMap),o=s.usedNodes,u=s.missingInputs,l=s.dynamicNode,c=s.syncInputs,h=a.concat(this.graph.weights).map((function(e){return{node:e,contexts:t.currentContext}})),d=Rp({},this.weightMap),Object.keys(e).forEach((function(t){var n=Pp(t),r=n[0],a=[];a[n[1]]=e[t],d[r]=a})),p={},f=this.getFrozenTensorIds(d),m={},x.label=1;case 1:return h.length>0?(g=this.processStack(a,h,t,d,m,f,n,p,o),[4,Promise.all(g)]):[3,3];case 2:return x.sent(),[3,1];case 3:if(null==l&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),(v=i.filter((function(e){return!Cf(e)&&!Op(e.name,d,t)})).map((function(e){return e.name}))).length>0)throw y="",null!=l&&(y="Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs ["+c+"]"),new Error("Cannot compute the outputs ["+v+"] from the provided inputs ["+r+"]. Consider providing the following inputs: ["+u+"]. "+y);return[2,d]}}))}))},e.prototype.processStack=function(e,t,n,r,a,i,s,o,u){for(var l=this,c=[],h=function(){var h=t.pop();n.currentContext=h.contexts;var p="";if("Enter"===h.node.op&&$p("isConstant",h.node,r,n)&&(p=Mp(h.node.name,n)[0]),-1===e.indexOf(h.node)){var f=bf(h.node,r,n);p||(p=Mp(h.node.name,n)[0]);var m=n.currentContext;f instanceof Promise?c.push(f.then((function(e){return r[p]=e,n.currentContext=m,l.checkTensorForDisposal(p,h.node,r,n,i,s,o),l.processChildNodes(h.node,t,n,r,a,u),e}))):(r[p]=f,d.checkTensorForDisposal(p,h.node,r,n,i,s,o),d.processChildNodes(h.node,t,n,r,a,u))}else d.processChildNodes(h.node,t,n,r,a,u)},d=this;t.length>0;)h();return c},e.prototype.processChildNodes=function(e,t,n,r,a,i){e.children.forEach((function(e){var s=Mp(e.name,n)[0];!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((function(e){return!!Op(e,r,n)}))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((function(e){return!!Op(e,r,n)}))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))}))},e.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach((function(t){return e.weightMap[t].forEach((function(e){return e.dispose()}))}))},e.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach((function(n){var r=e[n],a=Pp(n)[0],i=t.graph.nodes[a];if(i.attrParams.shape&&i.attrParams.shape.value){var s=i.attrParams.shape.value,o=s.length===r.shape.length&&r.shape.every((function(e,t){return-1===s[t]||s[t]===e}));Ye.assert(o,(function(){return"The shape of dict['"+i.name+"'] provided in model.execute(dict) must be ["+s+"], but was ["+r.shape+"]"}))}i.attrParams.dtype&&i.attrParams.dtype.value&&Ye.assert(r.dtype===i.attrParams.dtype.value,(function(){return"The dtype of dict['"+i.name+"'] provided in model.execute(dict) must be "+i.attrParams.dtype.value+", but was "+r.dtype}))}))},e.prototype.mapInputs=function(e){var t={};for(var n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t},e.prototype.checkInputs=function(e){var t=this,n=Object.keys(e).filter((function(e){var n=Pp(e)[0];return null==t.graph.nodes[n]}));if(n.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+n+"] that are not part of graph")},e.prototype.mapOutputs=function(e){var t=this;return e.map((function(e){return null!=t._signature&&null!=t._signature.outputs&&null!=t._signature.outputs[e]?t._signature.outputs[e].name:e}),{})},e.prototype.checkOutputs=function(e){var t=this;e.forEach((function(e){var n=Pp(e)[0];if(!t.graph.nodes[n])throw new Error("The output '"+e+"' is not found in the graph")}))},e}(),Tf=function(){function e(e,t){void 0===t&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}return Object.defineProperty(e.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),e.prototype.findIOHandler=function(){var e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=pp.browserHTTPRequest(e,this.loadOptions);else{var t=pp.getLoadHandlers(e,this.loadOptions.onProgress);if(0===t.length)t.push(pp.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one ("+t.length+") load handlers for URL '"+[e]+"'");this.handler=t[0]}},e.prototype.load=function(){return Ap(this,void 0,void 0,(function(){var e,t,n,r;return Dp(this,(function(a){switch(a.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return e=this,[4,this.handler.load()];case 1:return e.artifacts=a.sent(),t=this.artifacts.modelTopology,n={},null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=t.versions.producer+"."+t.versions.minConsumer,r=pp.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs),this.executor=new Nf(nf.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),[2,!0]}}))}))},e.prototype.save=function(e,t){return Ap(this,void 0,void 0,(function(){var t;return Dp(this,(function(n){if("string"==typeof e){if(0===(t=pp.getSaveHandlers(e)).length)throw new Error("Cannot find any save handlers for URL '"+e+"'");if(t.length>1)throw new Error("Found more than one ("+t.length+") save handlers for URL '"+e+"'");e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[2,e.save(this.artifacts)]}))}))},e.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},e.prototype.normalizeInputs=function(e){if(!(e instanceof ot||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the graph model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce((function(t,n,r){return t[n]=e[r],t}),{})},e.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},e.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var n=this.executor.execute(e,t);return n.length>1?n:n[0]},e.prototype.executeAsync=function(e,t){return Ap(this,void 0,void 0,(function(){var n;return Dp(this,(function(r){switch(r.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(n=r.sent()).length>1?n:n[0]]}}))}))},e.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce((function(t,n){return t[n]=[e[n]],t}),{})},e.prototype.dispose=function(){this.executor.dispose()},e}();function Ef(e,t){return void 0===t&&(t={}),Ap(this,void 0,void 0,(function(){var n;return Dp(this,(function(r){switch(r.label){case 0:if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");return null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file"),[4,(n=new Tf(e,t)).load()];case 1:return r.sent(),[2,n]}}))}))
/**
    * @license
    * Copyright 2019 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */}function Rf(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function Af(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function Df(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function Ff(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var _f=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var a=r[n];t.push(a)}return t},$f=function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]},Of=function(){function e(){this.root=new $f}return e.prototype.insert=function(e,t,n){for(var r=this.root,a=_f(e),i=0;i<a.length;i++)r.children[a[i]]||(r.children[a[i]]=new $f,r.children[a[i]].parent=r,r.children[a[i]].word[0]=r.word[0].concat(a[i])),r=r.children[a[i]],i===a.length-1&&(r.end=!0,r.word[1]=t,r.word[2]=n)},e.prototype.commonPrefixSearch=function(e){for(var t=[],n=this.root.children[e[0]],r=0;r<e.length&&n;r++)n.end&&t.push(n.word),n=n.children[e[r+1]];return t.length||t.push([[e[0]],0,0]),t},e}();var Mf=function(){function e(e){this.vocabulary=e,this.trie=new Of;for(var t=6;t<this.vocabulary.length;t++)this.trie.insert(this.vocabulary[t][0],this.vocabulary[t][1],t)}return e.prototype.encode=function(e){var t=[],n=[],r=[];e=function(e){return"▁"+e.normalize("NFKC").replace(/ /g,"▁")}(e);for(var a=_f(e),i=0;i<=a.length;i++)t.push({}),n.push(0),r.push(0);for(i=0;i<a.length;i++)for(var s=this.trie.commonPrefixSearch(a.slice(i)),o=0;o<s.length;o++){var u=s[o],l={key:u[0],score:u[1],index:u[2]};null==t[i+(c=u[0].length)][i]&&(t[i+c][i]=[]),t[i+c][i].push(l)}for(var c=0;c<=a.length;c++)for(var h in t[c]){var d=t[c][h];for(o=0;o<d.length;o++){var p=d[o],f=p.score+r[c-p.key.length];(0===r[c]||f>=r[c])&&(r[c]=f,n[c]=d[o].index)}}for(var m=[],g=n.length-1;g>0;)m.push(n[g]),g-=this.vocabulary[n[g]][0].length;var v=[],y=!1;for(i=0;i<m.length;i++){var b=m[i];y&&0===b||v.push(b),y=0===b}return v.reverse()},e}(),Lf="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/";function Pf(e){return Df(this,void 0,void 0,(function(){var t;return Ff(this,(function(n){switch(n.label){case 0:return[4,Bf(e)];case 1:return t=n.sent(),[2,new Mf(t)]}}))}))}function Bf(e){return void 0===e&&(e=Lf+"vocab.json"),Df(this,void 0,void 0,(function(){return Ff(this,(function(t){switch(t.label){case 0:return[4,Ye.fetch(e)];case 1:return[2,t.sent().json()]}}))}))}var zf=function(){function e(e,t){void 0===e&&(e=.85),void 0===t&&(t=[]),this.threshold=e,this.toxicityLabels=t}return e.prototype.loadModel=function(){return Rf(this,void 0,void 0,(function(){return Af(this,(function(e){return[2,Ef("https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1",{fromTFHub:!0})]}))}))},e.prototype.loadTokenizer=function(){return Rf(this,void 0,void 0,(function(){return Af(this,(function(e){return[2,Pf()]}))}))},e.prototype.load=function(){return Rf(this,void 0,void 0,(function(){var e,t,n,r=this;return Af(this,(function(a){switch(a.label){case 0:return[4,Promise.all([this.loadModel(),this.loadTokenizer()])];case 1:return e=a.sent(),t=e[0],n=e[1],this.model=t,this.tokenizer=n,this.labels=t.outputs.map((function(e){return e.name.split("/")[0]})),0===this.toxicityLabels.length?this.toxicityLabels=this.labels:Ye.assert(this.toxicityLabels.every((function(e){return r.labels.indexOf(e)>-1})),(function(){return"toxicityLabels argument must contain only items from the model heads "+r.labels.join(", ")+", got "+r.toxicityLabels.join(", ")})),[2]}}))}))},e.prototype.classify=function(e){return Rf(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u=this;return Af(this,(function(l){switch(l.label){case 0:for("string"==typeof e&&(e=[e]),t=e.map((function(e){return u.tokenizer.encode(e)})),n=t.map((function(e,t){return e.map((function(e,n){return[t,n]}))})),r=[],a=0;a<n.length;a++)r=r.concat(n[a]);return i=tr(r,[r.length,2],"int32"),s=er(Ye.flatten(t),"int32"),[4,this.model.executeAsync({Placeholder_1:i,Placeholder:s})];case 1:return o=l.sent(),i.dispose(),s.dispose(),[2,o.map((function(e,t){return{data:e,headIndex:t}})).filter((function(e){return u.toxicityLabels.indexOf(u.labels[e.headIndex])>-1})).map((function(t){for(var n=t.data.dataSync(),r=[],a=0;a<e.length;a++){var i=n.slice(2*a,2*a+2),s=null;Math.max(i[0],i[1])>u.threshold&&(s=i[0]<i[1]),r.push({probabilities:i,match:s})}return{label:u.labels[t.headIndex],results:r}}))]}}))}))},e}();
/**
    * @license
    * Copyright 2019 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */function Wf(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function Vf(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var Uf=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var a=r[n];t.push(a)}return t},Gf=function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]},Hf=function(){function e(){this.root=new Gf}return e.prototype.insert=function(e,t,n){for(var r=this.root,a=Uf(e),i=0;i<a.length;i++)r.children[a[i]]||(r.children[a[i]]=new Gf,r.children[a[i]].parent=r,r.children[a[i]].word[0]=r.word[0].concat(a[i])),r=r.children[a[i]],i===a.length-1&&(r.end=!0,r.word[1]=t,r.word[2]=n)},e.prototype.commonPrefixSearch=function(e){for(var t=[],n=this.root.children[e[0]],r=0;r<e.length&&n;r++)n.end&&t.push(n.word),n=n.children[e[r+1]];return t.length||t.push([[e[0]],0,0]),t},e}();var jf=function(){function e(e){this.vocabulary=e,this.trie=new Hf;for(var t=6;t<this.vocabulary.length;t++)this.trie.insert(this.vocabulary[t][0],this.vocabulary[t][1],t)}return e.prototype.encode=function(e){var t=[],n=[],r=[];e=function(e){return"▁"+e.normalize("NFKC").replace(/ /g,"▁")}(e);for(var a=Uf(e),i=0;i<=a.length;i++)t.push({}),n.push(0),r.push(0);for(i=0;i<a.length;i++)for(var s=this.trie.commonPrefixSearch(a.slice(i)),o=0;o<s.length;o++){var u=s[o],l={key:u[0],score:u[1],index:u[2]};null==t[i+(c=u[0].length)][i]&&(t[i+c][i]=[]),t[i+c][i].push(l)}for(var c=0;c<=a.length;c++)for(var h in t[c]){var d=t[c][h];for(o=0;o<d.length;o++){var p=d[o],f=p.score+r[c-p.key.length];(0===r[c]||f>=r[c])&&(r[c]=f,n[c]=d[o].index)}}for(var m=[],g=n.length-1;g>0;)m.push(n[g]),g-=this.vocabulary[n[g]][0].length;var v=[],y=!1;for(i=0;i<m.length;i++){var b=m[i];y&&0===b||v.push(b),y=0===b}return v.reverse()},e}();function qf(){return Wf(this,void 0,void 0,(function(){var e;return Vf(this,(function(t){switch(t.label){case 0:return[4,(e=new Xf).load()];case 1:return t.sent(),[2,e]}}))}))}function Kf(e){return void 0===e&&(e="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/vocab.json"),Wf(this,void 0,void 0,(function(){return Vf(this,(function(t){switch(t.label){case 0:return[4,Ye.fetch(e)];case 1:return[2,t.sent().json()]}}))}))}var Xf=function(){function e(){}return e.prototype.loadModel=function(){return Wf(this,void 0,void 0,(function(){return Vf(this,(function(e){return[2,Ef("https://tfhub.dev/tensorflow/tfjs-model/universal-sentence-encoder-lite/1/default/1",{fromTFHub:!0})]}))}))},e.prototype.load=function(){return Wf(this,void 0,void 0,(function(){var e,t,n;return Vf(this,(function(r){switch(r.label){case 0:return[4,Promise.all([this.loadModel(),Kf()])];case 1:return e=r.sent(),t=e[0],n=e[1],this.model=t,this.tokenizer=new jf(n),[2]}}))}))},e.prototype.embed=function(e){return Wf(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u=this;return Vf(this,(function(l){switch(l.label){case 0:for("string"==typeof e&&(e=[e]),t=e.map((function(e){return u.tokenizer.encode(e)})),n=t.map((function(e,t){return e.map((function(e,n){return[t,n]}))})),r=[],a=0;a<n.length;a++)r=r.concat(n[a]);return i=tr(r,[r.length,2],"int32"),s=er(Ye.flatten(t),"int32"),[4,this.model.executeAsync({indices:i,values:s})];case 1:return o=l.sent(),i.dispose(),s.dispose(),[2,o]}}))}))},e}();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yf{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Qf{refCount(e){return Jf("refCount")}incRef(e){return Jf("incRef")}timerAvailable(){return!0}time(e){return Jf("time")}read(e){return Jf("read")}readSync(e){return Jf("readSync")}readToGPU(e,t){return Jf("readToGPU")}numDataIds(){return Jf("numDataIds")}disposeData(e,t){return Jf("disposeData")}write(e,t,n){return Jf("write")}move(e,t,n,r,a){return Jf("move")}createTensorFromGPUData(e,t,n){return Jf("createTensorFromGPUData")}memory(){return Jf("memory")}floatPrecision(){return Jf("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Jf("dispose")}}function Jf(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,nm(e,t,n)}function em(e,t,n){return Math.max(e,Math.min(t,n))}function tm(e){return e%2==0?e:e+1}function nm(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function rm(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function am(e,t,n=""){rm(om(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function im(e){rm(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function sm(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function om(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function um(e){return e%1==0}function lm(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function cm(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function hm(e,t=(e=>0),n,r){return new Promise(((a,i)=>{let s=0;const o=()=>{if(e())return void a();s++;const u=t(s);null!=n&&s>=n?i():null!=r?r(o,u):setTimeout(o,u)};o()}))}function dm(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function pm(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),rm(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),rm(e.every((e=>um(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function fm(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:pm(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function mm(e,t){return gm(e,t)}function gm(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function vm(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function ym(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function bm(e){return"string"==typeof e||e instanceof String}function xm(e){return"number"==typeof e}function wm(e){return Array.isArray(e)?wm(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":xm(e)?"float32":bm(e)?"string":"boolean"==typeof e?"bool":"float32"}function km(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Im(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Cm(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Sm(e,t,n,r=!1){const a=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)a[t]=n[e+t]}else{const i=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)a[t]=Sm(e+t*o,s,n,r)}return a}function Nm(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Sm(0,e,t,n)}function Tm(e,t){const n=Em(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Em(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Rm(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Nm(e,new Float32Array(n));if("int32"===t)return Nm(e,new Int32Array(n));if("bool"===t)return Nm(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Am(e){e.forEach((t=>{rm(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Dm(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Fm(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function _m(e){return e&&e.then&&"function"==typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $m="tfjsflags";class Om{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Mm,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Lm().getBool("IS_TEST")||Lm().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Lm().getBool("IS_TEST")||Lm().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(_m(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if($m in e){e[$m].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function Mm(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Lm(){return Bm}let Pm,Bm=null;function zm(){if(null==Pm){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Pm=e}return Pm}function Wm(e,t){const n=function(){const e=zm();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Vm="Abs",Um="Acos",Gm="Acosh",Hm="Add",jm="AddN",qm="All",Km="Any",Xm="ArgMax",Ym="ArgMin",Qm="Asin",Jm="Asinh",Zm="Atan",eg="Atanh",tg="Atan2",ng="AvgPool",rg="AvgPoolGrad",ag="AvgPool3D",ig="AvgPool3DGrad",sg="BatchMatMul",og="BatchToSpaceND",ug="Bincount",lg="BitwiseAnd",cg="BroadcastArgs",hg="Cast",dg="Ceil",pg="ClipByValue",fg="Complex",mg="ComplexAbs",gg="Concat",vg="Conv2D",yg="Conv2DBackpropFilter",bg="Conv2DBackpropInput",xg="Conv3D",wg="Conv3DBackpropFilterV2",kg="Conv3DBackpropInputV2",Ig="Cos",Cg="Cosh",Sg="Cumprod",Ng="Cumsum",Tg="CropAndResize",Eg="DenseBincount",Rg="DepthToSpace",Ag="DepthwiseConv2dNative",Dg="DepthwiseConv2dNativeBackpropFilter",Fg="DepthwiseConv2dNativeBackpropInput",_g="Diag",$g="Dilation2D",Og="Dilation2DBackpropInput",Mg="Dilation2DBackpropFilter",Lg="RealDiv",Pg="Einsum",Bg="Elu",zg="EluGrad",Wg="Erf",Vg="Equal",Ug="Exp",Gg="ExpandDims",Hg="Expm1",jg="FFT",qg="Fill",Kg="FlipLeftRight",Xg="Floor",Yg="FloorDiv",Qg="FusedBatchNorm",Jg="GatherV2",Zg="GatherNd",ev="Greater",tv="GreaterEqual",nv="Identity",rv="IFFT",av="Imag",iv="IsFinite",sv="IsInf",ov="IsNan",uv="LeakyRelu",lv="Less",cv="LessEqual",hv="LinSpace",dv="Log",pv="Log1p",fv="LogicalAnd",mv="LogicalNot",gv="LogicalOr",vv="LRN",yv="LRNGrad",bv="Max",xv="Maximum",wv="MaxPool",kv="MaxPoolGrad",Iv="MaxPool3D",Cv="MaxPool3DGrad",Sv="MaxPoolWithArgmax",Nv="Mean",Tv="Min",Ev="Minimum",Rv="MirrorPad",Av="Mod",Dv="Multinomial",Fv="Multiply",_v="Neg",$v="NotEqual",Ov="NonMaxSuppressionV3",Mv="NonMaxSuppressionV4",Lv="NonMaxSuppressionV5",Pv="OnesLike",Bv="OneHot",zv="Pack",Wv="PadV2",Vv="Pow",Uv="Prelu",Gv="Prod",Hv="RaggedGather",jv="RaggedRange",qv="RaggedTensorToTensor",Kv="Range",Xv="Real",Yv="Reciprocal",Qv="Relu",Jv="Reshape",Zv="ResizeNearestNeighbor",ey="ResizeNearestNeighborGrad",ty="ResizeBilinear",ny="ResizeBilinearGrad",ry="Relu6",ay="Reverse",iy="Round",sy="Rsqrt",oy="ScatterNd",uy="TensorScatterUpdate",ly="SearchSorted",cy="Select",hy="Selu",dy="Slice",py="Sin",fy="Sinh",my="Sign",gy="Sigmoid",vy="Softplus",yy="Sqrt",by="Sum",xy="SpaceToBatchND",wy="SplitV",ky="Softmax",Iy="SparseFillEmptyRows",Cy="SparseReshape",Sy="SparseSegmentMean",Ny="SparseSegmentSum",Ty="SparseToDense",Ey="SquaredDifference",Ry="Square",Ay="StaticRegexReplace",Dy="StridedSlice",Fy="StringNGrams",_y="StringSplit",$y="StringToHashBucketFast",Oy="Sub",My="Tan",Ly="Tanh",Py="Tile",By="TopK",zy="Transform",Wy="Transpose",Vy="Unique",Uy="Unpack",Gy="UnsortedSegmentSum",Hy="ZerosLike",jy="Step",qy="RotateWithOffset",Ky="_FusedMatMul",Xy="FusedConv2D",Yy="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qy(...e){Lm().getBool("IS_TEST")||Lm().getBool("PROD")||console.warn(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Jy=Wm("kernelRegistry",(()=>new Map)),Zy=Wm("gradRegistry",(()=>new Map));function eb(e,t){const n=ib(e,t);return Jy.get(n)}function tb(e){return Zy.get(e)}function nb(e){const t=Jy.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[i,s]=a,[o]=i.split("_");o===e&&n.push(s)}return n}function rb(e){const{kernelName:t,backendName:n}=e,r=ib(t,n);Jy.has(r)&&Qy(`The kernel '${t}' for backend '${n}' is already registered`),Jy.set(r,e)}function ab(e){const{kernelName:t}=e;Zy.has(t)&&Lm().getBool("DEBUG")&&Qy(`Overriding the gradient for '${t}'`),Zy.set(t,e)}function ib(e,t){return`${t}_${e}`}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var ob=lb,ub=null;try{ub=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(q){}function lb(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function cb(e){return!0===(e&&e.__isLong__)}lb.prototype.__isLong__,Object.defineProperty(lb.prototype,"__isLong__",{value:!0}),lb.isLong=cb;var hb={},db={};function pb(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=db[e])?r:(n=mb(e,(0|e)<0?-1:0,!0),a&&(db[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=hb[e])?r:(n=mb(e,e<0?-1:0,!1),a&&(hb[e]=n),n)}function fb(e,t){if(isNaN(e))return t?Cb:Ib;if(t){if(e<0)return Cb;if(e>=xb)return Rb}else{if(e<=-wb)return Ab;if(e+1>=wb)return Eb}return e<0?fb(-e,t).neg():mb(e%bb|0,e/bb|0,t)}function mb(e,t,n){return new lb(e,t,n)}lb.fromInt=pb,lb.fromNumber=fb,lb.fromBits=mb;var gb=Math.pow;function vb(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return Ib;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return vb(e.substring(1),t,n).neg();for(var a=fb(gb(n,8)),i=Ib,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),n);if(o<8){var l=fb(gb(n,o));i=i.mul(l).add(fb(u))}else i=(i=i.mul(a)).add(fb(u))}return i.unsigned=t,i}function yb(e,t){return"number"==typeof e?fb(e,t):"string"==typeof e?vb(e,t):mb(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}lb.fromString=vb,lb.fromValue=yb;var bb=4294967296,xb=bb*bb,wb=xb/2,kb=pb(1<<24),Ib=pb(0);lb.ZERO=Ib;var Cb=pb(0,!0);lb.UZERO=Cb;var Sb=pb(1);lb.ONE=Sb;var Nb=pb(1,!0);lb.UONE=Nb;var Tb=pb(-1);lb.NEG_ONE=Tb;var Eb=mb(-1,2147483647,!1);lb.MAX_VALUE=Eb;var Rb=mb(-1,-1,!0);lb.MAX_UNSIGNED_VALUE=Rb;var Ab=mb(0,-2147483648,!1);lb.MIN_VALUE=Ab;var Db=lb.prototype;Db.toInt=function(){return this.unsigned?this.low>>>0:this.low},Db.toNumber=function(){return this.unsigned?(this.high>>>0)*bb+(this.low>>>0):this.high*bb+(this.low>>>0)},Db.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Ab)){var t=fb(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=fb(gb(e,6),this.unsigned),i=this,s="";;){var o=i.div(a),u=(i.sub(o.mul(a)).toInt()>>>0).toString(e);if((i=o).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},Db.getHighBits=function(){return this.high},Db.getHighBitsUnsigned=function(){return this.high>>>0},Db.getLowBits=function(){return this.low},Db.getLowBitsUnsigned=function(){return this.low>>>0},Db.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ab)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},Db.isZero=function(){return 0===this.high&&0===this.low},Db.eqz=Db.isZero,Db.isNegative=function(){return!this.unsigned&&this.high<0},Db.isPositive=function(){return this.unsigned||this.high>=0},Db.isOdd=function(){return 1==(1&this.low)},Db.isEven=function(){return 0==(1&this.low)},Db.equals=function(e){return cb(e)||(e=yb(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},Db.eq=Db.equals,Db.notEquals=function(e){return!this.eq(e)},Db.neq=Db.notEquals,Db.ne=Db.notEquals,Db.lessThan=function(e){return this.comp(e)<0},Db.lt=Db.lessThan,Db.lessThanOrEqual=function(e){return this.comp(e)<=0},Db.lte=Db.lessThanOrEqual,Db.le=Db.lessThanOrEqual,Db.greaterThan=function(e){return this.comp(e)>0},Db.gt=Db.greaterThan,Db.greaterThanOrEqual=function(e){return this.comp(e)>=0},Db.gte=Db.greaterThanOrEqual,Db.ge=Db.greaterThanOrEqual,Db.compare=function(e){if(cb(e)||(e=yb(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Db.comp=Db.compare,Db.negate=function(){return!this.unsigned&&this.eq(Ab)?Ab:this.not().add(Sb)},Db.neg=Db.negate,Db.add=function(e){cb(e)||(e=yb(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,o=e.low>>>16,u=0,l=0,c=0,h=0;return c+=(h+=a+(65535&e.low))>>>16,l+=(c+=r+o)>>>16,u+=(l+=n+s)>>>16,u+=t+i,mb((c&=65535)<<16|(h&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},Db.subtract=function(e){return cb(e)||(e=yb(e)),this.add(e.neg())},Db.sub=Db.subtract,Db.multiply=function(e){if(this.isZero())return Ib;if(cb(e)||(e=yb(e)),ub)return mb(ub.mul(this.low,this.high,e.low,e.high),ub.get_high(),this.unsigned);if(e.isZero())return Ib;if(this.eq(Ab))return e.isOdd()?Ab:Ib;if(e.eq(Ab))return this.isOdd()?Ab:Ib;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(kb)&&e.lt(kb))return fb(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,o=e.low>>>16,u=65535&e.low,l=0,c=0,h=0,d=0;return h+=(d+=a*u)>>>16,c+=(h+=r*u)>>>16,h&=65535,c+=(h+=a*o)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*o)>>>16,c&=65535,l+=(c+=a*s)>>>16,l+=t*u+n*o+r*s+a*i,mb((h&=65535)<<16|(d&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},Db.mul=Db.multiply,Db.divide=function(e){if(cb(e)||(e=yb(e)),e.isZero())throw Error("division by zero");var t,n,r;if(ub)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?mb((this.unsigned?ub.div_u:ub.div_s)(this.low,this.high,e.low,e.high),ub.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?Cb:Ib;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Cb;if(e.gt(this.shru(1)))return Nb;r=Cb}else{if(this.eq(Ab))return e.eq(Sb)||e.eq(Tb)?Ab:e.eq(Ab)?Sb:(t=this.shr(1).div(e).shl(1)).eq(Ib)?e.isNegative()?Sb:Tb:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(Ab))return this.unsigned?Cb:Ib;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=Ib}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),i=a<=48?1:gb(2,a-48),s=fb(t),o=s.mul(e);o.isNegative()||o.gt(n);)o=(s=fb(t-=i,this.unsigned)).mul(e);s.isZero()&&(s=Sb),r=r.add(s),n=n.sub(o)}return r},Db.div=Db.divide,Db.modulo=function(e){return cb(e)||(e=yb(e)),ub?mb((this.unsigned?ub.rem_u:ub.rem_s)(this.low,this.high,e.low,e.high),ub.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},Db.mod=Db.modulo,Db.rem=Db.modulo,Db.not=function(){return mb(~this.low,~this.high,this.unsigned)},Db.and=function(e){return cb(e)||(e=yb(e)),mb(this.low&e.low,this.high&e.high,this.unsigned)},Db.or=function(e){return cb(e)||(e=yb(e)),mb(this.low|e.low,this.high|e.high,this.unsigned)},Db.xor=function(e){return cb(e)||(e=yb(e)),mb(this.low^e.low,this.high^e.high,this.unsigned)},Db.shiftLeft=function(e){return cb(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?mb(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):mb(0,this.low<<e-32,this.unsigned)},Db.shl=Db.shiftLeft,Db.shiftRight=function(e){return cb(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?mb(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):mb(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Db.shr=Db.shiftRight,Db.shiftRightUnsigned=function(e){if(cb(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?mb(this.low>>>e|t<<32-e,t>>>e,this.unsigned):mb(32===e?t:t>>>e-32,0,this.unsigned)},Db.shru=Db.shiftRightUnsigned,Db.shr_u=Db.shiftRightUnsigned,Db.toSigned=function(){return this.unsigned?mb(this.low,this.high,!1):this},Db.toUnsigned=function(){return this.unsigned?this:mb(this.low,this.high,!0)},Db.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Db.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},Db.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},lb.fromBytes=function(e,t,n){return n?lb.fromBytesLE(e,t):lb.fromBytesBE(e,t)},lb.fromBytesLE=function(e,t){return new lb(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},lb.fromBytesBE=function(e,t){return new lb(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Fb=ob||n({__proto__:null,default:ob},[ob]);function _b(e){return Fb.fromString(e,!0,16)}const $b=_b("c3a5c85c97cb3127"),Ob=_b("b492b66fbe98f273"),Mb=_b("9ae16a3b2f90404f");function Lb(e){return e.xor(e.shru(47))}function Pb(e,t,n){const r=e.slice(t,t+n);return Fb.fromBytes(Array.from(r),!0,!0)}function Bb(e,t){return Pb(e,t,8)}function zb(e,t){return Pb(e,t,4)}function Wb(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Vb(e,t,n=_b("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ub(e,t,n,r){return function(e,t,n,r,a,i){a=a.add(e),i=Wb(i.add(a).add(r),21);const s=a;return a=(a=a.add(t)).add(n),i=i.add(Wb(a,44)),[a.add(r),i.add(s)]}(Bb(e,t),Bb(e,t+8),Bb(e,t+16),Bb(e,t+24),n,r)}function Gb(e,t=e.length){const n=Fb.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Mb.add(2*t),r=Bb(e,0).add(Mb),a=Bb(e,t-8);return Vb(Wb(a,37).mul(n).add(r),Wb(r,25).add(a).mul(n),n)}if(t>=4){const n=Mb.add(2*t);return Vb(zb(e,0).shl(3).add(t),zb(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Lb(Mb.mul(n).xor($b.mul(r))).mul(Mb)}return Mb}(e,t):function(e,t=e.length){const n=Mb.add(2*t),r=Bb(e,0).mul(Ob),a=Bb(e,8),i=Bb(e,t-8).mul(n),s=Bb(e,t-16).mul(Mb);return Vb(Wb(r.add(a),43).add(Wb(i,30)).add(s),r.add(Wb(a.add(Mb),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Mb.add(2*t),r=Bb(e,0).mul(Mb),a=Bb(e,8),i=Bb(e,t-8).mul(n),s=Bb(e,t-16).mul(Mb),o=Wb(r.add(a),43).add(Wb(i,30)).add(s),u=Vb(o,r.add(Wb(a.add(Mb),18)).add(i),n),l=Bb(e,16).mul(n),c=Bb(e,24),h=o.add(Bb(e,t-32)).mul(n),d=u.add(Bb(e,t-24)).mul(n);return Vb(Wb(l.add(c),43).add(Wb(h,30)).add(d),l.add(Wb(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(Ob).add(113),i=Lb(a.mul(Mb).add(113)).mul(Mb),s=[Fb.UZERO,Fb.UZERO],o=[Fb.UZERO,Fb.UZERO];r=r.mul(Mb).add(Bb(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Wb(r.add(a).add(s[0]).add(Bb(e,u+8)),37).mul(Ob),a=Wb(a.add(s[1]).add(Bb(e,u+48)),42).mul(Ob),r=r.xor(o[1]),a=a.add(s[0]).add(Bb(e,u+40)),i=Wb(i.add(o[0]),33).mul(Ob),s=Ub(e,u,s[1].mul(Ob),r.add(o[0])),o=Ub(e,u+32,i.add(o[1]),a.add(Bb(e,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=Ob.add(i.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),r=Wb(r.add(a).add(s[0]).add(Bb(e,u+8)),37).mul(h),a=Wb(a.add(s[1]).add(Bb(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(s[0].mul(9).add(Bb(e,u+40))),i=Wb(i.add(o[0]),33).mul(h),s=Ub(e,u,s[1].mul(h),r.add(o[0])),o=Ub(e,u+32,i.add(o[1]),a.add(Bb(e,u+16))),[i,r]=[r,i],Vb(Vb(s[0],o[0],h).add(Lb(a).mul($b)).add(i),Vb(s[1],o[1],h).add(r),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hb(e,t){return"string"===t?Kb(e):jb([e],t)}function jb(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Qb(e)),Lm().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function qb(){return Lm().platform.now()}function Kb(e,t="utf-8"){return t=t||"utf-8",Lm().platform.encode(e,t)}function Xb(e,t="utf-8"){return t=t||"utf-8",Lm().platform.decode(e,t)}function Yb(e){return null!=Lm().platform.isTypedArray?Lm().platform.isTypedArray(e):sb(e)}function Qb(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||_m(e)||null==e||Yb(e)&&n)t.push(e);else if(Array.isArray(e)||Yb(e))for(let r=0;r<e.length;++r)Qb(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)Qb(e[a],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jb{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ex)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const s=qb();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:qb()-s})}if(Lm().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Zb(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Zb(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ex{logKernelProfile(e,t,n,r,a,i){const s="number"==typeof r?cm(`${r}ms`,9):r.error,o=cm(e,25),u=t.rank,l=t.size,c=cm(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${s}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tx=20,nx=3,rx=7;function ax(e,t,n,r){const a=Cm(t),i=function(e,t,n,r){const a=sm(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?ux(e):e;if(o>1)for(let e=0;e<a/i;e++){const t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],ix(u[t+e],0,n).length)}return s}(e,t,n,a),s=t.length,o=ox(e,t,n,a,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${s}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function ix(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(rx))} + ${parseFloat(e[1].toFixed(rx))}j`:bm(e)?`'${e}'`:"bool"===n?sx(e):parseFloat(e.toFixed(rx)).toString(),cm(r,t)}function sx(e){return 0===e?"false":"true"}function ox(e,t,n,r,a,i=!0){const s="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){return[ix(ux(e)[0],0,n)]}return"bool"===n?[sx(e[0])]:[e[0].toString()]}if(1===u){if(o>tx){const t=nx*s;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-nx)*s,o*s));return"complex64"===n&&(r=ux(r),i=ux(i)),["["+r.map(((e,t)=>ix(e,a[t],n))).join(", ")+", ..., "+i.map(((e,t)=>ix(e,a[o-nx+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ux(e):Array.from(e)).map(((e,t)=>ix(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*s,d=[];if(o>tx){for(let t=0;t<nx;t++){const r=t*h,i=r+h;d.push(...ox(e.slice(r,i),l,n,c,a,!1))}d.push("...");for(let t=o-nx;t<o;t++){const r=t*h,i=r+h;d.push(...ox(e.slice(r,i),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,i=r+h;d.push(...ox(e.slice(r,i),l,n,c,a,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function ux(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lx{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=sm(e),null!=n){const e=n.length;rm(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||gm(t,this.size),this.strides=Cm(e)}set(e,...t){0===t.length&&(t=[0]),rm(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return cx().makeTensor(this.values,this.shape,this.dtype)}}let cx=null,hx=null;class dx{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=sm(e),this.strides=Cm(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return hx.buffer(this.shape,this.dtype,e)}bufferSync(){return hx.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Nm(this.shape,e,"complex64"===this.dtype)}arraySync(){return Nm(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=cx().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Xb(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),cx().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=cx().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Xb(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await cx().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(cx().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return hx.print(this,e)}clone(){return this.throwIfDisposed(),hx.clone(this)}toString(e=!1){return ax(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),hx.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),cx().makeVariable(this,e,t,n)}}function px(){return Wm("Tensor",(()=>dx))}Object.defineProperty(dx,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),px();class fx extends dx{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!om(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);cx().disposeTensor(this),this.dataId=e.dataId,cx().incRef(this,null)}dispose(){cx().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var mx,gx,vx,yx,bx;Object.defineProperty(fx,Symbol.hasInstance,{value:e=>e instanceof dx&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(mx||(mx={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(gx||(gx={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(vx||(vx={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(yx||(yx={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(bx||(bx={}));const xx={float32:yx,int32:gx,bool:vx,complex64:bx};function wx(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return xx[e][t]}function kx(e){return wx(e,"int32")}function Ix(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Cx(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sx(e,t){if(e.dtype===t.dtype)return[e,t];const n=wx(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Nx(e){const t=[];return Tx(e,t,new Set),t}function Tx(e,t,n){if(null==e)return;if(e instanceof dx)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Tx(r,t,n))}}function Ex(e){return null!=e.kernelName}class Rx{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ax{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Rx}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Qy(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Jb(this.backendInstance),!0}setupRegisteredKernels(){nb(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){nb(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Qf||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Qy(`Initialization of backend ${e} failed`),Qy(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Qy(`Initialization of backend ${e} failed`),Qy(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ax.nextTensorId++}nextVariableId(){return Ax.nextVariableId++}clone(e){const t=Fx.runKernel(nv,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Fx.runKernel(hg,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=eb(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let s,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Ex(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ex(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const u=eb(t,this.backendName);rm(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:i,backend:this.backend});const s=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const l=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=Ex(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=s()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=tb(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(rm(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const s=n.filter(((e,t)=>a[t]));return i.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&bm(e[0])&&(a=e.map((e=>Kb(e))));const i=r.write(a,t,n),s=new dx(t,n,i,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,i=new dx(r,a,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new fx(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ym(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof fx||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ym(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,i){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=tb(e);null!=o&&(r=o.gradFunc),null!=r&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Em(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Nx(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(rm(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));rm(a instanceof dx,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],s=i.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Tm(sm(e),"float32");return Fx.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const i=t[a],s=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(s);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=i.inputs[t];if(!om(a.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),_x);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return rm(km(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;rm(t.every((e=>e instanceof dx)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),rm(n.value instanceof dx,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),rm(km(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];rm(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),rm(i.every((e=>e instanceof dx)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return i.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=qb(),n=await this.backend.time(e);return n.wallMs=qb()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Rx;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Dx(){const e=zm();if(null==e._tfengine){const t=new Om(e);e._tfengine=new Ax(t)}var t;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */return t=e._tfengine.ENV,Bm=t,cx=()=>e._tfengine,e._tfengine}Ax.nextTensorId=0,Ax.nextVariableId=0;const Fx=Dx();function _x(e,t){const n={a:e,b:t};return Fx.runKernel(Hm,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $x(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Ox(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mx=Lm();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lx(e,t){let n=e;if(Yb(e))return"string"===t?[]:[e.length];if(Ix(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Cx(e))return[e.buffer.size/(null==t?4:ym(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Yb(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Lm().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Px(e,r,[]),r}function Px(e,t,n){if(n=n||[],!Array.isArray(e)&&!Yb(e))return void rm(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));rm(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),rm(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Px(e[t],r,n.concat(t))}function Bx(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function zx(e,t,n,r="numeric"){if(e instanceof dx)return Bx(r,e.dtype,t,n),e;let a=wm(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Bx(r,a,t,n),null==e||!Yb(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Lx(e,a);Yb(e)||Array.isArray(e)||(e=[e]);const s="string"!==a?jb(e,a):Qb(e,[],!0);return Fx.makeTensor(s,i,a)}function Wx(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>zx(e,`${t}[${a}]`,n,r)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Mx.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Mx.registerFlag("IS_BROWSER",(()=>Ox())),Mx.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Mx.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Mx.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Mx.registerFlag("PROD",(()=>!1)),Mx.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Mx.getBool("DEBUG"))),Mx.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Mx.registerFlag("IS_TEST",(()=>!1)),Mx.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Mx.getBool("DEBUG"))),Mx.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Mx.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Mx.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function Vx(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{Fx.startScope(n);try{const t=r(...e);return _m(t)&&console.error("Cannot return a Promise inside of tidy."),Fx.endScope(t),t}catch(e){throw Fx.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ux=Vx({complex_:function(e,t){const n=zx(e,"real","complex"),r=zx(t,"imag","complex");am(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Fx.runKernel(fg,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gx(e,t,n,r){if(null==r)r=wm(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Cx(e)||Ix(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Fx.backend.createTensorFromGPUData(e,t||n,r)}if(!Yb(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Am(t);const e=sm(t),r=sm(n);rm(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==sm(t.slice(e));rm(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Yb(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?jb(e,r):Qb(e,[],!0),Fx.makeTensor(e,t,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(e,t,n){return Gx(e,t,Lx(e,n),n)}class jx{static join(e){return new jx(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Yb(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let i=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],s=e+i-n.start,o=i,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,s,u-s);if(a.set(l,o),i+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,i=t(e[a]);if(0===i)return a;i<0?r=a:n=a+1}return-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}async function qx(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){const s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);const u={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Kx(await Promise.all(r)),specs:n}}function Kx(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Xx="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Yx(e){return Xx?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Qx(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Jx(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}function Zx(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Yx(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Yx(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new jx(e.weightData).byteLength}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ew{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==ew.instance&&(ew.instance=new ew),ew.instance}static registerSaveRouter(e){ew.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ew.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ew.getHandlers(e,"save")}static getLoadHandlers(e,t){return ew.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?ew.getInstance().loadRouters:ew.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const tw="tensorflowjs",nw="models_store",rw="model_info_store";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aw(){if(!Lm().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function iw(e){const t=e.result;t.createObjectStore(nw,{keyPath:"modelPath"}),t.createObjectStore(rw,{keyPath:"modelPath"})}class sw{constructor(e){if(this.indexedDB=aw(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(tw,1);r.onupgradeneeded=()=>iw(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(nw,"readonly"),r=t.objectStore(nw).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Zx(t),i=a.transaction(rw,"readwrite");let s,o,u=i.objectStore(rw);try{s=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}s.onsuccess=()=>{o=a.transaction(nw,"readwrite");const s=o.objectStore(nw);let l;try{l=s.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=i.objectStore(rw);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},s.onerror=e=>(a.close(),n(s.error)),i.oncomplete=()=>{null==o?a.close():o.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}sw.URL_SCHEME="indexeddb://";const ow=e=>{return Lm().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(sw.URL_SCHEME)?(t=e.slice(sw.URL_SCHEME.length),new sw(t)):null;var t};ew.registerSaveRouter(ow),ew.registerLoadRouter(ow);class uw{constructor(){this.indexedDB=aw()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(tw,1);n.onupgradeneeded=()=>iw(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(rw,"readonly"),i=a.objectStore(rw).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(sw.URL_SCHEME)?t.slice(sw.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(tw,1);r.onupgradeneeded=()=>iw(r),r.onsuccess=()=>{const a=r.result,i=a.transaction(rw,"readwrite"),s=i.objectStore(rw),o=s.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),i=()=>{u=a.transaction(nw,"readwrite");const r=u.objectStore(nw).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lw="/",cw="tensorflowjs_models",hw="info",dw="model_topology",pw="weight_specs",fw="weight_data",mw="model_metadata";function gw(e){return{info:[cw,e,hw].join(lw),topology:[cw,e,dw].join(lw),weightSpecs:[cw,e,pw].join(lw),weightData:[cw,e,fw].join(lw),modelMetadata:[cw,e,mw].join(lw)}}function vw(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function yw(e){const t=e.split(lw);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(lw)}class bw{constructor(e){if(!Lm().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=gw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Zx(e),a=jx.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Xx)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(e){throw vw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Xx){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}bw.URL_SCHEME="localstorage://";const xw=e=>{return Lm().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(bw.URL_SCHEME)?(t=e.slice(bw.URL_SCHEME.length),new bw(t)):null;var t};ew.registerSaveRouter(xw),ew.registerLoadRouter(xw);class ww{constructor(){rm(Lm().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),rm("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=cw+lw,n=lw+hw;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[yw(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=gw(e=(t=e).startsWith(bw.URL_SCHEME)?t.slice(bw.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return vw(n),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kw{constructor(){this.managers={}}static getInstance(){return null==kw.instance&&(kw.instance=new kw),kw.instance}static registerManager(e,t){rm(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),rm(e.length>0,(()=>"scheme must not be an empty string."));const n=kw.getInstance();rm(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=kw.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(kw.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iw{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Lm().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return sb(e)}}if(Lm().get("IS_BROWSER")){Lm().setPlatform("browser",new Iw);try{kw.registerManager(bw.URL_SCHEME,new ww)}catch(e){}try{kw.registerManager(sw.URL_SCHEME,new uw)}catch(e){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cw=()=>require("node-fetch");let Sw;class Nw{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Lm().global.fetch?Lm().global.fetch(e,t):(null==Sw&&(Sw=Cw()),Sw(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tw(e,t="float32",n){return t=t||"float32",Am(e),new lx(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Lm().get("IS_NODE")&&!Lm().get("IS_BROWSER")&&Lm().setPlatform("node",new Nw);const Ew=Vx({cast_:function(e,t){const n=zx(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Fx.runKernel(hg,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rw=Vx({clone_:function(e){const t={x:zx(e,"x","clone","string_or_numeric")};return Fx.runKernel(nv,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Dx();const Aw={buffer:Tw,cast:Ew,clone:Rw,print:function(e,t=!1){console.log(e.toString(t))}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dw(){return Fx}function Fw(){return Fx.memory()}function _w(e,t){return Fx.tidy(e,t)}function $w(e){Nx(e).forEach((e=>e.dispose()))}function Ow(e){return Fx.keep(e)}function Mw(e,t,n=1){return Fx.registerBackend(e,t,n)}hx=Aw;const Lw=Vx({add_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=zx(e,"a","add"),r=zx(t,"b","add");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(Hm,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw=Vx({floorDiv_:function(e,t){let n=zx(e,"a","floorDiv"),r=zx(t,"b","floorDiv");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(Yg,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bw=Vx({div_:function(e,t){let n=zx(e,"a","div"),r=zx(t,"b","div");if([n,r]=Sx(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Pw(n,r);const a={a:n,b:r};return Fx.runKernel(Lg,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zw=Vx({mul_:function(e,t){let n=zx(e,"a","mul"),r=zx(t,"b","mul");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(Fv,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ww=Vx({abs_:function(e){const t=zx(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Fx.runKernel(mg,e)}{const e={x:t};return Fx.runKernel(Vm,e)}}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vw=Vx({acos_:function(e){const t={x:zx(e,"x","acos")};return Fx.runKernel(Um,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw=Vx({acosh_:function(e){const t={x:zx(e,"x","acosh")};return Fx.runKernel(Gm,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw=Vx({all_:function(e,t=null,n=!1){const r={x:zx(e,"x","all","bool")},a={axis:t,keepDims:n};return Fx.runKernel(qm,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw=Vx({any_:function(e,t=null,n=!1){const r={x:zx(e,"x","any","bool")},a={axis:t,keepDims:n};return Fx.runKernel(Km,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw=Vx({argMax_:function(e,t=0){const n={x:zx(e,"x","argMax")},r={axis:t};return Fx.runKernel(Xm,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw=Vx({argMin_:function(e,t=0){const n={x:zx(e,"x","argMin")},r={axis:t};return Fx.runKernel(Ym,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw=Vx({asin_:function(e){const t={x:zx(e,"x","asin")};return Fx.runKernel(Qm,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xw=Vx({asinh_:function(e){const t={x:zx(e,"x","asinh")};return Fx.runKernel(Jm,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw=Vx({atan_:function(e){const t={x:zx(e,"x","atan")};return Fx.runKernel(Zm,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qw=Vx({atan2_:function(e,t){let n=zx(e,"a","atan2"),r=zx(t,"b","atan2");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(tg,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jw=Vx({atanh_:function(e){const t={x:zx(e,"x","atanh")};return Fx.runKernel(eg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(e,t,n,r,a="NHWC",i){return nk(e,[...t,e[3]],n,i,r,null,null,dk(a))}function ek(e,t,n,r,a,i,s="channelsLast"){const[o,u]=ik(t);let l;if("channelsLast"===s)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);l=[o,u,e[1],e[1]]}return nk(e,l,n,r,a,i,!1,s)}function tk(e,t,n,r,a,i,s="NDHWC"){const[o,u,l]=sk(t);let c,h;if("NDHWC"===s)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return rk(e,c,n,r,a,!1,h,i)}function nk(e,t,n,r,a,i,s=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=ik(n),[v,y]=ik(r),b=ok(d,v),x=ok(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,i,s,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=ak(e,t,n));const i=e[0],s=e[1],o=uk((i-t+2*r)/n+1,a),u=uk((s-t+2*r)/n+1,a);return[o,u]}([t,n],i,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*a+s-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=uk((t-i+d+p)/r+1,o),h=uk((n-s+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,b,x,i,o),C=s?f*h:f;let S;return"channelsFirst"===o?S=[u,C,k,I]:"channelsLast"===o&&(S=[u,k,I,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:v,dilationWidth:y,inShape:e,outShape:S,filterShape:t}}function rk(e,t,n,r,a,i=!1,s="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,l,c,h,d]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[v,y,b]=sk(n),[x,w,k]=sk(r),I=ok(p,x),C=ok(f,w),S=ok(m,k),{padInfo:N,outDepth:T,outHeight:E,outWidth:R}=function(e,t,n,r,a,i,s,o,u,l,c){let h,d,p,f;"valid"===e&&(e=0);if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,a,i){null==a&&(a=ak(e,t[0],r[0]));const s=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(s[n]=uk((e[n]-t[n]+2*a)/r[n]+1,i));return s}([t,n,r,1],[o,u,l],1,[a,i,s],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/a),p=Math.ceil(n/i),f=Math.ceil(r/s);const e=(d-1)*a+o-t,c=(p-1)*i+u-n,m=(f-1)*s+l-r,g=Math.floor(e/2),v=e-g,y=Math.floor(c/2),b=c-y,x=Math.floor(m/2);h={top:y,bottom:b,left:x,right:m-x,front:g,back:v,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,l,c,h,v,y,b,I,C,S,o),A=i?g*d:g;let D;return"channelsFirst"===s?D=[u,A,T,E,R]:"channelsLast"===s&&(D=[u,T,E,R,A]),{batchSize:u,dataFormat:s,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:E,outWidth:R,outChannels:A,padInfo:N,strideDepth:v,strideHeight:y,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:D,filterShape:t}}function ak(e,t,n,r=1){const a=ok(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ik(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function sk(e){return"number"==typeof e?[e,e,e]:e}function ok(e,t){return t<=1?e:e+(e-1)*(t-1)}function uk(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function lk(e){const[t,n,r]=ik(e);return 1===t&&1===n&&1===r}function ck(e,t){return lk(e)||lk(t)}function hk(e){return ik(e).every((e=>e>0))}function dk(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function pk(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)rm(um(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{rm(um(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=Vx({reshape_:function(e,t){const n={x:zx(e,"x","reshape","string_or_numeric")},r={shape:t};return Fx.runKernel(Jv,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mk=Vx({avgPool_:function(e,t,n,r,a){const i=zx(e,"x","avgPool","float32");rm(ck(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=i,o=!1;3===i.rank&&(o=!0,s=fk(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rm(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),pk("avgPool",r,a);const u={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Fx.runKernel(ng,u,l);return c=Ew(c,i.dtype),o?fk(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gk=Vx({avgPool3d_:function(e,t,n,r,a,i="NDHWC"){const s=zx(e,"x","avgPool3d","float32");let o=s,u=!1;4===s.rank&&(u=!0,o=fk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),rm(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),rm("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),rm("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),pk("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let h=Fx.runKernel(ag,l,c);return h=Ew(h,o.dtype),u?fk(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk=Vx({concat_:function(e,t=0){rm(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Wx(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Rw(n[0]);const r=n,a={axis:t};return Fx.runKernel(gg,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk=Vx({matMul_:function(e,t,n=!1,r=!1){let a=zx(e,"a","matMul"),i=zx(t,"b","matMul");[a,i]=Sx(a,i);const s={a:a,b:i},o={transposeA:n,transposeB:r};return Fx.runKernel(sg,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=Vx({sigmoid_:function(e){const t={x:zx(e,"x","sigmoid","float32")};return Fx.runKernel(gy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk=Vx({slice_:function(e,t,n){const r=zx(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},i={begin:t,size:n};return Fx.runKernel(dy,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=Vx({tanh_:function(e){const t={x:zx(e,"x","tanh","float32")};return Fx.runKernel(Ly,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=Vx({batchToSpaceND_:function(e,t,n){const r=zx(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));rm(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),rm(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),rm(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},s={blockShape:t,crops:n};return Fx.runKernel(og,i,s)}});const Ik=Vx({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){null==i&&(i=.001);const s=zx(e,"x","batchNorm"),o=zx(t,"mean","batchNorm"),u=zx(n,"variance","batchNorm");let l,c;null!=a&&(l=zx(a,"scale","batchNorm")),null!=r&&(c=zx(r,"offset","batchNorm")),rm(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rm(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rm(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?fk(e,[1,1,1,e.size]):2===e.rank?fk(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?fk(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:i},f=Fx.runKernel(Qg,d,p);return fk(f,s.shape)}});const Ck=Vx({batchNorm2d_:function(e,t,n,r,a,i){const s=zx(e,"x","batchNorm"),o=zx(t,"mean","batchNorm"),u=zx(n,"variance","batchNorm");let l,c;return null!=a&&(l=zx(a,"scale","batchNorm")),null!=r&&(c=zx(r,"offset","batchNorm")),rm(2===s.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`)),rm(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),rm(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&rm(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&rm(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ik(s,o,u,c,l,i)}});const Sk=Vx({batchNorm3d_:function(e,t,n,r,a,i){const s=zx(e,"x","batchNorm"),o=zx(t,"mean","batchNorm"),u=zx(n,"variance","batchNorm");let l,c;return null!=a&&(l=zx(a,"scale","batchNorm")),null!=r&&(c=zx(r,"offset","batchNorm")),rm(3===s.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`)),rm(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),rm(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&rm(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&rm(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ik(s,o,u,c,l,i)}});const Nk=Vx({batchNorm4d_:function(e,t,n,r,a,i){const s=zx(e,"x","batchNorm"),o=zx(t,"mean","batchNorm"),u=zx(n,"variance","batchNorm");let l,c;return null!=a&&(l=zx(a,"scale","batchNorm")),null!=r&&(c=zx(r,"offset","batchNorm")),rm(4===s.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`)),rm(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),rm(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&rm(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&rm(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ik(s,o,u,c,l,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=Vx({bincount_:function(e,t,n){const r=zx(e,"x","bincount"),a=zx(t,"weights","bincount");rm("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),rm(n>=0,(()=>`size must be non-negative, but got ${n}.`)),rm(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},s={size:n};return Fx.runKernel(ug,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek=Vx({broadcastTo_:function(e,t){let n=zx(e,"broadcastTo","x");const r=n.shape;if(Am(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=fk(n,e)}const a=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const s=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===s.length)return Rw(n);const o={x:n},u={reps:i};return Fx.runKernel(Py,o,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rk=Vx({ceil_:function(e){const t={x:zx(e,"x","ceil","float32")};return Fx.runKernel(dg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(e,t,n){Am(e);const r={shape:e,value:t,dtype:n=n||wm(t)};return Fx.runKernel(qg,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dk=Vx({clipByValue_:function(e,t,n){const r=zx(e,"x","clipByValue");if(rm(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Ak(r.shape,t,r.dtype);const a={x:r},i={clipValueMin:t,clipValueMax:n};return Fx.runKernel(pg,a,i)}});const Fk=Vx({concat1d_:function(e){return vk(e,0)}});const _k=Vx({concat2d_:function(e,t){return vk(e,t)}});const $k=Vx({concat3d_:function(e,t){return vk(e,t)}});const Ok=Vx({concat4d_:function(e,t){return vk(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk=Vx({conv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=zx(e,"x","conv2d","float32"),u=zx(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=fk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),rm(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),rm(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),pk("conv2d",r,s);const h="NHWC"===a?l.shape[3]:l.shape[1];rm(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),rm(ck(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),rm(hk(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),rm(hk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=Fx.runKernel(vg,d,p);return c?fk(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Lk=Vx({conv1d_:function(e,t,n,r,a="NWC",i=1,s){const o=zx(e,"x","conv1d"),u=zx(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=fk(o,[1,o.shape[0],o.shape[1]])),rm(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),rm(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),pk("conv1d",r,s),rm(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),rm(ck(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),rm(hk(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),rm(hk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),rm("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=fk(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=fk(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Mk(d,h,[1,n],r,"NHWC",[1,i],s);return fk(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk=Vx({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",s){rm(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=fk(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),rm(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),rm(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),rm(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];rm(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),rm(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),pk("conv2dDerInput",a,s);const d={dy:u,filter:n},p={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,inputShape:o},f=Fx.runKernel(bg,d,p);return l?fk(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Bk=Vx({conv2dTranspose_:function(e,t,n,r,a,i){const s=zx(e,"x","conv2dTranspose"),o=zx(t,"filter","conv2dTranspose");return Pk(n,s,o,r,a,"NHWC",i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk=Vx({conv3d_:function(e,t,n,r,a="NDHWC",i=[1,1,1]){const s=zx(e,"x","conv3d"),o=zx(t,"filter","conv3d");let u=s,l=!1;4===s.rank&&(l=!0,u=fk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),rm(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),rm(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),rm(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),rm(ck(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),rm("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),rm(hk(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),rm(hk(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:i},d=Fx.runKernel(xg,c,h);return l?fk(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wk=Vx({conv3DBackpropInput_:function(e,t,n,r,a){rm(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=fk(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=s.shape[4];rm(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),rm(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),rm(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),rm(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),rm(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:s,filter:n},h={pad:a,strides:r,inputShape:i},d=Fx.runKernel(kg,c,h);return o?fk(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Vk=Vx({conv3dTranspose_:function(e,t,n,r,a){const i=zx(e,"x","conv3dTranspose"),s=zx(t,"filter","conv3dTranspose");return Wk(n,i,s,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uk=Vx({cos_:function(e){const t={x:zx(e,"x","cos","float32")};return Fx.runKernel(Ig,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gk=Vx({cosh_:function(e){const t={x:zx(e,"x","cosh","float32")};return Fx.runKernel(Cg,t)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hk=Vx({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:zx(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return Fx.runKernel(Sg,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jk=Vx({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:zx(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return Fx.runKernel(Ng,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qk=Vx({denseBincount_:function(e,t,n,r=!1){const a=zx(e,"x","denseBincount"),i=zx(t,"weights","denseBincount");rm("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),rm(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),rm(n>=0,(()=>`size must be non-negative, but got ${n}.`)),rm(i.size===a.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`));const s={x:a,weights:i},o={size:n,binaryOutput:r};return Fx.runKernel(Eg,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kk=Vx({depthToSpace_:function(e,t,n="NHWC"){const r=zx(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];rm(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),rm(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),rm(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),rm(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return Fx.runKernel(Rg,o,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xk=Vx({depthwiseConv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=zx(e,"x","depthwiseConv2d","float32"),u=zx(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=fk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),rm(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),rm(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];rm(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),pk("depthwiseConv2d",r,s);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=Fx.runKernel(Ag,d,p);return c?fk(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yk=Vx({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const s=zx(e,"x","dilation2d"),o=zx(t,"filter","dilation2d");rm(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),rm(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),rm("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=s,l=!1;3===s.rank&&(u=fk(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0),rm(u.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`));const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},d=Fx.runKernel($g,c,h);return l?fk(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function Jk(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function Zk(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let i=e[e.length-a-1];null==i&&(i=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===i)r[n-a-1]=s;else if(1===s)r[n-a-1]=i;else{if(i!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=i}}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI=Vx({equal_:function(e,t){let n=zx(e,"a","equal","string_or_numeric"),r=zx(t,"b","equal","string_or_numeric");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(Vg,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=Vx({where_:function(e,t,n){const r=zx(t,"a","where"),a=zx(n,"b","where"),i=zx(e,"condition","where","bool"),s=Zk(Zk(i.shape,r.shape),a.shape),o={condition:Ek(i,s),t:Ek(r,s),e:Ek(a,s)};return Fx.runKernel(cy,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nI=Vx({zerosLike_:function(e){const t={x:zx(e,"x","zerosLike")};return Fx.runKernel(Hy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI=Vx({divNoNan_:function(e,t){let n=zx(e,"a","div"),r=zx(t,"b","div");[n,r]=Sx(n,r);const a=Bw(n,r),i=nI(a),s=eI(r,i);return tI(s,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aI=Vx({dot_:function(e,t){const n=zx(e,"t1","dot"),r=zx(t,"t2","dot");rm(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(rm(a===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${i}.`)),1===n.rank&&1===r.rank){const e=fk(n,[1,-1]),t=fk(r,[-1,1]),a=yk(e,t);return fk(a,[])}if(1===n.rank&&2===r.rank){const e=fk(n,[1,-1]),t=fk(r,[r.shape[0],r.shape[1]]),a=yk(e,t);return fk(a,[a.size])}if(2===n.rank&&1===r.rank){const e=fk(r,[-1,1]),t=yk(n,e);return fk(t,[t.size])}{const e=fk(r,[r.shape[0],r.shape[1]]);return yk(n,e)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI=Vx({elu_:function(e){const t={x:zx(e,"x","elu","float32")};return Fx.runKernel(Bg,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sI=Vx({erf_:function(e){let t=zx(e,"x","erf");rm("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ew(t,"float32"));const n={x:t};return Fx.runKernel(Wg,n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oI(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function uI(e,t,n){const r=e.length+t.length,a=[];let i=0,s=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function lI(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function cI(e,t){return uI(e,t.map((e=>1)),t)}function hI(e,t,n){rm(oI(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function dI(e,t){if(oI(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function pI(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function fI(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI=Vx({max_:function(e,t=null,n=!1){const r={x:zx(e,"x","max")},a={reductionIndices:t,keepDims:n};return Fx.runKernel(bv,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI=Vx({min_:function(e,t=null,n=!1){const r={x:zx(e,"x","min")},a={axis:t,keepDims:n};return Fx.runKernel(Tv,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI=Vx({pow_:function(e,t){let n=zx(e,"base","pow"),r=zx(t,"exp","pow");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(Vv,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yI(e,t){if((Yb(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Yb(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Gx(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI=Vx({sqrt_:function(e){const t={x:zx(e,"x","sqrt","float32")};return Fx.runKernel(yy,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI=Vx({square_:function(e){const t=zx(e,"x","square");return Fx.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI=Vx({sum_:function(e,t=null,n=!1){let r=zx(e,"x","sum");"bool"===r.dtype&&(r=Ew(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return Fx.runKernel(by,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kI(e,t,n=null){if(0===e.rank)return Ww(e);if(1!==e.rank&&null===n)return kI(fk(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return wI(Ww(e),n);if(t===1/0)return mI(Ww(e),n);if(t===-1/0)return gI(Ww(e),n);if("euclidean"===t||2===t)return bI(wI(vI(Ww(e),yI(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return mI(wI(Ww(e),n[0]),n[1]-1);if(t===1/0)return mI(wI(Ww(e),n[1]),n[0]);if(t===-1/0)return gI(wI(Ww(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return bI(wI(xI(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const II=Vx({norm_:function(e,t="euclidean",n=null,r=!1){const a=kI(e=zx(e,"x","norm"),t,n);let i=a.shape;if(r){const t=pm(n,e.shape);i=cI(a.shape,t)}return fk(a,i)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=Vx({euclideanNorm_:function(e,t=null,n=!1){return II(e,"euclidean",t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI=Vx({exp_:function(e){const t={x:zx(e,"x","exp")};return Fx.runKernel(Ug,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=Vx({expandDims_:function(e,t=0){const n=zx(e,"x","expandDims","string_or_numeric");rm(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return Fx.runKernel(Gg,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI=Vx({expm1_:function(e){const t={x:zx(e,"x","expm1")};return Fx.runKernel(Hg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI=Vx({tile_:function(e,t){const n=zx(e,"x","tile","string_or_numeric");rm(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return Fx.runKernel(Py,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI=Vx({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Tw([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)a.set(1,e,e);const s=fk(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return EI(NI(s,0),[n[0],1,1]);if(2===n.length)return EI(NI(NI(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return EI(NI(NI(NI(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=Vx({floor_:function(e){const t={x:zx(e,"x","floor","float32")};return Fx.runKernel(Xg,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DI=Vx({gather_:function(e,t,n=0,r=0){const a={x:zx(e,"x","gather"),indices:zx(t,"indices","gather","int32")},i={axis:n,batchDims:r};return Fx.runKernel(Jg,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FI=Vx({greater_:function(e,t){let n=zx(e,"a","greater","string_or_numeric"),r=zx(t,"b","greater","string_or_numeric");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(ev,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _I=Vx({greaterEqual_:function(e,t){let n=zx(e,"a","greaterEqual","string_or_numeric"),r=zx(t,"b","greaterEqual","string_or_numeric");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(tv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $I=Vx({imag_:function(e){const t={input:zx(e,"input","imag")};return Fx.runKernel(av,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI=Vx({isFinite_:function(e){const t={x:zx(e,"x","isFinite")};return Fx.runKernel(iv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MI=Vx({isInf_:function(e){const t={x:zx(e,"x","isInf")};return Fx.runKernel(sv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LI=Vx({isNaN_:function(e){const t={x:zx(e,"x","isNaN")};return Fx.runKernel(ov,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PI=Vx({leakyRelu_:function(e,t=.2){const n={x:zx(e,"x","leakyRelu")},r={alpha:t};return Fx.runKernel(uv,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI=Vx({less_:function(e,t){let n=zx(e,"a","less","string_or_numeric"),r=zx(t,"b","less","string_or_numeric");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(lv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI=Vx({lessEqual_:function(e,t){let n=zx(e,"a","lessEqual","string_or_numeric"),r=zx(t,"b","lessEqual","string_or_numeric");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(cv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI=Vx({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=zx(e,"x","localResponseNormalization");rm(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),rm(um(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=i,o=!1;3===i.rank&&(o=!0,s=fk(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:s},l={depthRadius:t,bias:n,alpha:r,beta:a},c=Fx.runKernel(vv,u,l);return o?fk(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VI=Vx({log_:function(e){const t={x:zx(e,"x","log","float32")};return Fx.runKernel(dv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UI=Vx({log1p_:function(e){const t={x:zx(e,"x","log1p")};return Fx.runKernel(pv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(e){return Fx.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI=Vx({neg_:function(e){const t={x:zx(e,"x","neg")};return Fx.runKernel(_v,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI=Vx({softplus_:function(e){const t={x:zx(e,"x","softplus")};return Fx.runKernel(vy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI=Vx({logSigmoid_:function(e){const t=zx(e,"x","logSigmoid"),n=GI((e=>({value:HI(jI(HI(e))),gradFunc:t=>zw(t,bk(HI(e)))})));return n(t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI=Vx({sub_:function(e,t){let n=zx(e,"a","sub"),r=zx(t,"b","sub");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(Oy,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI=Vx({logSoftmax_:function(e,t=-1){const n=zx(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=GI(((e,n)=>{const r=mI(e,t,!0),a=KI(e,r),i=KI(Ew(a,"float32"),VI(wI(SI(a),t,!0)));n([i]);return{value:i,gradFunc:(e,n)=>{const[r]=n,a=SI(r);return KI(e,zw(wI(e,t,!0),a))}}}));return r(n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI=Vx({logSumExp_:function(e,t=null,n=!1){const r=zx(e,"x","logSumExp"),a=pm(t,r.shape),i=mI(r,a,!0),s=KI(r,i),o=SI(s),u=wI(o,a),l=VI(u),c=Lw(fk(i,l.shape),l);if(n){const e=cI(c.shape,a);return fk(c,e)}return c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI=Vx({logicalAnd_:function(e,t){const n=zx(e,"a","logicalAnd","bool"),r=zx(t,"b","logicalAnd","bool");Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(fv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI=Vx({logicalNot_:function(e){const t={x:zx(e,"x","logicalNot","bool")};return Fx.runKernel(mv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI=Vx({logicalOr_:function(e,t){const n=zx(e,"a","logicalOr","bool"),r=zx(t,"b","logicalOr","bool");Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(gv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eC=Vx({logicalXor_:function(e,t){const n=zx(e,"a","logicalXor","bool"),r=zx(t,"b","logicalXor","bool");return Zk(n.shape,r.shape),QI(ZI(e,t),JI(QI(e,t)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tC=Vx({maxPool_:function(e,t,n,r,a){const i=zx(e,"x","maxPool");let s=i,o=!1;3===i.rank&&(o=!0,s=fk(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rm(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),rm(ck(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),pk("maxPool",r,a);const u={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Fx.runKernel(wv,u,l);return o?fk(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nC=Vx({maxPool3d_:function(e,t=[1,1,1],n,r,a,i="NDHWC"){const s=zx(e,"x","maxPool3d");let o=s,u=!1;4===s.rank&&(u=!0,o=fk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),rm(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),rm("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),pk("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},h=Fx.runKernel(Iv,l,c);return u?fk(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rC=Vx({maximum_:function(e,t){let n=zx(e,"a","maximum"),r=zx(t,"b","maximum");[n,r]=Sx(n,r),"bool"===n.dtype&&(n=Ew(n,"int32"),r=Ew(r,"int32")),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(xv,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aC=Vx({mean_:function(e,t=null,n=!1){const r={x:zx(e,"x","mean")},a={axis:t,keepDims:n};return Fx.runKernel(Nv,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(e,t="float32"){if(Am(e),"complex64"===t){const t=iC(e,"float32"),n=iC(e,"float32");return Ux(t,n)}const n=Em(sm(e),t);return Fx.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(e,t="float32"){if(Am(e),"complex64"===t){const t=sC(e,"float32"),n=iC(e,"float32");return Ux(t,n)}const n=Tm(sm(e),t);return Fx.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oC=Vx({minimum_:function(e,t){let n=zx(e,"a","minimum"),r=zx(t,"b","minimum");[n,r]=Sx(n,r),"bool"===n.dtype&&(n=Ew(n,"int32"),r=Ew(r,"int32")),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(Ev,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uC=Vx({mirrorPad_:function(e,t,n){rm("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=zx(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");rm(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)rm(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rm(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},s={x:r};return Fx.runKernel(Rv,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lC=Vx({mod_:function(e,t){let n=zx(e,"a","mod"),r=zx(t,"b","mod");[n,r]=Sx(n,r);const a={a:n,b:r};return Fx.runKernel(Av,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cC=Vx({moments_:function(e,t=null,n=!1){const r=pm(t,(e=zx(e,"x","moments")).shape),a=aC(e,r,n);let i=a.shape;n||(i=cI(a.shape,r));const s=xI(KI(Ew(e,"float32"),fk(a,i)));return{mean:a,variance:aC(s,r,n)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hC=Vx({notEqual_:function(e,t){let n=zx(e,"a","notEqual","string_or_numeric"),r=zx(t,"b","notEqual","string_or_numeric");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel($v,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC=Vx({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:zx(e,"indices","oneHot","int32")},s={dtype:a,depth:t,onValue:n,offValue:r};return Fx.runKernel(Bv,i,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC=Vx({onesLike_:function(e){const t={x:zx(e,"x","onesLike")};return Fx.runKernel(Pv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=Vx({pad_:function(e,t,n=0){const r=zx(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},i={x:r};return Fx.runKernel(Wv,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mC=Vx({spaceToBatchND_:function(e,t,n){const r=zx(e,"x","spaceToBatchND");rm(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),rm(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),rm(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return Fx.runKernel(xy,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC=Vx({pool_:function(e,t,n,r,a,i,s){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=zx(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=fk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),rm(ck(i,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${a}'`));const c=ek(u.shape,t,i,a,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],i[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),i=e.concat(r,a),s=t.map(((e,t)=>(e-i[t]%e)%e)),o=a.map(((e,t)=>e+s[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,s[t]]));return[u,l]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",v=p?u:mC(u,h,f),y=("avg"===n?()=>mk(v,t,i,g,s):()=>tC(v,t,i,g,s))(),b=p?y:kk(y,h,m);return l?fk(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vC=Vx({prelu_:function(e,t){const n={x:zx(e,"x","prelu"),alpha:zx(t,"alpha","prelu")};return Fx.runKernel(Uv,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=Vx({prod_:function(e,t=null,n=!1){let r=zx(e,"x","prod");"bool"===r.dtype&&(r=Ew(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return Fx.runKernel(Gv,a,i)}});var bC={};(function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.alea=i})(0,{get exports(){return bC},set exports(e){bC=e}},!1);var xC={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor128=i}(0,e,!1)}({get exports(){return xC},set exports(e){xC=e}});var wC={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorwow=i}(0,e,!1)}({get exports(){return wC},set exports(e){wC=e}});var kC={};!function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorshift7=i}(0,e,!1)}({get exports(){return kC},set exports(e){kC=e}});var IC={};!function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor4096=i}(0,e,!1)}({get exports(){return IC},set exports(e){IC=e}});var CC={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.tychei=i}(0,e,!1)}({get exports(){return CC},set exports(e){CC=e}});var SC={},NC={get exports(){return SC},set exports(e){SC=e}},TC=d(Object.freeze({__proto__:null,default:{}}));!function(e){!function(t,n,r){var a,i=256,s="random",o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=i-1;function h(e,c,h){var v=[],y=m(f((c=1==c?{entropy:!0}:c||{}).entropy?[e,g(n)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(i):(e=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(e)),g(e)}catch(e){var r=t.navigator,s=r&&r.plugins;return[+new Date,t,s,t.screen,g(n)]}}():e,3),v),b=new d(v),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),n),(c.pass||h||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r[s]=e,t):e})(x,y,"global"in c?c.global:this==r,c.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),e.exports){e.exports=h;try{a=TC}catch(e){}}else r["seed"+s]=h}("undefined"!=typeof self?self:h,[],Math)}(NC);var EC=bC,RC=xC,AC=wC,DC=kC,FC=IC,_C=CC,$C=SC;$C.alea=EC,$C.xor128=RC,$C.xorwow=AC,$C.xorshift7=DC,$C.xor4096=FC,$C.tychei=_C;var OC=$C;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MC{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=OC.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,i;do{r=2*this.random()-1,a=2*this.random()-1,i=r*r+a*a}while(i>=1||0===i);const s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class LC{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=OC.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC=Vx({randomNormal_:function(e,t=0,n=1,r,a){if(Am(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new MC(t,n,r,!1,a),s=Tw(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=Vx({randomUniform_:function(e,t=0,n=1,r="float32",a){Am(e);const i=Tw(e,r),s=new LC(t,n,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zC(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Fx.runKernel(Kv,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC=Vx({real_:function(e){const t={input:zx(e,"input","real")};return Fx.runKernel(Xv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC=Vx({reciprocal_:function(e){const t={x:zx(e,"x","reciprocal")};return Fx.runKernel(Yv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UC=Vx({relu_:function(e){const t={x:zx(e,"x","relu")};return Fx.runKernel(Qv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GC=Vx({relu6_:function(e){const t={x:zx(e,"x","relu6")};return Fx.runKernel(ry,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HC=Vx({reverse_:function(e,t){const n={x:zx(e,"x","reverse")},r={dims:t};return Fx.runKernel(ay,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC=Vx({round_:function(e){const t={x:zx(e,"x","round")};return Fx.runKernel(iy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC=Vx({rsqrt_:function(e){const t={x:zx(e,"x","rsqrt","float32")};return Fx.runKernel(sy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=Vx({selu_:function(e){const t={x:zx(e,"x","selu")};return Fx.runKernel(hy,t)}});const XC=Vx({separableConv2d_:function(e,t,n,r,a,i=[1,1],s="NHWC"){const o=zx(e,"x","separableConv2d"),u=zx(t,"depthwiseFilter","separableConv2d"),l=zx(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=fk(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");rm(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),rm(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),rm(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),rm(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),rm(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];rm(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=Xk(c,u,r,a,s,i),m=Mk(f,l,1,"valid",s);return h?fk(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YC=Vx({sign_:function(e){const t={x:zx(e,"x","sign")};return Fx.runKernel(my,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QC=Vx({sin_:function(e){const t={x:zx(e,"x","sin","float32")};return Fx.runKernel(py,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC=Vx({sinh_:function(e){const t={x:zx(e,"x","sinh")};return Fx.runKernel(fy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZC=Vx({slice1d_:function(e,t,n){const r=zx(e,"x","slice1d");return rm(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),xk(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS=Vx({slice2d_:function(e,t,n){const r=zx(e,"x","slice2d");return rm(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),xk(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tS=Vx({slice3d_:function(e,t,n){const r=zx(e,"x","slice3d");return rm(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),xk(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nS=Vx({slice4d_:function(e,t,n){const r=zx(e,"x","slice4d");return rm(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),xk(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rS=Vx({softmax_:function(e,t=-1){const n=zx(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Fx.runKernel(ky,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aS=Vx({fft_:function(e){rm("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Fx.runKernel(jg,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS=Vx({ifft_:function(e){rm("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Fx.runKernel(rv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS=Vx({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=fk(e,[n,t]);r=iS(a)}else{const a=[n,2*(t-1)],i=fk(WC(e),[n,t]),s=fk($I(e),[n,t]),o=HC(xk(i,[0,1],[n,t-2]),1),u=zw(HC(xk(s,[0,1],[n,t-2]),1),yI(-1)),l=vk([i,o],1),c=vk([s,u],1),h=fk(Ux(l,c),[a[0],a[1]]);r=iS(h)}if(r=WC(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=fk(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oS=Vx({split_:function(e,t,n=0){const r={x:zx(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Fx.runKernel(wy,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uS=Vx({rfft_:function(e,t){rm("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,a=xk(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=vk([e,iC(r)],e.shape.length-1),n=t}else a=e;const i=nI(a),s=fk(Ux(a,i),[r,n]),o=aS(s),u=Math.floor(n/2)+1,l=WC(o),c=$I(o),h=oS(l,[u,n-u],l.shape.length-1),d=oS(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,fk(Ux(h[0],d[0]),p)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lS=Vx({squaredDifference_:function(e,t){let n=zx(e,"a","squaredDifference"),r=zx(t,"b","squaredDifference");[n,r]=Sx(n,r),Zk(n.shape,r.shape);const a={a:n,b:r};return Fx.runKernel(Ey,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cS=Vx({squeeze_:function(e,t){const n=zx(e,"x","squeeze","string_or_numeric");return fk(n,fm(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS=Vx({stack_:function(e,t=0){const n=Wx(e,"tensors","stack","string_or_numeric");rm(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&rm(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return Fx.runKernel(zv,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dS=Vx({step_:function(e,t=0){const n={x:zx(e,"x","step")},r={alpha:t};return Fx.runKernel(jy,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS=Vx({stridedSlice_:function(e,t,n,r,a=0,i=0,s=0,o=0,u=0){const l={x:zx(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};return Fx.runKernel(Dy,l,c)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fS=Vx({tan_:function(e){const t={x:zx(e,"x","tan","float32")};return Fx.runKernel(My,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(e,t){im(e);const n=Lx(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Gx(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(e,t,n){if(im(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Lx(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Gx(e,t,r,n)}function vS(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(i+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(i+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(i+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function yS(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let s=1;for(let e=a;e<i;++e)s*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:sm(t.shape)/o,sliceSize:s,strides:[...Cm(n.slice(0,a)),1],outputSize:sm(n)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS=Vx({topk_:function(e,t=1,n=!0){const r=zx(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},s={k:t,sorted:n},[o,u]=Fx.runKernel(By,i,s);return{values:o,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xS=Vx({truncatedNormal_:function(e,t=0,n=1,r,a){if(Am(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new MC(t,n,r,!0,a),s=Tw(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS=Vx({unique_:function(e,t=0){const n=zx(e,"x","unique","string_or_numeric");rm(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,s]=Fx.runKernel(Vy,r,a);return{values:i,indices:s}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kS=Vx({unsortedSegmentSum_:function(e,t,n){const r=zx(e,"x","unsortedSegmentSum"),a=zx(t,"segmentIds","unsortedSegmentSum","int32");rm(um(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},s={numSegments:n};return Fx.runKernel(Gy,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS=Vx({unstack_:function(e,t=0){const n=zx(e,"x","unstack","string_or_numeric");rm(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return Fx.runKernel(Uy,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CS(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Tw(e,"int32"),a=Tw([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),s=t*e.length;a.values.set(i,s)}return a.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS=Vx({transpose_:function(e,t,n){const r=zx(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),rm(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{rm(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},i={perm:t};return"complex64"===r.dtype?_w((()=>{let e=WC(r),t=$I(r);return e=Fx.runKernel(Wy,{x:e},i),t=Fx.runKernel(Wy,{x:t},i),n&&(t=HI(t)),Ux(e,t)})):Fx.runKernel(Wy,a,i)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NS=Vx({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=zx(e,"x","dropout");if(rm("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),rm(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof dx?a.clone():a;const i=function(e,t){if(null==t)return e.shape.slice();if(om(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=Bw(AI(Lw(BC(i,0,1,"float32",r),s)),s);return zw(a,o)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TS=Vx({conv2DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i="NHWC",s){let o=e;3===e.rank&&(o=fk(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=fk(t,[1,t.shape[0],t.shape[1],t.shape[2]])),rm(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),rm(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),rm(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];rm(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),rm(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),pk("conv2dDerFilter",a,s);const h={x:o,dy:u},d={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,filterShape:n};return Fx.runKernel(yg,h,d)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return zw(e,dS(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function RS(e,t){let n=t;const r=Jk(e.shape,t.shape);return r.length>0&&(n=wI(n,r)),fk(n,e.shape)}function AS(e,t,n,r){if("linear"===t)return e;if("relu"===t)return UC(e);if("elu"===t)return iI(e);if("relu6"===t)return GC(e);if("prelu"===t)return vC(e,n);if("leakyrelu"===t)return PI(e,r);if("sigmoid"===t)return bk(e);throw new Error(`Unknown fused activation ${t}.`)}const DS=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS=Vx({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===DS(Fx.state.gradientDepth,u)){rm("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Mk(e,t,n,r,a,i,s);return null!=o&&(h=Lw(h,o)),AS(h,u,l,c)}const h=zx(e,"x","conv2d","float32"),d=zx(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=fk(h,[1,h.shape[0],h.shape[1],h.shape[2]])),rm(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),rm(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),pk("fused conv2d",r,s);const m="NHWC"===a?p.shape[3]:p.shape[1];rm(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),rm(ck(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const g=nk(p.shape,d.shape,n,i,r,s);let v,y;if(null!=o&&(v=zx(o,"bias","fused conv2d"),[v]=Sx(v,h),"NHWC"===a?Zk(g.outShape,v.shape):(rm(v.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`)),rm(0===v.shape.length||v.shape[0]===g.outChannels||1===v.shape[0],(()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(rm(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)rm(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{Zk(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=zx(l,"prelu weights","fused conv2d")}const b=(e,t)=>{rm("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[s,o,l,c]=t,h=ES(e,l,u);rm(lk(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[Pk(o.shape,h,s,n,r),TS(o,h,s.shape,n,r)];if(null!=c){const e=RS(c,h);d.push(e)}return d},x={x:p,filter:d,bias:v,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:c};if(null==o){const e=GI(((e,t,n)=>{let r=Fx.runKernel(Xy,x,w);return n([t,e,r]),f&&(r=fk(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=GI(((e,t,n,r)=>{let a=Fx.runKernel(Xy,x,w);return r([t,e,a,n]),f&&(a=fk(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(p,d,v)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _S=Vx({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],s){let o=e;3===e.rank&&(o=fk(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=fk(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:s,dilations:i,filterShape:n};return Fx.runKernel(Dg,l,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S=Vx({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],s){let o=t,u=!1;3===t.rank&&(u=!0,o=fk(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:s,dilations:i,inputShape:e},h=Fx.runKernel(Fg,l,c);return u?fk(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS=Vx({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){if(!1===DS(Fx.state.gradientDepth,i)){let u=yk(e,t,n,r);return null!=a&&(u=Lw(u,a)),AS(u,i,s,o)}let u=zx(e,"a","fused matMul"),l=zx(t,"b","fused matMul");[u,l]=Sx(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=sm(f),v=sm(m);rm(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=Zk(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),b=fk(u,n?[g,c,d]:[g,d,c]),x=fk(l,r?[v,p,h]:[v,h,p]);let w,k;null!=a&&(w=zx(a,"bias","fused matMul"),[w]=Sx(w,u),Zk(y,w.shape)),null!=s&&(k=zx(s,"prelu weights","fused matMul"));const I=(e,t)=>{const[s,o,u,l]=t,c=ES(fk(e,u.shape),u,i);let h,d;if(n||r?!n&&r?(h=yk(c,o,!1,!1),d=yk(c,s,!0,!1)):n&&!r?(h=yk(o,c,!1,!0),d=yk(s,c,!1,!1)):(h=yk(o,c,!0,!0),d=yk(c,s,!0,!0)):(h=yk(c,o,!1,!0),d=yk(s,c,!0,!1)),null!=a){return[h,d,RS(l,c)]}return[h,d]},C={a:b,b:x,bias:w,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==a){const e=GI(((e,t,n)=>{const r=Fx.runKernel(Ky,C,S);return n([e,t,r]),{value:fk(r,y),gradFunc:I}}));return e(b,x)}{const e=GI(((e,t,n,r)=>{const a=Fx.runKernel(Ky,C,S);return r([e,t,a,n]),{value:fk(a,y),gradFunc:I}}));return e(b,x,w)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MS=Vx({cropAndResize_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a="bilinear",i=0){const s=zx(e,"image","cropAndResize"),o=zx(t,"boxes","cropAndResize","float32"),u=zx(n,"boxInd","cropAndResize","int32"),l=o.shape[0];rm(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),rm(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),rm(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),rm(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),rm(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),rm("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:s,boxes:o,boxInd:u},h={method:a,extrapolationValue:i,cropSize:r};return Fx.runKernel(Tg,c,h)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS=Vx({flipLeftRight_:function(e){const t=zx(e,"image","flipLeftRight","float32");rm(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Fx.runKernel(Kg,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PS=Vx({grayscaleToRGB_:function(e){const t=zx(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];rm(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),rm(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,EI(t,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS=Vx({rotateWithOffset_:function(e,t,n=0,r=.5){const a=zx(e,"image","rotateWithOffset","float32");rm(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const i={image:a},s={radians:t,fillValue:n,center:r};return Fx.runKernel(qy,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const s=e.shape[0];return n=Math.min(n,s),rm(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),rm(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),rm(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),rm(1===t.rank,(()=>"scores must be a 1D tensor")),rm(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),rm(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS=Vx({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=zx(e,"boxes","nonMaxSuppression","float32"),s=zx(t,"scores","nonMaxSuppression","float32"),o=zS(i,s,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Fx.runKernel(Ov,{boxes:i,scores:s},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,i=0,s=!1;for(;r<a;){i=r+(a-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||US)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function US(e,t){return e>t?1:e<t?-1:0}function GS(e,t,n,r,a){return qS(e,t,n,r,a,0)}function HS(e,t,n,r,a,i){return qS(e,t,n,r,a,0,!1,i,!0)}function jS(e,t,n,r,a,i){return qS(e,t,n,r,a,i,!0)}function qS(e,t,n,r,a,i,s=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(YS);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=s;--n){const s=KS(e,i,h[n]);if(s>=r){o=!0;break}if(t.score=t.score*XS(r,c,s),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>a&&VS(l,t,YS))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return s&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function KS(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(u-s),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(s,c),v=Math.min(o,h),y=Math.min(u,d),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(p+f-b)}function XS(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function YS(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=zx(e,"boxes","nonMaxSuppressionAsync"),s=zx(t,"scores","nonMaxSuppressionAsync"),o=zS(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([i.data(),s.data()]),l=u[0],c=u[1],{selectedIndices:h}=GS(l,c,n,r,a);return i!==e&&i.dispose(),s!==t&&s.dispose(),mS(h,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS=Vx({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=zx(e,"boxes","nonMaxSuppression"),o=zx(t,"scores","nonMaxSuppression"),u=zS(s,o,n,r,a,i),l={boxes:s,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},h=Fx.runKernel(Lv,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZS=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=zx(e,"boxes","nonMaxSuppressionAsync"),o=zx(t,"scores","nonMaxSuppressionAsync"),u=zS(s,o,n,r,a,i);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([s.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=jS(c,h,n,r,a,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:mS(d,"int32"),selectedScores:mS(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eN=Vx({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=zx(e,"boxes","nonMaxSuppression"),o=zx(t,"scores","nonMaxSuppression"),u=zS(s,o,n,r,a,null),l={boxes:s,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},h=Fx.runKernel(Mv,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=zx(e,"boxes","nonMaxSuppressionAsync"),o=zx(t,"scores","nonMaxSuppressionAsync"),u=zS(s,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=HS(d,p,l,c,h,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:mS(f,"int32"),validOutputs:yI(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nN=Vx({resizeBilinear_:function(e,t,n=!1,r=!1){const a=zx(e,"images","resizeBilinear");rm(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),rm(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),rm(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=fk(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=Fx.runKernel(ty,o,u);return s?fk(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN=Vx({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=zx(e,"images","resizeNearestNeighbor");rm(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),rm(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),rm("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),rm(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=fk(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=Fx.runKernel(Zv,o,u);return s?fk(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN=Vx({threshold_:function(e,t="binary",n=!1,r=.5){const a=zx(e,"image","threshold"),i=a.shape[0]*a.shape[1];let s,o,u,l,c=zw(mS([r]),255);if(rm(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),rm(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),rm("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),rm("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[s,o,u]=oS(a,[1,1,1],-1);const e=zw(s,.2989),t=zw(o,.587),n=zw(u,.114);l=Lw(Lw(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,a,i,s,o,u=mS([-1]),l=mS([0]),c=mS([0]);for(let h=0;h<e.size-1;h++){n=xk(e,0,h+1),r=xk(e,h+1),s=Bw(wI(n),t),o=Bw(wI(r),t);const d=wI(zw(n,zC(0,n.size)));a=Bw(d,wI(n));const p=Ak(r.shape,n.size),f=Lw(zC(0,r.size),p),m=zw(r,f);i=Bw(wI(m),wI(r));const g=KI(a,i),v=KI(a,i),y=zw(s,o);c=zw(zw(y,g),v);const b=FI(c,l);l=tI(b,c,l),u=tI(b,mS([h]),u)}return u}(Tk(Ew(jC(l),"int32"),Hx([]),256),i)}const h=n?zI(l,c):FI(l,c);return Ew(zw(h,255),"int32")}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iN=Vx({transform_:function(e,t,n="nearest",r="constant",a=0,i){const s=zx(e,"image","transform","float32"),o=zx(t,"transforms","transform","float32");rm(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),rm(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),rm(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:s,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:i};return Fx.runKernel(zy,u,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=Vx({bandPart_:function(e,t,n){const r=zx(e,"a","bandPart");rm(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[i,s]=r.shape.slice(-2);let o,u;"number"==typeof t?(rm(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),rm(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=zx(t<0?i:t,"numLower","bandPart")):(rm("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=tI(BI(t,0),i,oC(t,i))),"number"==typeof n?(rm(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),rm(n<=s,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`)),u=zx(n<0?s:n,"numUpper","bandPart")):(rm("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=tI(BI(n,0),s,oC(n,s)));const l=fk(zC(0,i,1,"int32"),[-1,1]),c=zC(0,s,1,"int32"),h=KI(l,c),d=QI(zI(h,o),_I(h,HI(u))),p=iC([i,s],r.dtype);return fk(hS(IS(fk(r,[-1,i,s])).map((e=>tI(d,e,p)))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oN=Vx({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,rm(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)rm(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=oS(e,e.shape[0],0).map((e=>cS(e,[0])));rm(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Fx.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=zw(wI(zw(n[r],e)),n[r]);e=KI(e,t)}return Bw(e,II(e,"euclidean"))})));return t?hS(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(e,t=!1){return Fx.tidy((()=>{rm(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=RI(n),i=Rw(e);const s=gS([[1]],[1,1]);let o=Rw(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=o,l=a;[o,i,a]=Fx.tidy((()=>{const t=xk(i,[e,e],[n-e,1]),u=II(t),l=xk(i,[e,e],[1,1]),c=tI(FI(l,0),gS([[-1]]),gS([[1]])),h=KI(l,zw(c,u)),d=Bw(t,h);o=1===d.shape[0]?Rw(s):vk([s,xk(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=HI(Bw(yk(c,h),u)),f=xk(i,[e,0],[n-e,r]),m=zw(p,o),g=SS(o);if(0===e)i=KI(f,yk(m,yk(g,f)));else{const t=KI(f,yk(m,yk(g,f)));i=vk([xk(i,[0,0],[e,r]),t],0)}const v=SS(m),y=xk(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=KI(y,yk(yk(y,o),v));else{const t=KI(y,yk(yk(y,o),v));a=vk([xk(a,[0,0],[n,e]),t],1)}return[o,i,a]})),$w([t,u,l])}return!t&&n>r&&(a=xk(a,[0,0],[n,r]),i=xk(i,[0,0],[r,r])),[a,i]}))}const lN=Vx({qr_:function(e,t=!1){if(rm(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return uN(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=IS(fk(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];r.forEach((e=>{const[n,r]=uN(e,t);a.push(n),i.push(r)}));return[fk(hS(a,0),e.shape),fk(hS(i,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cN;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(cN||(cN={}));const hN={flipLeftRight:LS,grayscaleToRGB:PS,resizeNearestNeighbor:rN,resizeBilinear:nN,rotateWithOffset:BS,cropAndResize:MS,nonMaxSuppression:WS,nonMaxSuppressionAsync:QS,nonMaxSuppressionWithScore:JS,nonMaxSuppressionWithScoreAsync:ZS,nonMaxSuppressionPadded:eN,nonMaxSuppressionPaddedAsync:tN,threshold:aN,transform:iN},dN={bandPart:sN,gramSchmidt:oN,qr:lN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pN{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class fN{constructor(){this.classNameMap={}}static getMap(){return null==fN.instance&&(fN.instance=new fN),fN.instance}static register(e){fN.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function mN(e){rm(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),rm("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),rm(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),fN.register(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gN extends pN{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return $w(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){rm(km(e),(()=>"The f passed in variableGrads(f) must be a function")),rm(null==t||Array.isArray(t)&&t.every((e=>e instanceof fx)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Fx.registeredVariables)t.push(Fx.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),rm(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:i,grads:s}=Fx.gradients(e,t,null,!0);rm(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),rm(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=s[t]&&(o[e.name]=s[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&$w(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:yI(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(gN,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vN extends gN{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Fx.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fx.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:_w((()=>nI(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:_w((()=>nI(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;_w((()=>{const e=Lw(zw(i,this.rho),zw(xI(a),1-this.rho)),t=zw(Bw(bI(Lw(s,this.epsilon)),bI(Lw(i,this.epsilon))),a),n=Lw(zw(s,this.rho),zw(xI(t),1-this.rho));i.assign(e),s.assign(n);const o=Lw(zw(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&($w(this.accumulatedGrads.map((e=>e.variable))),$w(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yN extends gN{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fx.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:_w((()=>Ak(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable;_w((()=>{const e=Lw(i,xI(a));i.assign(e);const t=Lw(zw(Bw(a,bI(Lw(e,Fx.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&$w(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bN extends gN{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],_w((()=>{this.accBeta1=yI(t).variable(),this.accBeta2=yI(n).variable()})),null==r&&(this.epsilon=Fx.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);_w((()=>{const n=KI(1,this.accBeta1),r=KI(1,this.accBeta2);t.forEach(((t,a)=>{const i=Fx.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:_w((()=>nI(i).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:_w((()=>nI(i).variable(false)))});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Lw(zw(o,this.beta1),zw(s,1-this.beta1)),c=Lw(zw(u,this.beta2),zw(xI(s),1-this.beta2)),h=Bw(l,n),d=Bw(c,r);o.assign(l),u.assign(c);const p=Lw(zw(Bw(h,Lw(bI(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(zw(this.accBeta1,this.beta1)),this.accBeta2.assign(zw(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&$w(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&$w(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),_w((()=>{this.accBeta1.assign(vI(this.beta1,this.iterations_+1)),this.accBeta2.assign(vI(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xN extends gN{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],_w((()=>{this.iteration=yI(0).variable(),this.accBeta1=yI(t).variable()})),null==r&&(this.epsilon=Fx.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);_w((()=>{const n=KI(1,this.accBeta1),r=Bw(-this.learningRate,Lw(zw(this.iteration,this.decay),1));t.forEach(((t,a)=>{const i=Fx.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:nI(i).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:nI(i).variable(false)});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Lw(zw(o,this.beta1),zw(s,1-this.beta1)),c=zw(u,this.beta2),h=Ww(s),d=rC(c,h);o.assign(l),u.assign(d);const p=Lw(zw(Bw(r,n),Bw(l,Lw(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Lw(this.iteration,1)),this.accBeta1.assign(zw(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&$w(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&$w(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wN extends gN{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Fx.registeredVariables[t];_w((()=>{const e=Lw(zw(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ow(yI(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kN extends wN{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=yI(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fx.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:_w((()=>nI(r).variable(e)))}}const a=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&_w((()=>{let e;const t=Lw(zw(this.m,a),i);e=this.useNesterov?Lw(zw(this.c,Lw(i,zw(t,this.m))),r):Lw(zw(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&$w(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IN extends gN{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Fx.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Fx.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:_w((()=>nI(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:_w((()=>nI(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:_w((()=>nI(r).variable(a)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;_w((()=>{const e=Lw(zw(s,this.decay),zw(xI(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Lw(zw(t,this.decay),zw(i,1-this.decay)),u=Bw(zw(i,this.learningRate),bI(KI(e,Lw(xI(a),this.epsilon)))),l=Lw(zw(o,this.momentum),u);s.assign(e),t.assign(a),o.assign(l);const c=KI(r,l);r.assign(c)}else{const e=Lw(zw(s,this.decay),zw(xI(i),1-this.decay)),t=Lw(zw(o,this.momentum),Bw(zw(i,this.learningRate),bI(Lw(e,this.epsilon))));s.assign(e),o.assign(t);const n=KI(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&$w(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&$w(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&$w(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN=[vN,yN,bN,xN,kN,IN,wN];function SN(e){return new Promise((e=>setTimeout(e))).then(e)}class NN{constructor(e){if(!Lm().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(NN.URL_SCHEME)&&(e=e.slice(NN.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=jx.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Qx(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await SN((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await SN((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Zx(e)}}}}NN.URL_SCHEME="downloads://";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TN(e,t,n,r){!function(e){rm(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){rm(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),rm(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),rm(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((i=>(i.then((i=>{const s=n+ ++a/e.length*(r-n);return t(s),i})),i))))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ew.registerSaveRouter((e=>Lm().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(NN.URL_SCHEME)?function(e="model"){return new NN(e)}(e.slice(NN.URL_SCHEME.length)):null));class EN{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(rm("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Lm().platform.fetch,rm(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&rm(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Qx(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=jx.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Zx(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Jx(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,i=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);this.weightUrlConverter&&s.push(...await Promise.all(o));const u=await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?Lm().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await TN(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await TN(a,t.onProgress,.5,1)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,u]}}function RN(e){return null!=e.match(EN.URL_SCHEME_REGEX)}EN.URL_SCHEME_REGEX=/^https?:\/\//;const AN=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>RN(e))):RN(e),n)return function(e,t){return new EN(e,t)}(e,t)}return null};function DN(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===sm(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,i=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=i;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Cm(e.shape).map((e=>e/l)),1].slice(0,i);return[u,s,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ew.registerSaveRouter(AN),ew.registerLoadRouter(AN);const FN=-2,_N=-1;function $N(e,t,n){const r=e.shape.length;rm(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),rm(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)rm(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ON(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function MN(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function LN(e,t,n){return n<=e?n:n-(t-1)}function PN(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function BN(e,t,n,r,a){const i=[...a],s=PN(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{const s=LN(t,n,a);let o=r[s];e&1<<s&&(o=0),i[a]=o}return i}function zN(e,t,n,r,a){const i=[...a],s=PN(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=LN(t,n,a);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=em(0,i[e],a[e])}return i}function WN(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function VN(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=em(0,s,u-1),s}function UN(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=o>0?em(0,s,u):em(-1,s,u-1),s}function GN(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function HN(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function jN(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{rm(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(rm(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function qN(e,t,n,r,a,i,s,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=s&&0!=(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&s&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(FN),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(_N),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],v=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const s=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=KN(d.begin[t],0,d.strides[t],r,a,i),d.end[t]=KN(d.end[t],1,d.strides[t],r,a,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&s,f=f&&(0===t&&1===d.strides[t]||s);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):s&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?v.push(g[t]):t===FN&&v.push(1)}const y=v.filter(((e,t)=>d.finalShapeGatherIndices[t]!==FN));return{finalShapeSparse:y,finalShape:v,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function KN(e,t,n,r,a,i){if(a[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}var XN=Object.freeze({__proto__:null,assertParamsValid:$N,maskToAxes:function(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t},computeOutShape:ON,stridesWithElidedDims:MN,getNormalizedAxes:function(e,t,n,r,a,i,s,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=BN(s,u,l,r,e),h=zN(o,u,l,a,e),d=MN(i,u,l,e)}else for(let t=0;t<l;t++)c[t]=VN(s,r,i,e,t,u),h[t]=UN(o,a,i,e,t,u),d[t]=WN(i,t,u);return{begin:c,end:h,strides:d}},startIndicesWithElidedDims:BN,stopIndicesWithElidedDims:zN,stridesForAxis:WN,startForAxis:VN,stopForAxis:UN,isSliceContinous:GN,computeFlatOffset:HN,parseSliceParams:jN,sliceInfo:qN});/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const YN=
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class{static sgd(e){return new wN(e)}static momentum(e,t,n=!1){return new kN(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new IN(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new bN(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new vN(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new xN(e,t,n,r,a)}static adagrad(e,t=.1){return new yN(e,t)}},QN="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(){return new Promise((e=>QN((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(e,t){const n=e[0].length;e.forEach(((e,t)=>{rm(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),rm(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let i=0;i<n;i++)rm(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function eT(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var tT;function nT(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const i=n[a],s=r[r.length-n.length+a],o=r[s];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${i} but shape[${a+e}] = ${o}`)}else r[s]=i}return r}function rT(e){const t={FIRST_DIM_SIZE:tT.FIRST_DIM_SIZE,VALUE_ROWIDS:tT.VALUE_ROWIDS,ROW_LENGTHS:tT.ROW_LENGTHS,ROW_SPLITS:tT.ROW_SPLITS,ROW_LIMITS:tT.ROW_LIMITS,ROW_STARTS:tT.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function aT(e){return 0===e.length?0:e[0]===tT.FIRST_DIM_SIZE?e.length-1:e.length}function iT(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(tT||(tT={}));const sT=30;function oT(e){return e<=sT?e:Im(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function cT(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function hT(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function dT(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pT(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT=1.7580993408473768,mT=1.0507009873554805,gT=.3275911,vT=.254829592,yT=-.284496736,bT=1.421413741,xT=-1.453152027,wT=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kT(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function IT(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function CT(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ST(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function NT(e,t){return{real:e[2*t],imag:e[2*t+1]}}function TT(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ET(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}function RT(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AT="->",DT=/->/g,FT=",",_T="...";function $T(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(DT,"").length)/AT.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${AT}").`);const[r,a]=e.split(AT);rm(-1===r.indexOf(_T),(()=>`The ellipsis notation ("${_T}") is not supported yet.`));const i=r.split(FT),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==FT&&o.push(t)}const u=new Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(o.indexOf(i[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function OT(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function MT(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:rm(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function LT(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const a=BT(t,n[e]);for(const t of a)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function PT(e){return e.every(((e,t)=>e===t))}function BT(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function zT(e,t,n=0){let r=[];if("number"==typeof t)rm(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);rm(a<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}rm(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function VT(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function UT(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function HT(e,t){return`size ${e} must be non-negative, not ${t}`}function jT(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function qT(e,t){return`Input to reshape is a SparseTensor with ${sm(e)}\n  dense values, but the requested shape requires a multiple of ${sm(t)}. inputShape=${e} outputShape= ${t}`}function KT(e,t){return`Input to reshape is a tensor with ${sm(e)} dense values, but the requested shape has ${sm(t)}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(){return"segment ids must be >= 0"}function YT(){return"segment ids are not increasing"}function QT(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function JT(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(e,t){let n,r=!1;for(e<=sT?(n=e,r=!0):n=Im(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Im(e,n+1);return n}function eE(e,t,n){const r=[],a=e.length;for(let i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}function tE(e,t,n,r){const a=t.shape.length,i=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:s,outputShape:o}}var nE=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:ZT,computeOutShape:eE,collectGatherOpShapeInfo:tE});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(e){try{return e.map((e=>Xb(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function aE(e){return e.map((e=>Kb(e)))}var iE=Object.freeze({__proto__:null,slice_util:XN,segment_util:nE,fromUint8ToStringArray:rE,fromStringArrayToUint8:aE,upcastType:wx,axesAreInnerMostDims:oI,combineLocations:uI,computeOutAndReduceShapes:lI,expandShapeToKeepDim:cI,assertAxesAreInnerMostDims:hI,getAxesPermutation:dI,getUndoAxesPermutation:pI,getInnerMostAxes:fI,getBroadcastDims:Qk,getReductionAxes:Jk,assertAndGetBroadcastShape:Zk,assertParamsConsistent:ZN,computeOutShape:eT,computeDilation2DInfo:Zw,computePool2DInfo:ek,computePool3DInfo:tk,computeConv2DInfo:nk,computeConv3DInfo:rk,computeDefaultPad:ak,tupleValuesAreOne:lk,eitherStridesOrDilationsAreOne:ck,stridesOrDilationsArePositive:hk,convertConv2DDataFormat:dk,checkPadOnDimRoundingMode:pk,getFusedDyActivation:ES,getFusedBiasGradient:RS,applyActivation:AS,shouldFuse:DS,get RowPartitionType(){return tT},combineRaggedTensorToTensorShapes:nT,getRowPartitionTypesHelper:rT,getRaggedRank:aT,validateDefaultValueShape:iT,PARALLELIZE_THRESHOLD:sT,computeOptimalWindowSize:oT,getImageCenter:uT,getReshaped:lT,getPermuted:cT,getReshapedPermuted:hT,getSliceBeginCoords:dT,getSliceSize:pT,prepareAndValidate:DN,validateUpdateShape:vS,validateInput:function(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}vS(n,t,e)},calculateShapes:yS,SELU_SCALEALPHA:fT,SELU_SCALE:mT,ERF_P:gT,ERF_A1:vT,ERF_A2:yT,ERF_A3:bT,ERF_A4:xT,ERF_A5:wT,warn:Qy,log:function(...e){Lm().getBool("IS_TEST")||Lm().getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:kT,splitRealAndImagArrays:IT,complexWithEvenIndex:CT,complexWithOddIndex:ST,getComplexWithIndex:NT,assignToTypedArray:TT,exponents:ET,exponent:RT,decodeEinsumEquation:$T,getEinsumPermutation:OT,checkEinsumDimSizes:MT,getEinsumComputePath:LT,isIdentityPermutation:PT,prepareSplitSize:zT,getSparseFillEmptyRowsIndicesDenseShapeMismatch:WT,getSparseFillEmptyRowsNegativeIndexErrorMessage:VT,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:UT,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:GT,getSparseReshapeNegativeOutputDimErrorMessage:HT,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:jT,getSparseReshapeInputOutputMultipleErrorMessage:qT,getSparseReshapeInputOutputMismatchErrorMessage:KT,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:XT,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:YT,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:QT,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:JT});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(){for(const e of CN)mN(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sE={kernelName:Vm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,dS(Ew(n,"float32"),-1))}}},oE={kernelName:Um,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=xI(Ew(n,"float32")),r=bI(KI(yI(1),t));return HI(Bw(e,r))}}}},uE={kernelName:Gm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bI(KI(xI(Ew(n,"float32")),1));return Bw(e,t)}}}},lE={kernelName:Hm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{let t=e;const r=Jk(n.shape,a);return r.length>0&&(t=wI(t,r)),fk(t,n.shape)},b:()=>{let t=e;const n=Jk(r.shape,a);return n.length>0&&(t=wI(t,n)),fk(t,r.shape)}}}},cE={kernelName:jm,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},hE={kernelName:Xm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nI(n)}}},dE={kernelName:Ym,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nI(n)}}},pE={kernelName:Qm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,bI(KI(yI(1),xI(Ew(n,"float32")))))}}},fE={kernelName:Jm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bI(Lw(yI(1),xI(Ew(n,"float32"))));return Bw(e,t)}}}},mE={kernelName:tg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{const t=Lw(xI(n),xI(r));let i=zw(e,Bw(r,t));const s=Jk(n.shape,a);return s.length>0&&(i=wI(i,s)),fk(i,n.shape)},b:()=>{const t=Lw(xI(n),xI(r));let i=HI(zw(e,Bw(n,t)));const s=Jk(r.shape,a);return s.length>0&&(i=wI(i,s)),fk(i,r.shape)}}}},gE={kernelName:Zm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,Lw(xI(Ew(n,"float32")),1))}}},vE={kernelName:eg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,KI(yI(1),xI(Ew(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE=Vx({avgPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){const s=zx(e,"dy","avgPool3dGrad"),o=zx(t,"input","avgPool3dGrad");let u=s,l=o,c=!1;4===o.rank&&(c=!0,u=fk(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),l=fk(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),rm(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),rm(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),pk("avgPool3dGrad",a,i);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:a,dimRoundingMode:i},p=Fx.runKernel(ig,h,d);return c?fk(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),bE={kernelName:ag,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s,dimRoundingMode:o}=n;return{x:()=>yE(e,r,a,i,s,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE=Vx({avgPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a){const i=zx(e,"dy","avgPoolGrad"),s=zx(t,"input","avgPoolGrad");rm(s.rank===i.rank,(()=>`Rank of input (${s.rank}) does not match rank of dy (${i.rank})`));let o=s,u=i,l=!1;3===s.rank&&(l=!0,o=fk(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=fk(i,[1,i.shape[0],i.shape[1],i.shape[2]])),rm(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),rm(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},d=Fx.runKernel(rg,c,h);return l?fk(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),wE={kernelName:ng,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s}=n;return{x:()=>xE(e,r,a,i,s)}}},kE={kernelName:sg,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:i,transposeB:s}=n;return i||s?!i&&s?{a:()=>yk(e,a,!1,!1),b:()=>yk(e,r,!0,!1)}:i&&!s?{a:()=>yk(a,e,!1,!0),b:()=>yk(r,e,!1,!1)}:{a:()=>yk(a,e,!0,!0),b:()=>yk(e,r,!0,!0)}:{a:()=>yk(e,a,!1,!0),b:()=>yk(r,e,!0,!1)}}},IE={kernelName:og,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>mC(e,r,a)}}},CE={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,i=r.shape,s=Array.from(i);for(let e=a.length-1;e>=0;e--)if(a[e]===i[e])s[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<s.length;e++)s[e]>1&&o.push(e);return{x:()=>wI(e,o,!0)}}},SE={kernelName:hg,gradFunc:e=>({x:()=>e.clone()})},NE={kernelName:dg,gradFunc:e=>({x:()=>nI(e)})},TE={kernelName:pg,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:i}=n;return{x:()=>tI(QI(_I(r,a),zI(r,i)),e,nI(e))}}},EE={kernelName:mg,inputsToSave:["x"],gradFunc:sE.gradFunc},RE={kernelName:gg,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,i=pm(a,t[0].shape)[0],s=r.map((e=>e[i]));return oS(e,s,i).map((e=>()=>e))}},AE={kernelName:vg,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:i,strides:s,pad:o,dataFormat:u}=n;return rm(lk(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Pk(r.shape,e,a,s,o,u),filter:()=>TS(r,e,a.shape,s,o,u)}}},DE={kernelName:bg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:i,pad:s,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Mk(e,a,i,s,o,1,u),filter:()=>TS(e,r,a.shape,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FE=Vx({conv3DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a){let i=e;4===e.rank&&(i=fk(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=fk(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),rm(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),rm(5===s.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`)),rm(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),rm(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),rm(s.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:s},u={strides:r,pad:a,filterShape:n};return Fx.runKernel(wg,o,u)}}),_E={kernelName:xg,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i}=n;rm(lk(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[s,o]=t;return{x:()=>Wk(s.shape,e,o,a,i),filter:()=>FE(s,e,o.shape,a,i)}}},$E={kernelName:Ig,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(HI(QC(Ew(n,"float32"))),e)}}},OE={kernelName:Cg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(JC(Ew(n,"float32")),e)}}},ME={kernelName:Ng,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:i,reverse:s}=n;return{x:()=>{const t=dI([a],r.rank);let n=jk(e,a,i,!s);return null!=t&&(n=SS(n,t)),n}}}},LE={kernelName:Ag,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i,dimRoundingMode:s}=n,o=null==r?[1,1]:r;rm(lk(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return rm(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),rm(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),rm(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),rm(ck(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),pk("depthwiseConv2d",i,s),{x:()=>$S(u.shape,e,l,a,i,o,s),filter:()=>_S(u,e,l.shape,a,i,o,s)}}},PE={kernelName:$g,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},s={x:r,filter:a,dy:e};return{x:()=>Fx.runKernel(Og,i,n),filter:()=>Fx.runKernel(Mg,s,n)}}},BE={kernelName:Bg,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Fx.runKernel(zg,r)}}},zE={kernelName:Wg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=zw(SI(HI(xI(n))),2/Math.sqrt(Math.PI));return{x:()=>zw(e,r)}}},WE={kernelName:Ug,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,n)}}},VE={kernelName:Gg,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>fk(e,n.shape)}}},UE={kernelName:Hg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,SI(n))}}},GE={kernelName:Xg,gradFunc:e=>({x:()=>nI(e)})},HE={kernelName:Yg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{const t=Bw(e,Ew(r,"float32")),i=Jk(n.shape,a);return i.length>0?fk(wI(t,i),n.shape):t},b:()=>{let t=zw(e,Ew(n,"float32"));const i=Jk(r.shape,a);i.length>0&&(t=fk(wI(t,i),r.shape));const s=xI(r);return HI(Bw(t,Ew(s,"float32")))}}}},jE={kernelName:Qg,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,i,s,o]=t,u=null==o?yI(1):o,l=Jk(i.shape,a.shape),c=[];if(1===i.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=KI(a,i),d=zw(e,u),p=qC(Lw(s,yI(r))),f=zw(zw(zw(p,p),p),yI(-.5));return{x:()=>1===i.rank?fk(zw(zw(e,EI(fk(p,[1,1,1,i.shape[0]]),c)),u),a.shape):fk(zw(zw(e,p),u),a.shape),mean:()=>{let e=zw(zw(p,yI(-1)),d);return 1===i.rank&&(e=wI(e,l)),fk(e,i.shape)},variance:()=>{let e=zw(zw(f,h),d);return 1===i.rank&&(e=wI(e,l)),fk(e,i.shape)},scale:()=>{const t=zw(h,p);let n=zw(e,t);return 1===i.rank&&(n=wI(n,l)),fk(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=wI(t,l)),fk(t,i.shape)}}}},qE={kernelName:Jg,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:i}=n,s=pm(i,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,s),u=o.length,l=t.slice(i,t.length).slice(1),c=l.length,h=KE(0,u),d=KE(u+1,u+1+c),p=XE([o,[n],l]),f=fk(e,p),m=fk(a,[n]),g=XE([[u],h,d]),v=SS(f,g);let y=kS(v,m,r.shape[s]);const b=pI(g);return y=SS(y,b),y},indices:()=>a}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function XE(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE={kernelName:tv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>nI(n),b:()=>nI(r)}}},QE={kernelName:nv,gradFunc:e=>({x:()=>Ew(e,"float32")})},JE={kernelName:iv,gradFunc:e=>({x:()=>nI(e)})},ZE={kernelName:sv,gradFunc:e=>({x:()=>nI(e)})},eR={kernelName:ov,gradFunc:e=>({x:()=>nI(e)})},tR={kernelName:uv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,i=FI(r,0);return{x:()=>tI(i,e,zw(e,a))}}},nR={kernelName:pv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,Lw(n,1))}}},rR={kernelName:dv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,Ew(n,"float32"))}}},aR={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=SI(r);return KI(e,zw(wI(e,a,!0),t))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Vx({localResponseNormalizationBackprop_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=5,a=1,i=1,s=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:i,beta:s};return Fx.runKernel(yv,o,u)}}),sR={kernelName:vv,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:i,bias:s,alpha:o,beta:u}=n;return{x:()=>iR(r,a,e,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oR(e,t,n,r){return t.rank<n.rank&&(t=fk(t,cI(t.shape,r))),e.rank<n.rank&&(e=fk(e,cI(e.shape,r))),{x:()=>zw(e,Ew(eI(n,t),e.dtype))}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR={kernelName:bv,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,i=t[0],s=oR(e,t[1],i,pm(a,i.shape));return{x:()=>s.x()}}},lR={kernelName:xv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>zw(e,Ew(_I(n,r),"float32")),b:()=>zw(e,Ew(BI(n,r),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=Vx({maxPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i,s){const o=zx(e,"dy","maxPool3dGrad"),u=zx(t,"input","maxPool3dGrad"),l=zx(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=fk(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=fk(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=fk(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),rm(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),rm(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),rm(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),pk("maxPool3dGrad",i,s);const f={dy:c,input:h,output:d},m={filterSize:r,strides:a,pad:i,dimRoundingMode:s},g=Fx.runKernel(Cv,f,m);return p?fk(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),hR={kernelName:Iv,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n;return{x:()=>cR(e,r,a,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=Vx({maxPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i,s){const o=zx(e,"dy","maxPoolGrad"),u=zx(t,"input","maxPoolGrad"),l=zx(n,"output","maxPoolGrad");rm(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),rm(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),rm(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),pk("maxPoolGrad",i,s);const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:i,dimRoundingMode:s};return Fx.runKernel(kv,c,h)}}),pR={kernelName:wv,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o}=n;return{x:()=>dR(e,r,a,i,s,o)}}},fR={kernelName:Nv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,i=pm(a,r.shape),s=sm(lI(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=fk(e,t);return Bw(zw(n,sC(r.shape,"float32")),s)}}}},mR={kernelName:Tv,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[i,s]=t,o=oR(e,s,i,pm(a,i.shape));return{x:()=>o.x()}}},gR={kernelName:Ev,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>zw(e,Ew(zI(n,r),"float32")),b:()=>zw(e,Ew(FI(n,r),"float32"))}}},vR={kernelName:Rv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>xk(e,i,r.shape)}}},yR={kernelName:Av,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{const t=Jk(n.shape,a);return t.length>0?fk(wI(e,t),n.shape):e},b:()=>{const t=zw(e,HI(AI(Bw(n,r)))),i=Jk(r.shape,a);return i.length>0?fk(wI(t,i),r.shape):t}}}},bR={kernelName:Fv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{const t=zw(e,Ew(r,"float32")),i=Jk(n.shape,a);return i.length>0?fk(wI(t,i),n.shape):t},b:()=>{const t=zw(e,Ew(n,"float32")),i=Jk(r.shape,a);return i.length>0?fk(wI(t,i),r.shape):t}}}},xR={kernelName:Bv,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>iC(n.shape,"float32")}}},wR={kernelName:zv,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return IS(e,r).map((e=>()=>e))}},kR={kernelName:Wv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>xk(e,i,r.shape)}}},IR={kernelName:Vv,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,i=n,s=r,o=Zk(i.shape,s.shape);return{a:()=>{const t=Ew(s,"float32");let n=zw(e,zw(t,vI(i,KI(t,yI(1)))));const r=Jk(i.shape,o);return r.length>0&&(n=wI(n,r)),fk(n,i.shape)},b:()=>{const t=FI(i,0),n=tI(t,VI(i),nI(i));let r=zw(e,zw(a,n));const u=Jk(s.shape,o);return u.length>0&&(r=wI(r,u)),fk(r,s.shape)}}}},CR={kernelName:Uv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=FI(n,0);return{x:()=>tI(a,e,zw(e,r)),alpha:()=>{let t=tI(a,nI(e),zw(e,n));const i=Jk(r.shape,e.shape);return i.length>0&&(t=wI(t,i)),fk(t,r.shape)}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(e,t,n){const r=e.shape.length,a=r-n.length,i=dI(n,r);let s=e;null!=i&&(s=SS(e,i));const o=s.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n){const r=e.shape.slice();r[n]=1;const a=fk(t,r),i=Hk(e,n,!0,!1),s=Hk(e,n,!0,!0),o=zw(i,s);return zw(a,o)}(s.reshape(o),t,a);if(l=l.reshape(s.shape),null!=i){const e=pI(i);l=SS(l,e)}return l}const NR={kernelName:Gv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let i=[];return i=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>SR(r,e,i)}}},TR={kernelName:Lg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{const t=Bw(e,Ew(r,"float32")),i=Jk(n.shape,a);return i.length>0?fk(wI(t,i),n.shape):t},b:()=>{let t=zw(e,Ew(n,"float32"));const i=Jk(r.shape,a);i.length>0&&(t=fk(wI(t,i),r.shape));const s=xI(r);return HI(Bw(t,Ew(s,"float32")))}}}},ER={kernelName:Yv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,HI(xI(n)))}}},RR={kernelName:ry,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=zw(zI(n,6),dS(n));return{x:()=>zw(e,Ew(r,"float32"))}}},AR={kernelName:Qv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,Ew(dS(n),"float32"))}}},DR={kernelName:Jv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fk(e,n.shape)}}},FR={kernelName:ty,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Fx.runKernel(ny,a,n)}}},_R={kernelName:Zv,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Fx.runKernel(ey,a,n)}}},$R={kernelName:sy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>HI(Bw(e,zw(vI(n,1.5),2)))}}},OR={kernelName:cy,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ew(nI(n),"float32"),t:()=>zw(e,Ew(n,e.dtype)),e:()=>zw(e,Ew(JI(n),e.dtype))}}},MR={kernelName:hy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=FI(n,yI(0)),r=yI(fT),a=yI(mT),i=zw(e,a),s=zw(zw(e,r),SI(Ew(n,"float32")));return tI(t,i,s)}}}},LR={kernelName:gy,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,zw(n,KI(yI(1),n)))}}},PR={kernelName:py,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(Uk(Ew(n,"float32")),e)}}},BR={kernelName:fy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(Gk(Ew(n,"float32")),e)}}},zR={kernelName:dy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:i}=n,s=r.shape,[o,u]=jN(r,a,i),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],s[t]-o[t]-u[t]]);return{x:()=>fC(e,l)}}},WR={kernelName:ky,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,i=zw(e,r);return{logits:()=>KI(i,zw(wI(i,[a],true),r))}}},VR={kernelName:vy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,bk(n))}}},UR={kernelName:xy,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>kk(e,r,a)}}},GR={kernelName:wy,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>vk(e,r)}}},HR={kernelName:yy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,zw(bI(Ew(n,"float32")),2))}}},jR={kernelName:Ry,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(e,zw(Ew(n,"float32"),2))}}},qR={kernelName:Ey,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=yI(2);return{a:()=>zw(e,zw(a,KI(n,r))),b:()=>zw(e,zw(a,KI(r,n)))}}},KR={kernelName:Oy,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Zk(n.shape,r.shape);return{a:()=>{let t=e;const r=Jk(n.shape,a);return r.length>0&&(t=wI(t,r)),fk(t,n.shape)},b:()=>{let t=e;const n=Jk(r.shape,a);return n.length>0&&(t=wI(t,n)),fk(HI(t),r.shape)}}}},XR={kernelName:by,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:i}=n;pm(i,r.shape).forEach((e=>{a[e]=1}));const s=fk(e,a),o=zw(s,sC(r.shape,"float32"));return{x:()=>o}}},YR={kernelName:My,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Bw(e,xI(Uk(n)))}}},QR={kernelName:Ly,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zw(KI(yI(1),xI(n)),e)}}},JR={kernelName:Py,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=nI(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Lw(t,xk(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)t=Lw(t,xk(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)t=Lw(t,xk(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)for(let o=0;o<a[3];++o)t=Lw(t,xk(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},ZR={kernelName:Gy,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=rC(t,nI(t)),r=DI(e,n);let a=_I(t,yI(0,"int32"));const i=r.rank-a.rank;for(let e=0;e<i;++e)a=NI(a,e+1);a=QI(a,sC(r.shape,"bool"));const s=nI(r);return tI(a,r,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,n)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=[sE,oE,uE,lE,cE,hE,dE,pE,fE,mE,gE,vE,bE,wE,kE,IE,CE,SE,NE,TE,EE,RE,DE,AE,_E,$E,OE,ME,LE,PE,TR,BE,zE,WE,VE,UE,HE,GE,jE,qE,YE,QE,JE,ZE,eR,tR,nR,rR,aR,sR,uR,uR,lR,hR,pR,fR,mR,gR,vR,yR,bR,{kernelName:_v,gradFunc:e=>({x:()=>HI(e)})},xR,{kernelName:Pv,gradFunc:e=>({x:()=>nI(e)})},wR,kR,kR,IR,CR,NR,ER,RR,AR,DR,FR,_R,{kernelName:ay,gradFunc:(e,t,n)=>{const{dims:r}=n,a=pm(r,e.shape);return{x:()=>HC(e,a)}}},{kernelName:iy,gradFunc:e=>({x:()=>nI(e)})},$R,OR,MR,LR,{kernelName:my,gradFunc:e=>({x:()=>nI(e)})},PR,BR,zR,WR,VR,UR,UR,GR,GR,HR,qR,jR,{kernelName:jy,gradFunc:e=>({x:()=>nI(e)})},KR,XR,YR,QR,JR,{kernelName:Wy,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,i=pI(a);return{x:()=>SS(e,i)}}},{kernelName:Uy,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>hS(e,a)}}},ZR,{kernelName:Hy,gradFunc:e=>({x:()=>nI(e)})}];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of eA)ab(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */px().prototype.abs=function(){return this.throwIfDisposed(),Ww(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.acos=function(){return this.throwIfDisposed(),Vw(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.acosh=function(){return this.throwIfDisposed(),Uw(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.add=function(e){return this.throwIfDisposed(),Lw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.all=function(e,t){return this.throwIfDisposed(),Gw(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.any=function(e,t){return this.throwIfDisposed(),Hw(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.argMax=function(e){return this.throwIfDisposed(),jw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.argMin=function(e){return this.throwIfDisposed(),qw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.asScalar=function(){return this.throwIfDisposed(),rm(1===this.size,(()=>"The array must have only 1 element.")),fk(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.asType=function(e){return this.throwIfDisposed(),Ew(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.as1D=function(){return this.throwIfDisposed(),fk(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.as2D=function(e,t){return this.throwIfDisposed(),fk(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),fk(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),fk(this,[e,t,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),fk(this,[e,t,n,r,a])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.asin=function(){return this.throwIfDisposed(),Kw(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.asinh=function(){return this.throwIfDisposed(),Xw(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.atan=function(){return this.throwIfDisposed(),Yw(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.atan2=function(e){return this.throwIfDisposed(),Qw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.atanh=function(){return this.throwIfDisposed(),Jw(this)},px().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),mk(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),kk(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Ik(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ek(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.cast=function(e){return this.throwIfDisposed(),Ew(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.ceil=function(){return this.throwIfDisposed(),Rk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Dk(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof dx&&(e=[e]),vk([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.conv1d=function(e,t,n,r,a,i){return this.throwIfDisposed(),Lk(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Bk(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.conv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),Mk(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.cos=function(){return this.throwIfDisposed(),Uk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.cosh=function(){return this.throwIfDisposed(),Gk(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Hk(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),jk(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Kk(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.depthwiseConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),Xk(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Yk(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.divNoNan=function(e){return this.throwIfDisposed(),rI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.div=function(e){return this.throwIfDisposed(),Bw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.dot=function(e){return this.throwIfDisposed(),aI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.elu=function(){return this.throwIfDisposed(),iI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.equal=function(e){return this.throwIfDisposed(),eI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.erf=function(){return this.throwIfDisposed(),sI(this)},
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),CI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.exp=function(){return this.throwIfDisposed(),SI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.expandDims=function(e){return this.throwIfDisposed(),NI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.expm1=function(){return this.throwIfDisposed(),TI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.fft=function(){return this.throwIfDisposed(),aS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.flatten=function(){return this.throwIfDisposed(),fk(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.floor=function(){return this.throwIfDisposed(),AI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.floorDiv=function(e){return this.throwIfDisposed(),Pw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.gather=function(e,t,n){return this.throwIfDisposed(),DI(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.greaterEqual=function(e){return this.throwIfDisposed(),_I(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.greater=function(e){return this.throwIfDisposed(),FI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.ifft=function(){return this.throwIfDisposed(),iS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.irfft=function(){return this.throwIfDisposed(),sS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.isFinite=function(){return this.throwIfDisposed(),OI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.isInf=function(){return this.throwIfDisposed(),MI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.isNaN=function(){return this.throwIfDisposed(),LI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.leakyRelu=function(e){return this.throwIfDisposed(),PI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.lessEqual=function(e){return this.throwIfDisposed(),zI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.less=function(e){return this.throwIfDisposed(),BI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),WI(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logSigmoid=function(){return this.throwIfDisposed(),qI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logSoftmax=function(e){return this.throwIfDisposed(),XI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),YI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.log=function(){return this.throwIfDisposed(),VI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.log1p=function(){return this.throwIfDisposed(),UI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logicalAnd=function(e){return this.throwIfDisposed(),QI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logicalNot=function(){return this.throwIfDisposed(),JI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logicalOr=function(e){return this.throwIfDisposed(),ZI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.logicalXor=function(e){return this.throwIfDisposed(),eC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),yk(this,e,t,n)},px().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),tC(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.max=function(e,t){return this.throwIfDisposed(),mI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.maximum=function(e){return this.throwIfDisposed(),rC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.mean=function(e,t){return this.throwIfDisposed(),aC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.min=function(e,t){return this.throwIfDisposed(),gI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.minimum=function(e){return this.throwIfDisposed(),oC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),uC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.mod=function(e){return this.throwIfDisposed(),lC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.mul=function(e){return this.throwIfDisposed(),zw(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.neg=function(){return this.throwIfDisposed(),HI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.norm=function(e,t,n){return this.throwIfDisposed(),II(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.notEqual=function(e){return this.throwIfDisposed(),hC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),dC(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.onesLike=function(){return this.throwIfDisposed(),pC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.pad=function(e,t){return this.throwIfDisposed(),fC(this,e,t)},px().prototype.pool=function(e,t,n,r,a,i){return this.throwIfDisposed(),gC(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.pow=function(e){return this.throwIfDisposed(),vI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.prelu=function(e){return this.throwIfDisposed(),vC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.prod=function(e,t){return this.throwIfDisposed(),yC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.reciprocal=function(){return this.throwIfDisposed(),VC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.relu=function(){return this.throwIfDisposed(),UC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.relu6=function(){return this.throwIfDisposed(),GC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.reshapeAs=function(e){return this.throwIfDisposed(),fk(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.reshape=function(e){return this.throwIfDisposed(),fk(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),nN(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),rN(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.reverse=function(e){return this.throwIfDisposed(),HC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.rfft=function(){return this.throwIfDisposed(),uS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.round=function(){return this.throwIfDisposed(),jC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.rsqrt=function(){return this.throwIfDisposed(),qC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.selu=function(){return this.throwIfDisposed(),KC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.separableConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),XC(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sigmoid=function(){return this.throwIfDisposed(),bk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sign=function(){return this.throwIfDisposed(),YC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sin=function(){return this.throwIfDisposed(),QC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sinh=function(){return this.throwIfDisposed(),JC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.slice=function(e,t){return this.throwIfDisposed(),xk(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.softmax=function(e){return this.throwIfDisposed(),rS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.softplus=function(){return this.throwIfDisposed(),jI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),mC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.split=function(e,t){return this.throwIfDisposed(),oS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sqrt=function(){return this.throwIfDisposed(),bI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.square=function(){return this.throwIfDisposed(),xI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.squaredDifference=function(e){return this.throwIfDisposed(),lS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.squeeze=function(e){return this.throwIfDisposed(),cS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof dx?[this,e]:[this,...e];return hS(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.step=function(e){return this.throwIfDisposed(),dS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return this.throwIfDisposed(),pS(this,e,t,n,r,a,i,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sub=function(e){return this.throwIfDisposed(),KI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.sum=function(e,t){return this.throwIfDisposed(),wI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.tan=function(){return this.throwIfDisposed(),fS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.tanh=function(){return this.throwIfDisposed(),wk(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.tile=function(e){return this.throwIfDisposed(),EI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.toBool=function(){return this.throwIfDisposed(),Ew(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.toFloat=function(){return this.throwIfDisposed(),Ew(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.toInt=function(){return this.throwIfDisposed(),Ew(this,"int32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.topk=function(e,t){return this.throwIfDisposed(),bS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.transpose=function(e){return this.throwIfDisposed(),SS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.unique=function(e){return this.throwIfDisposed(),wS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),kS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.unstack=function(e){return this.throwIfDisposed(),IS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.where=function(e,t){return this.throwIfDisposed(),tI(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
px().prototype.zerosLike=function(){return this.throwIfDisposed(),nI(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class tA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tA.prototype)}}class nA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,nA.prototype)}}class rA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rA.prototype)}}class aA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,aA.prototype)}}class iA extends Error{constructor(e){super(e),Object.setPrototypeOf(this,iA.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sA{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oA(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function uA(e,t){if(!e)throw new iA(t)}function lA(e,t){let n=0;for(const r of e)r===t&&n++;return n}function cA(e){return 1===e.length?e[0]:e}function hA(e){return Array.isArray(e)?e:[e]}function dA(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function pA(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let fA={};function mA(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function gA(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>gA(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?gA(t):e[n]=t.value)}}}function vA(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let i;if(a in n)i=n[a];else if(a in fA)i=fA[a];else if(i=t[a],null==i)throw new rA(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new rA(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const s=i.className;let o,u;if(s in n?[o,u]=n[s]:s in fA?[o,u]=fA.className:s in t&&([o,u]=t[s]),null==o)throw new rA(`Unknown ${r}: ${s}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(fA))e[t]=fA[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},fA);for(const e of Object.keys(n))fA[e]=n[e];gA(i.config);const r=u(o,i.config,n,a);return fA=Object.assign({},t),r}{const e=Object.assign({},fA);for(const e of Object.keys(n))fA[e]=n[e];const t=new o(i.config);return fA=Object.assign({},e),t}}}function yA(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function bA(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function xA(e){if(null==e)throw new rA(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function wA(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new rA(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function kA(e,t,n=0,r=1/0){return uA(n>=0),uA(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function IA(e,t){Array.isArray(e)?(rm(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>IA(e,`element ${n+1} of ${t}`)))):rm(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${CA(e)}.`))}function CA(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>CA(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function SA(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let NA=0;function TA(){return NA++}const EA={};function RA(e=""){return e in EA||(EA[e]=0),EA[e]+=1,e+EA[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const AA=["channelsFirst","channelsLast"],DA=["nearest","bilinear"],FA=["valid","same","causal"],_A=["max","avg"],$A=["sum","mul","concat","ave"],OA=new Map;function MA(e){wA(AA,"DataFormat",e)}function LA(e){wA(FA,"PaddingMode",e)}function PA(e){wA(_A,"PoolMode",e)}const BA=[],zA="/";function WA(e,t){BA.push(e);try{const e=t();return BA.pop(),e}catch(e){throw BA.pop(),e}}function VA(e){if(!HA(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===BA.length?"":BA.join(zA)+zA)+e}function UA(e){if(!HA(e))throw new Error("Not a valid tensor name: '"+e+"'");OA.has(e)||OA.set(e,0);const t=OA.get(e);if(OA.set(e,OA.get(e)+1),t>0){const n=`${e}_${t}`;return OA.set(n,1),n}return e}const GA=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function HA(e){return!!e.match(GA)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jA(e){return e===parseInt(e.toString(),10)}function qA(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function KA(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function XA(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function YA(e,t){if(t<e)throw new rA(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let QA;function JA(){return null==QA&&(QA=Fx.backend.epsilon()),QA}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ZA(e,t){return Ew(e,t)}function eD(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),fk(e,n)}function tD(e,t,n){return _w((()=>{switch(e.rank){case 1:return ZC(e,t,n);case 2:return eS(e,[t,0],[n,e.shape[1]]);case 3:return tS(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return nS(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return xk(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return xk(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new rA(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function nD(e,t,n){return _w((()=>{switch(e.rank){case 1:return ZC(e,t,n);case 2:return eS(e,[0,t],[e.shape[0],n]);case 3:return tS(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return nS(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new rA(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function rD(e,t,n,r){return _w((()=>{switch(e.rank){case 1:return ZC(e,t,n);case 2:switch(r){case 1:return tD(e,t,n);case 2:return nD(e,t,n);default:throw new rA(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return tD(e,t,n);case 2:return tS(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return nD(e,t,n);default:throw new rA(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return tD(e,t,n);case 2:return nS(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return nS(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return nD(e,t,n);default:throw new rA(`The axis is not within the rank of the tensor ${r}`)}default:throw new rA(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function aD(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),vk(e,t)}function iD(e,t){switch(e.rank){case 1:return Fk([e,t]);case 2:return _k([e,t],0);case 3:return $k([e,t],0);case 4:return Ok([e,t],0);default:throw new rA(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function sD(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new rA(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return EI(e,t)}function oD(e,t=0,n=1,r,a){return PC(e,t,n,r,a)}function uD(e,t,n,r){if(e.rank<2||t.rank<2)throw new aA(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new aA(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return OS({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hD(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=fk(e,[-1,i]);const s=t.shape.slice(),o=s.pop(),u=s.pop(),l=[...s,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=fk(SS(t,c),[u,-1]);const h=[...a,...l];return fk(OS({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hD(e.rank,r,"channelsLast"):null,activation:n}),h)}}function lD(e,t,n){return _w((()=>(t=Array.isArray(t)?mS(t,"int32"):Ew(t,"int32"),DI(e,t,n))))}function cD(e){return zw(e,e)}function hD(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new rA(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?fk(t,[1,r[0],1,1,1]):fk(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?fk(t,[1,1,1,1,r[0]]):fk(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?fk(t,[1,r[0],1,1]):fk(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?fk(t,[1,1,1,r[0]]):fk(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?fk(t,[1,r[0],1]):fk(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?fk(t,[1,1,r[0]]):fk(t,[1].concat(r))}else if(e<3)return t;throw new rA(`Unsupported input rank by biasAdd: ${t.rank}`)}function dD(e,t,n){return _w((()=>(null==n&&(n="channelsLast"),MA(n),Lw(e,hD(e.rank,t,n)))))}function pD(e,t,n,r){return _w((()=>NS(e,t,n,r)))}function fD(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const mD=["fanIn","fanOut","fanAvg"],gD=["normal","uniform","truncatedNormal"];class vD extends pN{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class yD extends vD{apply(e,t){return iC(e,t)}}yD.className="Zeros",mN(yD);class bD extends vD{apply(e,t){return sC(e,t)}}bD.className="Ones",mN(bD);class xD extends vD{constructor(e){if(super(),"object"!=typeof e)throw new rA(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new rA(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return _w((()=>zw(yI(this.value),sC(e,t))))}getConfig(){return{value:this.value}}}xD.className="Constant",mN(xD);class wD extends vD{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return BC(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}wD.className="RandomUniform",mN(wD);class kD extends vD{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new aA(`randomNormal does not support dType ${t}.`);return oD(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}kD.className="RandomNormal",mN(kD);class ID extends vD{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new aA(`truncatedNormal does not support dType ${t}.`);return xS(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ID.className="TruncatedNormal",mN(ID);class CD extends vD{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return _w((()=>{if(2!==e.length||e[0]!==e[1])throw new rA("Identity matrix initializer can only be used for 2D square matrices.");return zw(this.gain,RI(e[0]))}))}getConfig(){return{gain:this.gain}}}CD.className="Identity",mN(CD);class SD extends vD{constructor(e){if(super(),e.scale<0)throw new rA(`scale must be a positive float. Got: ${e.scale}`);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,wA(mD,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){wA(gD,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(MA(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=qA(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=qA(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=qA(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new aA(`${this.getClassName()} does not support dType ${t}.`);return xS(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return BC(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}SD.className="VarianceScaling",mN(SD);class ND extends SD{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return SD.className}}ND.className="GlorotUniform",mN(ND);class TD extends SD{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return SD.className}}TD.className="GlorotNormal",mN(TD);class ED extends SD{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return SD.className}}ED.className="HeNormal",mN(ED);class RD extends SD{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return SD.className}}RD.className="HeUniform",mN(RD);class AD extends SD{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return SD.className}}AD.className="LeCunNormal",mN(AD);class DD extends SD{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return SD.className}}DD.className="LeCunUniform",mN(DD);class FD extends vD{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return _w((()=>{if(e.length<2)throw new aA("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=sm(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);const i=oD([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),s=dN.qr(i,!1);let o=s[0];const u=s[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=zw(o,u.sign()),n<r&&(o=o.transpose()),zw(yI(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}FD.className="Orthogonal",mN(FD);const _D={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function $D(e,t={}){return vA(e,fN.getMap().classNameMap,t,"initializer")}function OD(e){return mA(e)}function MD(e){if("string"==typeof e){const t=e in _D?_D[e]:e;if("GlorotNormal"===t)return new TD;if("GlorotUniform"===t)return new ND;if("HeNormal"===t)return new ED;if("HeUniform"===t)return new RD;if("LeCunNormal"===t)return new AD;if("LeCunUniform"===t)return new DD;{const e={};return e.className=t,e.config={},$D(e)}}return e instanceof vD?e:$D(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function LD(e){return Array.isArray(e)&&Array.isArray(e[0])}function PD(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function BD(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new rA(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function zD(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new rA(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WD(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VD="Variable";class UD{constructor(e,t="float32",n=VD,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=TA(),n=null==n?VD:n,this.originalName=VA(n),this.name=UA(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return Fx.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function GD(e){return e.map((e=>e.read()))}function HD(e){e.forEach((e=>{e[0].write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jD{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class qD{constructor(e,t,n,r,a,i,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=s,this.id=TA(),null!=i&&(this.originalName=VA(i),this.name=UA(this.originalName)),this.rank=t.length}}let KD=0;class XD{constructor(e,t){this.callArgs=t,this.id=KD++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let YD=0;class QD extends pN{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=YD++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=dA(e)+"_"+RA(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new nA(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new rA(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return cA(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return cA(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tA(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new tA(`Layer ${this.name} is not connected, no input to return.`);return cA(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new tA(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new tA(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return cA(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=hA(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=hA(this.inputSpec);if(e.length!==t.length)throw new rA(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const i=r.rank;if(null!=a.ndim&&i!==a.ndim)throw new rA(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(null!=a.maxNDim&&i>a.maxNDim)throw new rA(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(null!=a.minNDim&&i<a.minNDim)throw new rA(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new rA(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),i=a.axes[t],s=r>=0?e[r]:e[e.length+r];if(null!=i&&-1===[i,null].indexOf(s))throw new rA(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],i=r.shape[e];if(null!=t&&null!=i&&t!==i)throw new rA(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=hA(e);let r=!0;for(const e of n)if(!(e instanceof qD)){r=!1;break}let a=!0;for(const e of n)if(e instanceof qD){a=!1;break}if(r===a)throw new rA("Arguments to apply() must be all SymbolicTensors or all Tensors");return WA(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of hA(e))t.push(n.shape);this.build(cA(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=hA(r),i=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=cA(i),null!=this.activityRegularizer)throw new aA("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=hA(e);const t=[];for(const n of e)t.push(n.shape);return cA(t)}(e),r=this.computeOutputShape(n);let a;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new qD(i,n,this,hA(e),t,this.name,r))):new qD(i,r,this,hA(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new aA("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new tA(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new tA(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new nA(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return WD(this.weights)}build(e){this.built=!0}getWeights(e=!1){return GD(e?this.trainableWeights:this.weights)}setWeights(e){_w((()=>{const t=this.weights;if(t.length!==e.length)throw new rA(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=GD(t);for(let a=0;a<r.length;++a){const i=r[a],s=t[a],o=e[a];if(!om(i.shape,o.shape))throw new rA(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([s,o])}HD(n)}))}addWeight(e,t,n,r,a,i,s,o){if(-1!==this._addedWeightNames.indexOf(e))throw new rA(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():MD("zeros"));const u=r.apply(t,n),l=new UD(u,n,e,i,s);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=hA(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,i,s=null){const o=hA(e);t=hA(t),n=hA(n),r=hA(r),a=PD(a),i=PD(i);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new XD({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:i},s);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function JD(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=JD(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ZD extends QD{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:RA("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new rA("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new rA("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new rA("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new qD(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new XD({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new rA(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ZD.className="InputLayer",mN(ZD);class eF{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof eF)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new rA(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ew(t,e.dtype)}catch(n){throw new rA(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof qD){if(null==this.id2Value[e.id])throw new rA(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new rA(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof qD){if(null==this.id2Value[e.id])throw new rA(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new rA(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&$w(this.id2Mask)}}const tF=new sA,nF=new sA;function rF(e,t,n,r){const a=null!=n&&n.training,i=Array.isArray(e),s=i?e:[e],o=s.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=tF.get(c);if(null==d){const e=function(e,t){rm(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=iF(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const i of e){const{sorted:e,recipientMap:s}=iF(i,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in s)null==r[e]&&(r[e]=new Set),s[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:aF(r)}}(s,t);d=e.sorted,h=e.recipientCounts,tF.put(c,d),nF.put(c,h)}h={},a||Object.assign(h,nF.get(c));const p=new eF(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Fw().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=d[e],s=i.sourceLayer;if(s instanceof ZD)continue;const l=[],c=[],f=[];let m=!1;for(const e of i.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=hA(s.apply(l,n));let v=null;s.supportsMasking&&(v=s.computeMask(l,c));const y=sF(i),b=Array.isArray(y)?y:[y];for(let e=0;e<b.length;++e){p.hasKey(b[e])||p.add(b[e],g[e],Array.isArray(v)?v[0]:v);const t=o.indexOf(b[e].name);-1!==t&&(u[t]=g[e])}a||$w(f)}return p.disposeMasks(),i?u:u[0]}function aF(e){const t={};for(const n in e)t[n]=e[n].size;return t}function iF(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const i=[],s=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=s[s.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&s.pop();else{s.push(i.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:a}}function sF(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function oF(e,t){return _w((()=>bI(wI(zw(e,e),t,!0))))}Lm().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=tF&&tF.setMaxEntries(e),null!=nF&&nF.setMaxEntries(e)}));class uF extends pN{getConfig(){return{}}}class lF extends uF{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _w((()=>{const t=oF(e,this.axis),n=Dk(t,0,this.maxValue);return zw(e,Bw(n,Lw(JA(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}lF.className="MaxNorm",mN(lF);class cF extends uF{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _w((()=>Bw(e,Lw(JA(),oF(e,this.axis)))))}getConfig(){return{axis:this.axis}}}cF.className="UnitNorm",mN(cF);class hF extends uF{apply(e){return UC(e)}}hF.className="NonNeg",mN(hF);class dF extends uF{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return _w((()=>{const t=oF(e,this.axis),n=Lw(zw(this.rate,Dk(t,this.minValue,this.maxValue)),zw(1-this.rate,t));return zw(e,Bw(n,Lw(JA(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}dF.className="MinMaxNorm",mN(dF);const pF={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fF(e){return mA(e)}function mF(e,t={}){return vA(e,fN.getMap().classNameMap,t,"constraint")}function gF(e){if(null==e)return null;if("string"==typeof e){return mF({className:e in pF?pF[e]:e,config:{}})}return e instanceof uF?e:mF(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function vF(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const i=e[a];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];$w(r)}}function yF(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var bF;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(bF||(bF={}));class xF{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class wF{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class kF extends xF{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=_w((()=>Lw(this.totals[e],zw(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:_w((()=>{const n=zw(Bw(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ow(t[e])})))}}class IF extends xF{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let i=0;i<a.length;++i)if("number"!=typeof a[i]){const s=a[i];e.push(s.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class CF extends xF{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||JN,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");xm(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():qb();return(...i)=>{const s=null!=n?n():qb();return s-a<t||(a=s,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await vF(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await vF(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await vF(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await vF(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await vF(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):xm(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await vF(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await vF(e),await this.trainEnd(e))}}function SF(e,t){if(null==e&&(e={}),e instanceof xF)return[e];if(Array.isArray(e)&&e[0]instanceof xF)return e;return hA(e).map((e=>new CF(e,t)))}class NF{constructor(){}static registerCallbackConstructor(e,t){rm(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),NF.checkForDuplicate(t),null==NF.constructors[e]&&(NF.constructors[e]=[]),NF.constructors[e].push(t)}static checkForDuplicate(e){for(const t in NF.constructors){NF.constructors[+t].forEach((t=>{if(t===e)throw new rA("Duplicate callback constructor.")}))}}static clear(){NF.constructors={}}static createCallbacks(e){const t=[];for(const n in NF.constructors){const r=+n;e>=r&&t.push(...NF.constructors[r])}return t.map((e=>new e))}}function TF(e,t,n,r,a,i,s,o,u){const l=new IF,c=[new kF,...NF.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new wF(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:i,batchSize:s,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function EF(e,t={},n=!1){return vA(e,fN.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function RF(e,t){return _w((()=>{"float32"!==e.dtype&&(e=Ew(e,"float32"));const n=wI(cD(e),t,!0),r=Ak(n.shape,JA()),a=bI(rC(n,r));return Bw(e,a)}))}function AF(e,t){return _w((()=>aC(cD(KI(t,e)),-1)))}function DF(e,t){return _w((()=>aC(Ww(KI(t,e)),-1)))}function FF(e,t){return _w((()=>{const n=KI(e,t),r=Dk(Ww(e),JA(),Number.MAX_VALUE),a=Ww(Bw(n,r));return zw(100,aC(a,-1))}))}function _F(e,t,n=!1){return _w((()=>{if(n)t=rS(t);else{const e=wI(t,t.shape.length-1,!0);t=Bw(t,e)}return t=Dk(t,JA(),1-JA()),HI(wI(zw(Ew(e,"float32"),VI(t)),t.shape.length-1))}))}function $F(e,t,n=!1){return _w((()=>{const r=Ew(AI(function(e){const t=[qA(e.shape)];return fk(e,t)}(e)),"int32"),a=(t=Dk(t,JA(),1-JA())).shape;return _F(fk(dC(r,a[a.length-1]),a),t,n)}))}function OF(e,t){return _w((()=>{let n;return n=Dk(t,JA(),1-JA()),n=VI(Bw(n,KI(1,n))),aC(function(e,t){if(!om(e.shape,t.shape))throw new rA(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return _w((()=>{const n=UC(t),r=HI(Ww(t));return Lw(KI(n,zw(t,e)),UI(SI(r)))}))}(e,n),-1)}))}function MF(e,t){return _w((()=>{const n=RF(e,-1),r=RF(t,-1),a=zw(n,r);return HI(wI(a,-1))}))}NF.constructors={};const LF={meanSquaredError:AF,meanAbsoluteError:DF,meanAbsolutePercentageError:FF,meanSquaredLogarithmicError:function(e,t){return _w((()=>{const n=Dk(t,JA(),Number.MAX_VALUE),r=VI(Lw(1,n)),a=Dk(e,JA(),Number.MAX_VALUE),i=VI(Lw(1,a));return aC(cD(KI(r,i)),-1)}))},squaredHinge:function(e,t){return _w((()=>{const n=rC(0,KI(1,zw(e,t)));return aC(cD(n),-1)}))},hinge:function(e,t){return _w((()=>{const n=rC(0,KI(1,zw(e,t)));return aC(n,-1)}))},categoricalHinge:function(e,t){return _w((()=>{const n=wI(zw(e,t),-1),r=mI(zw(KI(1,e),t),-1);return rC(0,Lw(1,KI(r,n)))}))},logcosh:function(e,t){return _w((()=>{const n=Math.log(2),r=KI(t,e),a=KI(Lw(r,jI(zw(-2,r))),n);return aC(a,-1)}))},categoricalCrossentropy:_F,sparseCategoricalCrossentropy:$F,binaryCrossentropy:OF,kullbackLeiblerDivergence:function(e,t){return _w((()=>{const n=Dk(e,JA(),1),r=Dk(t,JA(),1);return wI(zw(e,VI(Bw(n,r))),-1)}))},poisson:function(e,t){return _w((()=>{const n=VI(Lw(JA(),t));return aC(KI(t,zw(e,n)),-1)}))},cosineProximity:MF};function PF(e){if("string"==typeof e){if(e in LF)return LF[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new rA(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function BF(e,t){return _w((()=>{const n=zw(.5,pC(t)),r=ZA(FI(t,n),e.dtype);return aC(eI(e,r),-1)}))}function zF(e,t){return _w((()=>ZA(eI(jw(e,-1),jw(t,-1)),"float32")))}function WF(e,t){return OF(e,t)}function VF(e,t){return e.rank===t.rank&&(e=cS(e,[e.rank-1])),(t=jw(t,-1)).dtype!==e.dtype&&(t=Ew(t,e.dtype)),Ew(eI(e,t),"float32")}const UF=_F,GF=$F,HF={binaryAccuracy:BF,categoricalAccuracy:zF,precision:function(e,t){return _w((()=>{const n=function(e,t){return _w((()=>Ew(wI(QI(eI(e,1),eI(t,1))),"float32")))}(e,t),r=function(e,t){return _w((()=>Ew(wI(QI(eI(e,0),eI(t,1))),"float32")))}(e,t),a=Lw(n,r);return Ew(tI(FI(a,0),Bw(n,a),0),"float32")}))},categoricalCrossentropy:UF,sparseCategoricalCrossentropy:GF,mse:AF,MSE:AF,mae:DF,MAE:DF,mape:FF,MAPE:FF,cosine:MF};function jF(e){if("string"==typeof e&&e in HF)return HF[e];if("string"!=typeof e&&null!=e)return e;throw new rA(`Unknown metric ${e}`)}function qF(e){if(uA(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(LF))if(LF[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(HF))if(HF[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const KF=1048576;function XF(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!YF(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>KF&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function YF(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!YF(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!YF(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QF(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let s;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){i.push("Receives inputs"),s=[];for(const t in e.nodesByDepth)s.push(...e.nodesByDepth[t])}r("_".repeat(t)),JF(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?ZF(o[e],n,r):e_(o[e],n,s,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?WD(e.collectedTrainableWeights):WD(e.trainableWeights);return t}(e),l=WD(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function JF(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ZF(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}JF([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function e_(e,t,n,r){let a,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){i="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const o=e.name,u=e.getClassName(),l=0===s.length?"":s[0];JF([`${o} (${u})`,i,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)JF(["","","","",s[e]],t,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function t_(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function n_(e,t){if(null===e)return null;if("string"==typeof e)return pA(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];t_(t,a,r)?n.push(r):n.push(n_(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=pA(n);t[e]=n_(r,e)}}return t}}function r_(e,t){if(null==e)return null;if("string"==typeof e)return dA(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];t_(t,a,r)?n.push(r):n.push(r_(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=dA(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?r_(r,n):r}return t}}/** @license See the LICENSE file. */const a_="4.6.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class i_ extends QD{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=RA(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],bA(this.inputs).length!==this.inputs.length)throw new rA(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);bA(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;uA(0===n,"input layer has >1 nodes"),uA(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof ZD))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},i={},s=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new nA(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(i_.nodeKey(r,a)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],i=l.nodeIndices[e],s=l.tensorIndices[e];o(r,t,n,a,i,s)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=s.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const s=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,s),r[e.outboundLayer.id]=i,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],o=a.inboundNodes[s],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(yA);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof i_&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(yA);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new nA(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new nA(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new XD({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new rA("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new rA(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let i=r;if(null==n[r]){const e=r.split("/");i=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[i])a.push([n[i],e[r]]);else if(t)throw new rA(`Provided weight data has no target variable: ${r}`);delete n[i]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new rA(`${e.length} of ${r} weights are not set: ${e}`)}HD(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${a_}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=r_(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return _w((()=>{e=hA(e);const n=new eF;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return rF(this.outputs,n,t)}))}computeMask(e,t){return _w((()=>{let n;return e=hA(e),n=null==t?oA(null,e.length):hA(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=PD(e);if(t.length!==this.inputLayers.length)throw new rA(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(yA);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],i=e.nodeIndices[t],s=e.tensorIndices[t],o=n[`${a.name}_${i}_${s}`];r.push(o)}const a=PD(t.computeOutputShape(cA(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${i}_${e}`]=a[e]}}}const a=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;i.push(a)}for(let e=0;e<i.length;e++){const t=i[e];uA(t in n),a.push(n[t])}return cA(a)}runInternalGraph(e,t){null==t&&(t=oA(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],i=e[r],s=t[r];n[a.id]=[i,s]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(yA);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,s,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===i.length){const[e,n]=i[0];null==l.mask&&(l.mask=n),o=hA(t.call(e,l)),u=hA(t.computeMask(e,n)),r=[e],s=[n]}else r=i.map((e=>e[0])),s=i.map((e=>e[1])),null==l.mask&&(l.mask=s),o=hA(t.call(r,l)),u=hA(t.computeMask(r,s));if(t.activityRegularizer)throw new aA("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],i=u[e];n[t.id]=[r,i]}}}}const a=[],i=[],s=[];for(const e of this.outputs){uA(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];s.push(t.shape),a.push(t),i.push(r)}return[a,i,s]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof i_?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=i_.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new rA(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new rA("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new rA(`No such layer: ${e}`)}calculateLosses(){return _w((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=i_.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=i_.nodeKey(e,n);let s={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),s=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),s={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[i_.nodeKey(a,i)];null==u&&(u=0),e.push([a.name,u,o,s])}i.push(e)}}}const s={};s.name=e.name,s.className=r,s.config=a,s.inboundNodes=i,n.push(s)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],i=i_.nodeKey(n,a);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,s,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=i_.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},i={};function s(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void s(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(cA(n),r)}function u(e){const n=e.name,i=EF(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),a[n]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new rA(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!xA(i);)for(const e of c){const t=a[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];uA(t in a);const i=a[t].inboundNodes[n].outputTensors;h.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];uA(t in a);const i=a[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new rA("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){_w((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s_(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function o_(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=_w((()=>{if(1===e.shape.length)return Rw(e);if(2===e.shape.length){if(e.shape[1]>1){return jw(e,1)}if(1===e.shape[1])return fk(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());$w(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),mS(a,"float32")}return null}function u_(e,t){return zw(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l_(e,t){let n,r;const a=t;n=a.xs,r=a.ys,rm(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=c_("input",e.inputNames,n),s=c_("output",e.outputNames,r),o=i[0].shape[0];rm(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),rm(s.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)rm(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<s.length;t++)rm(s[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:s}}function c_(e,t,n){if(n instanceof dx)return[n];if(Array.isArray(n))return rm(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new rA(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function h_(e,t,n){const r=null!=n.batchesPerEpoch;if(rm(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),rm(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),rm(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),rm(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),rm(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,s;if(a)if(d_(n.validationData))rm(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new aA("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,s=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=SF(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=TF(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=l_(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const s=[];if(null!=n.classWeight){const t=s_(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await o_(a[e],null,t[e]))}const l=r.concat(a).concat(s),p=o(l);$w(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];i[t]=n,Ow(n)}await d.onBatchEnd(h,i),yF(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=d_(n.validationData)?hA(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):hA(e.evaluate(i,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function d_(e){return"function"==typeof e.iterator}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function p_(e){rm(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function f_(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>tD(e,t,n-t))):tD(e,t,n-t)}function m_(e,t){return _w((()=>null==e?null:Array.isArray(e)?e.map((e=>m_(e,t))):lD(e,"int32"===t.dtype?t:Ew(t,"int32"))))}function g_(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function v_(e){const t=[];e instanceof dx&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(eD(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function y_(e,t){if(null==e)return;const n=[];if(t instanceof dx)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof dx)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function b_(e){return Array.isArray(e)}function x_(e){return!function(e){return e instanceof dx}(e)&&!b_(e)}function w_(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(b_(e)&&e.length>0)t=!0;else if(x_(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new rA(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(x_(e)){i=[];for(const n of t){if(null==e[n])throw new rA(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(b_(e)){if(e.length!==t.length)throw new rA(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new rA(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=v_(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new rA(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${s.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const i=s.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new rA(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${s.shape[0]} examples, each with shape [${s.shape.slice(1,s.shape.length)}] (tensor shape [${s.shape}])`)}}return i}function k_(e,t,n,r=!0,a=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new rA(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new rA(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new rA(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(s.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=s.shape[i],u=n[e][i];if(null!=u&&u!==o)throw new rA(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(s.shape)}.`)}}}class I_ extends i_{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new rA("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");QF(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>YN.adagrad(.01),Adadelta:()=>YN.adadelta(1,.95,JA()),Adam:()=>YN.adam(.001,.9,.999,JA()),Adamax:()=>YN.adamax(.002,.9,.999,JA(),0),RMSProp:()=>YN.rmsprop(.001,.9,0,JA()),SGD:()=>YN.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new rA(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof gN))throw new rA("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new rA(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>PF(e)))}else{const n=PF(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new rA(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(PF(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],WA("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};WA("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,i;for(const s of t){if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===OF?-1!==["accuracy","acc"].indexOf(s)?r=BF:-1!==["crossentropy","ce"].indexOf(s)&&(r=WF):this.lossFunctions[e]===$F?-1!==["accuracy","acc"].indexOf(s)?r=VF:-1!==["crossentropy","ce"].indexOf(s)&&(r=GF):-1!==["accuracy","acc"].indexOf(s)?r=zF:-1!==["crossentropy","ce"].indexOf(s)&&(r=UF),-1!==["accuracy","acc"].indexOf(s)?a="acc":-1!==["crossentropy","ce"].indexOf(s)&&(a="ce"),i=r,n=""+a}else{const e=jF(s);i=e,n=""+qF(s)}let t;WA(n,(()=>{t=i})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;p_(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return cA(this.testLoop(t,e,r,n.verbose,n.steps))}finally{y_(a[0],e),y_(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new aA("Verbose mode is not implemented yet.");rm(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const s="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await s.next();if(i=_w((()=>{if(t.value){const{xs:n,ys:r}=l_(e,t.value),s=n.concat(r),l=_w((()=>a(s)));if($w(s),0===u)for(let e=0;e<l.length;++e)i.push(yI(0));const c=s[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=i[e];i[e]=_w((()=>Lw(i[e],zw(c,t)))),u>0&&$w(n)}$w(l),o+=c,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=Bw(i[e],o),$w(t)}return cA(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new rA(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new rA(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new rA("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),i=new eF;if(e instanceof dx&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new rA(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new rA(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const s=rF(a,i);return n?s:s[0]}retrieveSymbolicTensors(e){const t=oA(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],i=a.map((e=>e.name));for(let r=0;r<e.length;++r){const s=i.indexOf(e[r]);if(-1!==s&&(t[r]=a[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new rA(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return _w((()=>{const r=this.checkNumSamples(e);if(n)throw new aA("Verbose predictLoop() is not implemented yet.");const a=g_(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){const n=_w((()=>{const n=a[t][0],r=a[t][1],i=f_(e,n,r),s=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)s.push({key:this.inputs[e],value:i[e]});else s.push({key:this.inputs[0],value:i});const o=new eF(s);return rF(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return cA(i.map((e=>vk(e,0))))}))}predict(e,t={}){const n=v_(e);k_(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return p_(e),this.predictLoop(n,e)}finally{y_(n,e)}}predictOnBatch(e){k_(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new nA("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===$F?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=bA(e.map((e=>e.shape[0])));r.sort();const a=bA(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new rA(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new rA(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!om(r,a))throw new rA(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=w_(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=w_(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[AF,OF,_F];for(let a=0;a<e.length;++a){const i=e[a],s=t[a],o=n[a];if(null!=s){if(s===_F&&1===i.shape[i.shape.length-1])throw new rA(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(s)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new rA(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new rA(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,i){const[s,o]=this.standardizeUserDataXY(e,t,a,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=s_(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await o_(o[t],null,e[t]))}return[s,o,u]}testLoop(e,t,n,r=0,a){return _w((()=>{const i=this.checkNumSamples(t,n,a,"steps"),s=[];if(r>0)throw new aA("Verbose mode is not implemented yet.");if(null!=a)throw new aA("steps mode in testLoop() is not implemented yet");{const r=g_(i,n),a=mS(YA(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],u=tD(a,i,o-i),l=m_(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)s.push(yI(0));for(let e=0;e<c.length;++e){const t=c[e];s[e]=Lw(s[e],zw(o-i,t))}}for(let e=0;e<s.length;++e)s[e]=Bw(s[e],i)}return s}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(lA(e,r)>1){a+=`_${lA(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],s=this.collectedTrainableWeights.map((e=>e.read())),o=this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const s=new eF(e),o=rF(this.outputs,s,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=u_(n,a[e]));const i=aC(n);t.push(i),u=0===e?n:Lw(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=aC(t(r[a],o[a]))}Ow(n),i.push(n)}return u=aC(u),this.calculateLosses().forEach((e=>{u=Lw(u,e)})),u}),!0,s);return[o].concat(i)}}makeTestFunction(){this.testFunction=e=>_w((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const s=new eF(i),o=rF(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=aC(r(a[e],o[e]));n=0===e?i:Lw(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=aC(n(a[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,s,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;p_(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new aA("validationData including sample weights is not supported yet."):new rA(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=f_(r,e,t),i=r,r=f_(r,0,e),c=f_(a,e,t),s=a,a=f_(a,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const v=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,m=[],w=b.slice());const k=SF(n.callbacks,n.yieldEvery);return await this.fitLoop(y,v,b,d,n.epochs,n.verbose,k,x,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,y_(r,e),y_(a,t),y_(i,e),y_(s,t),y_(l,o),y_(c,u),null!=h&&$w(h)}}async fitLoop(e,t,n,r,a,i,s,o,u,l,c,h,d,p){null==r&&(r=32),null==a&&(a=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new rA("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=YA(0,m)),null==i&&(i=1);const{callbackList:v,history:y}=TF(s,i,a,h,m,d,r,f,c);v.setModel(this),this.history=y,await v.onTrainBegin(),this.stopTraining_=!1;for(let i=h;i<a;++i){await v.onEpochBegin(i);const a={};if(null!=d)throw new aA("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new aA("batch shuffling is not implemneted yet");l&&Zf(g);const i=mS(g),s=g_(m,r);for(let l=0;l<s.length;++l){const c={};if(await v.onBatchBegin(l,c),_w((()=>{const h=s[l][0],d=s[l][1],p=tD(i,h,d-h);c.batch=l,c.size=d-h;const m=m_(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,Ow(r)}if(l===s.length-1&&f){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];Ow(i),a["val_"+r]=i}}})),await v.onBatchEnd(l,c),yF(c),this.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(i,a),this.stopTraining_)break}return await v.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return h_(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],i=this.makeTrainFunction()(r.concat(a)),s=[];for(const e of i){const t=await e.data();s.push(t[0])}return $w(i),y_(n[0],e),y_(n[1],t),cA(s)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Fw().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Fw().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=dA(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>dA(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=dA(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[dA(qF(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>dA(qF(e))));{const e={};for(const t in this.metrics)e[t]=dA(qF(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=EF(n_(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=pA(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>pA(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=pA(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>pA(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=pA(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,ew.getSaveHandlers(n));if(0===t.length)throw new rA(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new rA(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new rA("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await qx(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${a_}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await qx(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=(i=[r.data,t],jx.join(i))}var i;if(null!=this.userDefinedMetadata){const e=!0;XF(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=r.data,a.weightSpecs=r.specs,e.save(a)}setUserDefinedMetadata(e){XF(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}I_.className="Model",mN(I_);class C_ extends I_{}C_.className="Functional",mN(C_);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class S_ extends I_{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:RA("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new rA(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof S_||e instanceof I_;let n;if(t){if(n=e,1!==n.outputs.length)throw new rA("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new rA("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new rA("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new rA("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ZD({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new rA(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new rA("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=JD(this.outputs[0])}this.inboundNodes=[],new XD({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:oA(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(zD(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new I_({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new nA("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new nA("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new nA("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new nA("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new rA("Legacy serialization format not supported yet.");a=t}else rm(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const s=new e(i);if(!(s instanceof S_))throw new aA(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const e of a){const t=EF(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new rA("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new rA("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}S_.className="Sequential",mN(S_);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class N_ extends pN{getConfig(){return{}}}class T_ extends N_{apply(e,t=1){return function(e,t=1){if(1!==t)throw new aA(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return iI(e)}(e,t)}}T_.className="elu",mN(T_);class E_ extends N_{apply(e){return KC(e)}}E_.className="selu",mN(E_);class R_ extends N_{apply(e){return UC(e)}}R_.className="relu",mN(R_);class A_ extends N_{apply(e){return _w((()=>oC(6,UC(e))))}}A_.className="relu6",mN(A_);class D_ extends N_{apply(e){return e}}D_.className="linear",mN(D_);class F_ extends N_{apply(e){return bk(e)}}F_.className="sigmoid",mN(F_);class __ extends N_{apply(e){return function(e){return _w((()=>{const t=Lw(.5,zw(.2,e));return Dk(t,0,1)}))}(e)}}__.className="hardSigmoid",mN(__);class $_ extends N_{apply(e){return jI(e)}}$_.className="softplus",mN($_);class O_ extends N_{apply(e){return function(e){return _w((()=>Bw(e,Lw(Ww(e),1))))}(e)}}O_.className="softsign",mN(O_);class M_ extends N_{apply(e){return wk(e)}}M_.className="tanh",mN(M_);class L_ extends N_{apply(e,t=-1){return rS(e,t)}}L_.className="softmax",mN(L_);class P_ extends N_{apply(e,t=-1){return XI(e,t)}}P_.className="logSoftmax",mN(P_);class B_ extends N_{apply(e,t=1){return _w((()=>zw(bk(zw(e,t)),e)))}}B_.className="swish",mN(B_);class z_ extends N_{apply(e){return _w((()=>zw(e,wk(jI(e)))))}}function W_(e){return e.getClassName()}function V_(e,t={}){return vA(e,fN.getMap().classNameMap,t,"activation")}function U_(e){if(null==e){const e={className:"linear",config:{}};return V_(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},V_(t)}return e instanceof N_?e:V_(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */z_.className="mish",mN(z_);class G_ extends pN{}class H_ extends G_{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return _w((()=>{let t=iC([1]);return this.hasL1&&(t=Lw(t,wI(zw(this.l1,Ww(e))))),this.hasL2&&(t=Lw(t,wI(zw(this.l2,cD(e))))),fk(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}H_.className="L1L2",mN(H_);const j_={l1l2:"L1L2"};function q_(e){return mA(e)}function K_(e,t={}){return vA(e,fN.getMap().classNameMap,t,"regularizer")}function X_(e){if(null==e)return null;if("string"==typeof e){return K_({className:e in j_?j_[e]:e,config:{}})}return e instanceof G_?e:K_(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Y_ extends QD{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=BD(e);let n=UC(e);return null!=this.maxValue&&(n=Dk(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Y_.className="ReLU",mN(Y_);class Q_ extends QD{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=BD(e);return PI(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Q_.className="LeakyReLU",mN(Q_);class J_ extends QD{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=MD(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=X_(e.alphaRegularizer),this.alphaConstraint=gF(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new rA(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=zD(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new jD({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=BD(e),vC(e,this.alpha.read())}getConfig(){const e={alphaInitializer:OD(this.alphaInitializer),alphaRegularizer:q_(this.alphaRegularizer),alphaConstraint:fF(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}J_.className="PReLU",mN(J_);class Z_ extends QD{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new aA(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=BD(e);return iI(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Z_.className="ELU",mN(Z_);class e$ extends QD{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=BD(e);return zw(n,Ew(FI(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}e$.className="ThresholdedReLU",mN(e$);class t$ extends QD{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new L_).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=BD(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function n$(e,t,n){if("number"==typeof e)return oA(e,t);if(e.length!==t)throw new rA(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if(!jA(a))throw new rA(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function r$(e,t,n,r,a=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((i+r-1)/r)}function a$(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+XA([n-t,0]);else{if("same"!==r)throw new rA(`Unsupport padding mode: ${r}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function i$(e,t){return _w((()=>(MA(t),"channelsFirst"===t?SS(e,[0,2,3,1]):e)))}function s$(e,t){return _w((()=>(MA(t),"channelsFirst"===t?SS(e,[0,2,3,4,1]):e)))}function o$(e,t,n,r=[1,1],a="valid",i,s,o=null){return _w((()=>{if(null==i&&(i="channelsLast"),MA(i),3!==e.rank&&4!==e.rank)throw new rA(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new rA(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=i$(e,i);if("causal"===a)throw new aA("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=FS({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(u=SS(u,[0,3,1,2])),u}))}t$.className="Softmax",mN(t$);class u$ extends QD{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",u$.verifyArgs(t),this.rank=e,IA(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new aA(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=n$(t.kernelSize,e,"kernelSize"),this.strides=n$(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,LA(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,MA(this.dataFormat),this.activation=U_(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=MD(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gF(t.biasConstraint),this.biasRegularizer=X_(t.biasRegularizer),this.activityRegularizer=X_(t.activityRegularizer),this.dilationRate=n$(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new rA(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new rA(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new rA(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(uA("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!kA(e.kernelSize,"number",1,3))throw new rA(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:W_(this.activation),useBias:this.useBias,biasInitializer:OD(this.biasInitializer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),biasConstraint:fF(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class l$ extends u${constructor(e,t){super(e,t),this.kernel=null,l$.verifyArgs(t),this.filters=t.filters,IA(this.filters,"filters"),this.kernelInitializer=MD(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gF(t.kernelConstraint),this.kernelRegularizer=X_(t.kernelRegularizer)}build(e){e=zD(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new rA(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return _w((()=>{let t;e=BD(e);const n=null==this.bias?null:this.bias.read(),r=SA(this.activation.getClassName());if(null!=r&&2===this.rank)t=o$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",i,s=1){return _w((()=>{if(null==i&&(i="channelsLast"),MA(i),3!==e.shape.length)throw new rA(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new rA(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new rA(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=SS(e,[0,2,1])),"causal"===a)throw new aA("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Lk(e,t,r,"same"===a?"same":"valid","NWC",s);return null!=n&&(o=dD(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=o$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new aA("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",i,s){return _w((()=>{if(null==i&&(i="channelsLast"),MA(i),4!==e.rank&&5!==e.rank)throw new rA(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new rA(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=s$(e,i);if("causal"===a)throw new aA("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=zk(o,t,r,"same"===a?"same":"valid","NDHWC",s),null!=n&&(o=dD(o,n)),"channelsFirst"===i&&(o=SS(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=zD(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=r$(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:OD(this.kernelInitializer),kernelRegularizer:q_(this.kernelRegularizer),kernelConstraint:fF(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new rA(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class c$ extends l${constructor(e){super(2,e),c$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!kA(e.kernelSize,"number",1,2))throw new rA(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}c$.className="Conv2D",mN(c$);class h$ extends l${constructor(e){super(3,e),h$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new rA(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}h$.className="Conv3D",mN(h$);class d$ extends c${constructor(e){if(super(e),this.inputSpec=[new jD({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new rA(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=zD(e)).length)throw new rA("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new rA("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jD({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return _w((()=>{let t=BD(e);if(4!==t.shape.length)throw new rA(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const s=n[a],o=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,a$(s,c,u,this.padding),a$(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=SS(t,[0,2,3,1]));let p=Bk(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=SS(p,[0,3,1,2])),null!=this.bias&&(p=dD(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=zD(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const i=this.kernelSize[0],s=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=a$(t[r],o,i,this.padding),t[a]=a$(t[a],u,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}d$.className="Conv2DTranspose",mN(d$);class p$ extends h${constructor(e){if(super(e),this.inputSpec=[new jD({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new rA(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=zD(e)).length)throw new rA("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new rA("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new jD({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return _w((()=>{let t=BD(e);if(5!==t.shape.length)throw new rA(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i,s;"channelsFirst"===this.dataFormat?(s=2,a=3,i=4):(s=1,a=2,i=3);const o=n[s],u=n[a],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,a$(o,p,c,this.padding),a$(u,f,h,this.padding),a$(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=SS(t,[0,2,3,4,1]));let v=Vk(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=SS(v,[0,4,1,2,3])),null!==this.bias&&(v=dD(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){const t=(e=zD(e)).slice();let n,r,a,i;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,i=4):(n=4,r=1,a=2,i=3);const s=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=a$(t[r],l,s,this.padding),t[a]=a$(t[a],c,o,this.padding),t[i]=a$(t[i],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}p$.className="Conv3DTranspose",mN(p$);class f$ extends l${constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new rA("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new rA("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new rA(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=MD(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=X_(t.depthwiseRegularizer),this.depthwiseConstraint=gF(t.depthwiseConstraint),this.pointwiseInitializer=MD(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=X_(t.pointwiseRegularizer),this.pointwiseConstraint=gF(t.pointwiseConstraint)}build(e){if((e=zD(e)).length<this.rank+2)throw new rA(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new rA(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new jD({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return _w((()=>{let t;if(e=BD(e),1===this.rank)throw new aA("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=SS(e,[0,2,3,1])),t=XC(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=dD(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=SS(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=OD(this.depthwiseInitializer),e.pointwiseInitializer=OD(this.pointwiseInitializer),e.depthwiseRegularizer=q_(this.depthwiseRegularizer),e.pointwiseRegularizer=q_(this.pointwiseRegularizer),e.depthwiseConstraint=fF(this.depthwiseConstraint),e.pointwiseConstraint=fF(this.pointwiseConstraint),e}}f$.className="SeparableConv";class m$ extends f${constructor(e){super(2,e)}}m$.className="SeparableConv2D",mN(m$);class g$ extends l${constructor(e){super(1,e),g$.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!kA(e.kernelSize,"number",1,1))throw new rA(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}g$.className="Conv1D",mN(g$);class v$ extends QD{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return _w((()=>{if(e=BD(e),"channelsLast"===this.dataFormat){const t=rD(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return rD(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=rD(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return rD(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}v$.className="Cropping2D",mN(v$);class y$ extends QD{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MA(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,wA(DA,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return _w((()=>{let t=BD(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=SS(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?hN.resizeNearestNeighbor(t,[e,r]):hN.resizeBilinear(t,[e,r]);return SS(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?hN.resizeNearestNeighbor(t,[e,r]):hN.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}y$.className="UpSampling2D",mN(y$);class b$ extends u${constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=MD(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gF(e.depthwiseConstraint),this.depthwiseRegularizer=X_(e.depthwiseRegularizer)}build(e){if((e=zD(e)).length<4)throw new rA(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new rA(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _w((()=>{let t=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t,n=[1,1],r="valid",a,i){return _w((()=>{null==a&&(a="channelsLast"),MA(a);let s=i$(e,a);if(4!==e.rank)throw new rA(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new rA(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=Xk(s,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===a&&(s=SS(s,[0,3,1,2])),s}))}(e=BD(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=dD(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=zD(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=r$(t,this.kernelSize[0],this.padding,this.strides[0]),i=r$(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,i]:[e[0],a,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=OD(this.depthwiseInitializer),e.depthwiseRegularizer=q_(this.depthwiseRegularizer),e.depthwiseConstraint=fF(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function x$(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new rA("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function w$(e,t,n,r=!1,a,i,s=!1,o=!1){return _w((()=>{const u=t.shape.length;if(u<3)throw new rA(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(YA(2,u));if(t=SS(t,l),null!=i)throw new aA("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Ew(Ew(a,"bool"),"float32")).rank===u-1&&(a=NI(a,-1)),a=SS(a,l)),r&&(t=HC(t,0),null!=a&&(a=HC(a,0)));const c=[];let h,d=n;const p=t.shape[0],f=IS(t);let m,g;null!=a&&(m=IS(a));for(let t=0;t<p;++t){const n=f[t],r=_w((()=>e(n,d)));if(null==a)h=r[0],d=r[1];else{const e=_w((()=>{const e=m[t],n=KI(pC(e),e),a=Lw(zw(r[0],e),zw(d[0],n)),i=d.map(((t,a)=>Lw(zw(r[1][a],e),zw(t,n))));return{output:a,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=hS(c,1)}return[h,g,d]}))}b$.className="DepthwiseConv2D",mN(b$);class k$ extends QD{constructor(e){let t;if(super(e),null==e.cell)throw new rA("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new A$({cells:e.cell}):e.cell,null==t.stateSize)throw new rA("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new jD({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return YA(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){LD(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return _w((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new aA("Constants support is not implemented in RNN yet.");LD(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new jD({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!om(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new rA(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new jD({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){_w((()=>{if(!this.stateful)throw new tA("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new rA("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>iC([n,e]))):this.states_=[iC([n,this.cell.stateSize])];else if(null==e)$w(this.states_),null!=this.keptStates&&($w(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>iC([n,e]))):this.states_[0]=iC([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new rA(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):$w(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!om(r.shape,i))throw new rA(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Ow(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=x$(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let i=[],s=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new jD({shape:e.shape}));s=s.concat(this.stateSpec)}null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length);if(i[0]instanceof qD){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return _w((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=BD(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new rA(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:r},o=w$(((e,t)=>{const n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return _w((()=>{let t=iC(e.shape);return t=wI(t,[1,2]),t=eD(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?sD(t,[1,e]):t)):this.cell.stateSize>1?[sD(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===k$.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=EF(t.cell,n);return new e(Object.assign(t,{cell:r}))}}k$.className="RNN",mN(k$);class I$ extends QD{}class C$ extends I${constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,IA(this.units,"units"),this.activation=U_(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=MD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=MD(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=MD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=X_(e.kernelRegularizer),this.recurrentRegularizer=X_(e.recurrentRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.kernelConstraint=gF(e.kernelConstraint),this.recurrentConstraint=gF(e.recurrentConstraint),this.biasConstraint=gF(e.biasConstraint),this.dropout=KA([1,XA([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=KA([1,XA([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=zD(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _w((()=>{if(2!==e.length)throw new rA(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=D$({ones:()=>pC(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=D$({ones:()=>pC(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;a=uD(null!=i?zw(e,i):e,this.kernel.read()),null!=this.bias&&(a=dD(a,this.bias.read())),null!=s&&(n=zw(n,s));let o=Lw(a,uD(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:W_(this.activation),useBias:this.useBias,kernelInitializer:OD(this.kernelInitializer),recurrentInitializer:OD(this.recurrentInitializer),biasInitializer:OD(this.biasInitializer),kernelRegularizer:q_(this.kernelRegularizer),recurrentRegularizer:q_(this.recurrentRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:fF(this.kernelConstraint),recurrentConstraint:fF(this.recurrentConstraint),biasConstraint:fF(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}C$.className="SimpleRNNCell",mN(C$);class S$ extends k${constructor(e){e.cell=new C$(e),super(e)}call(e,t){return _w((()=>{null!=this.cell.dropoutMask&&($w(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($w(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}S$.className="SimpleRNN",mN(S$);class N$ extends I${constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new rA("GRUCell does not support reset_after parameter set to true.");this.units=e.units,IA(this.units,"units"),this.activation=U_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=U_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=MD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=MD(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=MD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=X_(e.kernelRegularizer),this.recurrentRegularizer=X_(e.recurrentRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.kernelConstraint=gF(e.kernelConstraint),this.recurrentConstraint=gF(e.recurrentConstraint),this.biasConstraint=gF(e.biasConstraint),this.dropout=KA([1,XA([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=KA([1,XA([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=zD(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return _w((()=>{if(2!==e.length)throw new rA(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=D$({ones:()=>pC(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=D$({ones:()=>pC(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let s,o,u;0<this.dropout&&this.dropout<1&&(e=zw(e,a[0]));let l=uD(e,this.kernel.read());this.useBias&&(l=dD(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=zw(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=oS(c,[2*this.units,this.units],c.rank-1),p=uD(r,h),[f,m,g]=oS(l,3,l.rank-1),[v,y]=oS(p,2,p.rank-1);s=this.recurrentActivation.apply(Lw(f,v)),o=this.recurrentActivation.apply(Lw(m,y));const b=uD(zw(o,r),d);u=this.activation.apply(Lw(g,b));const x=Lw(zw(s,r),zw(Lw(1,HI(s)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:W_(this.activation),recurrentActivation:W_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:OD(this.kernelInitializer),recurrentInitializer:OD(this.recurrentInitializer),biasInitializer:OD(this.biasInitializer),kernelRegularizer:q_(this.kernelRegularizer),recurrentRegularizer:q_(this.recurrentRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:fF(this.kernelConstraint),recurrentConstraint:fF(this.recurrentConstraint),biasConstraint:fF(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}N$.className="GRUCell",mN(N$);class T$ extends k${constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new N$(e),super(e)}call(e,t){return _w((()=>{null!=this.cell.dropoutMask&&($w(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($w(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}T$.className="GRU",mN(T$);class E$ extends I${constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,IA(this.units,"units"),this.activation=U_(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=U_(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=MD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=MD(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=MD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=X_(e.kernelRegularizer),this.recurrentRegularizer=X_(e.recurrentRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.kernelConstraint=gF(e.kernelConstraint),this.recurrentConstraint=gF(e.recurrentConstraint),this.biasConstraint=gF(e.biasConstraint),this.dropout=KA([1,XA([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=KA([1,XA([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=zD(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends vD{apply(t,r){const a=e.apply([n]),i=(new bD).apply([n]),s=e.apply([2*n]);return iD(iD(a,i),s)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return _w((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new rA(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=D$({ones:()=>pC(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=D$({ones:()=>pC(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=zw(e,i[0]));let h=uD(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=zw(r,s[0])),h=Lw(h,uD(r,this.recurrentKernel.read())),this.useBias&&(h=dD(h,this.bias.read()));const[d,p,f,m]=oS(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=Lw(zw(u,a),zw(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=zw(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:W_(this.activation),recurrentActivation:W_(this.recurrentActivation),useBias:this.useBias,kernelInitializer:OD(this.kernelInitializer),recurrentInitializer:OD(this.recurrentInitializer),biasInitializer:OD(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:q_(this.kernelRegularizer),recurrentRegularizer:q_(this.recurrentRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:fF(this.kernelConstraint),recurrentConstraint:fF(this.recurrentConstraint),biasConstraint:fF(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}E$.className="LSTMCell",mN(E$);class R$ extends k${constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new E$(e),super(e)}call(e,t){return _w((()=>{null!=this.cell.dropoutMask&&($w(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($w(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}R$.className="LSTM",mN(R$);class A$ extends I${constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return _w((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let i;for(let s=0;s<this.cells.length;++s){const o=this.cells[s];n=r[s],i=0===s?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),a.push(i.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;LD(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{WA(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(EF(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return GD(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}HD(t)}}function D$(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:i}=e,s=()=>null!=i?i(t(),n):pD(t(),n),o=()=>fD(s,t,r);if(!a||a<=1)return Ow(o().clone());return Array(a).fill(void 0).map(o).map((e=>Ow(e.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A$.className="StackedRNNCells",mN(A$);var F$=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class _$ extends k${constructor(e){if(e.unroll)throw new aA("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new aA("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new jD({ndim:5})]}call(e,t){return _w((()=>{if(null!=this.cell.dropoutMask&&($w(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&($w(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new rA("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return _w((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=iC([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){_w((()=>{if(!this.stateful)throw new tA("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new rA("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>iC(a))):this.states_=[iC(a)];else if(null==e)$w(this.states_),null!=this.keptStates&&($w(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>iC(a))):this.states_[0]=iC(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new rA(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):$w(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!om(n.shape,r))throw new rA(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ow(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:i,dilationRate:s}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=r$(u,r[0],a,i[0],s[0]),h=r$(l,r[1],a,i[1],s[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}_$.className="ConvRNN2D";class $$ extends E${constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:i,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,IA(this.filters,"filters"),this.kernelSize=n$(n,2,"kernelSize"),this.kernelSize.forEach((e=>IA(e,"kernelSize"))),this.strides=n$(r||1,2,"strides"),this.strides.forEach((e=>IA(e,"strides"))),this.padding=a||"valid",LA(this.padding),this.dataFormat=i||"channelsLast",MA(this.dataFormat),this.dilationRate=n$(s||1,2,"dilationRate"),this.dilationRate.forEach((e=>IA(e,"dilationRate")))}build(e){var t;e=zD(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new rA(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends vD{apply(e,t){return aD([n.apply([r]),sC([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return _w((()=>{if(3!==e.length)throw new rA(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=D$({ones:()=>pC(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=(e,t,n)=>t&&t[n]?zw(t[n],e):e;let u=o(r,s,0),l=o(r,s,1),c=o(r,s,2),h=o(r,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=D$({ones:()=>pC(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[v,y,b,x]=oS(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?oS(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,v,w,this.padding),l=this.inputConv(l,y,k,this.padding),c=this.inputConv(c,b,I,this.padding),h=this.inputConv(h,x,C,this.padding);const[S,N,T,E]=oS(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,E);const R=this.recurrentActivation.apply(Lw(u,p)),A=this.recurrentActivation.apply(Lw(l,f)),D=Lw(zw(A,i),zw(R,this.activation.apply(Lw(c,m)))),F=zw(this.recurrentActivation.apply(Lw(h,g)),this.activation.apply(D));return[F,F,D]}))}getConfig(){const e=super.getConfig(),t=F$(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){const a=Mk(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?dD(a,n,this.dataFormat):a}recurrentConv(e,t){return Mk(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}$$.className="ConvLSTM2DCell",mN($$);class O$ extends _${constructor(e){const t=new $$(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}O$.className="ConvLSTM2D",mN(O$);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class M$ extends QD{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return fD((()=>pD(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}M$.className="Dropout",mN(M$);class L$ extends M${constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}L$.className="SpatialDropout1D",mN(L$);class P$ extends QD{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,IA(this.units,"units"),this.activation=U_(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=MD(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=MD(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gF(e.kernelConstraint),this.biasConstraint=gF(e.biasConstraint),this.kernelRegularizer=X_(e.kernelRegularizer),this.biasRegularizer=X_(e.biasRegularizer),this.activityRegularizer=X_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=zD(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=zD(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e),r=SA(this.activation.getClassName());let a;return null!=r?a=uD(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=uD(n,this.kernel.read()),null!=this.bias&&(a=dD(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:W_(this.activation),useBias:this.useBias,kernelInitializer:OD(this.kernelInitializer),biasInitializer:OD(this.biasInitializer),kernelRegularizer:q_(this.kernelRegularizer),biasRegularizer:q_(this.biasRegularizer),activityRegularizer:q_(this.activityRegularizer),kernelConstraint:fF(this.kernelConstraint),biasConstraint:fF(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}P$.className="Dense",mN(P$);class B$ extends QD{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=zD(e);for(const t of e.slice(1))if(null==t)throw new rA(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],qA(e,1)]}call(e,t){return _w((()=>{this.invokeCallHook(e,t);let n=BD(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=SS(n,e)}return function(e){if(e.rank<=1)throw new rA(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],qA(e.shape,1)];return fk(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}B$.className="Flatten",mN(B$);class z$ extends QD{constructor(e){super(e),this.supportsMasking=!0,this.activation=U_(e.activation)}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e);return this.activation.apply(n)}))}getConfig(){const e={activation:W_(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}z$.className="Activation",mN(z$);class W$ extends QD{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return _w((()=>function(e,t){return _w((()=>{if(2!==e.shape.length)throw new rA(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return sD(eD(e,1),[1,t,1])}))}(e=BD(e),this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}W$.className="RepeatVector",mN(W$);class V$ extends QD{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new rA("Can only specifiy one unknown dimension.");i=e}else a*=t}const s=qA(e);if(null!==i){if(0===a||s%a!=0)throw new rA(n);r[i]=s/a}else if(s!==a)throw new rA(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return fk(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}V$.className="Reshape",mN(V$);class U$ extends QD{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=YA(1,e.dims.length+1);if(!om(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new jD({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=zD(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return SS(BD(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}U$.className="Permute",mN(U$);class G$ extends QD{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=BD(e);return Hw(hC(n,this.maskValue),-1)}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e),r=Hw(hC(n,this.maskValue),-1,!0);return zw(n,Ew(r,n.dtype))}))}}G$.className="Masking",mN(G$);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class H$ extends QD{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(hA(e.inputLength))}this.inputDim=e.inputDim,IA(this.inputDim,"inputDim"),this.outputDim=e.outputDim,IA(this.outputDim,"outputDim"),this.embeddingsInitializer=MD(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=X_(e.embeddingsRegularizer),this.activityRegularizer=X_(e.activityRegularizer),this.embeddingsConstraint=gF(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return _w((()=>this.maskZero?(e=BD(e),hC(e,nI(e))):null))}computeOutputShape(e){if(e=zD(e),null==this.inputLength)return[...e,this.outputDim];const t=hA(this.inputLength);if(t.length!==e.length-1)throw new rA(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],i=e[r+1];if(null!=a&&null!=i&&a!==i)throw new rA(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return _w((()=>{this.invokeCallHook(e,t);let n=BD(e);"int32"!==n.dtype&&(n=ZA(n,"int32"));const r=lD(this.embeddings.read(),fk(n,[n.size]));return fk(r,zD(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:OD(this.embeddingsInitializer),embeddingsRegularizer:q_(this.embeddingsRegularizer),activityRegularizer:q_(this.activityRegularizer),embeddingsConstraint:fF(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}H$.className="Embedding",mN(H$);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class j$ extends QD{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new aA}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],i=t[r];if(null==a||null==i||a<0||i<0)n.push(null);else if(1===a)n.push(i);else if(1===i)n.push(a);else{if(a!==i)throw new rA("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[zD(e)]),e.length<2)throw new rA(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=bA(t),t.length>1)throw new rA(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===bA(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return _w((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=XA(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=eD(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],i=e.slice(1).concat([a]);let s=fk(r,[a].concat(qA(e.slice(1))));s=SS(s,[1,0]),s=fk(s,i),t.push(s),n=!0}else if(e>1){const a=YA(1,e).concat([0]);t.push(SS(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=fk(SS(fk(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(YA(0,a-1));r=SS(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=bA(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return _w((()=>{if(null==t)return null;if(!Array.isArray(t))throw new rA("`mask` should be an Array");if(!Array.isArray(e))throw new rA("`inputs` should be an Array");if(t.length!==e.length)throw new rA(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:NI(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=QI(n,t[e]);return n}))}}class q$ extends j${constructor(e){super(e)}mergeFunction(e){return _w((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Lw(t,e[n]);return t}))}}q$.className="Add",mN(q$);class K$ extends j${constructor(e){super(e)}mergeFunction(e){return _w((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=zw(t,e[n]);return t}))}}K$.className="Multiply",mN(K$);class X$ extends j${constructor(e){super(e)}mergeFunction(e){return _w((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Lw(t,e[n]);return zw(1/e.length,t)}))}}X$.className="Average",mN(X$);class Y$ extends j${constructor(e){super(e)}mergeFunction(e){return _w((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=rC(t,e[n]);return t}))}}Y$.className="Maximum",mN(Y$);class Q$ extends j${constructor(e){super(e)}mergeFunction(e){return _w((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=oC(t,e[n]);return t}))}}Q$.className="Minimum",mN(Q$);class J$ extends j${constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new rA("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(om(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new rA("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return _w((()=>aD(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new rA("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new rA("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new rA("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new rA(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return _w((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ew(pC(e[n]),"bool")):t[n].rank<e[n].rank?r.push(NI(t[n],-1)):r.push(t[n]);const a=vk(r,this.axis);return Gw(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Z$(e,t){for(;e<0;)e+=t;return e}J$.className="Concatenate",mN(J$);class eO extends j${constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){rm(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new aA("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new rA(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new rA(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Z$(t,e[n].shape.length))):[Z$(this.axes,n.shape.length),Z$(this.axes,r.shape.length)],this.normalize&&(n=RF(n,t[0]),r=RF(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new aA("batchDot is not implemented for tensors of 4D or higher rank yet");if(rm(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),rm(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new aA("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const i=n;return _w((()=>{let n,s;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=fk(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=fk(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=i[0]===i[1]?wI(zw(e,t),i[0]):wI(zw(SS(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;s=yk(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);s=cS(s,t)}return 1===s.shape.length&&(s=NI(s,1)),s}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Z$(this.axes,e.length),Z$(this.axes,t.length)],n}computeOutputShape(e){rm(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new aA("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}eO.className="Dot",mN(eO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class tO extends QD{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e);return fD((()=>Lw(oD(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}tO.className="GaussianNoise",mN(tO);class nO extends QD{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return _w((()=>{this.invokeCallHook(e,t);const n=BD(e);if(this.rate>0&&this.rate<1){return fD((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return zw(n,oD(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}nO.className="GaussianDropout",mN(nO);class rO extends QD{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||BD(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return _w((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=BD(e),r=-1.7580993408473766;let a=_I(BC(n),this.rate);a=ZA(a,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,s=-i*r*this.rate,o=Lw(zw(t,a),zw(Lw(a,-1),r));return Lw(zw(o,i),s)};return fD(r,(()=>BD(e)),t.training||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function aO(e,t,n,r,a,i=.001){let s;if(2===e.rank)s=Ck(e,t,n,r,a,i);else if(3===e.rank)s=Sk(e,t,n,r,a,i);else{if(4!==e.rank)throw new aA(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=Nk(e,t,n,r,a,i)}return s}function iO(e,t,n,r,a=.001){return om(r.slice().sort(),YA(0,e.rank-1))?function(e,t,n,r,a=.001){return _w((()=>{const i=cC(e,r),s=i.mean,o=i.variance;return[aO(e,s,o,n,t,a),s,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return _w((()=>{const i=cC(e,r),s=i.mean,o=i.variance,u=[];for(const t of YA(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=fk(s,u),c=fk(o,u),h=null==t?null:fk(t,u),d=null==n?null:fk(n,u);return[aO(e,l,c,d,h,a),s,o]}))}(e,t,n,r,a)}rO.className="AlphaDropout",mN(rO);class sO extends QD{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=MD(e.betaInitializer||"zeros"),this.gammaInitializer=MD(e.gammaInitializer||"ones"),this.movingMeanInitializer=MD(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=MD(e.movingVarianceInitializer||"ones"),this.betaConstraint=gF(e.betaConstraint),this.gammaConstraint=gF(e.gammaConstraint),this.betaRegularizer=X_(e.betaRegularizer),this.gammaRegularizer=X_(e.gammaRegularizer)}build(e){e=zD(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new rA(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new jD({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return _w((()=>{const n=null!=t.training&&t.training,r=BD(e),a=r.shape,i=a.length,s=YA(0,i),o=this.axis>=0?this.axis:this.axis+i;s.splice(o,1);const u=oA(1,i);u[o]=a[o];const l=s.slice();l.sort();const c=!om(l,YA(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=fk(this.movingMean.read(),u),t=fk(this.movingVariance.read(),u),n=this.center?fk(this.beta.read(),u):null,a=this.scale?fk(this.gamma.read(),u):null;return aO(r,e,t,n,a,this.epsilon)}return aO(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=iO(r,this.gamma.read(),this.beta.read(),s,this.epsilon),f=(e,t,n)=>{_w((()=>{const r=1-n,a=e.read(),i=zw(KI(a,t),r);e.write(KI(a,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:OD(this.betaInitializer),gammaInitializer:OD(this.gammaInitializer),movingMeanInitializer:OD(this.movingMeanInitializer),movingVarianceInitializer:OD(this.movingVarianceInitializer),betaRegularizer:q_(this.betaRegularizer),gammaRegularizer:q_(this.gammaRegularizer),betaConstraint:fF(this.betaConstraint),gammaConstraint:fF(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sO.className="BatchNormalization",mN(sO);class oO extends QD{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=MD(e.betaInitializer||"zeros"),this.gammaInitializer=MD(e.gammaInitializer||"ones"),this.betaRegularizer=X_(e.betaRegularizer),this.gammaRegularizer=X_(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=zD(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==bA(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=BD(e),r=n.shape,a=r.length;return _w((()=>{let{mean:e,variance:t}=cC(n,this.axis,!0);const i=oA(1,a);for(const e of this.axis)i[e]=r[e];const s=e=>null!=e&&e.shape.length!==a?fk(e,i):e;let o=this.scale?s(this.gamma.read()):null,u=this.center?s(this.beta.read()):null;const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=EI(e,l),t=EI(t,l),null!=o&&(o=EI(o,c)),null!=u&&(u=EI(u,c)),aO(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:OD(this.betaInitializer),gammaInitializer:OD(this.gammaInitializer),betaRegularizer:q_(this.betaRegularizer),gammaRegularizer:q_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}oO.className="LayerNormalization",mN(oO);class uO extends QD{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new rA(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new rA(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new rA(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new jD({ndim:4})]}computeOutputShape(e){let t,n;return e=zD(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return _w((()=>
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t,n){return _w((()=>{if(4!==e.rank)throw new rA(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new rA("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new rA(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],fC(e,r)}))}(BD(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function lO(e,t,n,r,a,i){return _w((()=>{let s;MA(a),PA(i),LA(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=i$(e,a);const o="same"===r?"same":"valid";return s="max"===i?tC(e,t,n,o):mk(e,t,n,o),"channelsFirst"===a&&(s=SS(s,[0,3,1,2])),s}))}function cO(e,t,n,r,a,i){return _w((()=>{let s;MA(a),PA(i),LA(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=s$(e,a);const o="same"===r?"same":"valid";return s="max"===i?nC(e,t,n,o):gk(e,t,n,o),"channelsFirst"===a&&(s=SS(s,[0,4,1,2,3])),s}))}uO.className="ZeroPadding2D",mN(uO);class hO extends QD{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new rA(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(IA(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new rA(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}IA(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,LA(this.padding),this.inputSpec=[new jD({ndim:3})]}computeOutputShape(e){const t=r$((e=zD(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return _w((()=>{this.invokeCallHook(e,t),e=eD(BD(e),2);const n=this.poolingFunction(BD(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return cS(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class dO extends hO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return MA(a),LA(r),lO(e,t,n,r,a,"max")}}dO.className="MaxPooling1D",mN(dO);class pO extends hO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return MA(a),LA(r),lO(e,t,n,r,a,"avg")}}pO.className="AveragePooling1D",mN(pO);class fO extends QD{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new rA(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];IA(this.poolSize,"poolSize"),IA(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MA(this.dataFormat),LA(this.padding),this.inputSpec=[new jD({ndim:4})]}computeOutputShape(e){e=zD(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=r$(t,this.poolSize[0],this.padding,this.strides[0]),n=r$(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return _w((()=>(this.invokeCallHook(e,t),this.poolingFunction(BD(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class mO extends fO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return MA(a),LA(r),lO(e,t,n,r,a,"max")}}mO.className="MaxPooling2D",mN(mO);class gO extends fO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return MA(a),LA(r),lO(e,t,n,r,a,"avg")}}gO.className="AveragePooling2D",mN(gO);class vO extends QD{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new rA(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];IA(this.poolSize,"poolSize"),IA(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MA(this.dataFormat),LA(this.padding),this.inputSpec=[new jD({ndim:5})]}computeOutputShape(e){e=zD(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=r$(t,this.poolSize[0],this.padding,this.strides[0]),n=r$(n,this.poolSize[1],this.padding,this.strides[1]),r=r$(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return _w((()=>(this.invokeCallHook(e,t),this.poolingFunction(BD(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class yO extends vO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return MA(a),LA(r),cO(e,t,n,r,a,"max")}}yO.className="MaxPooling3D",mN(yO);class bO extends vO{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return MA(a),LA(r),cO(e,t,n,r,a,"avg")}}bO.className="AveragePooling3D",mN(bO);class xO extends QD{constructor(e){super(e),this.inputSpec=[new jD({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new aA}}class wO extends xO{constructor(e){super(e||{})}call(e,t){return _w((()=>{const t=BD(e);return aC(t,1)}))}}wO.className="GlobalAveragePooling1D",mN(wO);class kO extends xO{constructor(e){super(e||{})}call(e,t){return _w((()=>{const t=BD(e);return mI(t,1)}))}}kO.className="GlobalMaxPooling1D",mN(kO);class IO extends QD{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,MA(this.dataFormat),this.inputSpec=[new jD({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new aA}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class CO extends IO{call(e,t){return _w((()=>{const t=BD(e);return"channelsLast"===this.dataFormat?aC(t,[1,2]):aC(t,[2,3])}))}}CO.className="GlobalAveragePooling2D",mN(CO);class SO extends IO{call(e,t){return _w((()=>{const t=BD(e);return"channelsLast"===this.dataFormat?mI(t,[1,2]):mI(t,[2,3])}))}}SO.className="GlobalMaxPooling2D",mN(SO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class NO extends QD{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=EF(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class TO extends NO{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=zD(e)).length<3)throw new rA(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=zD(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return _w((()=>w$(((e,n)=>[BD(this.layer.call(e,t)),[]]),e=BD(e),[],!1,null,null,!1,!0)[1]))}}TO.className="TimeDistributed",mN(TO);class EO extends NO{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=EF(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=EF(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,wA($A,"BidirectionalMergeMode",a),e.weights)throw new aA("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):cA(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=x$(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],s=[];if(null!=n){const e=n.length;if(e%2>0)throw new rA("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new jD({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),s.push(...r)}if(null!=r)throw new aA("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof qD;for(const e of i)if(e instanceof qD!==o)throw new rA("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return _w((()=>{const n=t.initialState;let r,a,i,s;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),s=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=HC(a,1)),"concat"===this.mergeMode?s=aD([r,a]):"sum"===this.mergeMode?s=Lw(r,a):"ave"===this.mergeMode?s=zw(.5,Lw(r,a)):"mul"===this.mergeMode?s=zw(r,a):null==this.mergeMode&&(s=[r,a]),this.returnState?null==this.mergeMode?s.concat(i):[s].concat(i):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){WA(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),WA(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=EF(t.layer);if(delete t.layer,null!=t.numConstants)throw new aA("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}EO.className="Bidirectional",mN(EO);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class RO extends QD{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return _w((()=>("float32"!==(e=BD(e)).dtype&&(e=ZA(e,"float32")),Lw(zw(e,this.scale),this.offset))))}}RO.className="Rescaling",mN(RO);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:AO,cropAndResize:DO}=hN;class FO extends QD{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,i,s,o){return _w((()=>{let u,l=!1;const c=[t/i,n/s,(r+t)/i,(a+n)/s],h=[];3===e.rank?(l=!0,u=hS([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=Hx(h,[h.length,4]),p=zC(0,h.length,1,"int32"),f=DO(u,d,p,[r,a],"nearest");return ZA(l?BD(IS(f)):f,o)}))}upsize(e,t,n,r){return _w((()=>ZA(AO(e,[t,n]),r)))}call(e,t){return _w((()=>{const t=BD(e),n=t.dtype,r=t.shape,a=r[r.length-3],i=r[r.length-2];let s=0;a!==this.height&&(s=Math.floor((a-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),s>=0&&o>=0?this.centerCrop(t,s,o,this.height,this.width,a,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=zD(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}FO.className="CenterCrop",mN(FO);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class _O extends QD{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=zD(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return _w((()=>{let n;if("int32"!==(e=BD(e)).dtype&&(e=ZA(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new rA(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=BD(t.countWeights)}const r=mI(e),a=gI(e),i=FI(this.numTokens,r).bufferSync().get(0),s=_I(a,0).bufferSync().get(0);if(!i||!s)throw new rA(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
return function(e,t,n,r){let a=BD(e);if("int32"!==a.dtype&&(a=ZA(a,"int32")),"int"===t)return a;const i=a.shape;if(0===a.rank&&(a=NI(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=NI(a,-1)),a.rank>2)throw new rA(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${a.rank}.`);const s=["multiHot","oneHot"].includes(t);let o;if(o=qk(a,void 0!==r&&"count"===t?r:[],n,s),"tfIdf"!==t)return o;if(r)return zw(o,r);throw new rA("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}_O.className="CategoryEncoding",mN(_O);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const $O=new Set(["bilinear","nearest"]);class OO extends QD{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!$O.has(e.interpolation))throw new rA(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=zD(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return _w((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return hN.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return hN.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...$O]} are supported`)}))}}OO.className="Resizing",mN(OO);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class MO{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}MO.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class LO extends QD{constructor(e){super(e),this.randomGenerator=new MO(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}LO.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const PO=new Set(["bilinear","nearest"]);class BO extends LO{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new rA(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new rA(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new rA(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!PO.has(n))throw new rA(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=zD(e))[2];return[this.imgHeight,-1,t]}call(e,t){return _w((()=>{const t=BD(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=BC([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return hN.resizeBilinear(e,a);case"nearest":return hN.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...PO]} are supported`)}}))}}BO.className="RandomWidth",mN(BO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class zO extends xF{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof I_))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function WO(e,t){return e<t}function VO(e,t){return e>t}class UO extends zO{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new aA("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=WO:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=VO:this.monitorFunc=WO,this.monitorFunc===WO&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===WO?1/0:-1/0}async onEpochEnd(e,t){await vF(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const GO={earlyStopping:function(e){return new UO(e)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var HO,jO;Lm().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(HO||(HO={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(jO||(jO={}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var qO;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(qO||(qO={}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KO(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&rm("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO=CS;class YO extends Qf{nextDataId(){return YO.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Yf(this,Dw())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Lm().get("IS_NODE")&&Qy("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&bm(n[0])){const a=n.map((e=>Kb(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return kT(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Xb(e)));return Tw(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Tw(e.shape,e.dtype,t)}makeOutput(e,t,n){return Dw().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=qb();e();return{kernelMs:qb()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){KO([e],"where");const t=this.readSync(e.dataId);return XO(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QO(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}YO.nextDataId=0;const JO={kernelName:Vm,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;KO(t,"abs");let r=new Float32Array(sm(t.shape));return r=QO(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZO(e){return(t,n,r,a,i)=>{const s=Zk(t,n),o=s.length,u=Cm(s),l=mm(i,sm(s)),c=t.length,h=n.length,d=Cm(t),p=Cm(n),f=Qk(t,s),m=Qk(n,s);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=Fm(t,o,u),i=n.slice(-c);f.forEach((e=>i[e]=0));const s=Dm(i,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const v=Dm(g,h,p);l[t]=e(r[s],a[v])}return[l,s]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(a.shape,"float32",s)},o}const tM={kernelName:fg,backendName:"cpu",kernelFunc:eM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(e,t,n="float32"){if("complex64"===n){return eM({inputs:{real:nM(e,t,"float32"),imag:nM(e,t,"float32")},backend:e})}const r=Em(sm(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const aM={kernelName:nv,backendName:"cpu",kernelFunc:rM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const sM={kernelName:Xv,backendName:"cpu",kernelFunc:iM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=jb([0],n),[a,i]=ZO(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function uM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return rM({inputs:{x:a},backend:n});const e=nM(n,a.shape,a.dtype),t=uM({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=eM({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=iM({inputs:{input:a},backend:n}),t=uM({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!vm(a.dtype,i)){const e=rM({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const s=n.data.get(a.dataId).values,[o,u,l]=oM(s,a.shape,a.dtype,i);return n.makeTensorInfo(o,u,l)}const lM={kernelName:hg,backendName:"cpu",kernelFunc:uM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:i,b:s}=n,o=a;KO([i,s],e);const u=o.data.get(i.dataId).values,l=o.data.get(s.dataId).values,c="string"===i.dtype?rE(u):u,h="string"===i.dtype?rE(l):l,d=r||i.dtype,[p,f]=t(i.shape,s.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:i,b:s}=e,o=a;if("complex64"===i.dtype||"complex64"===s.dtype){const e=uM({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=uM({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,v,y]=n(i.shape,s.shape,u,l,f,m),b=o.makeTensorInfo(y,"float32",g),x=o.makeTensorInfo(y,"float32",v),w=eM({inputs:{real:b,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(x),w}{const e=o.data.get(i.dataId).values,n=o.data.get(s.dataId).values,a=r||i.dtype,[u,l]=t(i.shape,s.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function hM(e){return(t,n,r,a,i,s)=>{const o=Zk(t,n),u=sm(o),l=o.length,c=Cm(o),h=mm("float32",u),d=mm("float32",u),p=Qk(t,o),f=Qk(n,o),m=kT(r,a),g=kT(i,s),v=t.length,y=Cm(t),b=n.length,x=Cm(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=Fm(t,l,c),r=n.slice(-v);p.forEach((e=>r[e]=0));const a=Dm(r,v,y),i=n.slice(-b);f.forEach((e=>i[e]=0));const s=Dm(i,b,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dM=ZO(((e,t)=>e+t)),pM=hM(((e,t,n,r)=>({real:e+n,imag:t+r}))),fM=cM(Hm,dM,pM),mM={kernelName:Hm,backendName:"cpu",kernelFunc:fM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gM(e,t,n,r,a){const i=sm(r),s=Em(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(s[r]+=i>0?t[n]:1)}return s}function vM(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],s=Tw([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<i;a++){const i=e.get(o,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,a),o,i):s.set(s.get(o,i)+1,o,i))}return s}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yM=ZO(((e,t)=>e&t)),bM={kernelName:lg,backendName:"cpu",kernelFunc:cM(lg,yM)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xM(e){return(t,n,r)=>{const a=gm(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(e,t,n){return kM(e,xM(t),n)}function kM(e,t,n){return({inputs:r,attrs:a,backend:i})=>{const{x:s}=r;KO(s,e);const o=i,u=o.data.get(s.dataId).values;let l;if("string"===s.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=rE(u)}else l=u;const c=n||s.dtype,h=t(l,c,a);return o.makeTensorInfo(s.shape,c,h)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM=xM((e=>Math.ceil(e))),CM=kM(dg,IM),SM={kernelName:dg,backendName:"cpu",kernelFunc:CM};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NM(e,t,n,r){const a=gm(n,sm(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=sm(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?rE(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=i[s++]}r+=e.shape[1]}))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TM=ZO(((e,t)=>e===t?1:0)),EM=cM(Vg,TM,null,"bool"),RM={kernelName:Vg,backendName:"cpu",kernelFunc:EM},AM=xM((e=>Math.exp(e))),DM=kM(Ug,AM,"float32"),FM={kernelName:Ug,backendName:"cpu",kernelFunc:DM},_M=xM((e=>Math.expm1(e))),$M=kM(Hg,_M),OM={kernelName:Hg,backendName:"cpu",kernelFunc:$M},MM=xM((e=>Math.floor(e))),LM=kM(Xg,MM),PM={kernelName:Xg,backendName:"cpu",kernelFunc:LM},BM=ZO(((e,t)=>Math.floor(e/t))),zM=cM(Yg,BM,null,"int32"),WM={kernelName:Yg,backendName:"cpu",kernelFunc:zM};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VM(e,t,n,r,a,i,s,o,u){const l=Tw([r,i],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const i=e[n*a+t];c+=i*s[t],r.push(i)}if(c<0||c>=u/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<i;e++)l.values[n*i+e]=t.get(...t.indexToLoc(c*i+e))}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(e,t,n){const r=Tw(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),i=a[0],s=a[2],o=t.locToIndex([i,s]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM=ZO(((e,t)=>e>t?1:0)),HM=cM(ev,GM,null,"bool"),jM={kernelName:ev,backendName:"cpu",kernelFunc:HM},qM=ZO(((e,t)=>e>=t?1:0)),KM=cM(tv,qM,null,"bool"),XM={kernelName:tv,backendName:"cpu",kernelFunc:KM},YM=ZO(((e,t)=>e<t?1:0)),QM=cM(lv,YM,null,"bool"),JM={kernelName:lv,backendName:"cpu",kernelFunc:QM},ZM=ZO(((e,t)=>e<=t?1:0)),eL=cM(cv,ZM,null,"bool"),tL={kernelName:cv,backendName:"cpu",kernelFunc:eL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nL(e,t,n){const r=(t-e)/(n-1),a=Em(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=xM((e=>Math.log(e))),aL=kM(dv,rL),iL={kernelName:dv,backendName:"cpu",kernelFunc:aL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sL(e,t,n,r){const a=mm(r,sm(n));for(let n=0;n<a.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>i)&&(i=t)}a[n]=i}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL=ZO(((e,t)=>Math.max(e,t))),uL=cM(xv,oL),lL={kernelName:xv,backendName:"cpu",kernelFunc:uL},cL=ZO(((e,t)=>Math.min(e,t))),hL=cM(Ev,cL),dL={kernelName:Ev,backendName:"cpu",kernelFunc:hL},pL=ZO(((e,t)=>e*t)),fL=hM(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),mL=cM(Fv,pL,fL),gL={kernelName:Fv,backendName:"cpu",kernelFunc:mL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vL(e,t,n){const r=Hb(-1,n);return pL([],t,r,e,n)}const yL={kernelName:_v,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;KO(r,"neg");const a=n.data.get(r.dataId).values,[i,s]=vL(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,i)}},bL=ZO(((e,t)=>e!==t?1:0)),xL=cM($v,bL,null,"bool"),wL={kernelName:$v,backendName:"cpu",kernelFunc:xL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kL(e,t,n,r,a){const i=t.length,s=sm(t),o=Cm(t),u=Cm(a),l=mm(n,sm(a));for(let t=0;t<s;++t){const n=Fm(t,i,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[Dm(a,i,u)]=e[t]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:i}=n;KO(a,"transpose");const s=a.shape.length,o=new Array(s);for(let e=0;e<o.length;e++)o[e]=a.shape[i[e]];const u=kL(r.data.get(a.dataId).values,a.shape,a.dtype,i,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const CL={kernelName:Wy,backendName:"cpu",kernelFunc:IL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(e,t,n,r){const[a,i]=lI(e,r),s=wx(t,"int32"),o=Em(sm(a),s),u=sm(i);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:s}}const NL={kernelName:Gv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;KO(a,"prod");const o=a.shape.length,u=pm(i,a.shape),l=dI(u,o);let c=u,h=a;const d=[];null!=l&&(h=IL({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=fI(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=SL(h.shape,h.dtype,p,c);let v=m;return s&&(v=cI(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,g,f)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(e,t,n,r){const a=[];let i=0;const s=t.length-1+n.length,o=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let s=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-r[s];for(let e=s;e<u;++e)o[a].push(r[e+1]+t)}s=r[s],u=r[u]}u!==s&&(a.push([s,u]),i+=u-s)}return{outSplits:o,valueSlices:a,numValues:i}}function EL(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function RL(e,t,n,r,a){const i=t.slice();i[0]=a;const s=gm(n,sm(i)),o=e.length;return function(e,t,n,r,a,i){const s=EL(t,2)[1],o=EL(i,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[u*o+t]=e[n*s+t];++u}}(e,t,r,0===o?0:o/t[0],s,i),[s,i]}function AL(e,t,n,r,a,i,s,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const a=Fm(r,t.length,Cm(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(i,s,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=TL(i,s,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=gm("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=RL(n,r,a,c,h);return[d,p[0],p[1]]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL=2147483647;function FL(e,t,n,r,a,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===a.length,l=0===s.length,c=[];o||c.push(t[0]),u||c.push(a[0]),l||c.push(s[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=gm("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],a=u?r[0]:r[t],s=l?i[0]:i[t];if(0===s)throw new Error("Requires delta != 0");let c;if(s>0&&a<n||s<0&&a>n)c=0;else if(c=Math.ceil(Math.abs((a-n)/s)),c>DL)throw new Error(`Requires ((limit - start) / delta) <= ${DL}`);d[t+1]=d[t]+c}const p=gm(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const a=l?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=r,r+=a}return[d,p]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var _L=tT;class $L{constructor(e,t,n,r,a,i,s,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=rT(l),this.raggedRank=aT(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===_L.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===_L.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case _L.VALUE_ROWIDS:return $L.getMaxWidthValueRowID(t);case _L.ROW_SPLITS:return $L.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${_L[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,a=Math.max(i-n,a),n=i)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return ML(e,n)}calculateOutputSize(e){const t=this.valuesShape;iT(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=nT(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),a=[];let i=0;for(let e=0;e<r;++e,i+=t)a.push(i);for(let t=r;t<e;++t)a.push(-1);return rm(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,i=[];for(let s=0;s<a-1;++s){const a=e[s+1]-e[s];let o=Math.min(r,a),u=t[s];-1===u&&(o=0);for(let e=0;e<o;++e)i.push(u),u+=n;for(let e=0;e<a-o;++e)i.push(-1)}if(a>0&&i.length!==e[a-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,i=[];if(0===a)return[];let s=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];i.push(u);for(let l=1;l<a;++l){const a=e[l];if(a===o)u>=0&&(++s,s<r?u+=n:u=-1);else{if(s=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case _L.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case _L.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${_L[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case _L.FIRST_DIM_SIZE:return e[0];case _L.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case _L.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${_L[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=ML(t,!1),a=gm(this.valuesDType,sm(r));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){i=this.calculateOutputIndex(e-1,i,n[e],t[e])}this.setOutput(this.raggedRank,i,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;const a=this.values,i=n;let s=r.slice();s=s.slice(e+1);const o=sm(s),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;_w((()=>{const t=fk(l,e),n=Ek(t,s);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=a.subarray(c*o);OL(i.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)i.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;){OL(i.slice(d*o),l,o),++d}r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function OL(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function ML(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function LL(e,t,n,r,a,i,s,o,u,l){return new $L(e,t,n,r,a,i,s,o,u,l).compute()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Em(0,r);const a=Em(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BL=xM((e=>1/Math.sqrt(e))),zL=kM(sy,BL),WL={kernelName:sy,backendName:"cpu",kernelFunc:zL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VL(e,t,n,r,a,i,s,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return Tw(n,t.dtype);const p=u instanceof lx?u:Tw(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<i;e++){const i=[];let u=0;for(let t=0;t<s;t++){const n=h[e*s+t];i.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=d[e*a+n]:p.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UL=xM((e=>1/(1+Math.exp(-e)))),GL=wM(gy,(e=>1/(1+Math.exp(-e)))),HL={kernelName:gy,backendName:"cpu",kernelFunc:GL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jL(e,t,n,r,a){const i=GN(r,t,n),s=sm(n),o=Cm(r);if(i){const n=HN(t,o);return"string"===a?e.slice(n,n+s):e.subarray(n,n+s)}const u=Tw(r,a,"string"===a?rE(e):e),l=Tw(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?aE(l.values):l.values}function qL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r;KO(a,"slice");const[o,u]=jN(a,i,s);$N(a,o,u);const l=jL(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const KL={kernelName:dy,backendName:"cpu",kernelFunc:qL};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(e,t,n,r,a,i,s){const o=t[0],u=i[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(WT(o));return[gm(n,0),[0,h],gm(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(VT(t,n));if(n>=u)throw new Error(UT(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],i=gm(n,t*h),d=gm(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=p[n],s=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<h;++n)i[s*h+n]=e[t*h+n];d[s]=r[t],c[t]=s}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=s}}return[i,[t,h],d,l,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(e,t,n,r,a){const i=sm(r),s=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(GT(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(HT(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/l);if(l*e!==i)throw new Error(qT(r,u));u[c]=e}if(sm(u)!==i)throw new Error(KT(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=gm(n,s*o);for(let t=0;t<s;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[s,o],u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(e,t,n,r,a,i=!1,s=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=gm(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(s),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=a[p];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(QT(g,c));g>m&&d.fill(s,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(JT(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(i)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(s,m*l,c*l),[d,h]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JL=xM((e=>Math.sqrt(e))),ZL=wM(yy,(e=>Math.sqrt(e))),eP={kernelName:yy,backendName:"cpu",kernelFunc:ZL},tP=ZO(((e,t)=>{const n=e-t;return n*n})),nP=cM(Ey,tP),rP={kernelName:Ey,backendName:"cpu",kernelFunc:nP},aP=xM(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),iP=kM(Ay,aP),sP={kernelName:Ay,backendName:"cpu",kernelFunc:iP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oP(e,t,n,r){const a=Tw(e,t.dtype);for(let e=0;e<a.size;e++){const i=a.indexToLoc(e),s=new Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*n[e]+r[e];a.set(t.get(...s),...i)}return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uP{constructor(e,t,n,r,a,i){this.separator=Kb(e),this.nGramWidths=t,this.leftPad=Kb(n),this.rightPad=Kb(r),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,i){for(let s=0;s<a;++s){const o=this.getPadWidth(i),u=Math.max(0,o-s),l=Math.max(0,o-(a-(s+1))),c=i-(u+l),h=t+(u>0?0:s-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(u+l+c-1)*this.separator.length,n[r+s]=new Uint8Array(d);const p=n[r+s];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,i=gm("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const s=new Array(i[a]);for(let n=0;n<a;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,i);this.createNGrams(e,r,s,a,u,i),a+=u})),this.preserveShort&&a===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,u=1;this.createNGrams(e,r,s,a,u,o)}}return[s,i]}}function lP(e,t,n,r,a,i,s,o){return new uP(n,r,a,i,s,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let i=e.indexOf(a);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(a,i);n&&0===t.length||r.push(t),a=i+1}}function hP(e,t,n){const r=e.length,a=[];let i=0,s=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;cP(e[u],t,n,a);const l=a.length-r;o[u]=l,i+=l,s=Math.max(s,l)}const u=gm("int32",2*i),l=new Array(i),c=[r,s];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(e,t){const n=gm("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Gb(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pP=ZO(((e,t)=>e-t)),fP=hM(((e,t,n,r)=>({real:e-n,imag:t-r}))),mP=cM(Oy,pP,fP),gP={kernelName:Oy,backendName:"cpu",kernelFunc:mP};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vP(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Tw(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const i=e.locToIndex(a);r.values[t]=e.values[i]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yP=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function bP(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,i=t-n+1,s=Math.log(a),o=.5*Math.exp(2*s/3),u=.5*Math.sqrt(s*o*(a-o)/a)*Math.sign(i-a/2);bP(e,t,Math.max(n,Math.floor(t-i*o/a+u)),Math.min(r,Math.floor(t+(a-i)*o/a+u)))}const a=e[t];let i=n,s=r;for(nm(e,n,t),yP(e[r],a)>0&&nm(e,n,r);i<s;){for(nm(e,i,s),i++,s--;yP(e[i],a)<0;)i+=1;for(;yP(e[s],a)>0;)s-=1}0===yP(e[n],a)?nm(e,n,s):(s+=1,nm(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}function xP(e,t,n,r,a){const i=t[t.length-1],[s,o]=[e.length/i,i],u=mm(n,s*r),l=mm("int32",s*r);for(let t=0;t<s;t++){const n=t*o,i=e.subarray(n,n+o);let s=new Array(i.length);i.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(bP(s,r),s=s.slice(0,r)),a&&s.sort(yP);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=s[e].value,d[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[Tw(c,n,u),Tw(c,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(e,t,n,r){const a=pm(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const s=new Map,o=new Int32Array(n[a]),u=new lx(i,r,e),l=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=s.get(n);if(null!=r)o[t]=r;else{const e=s.size;s.set(n,e),o[t]=e,l.push(t)}}const h=i.slice();h[1]=s.size;const d=new lx(h,r);l.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var kP=Object.freeze({__proto__:null,simpleAbsImpl:QO,addImpl:dM,bincountImpl:gM,bincountReduceImpl:vM,bitwiseAndImpl:yM,castImpl:oM,ceilImpl:IM,concatImpl:NM,equalImpl:TM,expImpl:AM,expm1Impl:_M,floorImpl:MM,floorDivImpl:BM,gatherNdImpl:VM,gatherV2Impl:UM,greaterImpl:GM,greaterEqualImpl:qM,lessImpl:YM,lessEqualImpl:ZM,linSpaceImpl:nL,logImpl:rL,maxImpl:sL,maximumImpl:oL,minimumImpl:cL,multiplyImpl:pL,negImpl:vL,notEqualImpl:bL,prodImpl:SL,raggedGatherImpl:AL,raggedRangeImpl:FL,raggedTensorToTensorImpl:LL,rangeImpl:PL,rsqrtImpl:BL,scatterImpl:VL,sigmoidImpl:UL,sliceImpl:jL,sparseFillEmptyRowsImpl:XL,sparseReshapeImpl:YL,sparseSegmentReductionImpl:QL,sqrtImpl:JL,squaredDifferenceImpl:tP,staticRegexReplaceImpl:aP,stridedSliceImpl:oP,stringNGramsImpl:lP,stringSplitImpl:hP,stringToHashBucketFastImpl:dP,subImpl:pP,tileImpl:vP,topKImpl:xP,transposeImpl:kL,uniqueImpl:wP});/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Mw("cpu",(()=>new YO),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const IP=wM(Bg,(e=>e>=0?e:Math.exp(e)-1)),CP={kernelName:Bg,backendName:"cpu",kernelFunc:IP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r;KO([a],"leakyRelu");const s=sm(a.shape),o=n.data.get(a.dataId).values,u=mm("float32",s);for(let e=0;e<o.length;e++)u[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const NP={kernelName:uv,backendName:"cpu",kernelFunc:SP},TP=ZO(((e,t)=>e<0?t*e:e));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;KO([r,a],"prelu");const i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,[o,u]=TP(r.shape,a.shape,i,s,"float32");return n.makeTensorInfo(u,"float32",o)}const RP={kernelName:Uv,backendName:"cpu",kernelFunc:EP},AP=wM(Qv,(e=>Math.max(0,e))),DP={kernelName:Qv,backendName:"cpu",kernelFunc:AP},FP=wM(ry,(e=>Math.min(Math.max(0,e),6))),_P={kernelName:ry,backendName:"cpu",kernelFunc:FP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $P(e,t,n,r,a){if("linear"===n)return rM({inputs:{x:t},backend:e});if("relu"===n)return AP({inputs:{x:t},backend:e});if("elu"===n)return IP({inputs:{x:t},backend:e});if("relu6"===n)return FP({inputs:{x:t},backend:e});if("prelu"===n)return EP({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return SP({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return GL({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=sm(a.shape),o=dm(i,s),u=sm(o);rm(s===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const MP={kernelName:Jv,backendName:"cpu",kernelFunc:OP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=r;KO([a,i],"matMul");const u=a.shape.length,l=i.shape.length,c=s?a.shape[u-2]:a.shape[u-1],h=o?i.shape[l-1]:i.shape[l-2],d=s?a.shape[u-1]:a.shape[u-2],p=o?i.shape[l-2]:i.shape[l-1],f=a.shape.slice(0,-2),m=i.shape.slice(0,-2),g=sm(f),v=sm(m),y=Zk(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);rm(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`));const b=o?[v,p,h]:[v,h,p],x=OP({inputs:{x:a},backend:n,attrs:{shape:s?[g,c,d]:[g,d,c]}}),w=OP({inputs:{x:i},backend:n,attrs:{shape:b}}),k=s?x.shape[1]:x.shape[2],I=s?x.shape[2]:x.shape[1],C=o?w.shape[1]:w.shape[2],S=Math.max(g,v),N=n.data.get(x.dataId).values,T=n.data.get(w.dataId).values,E=Cm(x.shape),R=Cm(w.shape),[A,D,F]=s?[E[0],1,E[1]]:[E[0],E[1],1],[_,$,O]=o?[1,R[1],R[0]]:[R[1],1,R[0]],M=I*C,L=Tw([S,I,C],x.dtype),P=L.values,B=n.blockSize;for(let e=0;e<S;e++){const t=e%g,n=e%v;for(let r=0;r<I;r+=B){const a=Math.min(r+B,I);for(let i=0;i<C;i+=B){const s=Math.min(i+B,C);for(let o=0;o<k;o+=B){const u=Math.min(o+B,k);for(let l=r;l<a;l++)for(let r=i;r<s;r++){let a=0;for(let e=o;e<u;e++){a+=N[t*A+l*D+e*F]*T[e*_+r*$+n*O]}P[e*M+(l*C+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,L.dtype,L.values)}const PP={kernelName:sg,backendName:"cpu",kernelFunc:LP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP={kernelName:Ky,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=LP({inputs:{a:a,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),s&&(p=fM({inputs:{a:d,b:s},backend:n}),m.push(d),d=p),c&&(f=$P(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},zP=wM(Um,(e=>Math.acos(e))),WP={kernelName:Um,backendName:"cpu",kernelFunc:zP},VP=wM(Gm,(e=>Math.acosh(e))),UP={kernelName:Gm,backendName:"cpu",kernelFunc:VP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GP={kernelName:jm,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,r=t;KO(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),i=Tw(r[0].shape,r[0].dtype),s=i.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HP={kernelName:qm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;KO(a,"all");const o=pm(i,a.shape);let u=o;const l=dI(u,a.shape.length);let c=a;null!=l&&(c=IL({inputs:{x:a},backend:n,attrs:{perm:l}}),u=fI(u.length,a.shape.length)),hI("all",u,c.shape.length);const[h,d]=lI(c.shape,u),p=sm(d),f=Em(sm(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=OP({inputs:{x:g},backend:n,attrs:{shape:cI(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jP={kernelName:Km,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;KO(a,"any");const o=pm(i,a.shape);let u=o;const l=dI(u,a.shape.length);let c=a;null!=l&&(c=IL({inputs:{x:a},backend:n,attrs:{perm:l}}),u=fI(u.length,a.shape.length)),hI("any",u,c.shape.length);const[h,d]=lI(c.shape,u),p=sm(d),f=Em(sm(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=OP({inputs:{x:g},backend:n,attrs:{shape:cI(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qP={kernelName:Xm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;KO(a,"argMax");let s=pm(i,a.shape);const o=dI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=IL({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=fI(s.length,u.shape.length)),s=[s[0]],hI("argMax",s,u.shape.length);const[c,h]=lI(u.shape,s),d=Em(sm(c),"int32"),p=sm(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a>n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KP={kernelName:Ym,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;KO(a,"argMin");let s=pm(i,a.shape);const o=dI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=IL({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=fI(s.length,u.shape.length)),s=[s[0]],hI("argMin",s,u.shape.length);const[c,h]=lI(u.shape,s),d=Em(sm(c),"int32"),p=sm(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a<n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},XP=wM(Qm,(e=>Math.asin(e))),YP={kernelName:Qm,backendName:"cpu",kernelFunc:XP},QP=wM(Jm,(e=>Math.asinh(e))),JP={kernelName:Jm,backendName:"cpu",kernelFunc:QP},ZP=wM(Zm,(e=>Math.atan(e))),eB={kernelName:Zm,backendName:"cpu",kernelFunc:ZP},tB=ZO(((e,t)=>Math.atan2(e,t))),nB=cM(tg,tB),rB={kernelName:tg,backendName:"cpu",kernelFunc:nB},aB=wM(eg,(e=>Math.atanh(e))),iB={kernelName:eg,backendName:"cpu",kernelFunc:aB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sB(e,t,n,r,a,i){const s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Tw(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*v,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outHeight;++v){const x=v*s-d,w=Math.max(0,x),k=Math.min(a.inHeight,c+x),I=n+v*y;for(let n=0;n<a.outWidth;++n){const s=n*o-p,c=Math.max(0,s),d=Math.min(a.inWidth,h+s);let v=f,y=0,x=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<d;n+=l){const s=e[a+n*r[2]+t];"max"===i&&s>v?v=s:"avg"===i&&(y+=s,x++)}if(isNaN(v))break}g[I+n*b+t]="avg"===i?y/x:v}}}return m}function oB(e,t,n,r,a=!1,i=!1){const s=Tw(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Tw(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let v=g;for(;v<0;)v+=l;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const b=Math.min(r.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let n=v;n<y;n+=l){const s=n-g;for(let o=p;o<b;o+=c){const u=o-h,l=m.get(e,n,o,t);l>x&&(x=l,w=a?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:s*d+u)}}s.set(w,e,n,o,t)}}return s}function uB(e,t,n,r,a,i){const s=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,v=a.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Tw(a.outShape,n),x=b.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],C=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*s-m;let N=S;for(;N<0;)N+=l;const T=Math.min(a.inDepth,d+S),E=n+w*k;for(let n=0;n<a.outHeight;++n){const s=n*o-g;let d=s;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+s),w=E+n*I;for(let n=0;n<a.outWidth;++n){const s=n*u-v;let o=s;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+s),g=w+n*C;let k=y,I=0,S=0;for(let n=N;n<T;n+=l){const a=b+n*r[1];for(let n=d;n<m;n+=c){const s=a+n*r[2];for(let n=o;n<p;n+=h){const a=e[s+n*r[3]+t];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===i?I/Math.max(S,1):k}}}}return b}const lB={kernelName:ng,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;KO(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;rm(ck(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=ek(a.shape,i,s,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&om(l.inShape,l.outShape))c=rM({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Cm(a.shape),r=sB(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB={kernelName:ag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r;KO(a,"avgPool3d");const c=tk(a.shape,i,s,1,o,u,l),h=uB(n.data.get(a.dataId).values,a.shape,a.dtype,Cm(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hB={kernelName:ig,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;KO([a,i],"avgPool3DGrad");const c=tk(i.shape,s,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,v=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=x-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,N=Tw(i.shape,"float32"),T=1/(f*m*g),E=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const i=n-I,s=r-S,o=a-C;let u=0;for(let n=0;n<x;n+=v){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const a=(s+n)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=b){const i=(o+n)/p;if(i<0||i>=c.outWidth||Math.floor(i)!==i)continue;u+=E.get(e,r,a,i,t)}}}N.set(u*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dB={kernelName:rg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;KO([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=ek(s.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,v=c.effectiveFilterHeight,y=c.effectiveFilterWidth,b=y-1-c.padInfo.left,x=v-1-c.padInfo.top,w=Tw(s.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,C=Tw(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-x,i=r-b;let s=0;for(let n=0;n<v;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const a=(i+n)/d;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;s+=C.get(e,r,a,t)}}w.set(s*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pB={kernelName:Qg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:i,offset:s,mean:o,variance:u}=t;rm(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rm(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rm(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),KO([a,o,u,i,s],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,v=p.length,y=d.length,b=h.length;let x=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),x>=g&&(x=0),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB={kernelName:og,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;KO([a],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),u=lT(a.shape,i,o),l=cT(u.length,i.length),c=hT(a.shape,i,o),h=dT(s,i.length),d=pT(c,s,i.length),p=OP({inputs:{x:a},backend:n,attrs:{shape:u}}),f=IL({inputs:{x:p},backend:n,attrs:{perm:l}}),m=OP({inputs:{x:f},backend:n,attrs:{shape:c}}),g=qL({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mB={kernelName:ug,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=gM(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gB={kernelName:cg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=Zk(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},vB=wM(pg,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),yB={kernelName:pg,backendName:"cpu",kernelFunc:vB},bB={kernelName:mg,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(sm(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,s=a.complexTensorInfos.imag,o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xB(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const wB={kernelName:av,backendName:"cpu",kernelFunc:xB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=pm(a,t[0].shape)[0],s=t.map((e=>e.shape));ZN(s,i);let o=eT(t.map((e=>e.shape)),i);if(0===sm(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>sm(e.shape)>0));if(1===u.length)return rM({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>iM({inputs:{input:e},backend:n}))),t=u.map((e=>xB({inputs:{input:e},backend:n}))),r=kB({inputs:e,backend:n,attrs:{axis:i}}),a=kB({inputs:t,backend:n,attrs:{axis:i}}),s=eM({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map((e=>{const t=sm(e.shape.slice(i));return OP({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=eT(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=NM(c,o,t[0].dtype,h),p=eT(u.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const IB={kernelName:gg,backendName:"cpu",kernelFunc:kB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;KO([a,i],"conv2d");const h=dk(u),d=nk(a.shape,i.shape,s,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,v=d.padInfo.left,y=d.padInfo.top,b="channelsLast"===d.dataFormat,x=new lx(d.outShape,a.dtype),w=Cm(a.shape),k=Cm(i.shape),I=w[0],C=b?w[1]:w[2],S=b?w[2]:1,N=b?1:w[1],T=x.strides[0],E=b?x.strides[1]:x.strides[2],R=b?x.strides[2]:1,A=b?1:x.strides[1],D=n.data.get(a.dataId).values,F=n.data.get(i.dataId).values,_=x.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*T;for(let e=0;e<d.outHeight;++e){const r=n+e*E,a=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const i=e*k[0],s=t+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*R,n=e*d.strideWidth-v;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=s+r*S;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=D[a+e*N];for(let e=0;e<d.outChannels;++e)_[t+e*A]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,_)}const SB={kernelName:vg,backendName:"cpu",kernelFunc:CB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NB={kernelName:yg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;KO([a,i],"conv2dBackpropFilter");const h=dk(u),d=nk(a.shape,c,s,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,v="channelsLast"===d.dataFormat,y=new lx(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=new lx(a.shape,a.dtype,w),C=new lx(i.shape,i.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(d.outHeight,(d.inHeight+x-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),i=Math.min(d.outWidth,(d.inWidth+b-r)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=a;e<i;++e){const n=r+e*f-b;u+=v?I.get(l,t,n,s)*C.get(l,c,e,o):I.get(l,s,t,n)*C.get(l,o,c,e)}}y.set(u,e,r,s,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TB={kernelName:bg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;KO([a,i],"conv2dBackpropInput");const h=Cm(i.shape),d=Cm(a.shape);let p=dk(l);const f=nk(s,i.shape,o,1,u,c,!1,p),m=new lx(f.inShape,"float32"),g=m.values,v=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,[b,x,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:N,inWidth:T,outChannels:E,outHeight:R,outWidth:A,strideHeight:D,strideWidth:F}=f;p=f.dataFormat;const _=I-1-f.padInfo.top,$=C-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,B=O?1:m.strides[1],z=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){const r=n-_,a=Math.max(0,Math.ceil(r/D)),i=Math.min(R,(I+r)/D);for(let s=0;s<T;++s){const o=s-$,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(C+o)/F);let c=0;for(let n=a;n<i;++n){const a=n*D-r;for(let r=u;r<l;++r){const i=z*e+W*n+V*r,s=b*(I-1-a)+x*(C-1-(r*F-o))+w*t;for(let e=0;e<E;++e){c+=v[i+U*e]*y[s+e]}}}g[M*e+L*n+P*s+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EB={kernelName:xg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r;KO([a,i],"conv3d");const l=rk(a.shape,i.shape,s,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,v=g.front,y=g.left,b=g.top,x=new lx(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=x.values,C=Cm(a.shape),S=Cm(i.shape);for(let e=0;e<l.batchSize;++e){const t=e*C[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],a=e*l.strideDepth-v;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const i=e*S[0],s=t+n*C[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-b;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=i+e*S[1],o=s+r*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const i=a+e*S[2],s=o+t*l.inChannels;let u=i;for(let e=0;e<l.inChannels;++e){const t=w[s+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB={kernelName:wg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r;KO([a,i],"conv3dBackpropFilterV2");const l=Cm(a.shape),c=Cm(i.shape),h=rk(a.shape,u,s,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,v=h.filterWidth,y=new lx(h.filterShape,"float32"),b=y.values,[x,w,k,I]=y.strides,C=n.data.get(i.dataId).values,[S,N,T,E]=c,R=n.data.get(a.dataId).values,[A,D,F,_]=l,$=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil(($-e)/d)),n=Math.min(h.outDepth,(h.inDepth+$-e)/d),r=e*x;for(let a=0;a<g;++a){const i=Math.max(0,Math.ceil((M-a)/p)),s=Math.min(h.outHeight,(h.inHeight+M-a)/p),o=a*w+r;for(let r=0;r<v;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,v=m*S;for(let m=t;m<n;++m){const t=(e+m*d-$)*D+h,n=m*N+v;for(let e=i;e<s;++e){const i=(a+e*p-M)*F+t,s=e*T+n;for(let e=u;e<l;++e){const t=e*E+s;g+=R[(r+e*f-O)*_+i+o]*C[t+c]}}}}b[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AB={kernelName:kg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r;KO([a],"conv3dBackpropInputV2");const l=Cm(a.shape),c=Cm(i.shape),h=rk(u,i.shape,o,1,s),d=new lx(h.inShape,"float32"),p=d.values,[f,m,g,v]=d.strides,y=n.data.get(a.dataId).values,[b,x,w,k]=l,I=n.data.get(i.dataId).values,[C,S,N,T]=c,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:D,inChannels:F,inDepth:_,inHeight:$,inWidth:O,outChannels:M,outDepth:L,outHeight:P,outWidth:B,strideDepth:z,strideHeight:W,strideWidth:V}=h,U=R-1-h.padInfo.front,G=A-1-h.padInfo.top,H=D-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<F;++t)for(let n=0;n<_;++n){const r=n-U,a=Math.max(0,Math.ceil(r/z)),i=Math.min(L,(R+r)/z);for(let s=0;s<$;++s){const o=s-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(P,(A+o)/W);for(let c=0;c<O;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(D+h)/V);let F=0;for(let n=a;n<i;++n){const a=n*z-r;for(let r=u;r<l;++r){const i=r*W-o;for(let s=d;s<E;++s){const o=b*e+x*n+w*r+k*s,u=C*(R-1-a)+S*(A-1-i)+N*(D-1-(s*V-h))+T*t;for(let e=0;e<M;++e){F+=y[o+e]*I[u+e]}}}}p[f*e+m*n+g*s+v*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},DB=wM(Ig,(e=>Math.cos(e))),FB={kernelName:Ig,backendName:"cpu",kernelFunc:DB},_B=wM(Cg,(e=>Math.cosh(e))),$B={kernelName:Cg,backendName:"cpu",kernelFunc:_B};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OB={kernelName:Tg,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=i.shape[0],[m,g]=o,v=Tw([f,m,g,p],"float32"),y=n.data.get(i.dataId).values,b=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,w=Cm(a.shape),k=Cm(v.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],i=y[t+3],s=b[e];if(s>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];v.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let i=r+h*w[2]+n*w[1]+s*w[0];const l=x[i];i=r+m*w[2]+n*w[1]+s*w[0];const c=x[i];i=r+h*w[2]+a*w[1]+s*w[0];const d=x[i];i=r+m*w[2]+a*w[1]+s*w[0];const p=l+(c-l)*y,f=d+(x[i]-d)*y;i=r+u*k[2]+t*k[1]+e*k[0],v.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(a<0||a>d-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*w[2]+u*w[1]+s*w[0],i=r+n*k[2]+t*k[1]+e*k[0];v.values[i]=x[a]}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB={kernelName:Sg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;KO(a,"cumprod");const u=dI([i],a.shape.length);let l=a;null!=u&&(l=IL({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=fI(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=wx(l.dtype,"int32"),d=Tm(sm(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?1:p[n];else{const r=m(e,t-1);d[n]=s?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=IL({inputs:{x:g},backend:n,attrs:{perm:pI(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB={kernelName:Ng,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;KO(a,"cumsum");const u=dI([i],a.shape.length);let l=a;null!=u&&(l=IL({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=fI(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=wx(l.dtype,"int32"),d=Em(sm(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?0:p[n];else{const r=m(e,t-1);d[n]=s?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=IL({inputs:{x:g},backend:n,attrs:{perm:pI(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PB={kernelName:Eg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=gM(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===a.shape.length){const e=vM(n.bufferSync(a),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BB={kernelName:Rg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r;rm("NHWC"===s,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*i,d=l*i,p=c/(i*i),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const a=Math.floor(t/i),s=(r*i+t%i)*p;for(let t=0;t<p;++t){const r=t+s+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:l}=r;KO([a,i],"depthwiseConv2DNative");const c=Cm(a.shape),h=Cm(i.shape);let d=u;null==d&&(d=[1,1]),rm(ck(s,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`));const p=nk(a.shape,i.shape,s,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:v,padInfo:y}=p,b=y.left,x=y.top,w=p.outChannels/p.inChannels,k=new lx(p.outShape,a.dtype),I=n.data.get(a.dataId).values,C=n.data.get(i.dataId).values,S=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const i=e*h[0],s=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*v;if(r<0||r>=p.inWidth)continue;const a=i+e*h[1],o=s+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)S[u+e]+=t*C[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const WB={kernelName:Ag,backendName:"cpu",kernelFunc:zB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VB={kernelName:Dg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;KO([a,i],"depthwiseConv2dNativeBackpropFilter");const h=nk(a.shape,c,s,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new lx(h.filterShape,"float32"),v=h.padInfo.left,y=h.padInfo.top,b=h.outChannels/h.inChannels,x=n.data.get(a.dataId).values,w=new lx(a.shape,a.dtype,x),k=n.data.get(i.dataId).values,I=new lx(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((v-r)/p)),i=Math.min(h.outWidth,(h.inWidth+v-r)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/b),u=s%b;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=a;e<i;++e){const n=r+e*p-v;l+=w.get(u,t,n,o)*I.get(u,c,e,s)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UB={kernelName:Fg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;KO([a,i],"depthwiseConv2DNativeBackpropInput");const h=Cm(a.shape),d=Cm(i.shape),p=nk(c,i.shape,s,o,u,l,!0),f=new lx(p.inShape,"float32"),m=f.values,[g,v,y]=f.strides,b=n.data.get(a.dataId).values,[x,w,k]=h,I=n.data.get(i.dataId).values,[C,S,N]=d,{batchSize:T,filterHeight:E,filterWidth:R,inChannels:A,inHeight:D,inWidth:F,outChannels:_,outHeight:$,outWidth:O,strideHeight:M,strideWidth:L}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,z=_/A;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<D;++n){const r=n-P,a=Math.max(0,Math.ceil(r/M)),i=Math.min($,(E+r)/M);for(let s=0;s<F;++s){const o=s-B,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(R+o)/L);let c=0;for(let n=a;n<i;++n){const a=n*M-r;for(let r=u;r<l;++r){const i=x*e+w*n+k*r,s=C*(E-1-a)+S*(R-1-(r*L-o))+N*t;for(let e=0;e<z;++e){c+=b[i+(t*z+e)]*I[s+e]}}}m[g*e+v*n+y*s+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB={kernelName:_g,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=sm(r.shape),i=n.data.get(r.dataId).values,s=Tw([a,a],r.dtype),o=s.values;for(let e=0;e<i.length;e++)o[e*a+e]=i[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,s.dtype,s.values)}},HB={kernelName:$g,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:i,pad:s,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:v,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:N}=Zw(r.shape,a.shape,i,s,"NHWC",o),T=sm(N),E=N.length,R=gm(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<v;++t){const n=t*x-b.top;for(let i=0;i<y;++i){const s=i*w-b.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const i=n+t*C;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=s+n*S;if(p>=0&&p<m){const s=Dm([e,i,p,o],c,Cm(r.shape)),f=Dm([t,n,o],d,Cm(a.shape)),m=l[s]+h[f];m>u&&(u=m)}}}R[Dm([e,t,i,o],E,Cm(N))]=u}}}return{dataId:u.write(jb(R,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},jB={kernelName:Mg,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,l=t,c=Nm(r.shape,l.data.get(r.dataId).values),h=Nm(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:v,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:S}=Zw(r.shape,a.shape,s,o,"NHWC",u);rm(i.rank===S.length,(()=>`Error in ${Mg}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=Nm(S,l.data.get(i.dataId).values),T=Rm(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-y.top;for(let r=0;r<v;++r){const a=r*x-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*C;if(l>=0&&l<f){const a=c[e][r][l][i]+h[t][n][i];a>s&&(s=a,o=t,u=n)}}}T[o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(jb(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},qB={kernelName:Og,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,l=t,c=Nm(r.shape,l.data.get(r.dataId).values),h=Nm(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:v,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:S}=Zw(r.shape,a.shape,s,o,"NHWC",u);rm(i.rank===S.length,(()=>`Error in ${Og}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=Nm(S,l.data.get(i.dataId).values),T=Rm(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-y.top;for(let r=0;r<v;++r){const a=r*x-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*C;if(l>=0&&l<f){const a=c[e][r][l][i]+h[t][n][i];a>s&&(s=a,o=r,u=l)}}}T[e][o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(jb(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KB={kernelName:"Draw",backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:i,options:s}=r,{contextOptions:o,imageOptions:u}=s||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,v=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===a.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;v[n+0]=Math.round(t[0]),v[n+1]=Math.round(t[1]),v[n+2]=Math.round(t[2]),v[n+3]=Math.round(t[3])}i.width=p,i.height=d;const y=new ImageData(v,p,d);return h.putImageData(y,0,0),a}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;let o;KO(a,"sum"),o="bool"===a.dtype?uM({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):rM({inputs:{x:a},backend:n});const u=o.shape.length,l=pm(i,o.shape),c=dI(l,u);let h=l,d=o;null!=c&&(d=IL({inputs:{x:o},backend:n,attrs:{perm:c}}),h=fI(h.length,u)),hI("sum",h,d.shape.length);const[p,f]=lI(d.shape,h);let m=nM(n,p,wx(d.dtype,"int32"));const g=sm(f),v=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<v.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];v[e]=n}if(s){const e=m;m=OP({inputs:{x:m},backend:n,attrs:{shape:cI(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const YB={kernelName:by,backendName:"cpu",kernelFunc:XB};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB={kernelName:Pg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=$T(a,i.length);MT(s.length,u,i);const{path:l,steps:c}=LT(o,u),h=c.length;let d=null,p=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=OT(p,u[t]);let a;PT(e)?a=i[t]:(a=IL({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);om(a.shape,s)||(a=OP({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=mL({inputs:{a:a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=XB({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB={kernelName:zg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;KO([r,a],"eluGrad");const i=new Float32Array(sm(a.shape)),s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<s.length;++e){const t=s[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",i)}},ZB=wM(Wg,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+.3275911*n);return t*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))})),ez={kernelName:Wg,backendName:"cpu",kernelFunc:ZB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tz(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:i}=r,s=a.shape.length,o=a.shape.slice();let u=i;return i<0&&(rm(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+i+1),o.splice(u,0,1),OP({inputs:{x:a},backend:n,attrs:{shape:o}})}const nz={kernelName:Gg,backendName:"cpu",kernelFunc:tz},rz=ZO(((e,t)=>e/t)),az=cM(Lg,rz),iz={kernelName:Lg,backendName:"cpu",kernelFunc:az};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sz(e,t,n){const r=e.shape,a=r[0],i=r[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,u=s.complexTensorInfos.imag,l=[a,i],c=sm(l),h=mm("float32",c),d=mm("float32",c);for(let e=0;e<a;e++){const r=qL({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=qL({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=eM({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=oz(s,t,n),p=kT(l,c);for(let t=0;t<i;t++){const n=NT(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=eM({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function oz(e,t,n){const r=sm(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,s=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=uz(i,s,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),i=n.makeTensorInfo([],"float32",Hb(r,"float32")),s=rM({inputs:{x:i},backend:n}),u=iz.kernelFunc({inputs:{a:e,b:i},backend:n}),l=iz.kernelFunc({inputs:{a:t,b:s},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,s=0;for(let r=0;r<t;r++){const o=RT(a*r,t,n),u=NT(e,r);i+=u.real*o.real-u.imag*o.imag,s+=u.real*o.imag+u.imag*o.real}n&&(i/=t,s/=t),TT(r,i,s,a)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(kT(i,s),r,t);return IT(e)}var o}function uz(e,t,n,r,a){if(1===n)return{real:e,imag:t};const i=kT(e,t),s=n/2,o=CT(i),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=eM({inputs:{real:h,imag:d},backend:a}),f=ST(i),m=f.real,g=f.imag,v=[m.length],y=a.makeTensorInfo(v,"float32",m),b=a.makeTensorInfo(v,"float32",g),x=eM({inputs:{real:y,imag:b},backend:a}),w=uz(u,l,s,r,a),k=w.real,I=w.imag,C=[k.length],S=a.makeTensorInfo(C,"float32",k),N=a.makeTensorInfo(C,"float32",I),T=eM({inputs:{real:S,imag:N},backend:a}),E=uz(m,g,s,r,a),R=E.real,A=E.imag,D=[R.length],F=a.makeTensorInfo(D,"float32",R),_=a.makeTensorInfo(D,"float32",A),$=eM({inputs:{real:F,imag:_},backend:a}),O=ET(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),P=a.makeTensorInfo(M,"float32",O.imag),B=eM({inputs:{real:L,imag:P},backend:a}),z=mL({inputs:{a:B,b:$},backend:a}),W=fM({inputs:{a:T,b:z},backend:a}),V=mP({inputs:{a:T,b:z},backend:a}),U=iM({inputs:{input:W},backend:a}),G=iM({inputs:{input:V},backend:a}),H=xB({inputs:{input:W},backend:a}),j=xB({inputs:{input:V},backend:a}),q=kB({inputs:[U,G],backend:a,attrs:{axis:0}}),K=kB({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const lz={kernelName:jg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=sm(r.shape),i=r.shape[r.shape.length-1],s=OP({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=sz(s,!1,n),u=OP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:i}=n,s=i||wm(a),o=gm(s,sm(r));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(o,a),t.makeTensorInfo(r,s,o)}const hz={kernelName:qg,backendName:"cpu",kernelFunc:cz};const dz={kernelName:Kg,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,i=mm(r.dtype,sm(r.shape)),[s,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<s;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const s=Math.round(u-e-1),o=t+n+r+a;let h=c[o];if(s>=0&&s<u){h=c[t+n+s*l+a]}i[o]=h}}}}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz={kernelName:Xy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=CB({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(s){const e=m;if("NCHW"===c&&1===s.shape.length&&1!==s.shape[0]){const e=OP({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=fM({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=fM({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=OP({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=$P(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=$P(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fz={kernelName:Yy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=zB({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(s){const e=m;m=fM({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=$P(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz={kernelName:Zg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=sm(r.shape),s=a.shape,o=s[s.length-1],[u,l,c,h]=DN(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=VM(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,d.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gz={kernelName:Jg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r;KO([a,i],"gatherV2");const u=pm(s,a.shape)[0],l=n.data.get(i.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];rm(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=sm(i.shape),p=tE(a,i,u,h),f=OP({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=OP({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],v=n.bufferSync(m),y=UM(n.bufferSync(f),v,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz={kernelName:rv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=sm(r.shape),i=r.shape[r.shape.length-1],s=OP({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=sz(s,!0,n),u=OP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}},yz=wM(iv,(e=>Number.isFinite(e)?1:0),"bool"),bz={kernelName:iv,backendName:"cpu",kernelFunc:yz},xz=wM(sv,(e=>Math.abs(e)===1/0?1:0),"bool"),wz={kernelName:sv,backendName:"cpu",kernelFunc:xz},kz=wM(ov,(e=>Number.isNaN(e)?1:0),"bool"),Iz={kernelName:ov,backendName:"cpu",kernelFunc:kz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz={kernelName:hv,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=nL(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},Sz=wM(pv,(e=>Math.log1p(e))),Nz={kernelName:pv,backendName:"cpu",kernelFunc:Sz},Tz=ZO(((e,t)=>e&&t)),Ez=cM(fv,Tz,null,"bool"),Rz={kernelName:fv,backendName:"cpu",kernelFunc:Ez},Az=wM(mv,(e=>e?0:1),"bool"),Dz={kernelName:mv,backendName:"cpu",kernelFunc:Az},Fz=ZO(((e,t)=>e||t)),_z=cM(gv,Fz,null,"bool"),$z={kernelName:gv,backendName:"cpu",kernelFunc:_z};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oz={kernelName:vv,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r;KO(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=sm(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(s+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mz={kernelName:yv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;KO(s,"LRNGrad");const h=sm(s.shape),d=s.shape[3],p=n.data.get(s.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),v=h;for(let e=0;e<v;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(s.shape,a.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=n;let u=a.shape;const l=u.length,c=pm(i,u);let h=c;const d=dI(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=kL(p,u,a.dtype,d,e),h=fI(h.length,l),u=e}KO(a,"max"),hI("max",h,l);const[f,m]=lI(u,h),g=sL(p,sm(m),f,a.dtype),v=o.write(g,f,a.dtype);let y=f;if(s){y=cI(f,c)}return{dataId:v,shape:y,dtype:a.dtype}}const Pz={kernelName:bv,backendName:"cpu",kernelFunc:Lz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bz={kernelName:wv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;KO(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;rm(ck(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=ek(a.shape,i,s,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&om(l.inShape,l.outShape))c=rM({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Cm(a.shape),r=sB(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zz={kernelName:Iv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r;KO(a,"maxPool3d");const c=tk(a.shape,i,s,1,o,u,l),h=uB(n.data.get(a.dataId).values,a.shape,a.dtype,Cm(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz={kernelName:Cv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;KO([a,i],"maxPool3DGrad");const c=tk(i.shape,s,o,1,u,l),h=function(e,t){const n=Tw(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let v=0;v<t.outDepth;++v){const y=v*r-d;let b=y;for(;b<0;)b+=s;const x=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*i-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<x;t+=s){const n=t-y;for(let r=d;r<w;r+=o){const a=r-l;for(let i=k;i<I;i+=u){const s=i-p,o=e.get(m,t,r,i,g);o>=C&&(C=o,S=n*c*h+a*c+s)}}}n.set(S,m,v,r,a,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,v=c.dilationWidth,y=c.effectiveFilterDepth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=x-1-c.padInfo.left,I=b-1-c.padInfo.top,C=Tw(i.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const i=n-w,s=r-I,o=a-k;let u=0;for(let n=0;n<y;n+=m){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){const i=(s+a)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let s=0;s<x;s+=v){const l=(o+s)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=y*b*x-1-h.get(e,r,i,l,t)===n*b*x+a*x+s?1:0;if(0===d)continue;u+=S.get(e,r,i,l,t)*d}}}C.set(u,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz={kernelName:kv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;KO([i,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=ek(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=Tw(d.outShape,o.dtype,oB(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,v=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,k=b-1-d.padInfo.top,I=Tw(o.shape,"float32"),C=n.data.get(a.dataId).values,S=Tw(a.shape,"float32",C);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-k,i=r-w;let s=0;for(let n=0;n<b;n+=v){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=y){const o=(i+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;if(0===u)continue;s+=S.get(e,r,o,t)*u}}I.set(s,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Uz={kernelName:Sv,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;KO(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=ek(r.shape,a,i,[1,1],s),[h,d]=function(e,t,n,r,a){const i=sB(e,0,n,Cm(t),a,"max"),s=oB(e,t,n,a,!0,r);return[i.values,s.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gz={kernelName:Nv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=pm(i,a.shape),u=sm(lI(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=uM({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=az({inputs:{a:h,b:c},backend:n});l.push(d);const p=XB({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hz={kernelName:Tv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;KO(a,"min");const o=pm(i,a.shape);let u=o;const l=dI(u,a.shape.length);let c=a;null!=l&&(c=IL({inputs:{x:a},backend:n,attrs:{perm:l}}),u=fI(u.length,a.shape.length)),hI("min",u,c.shape.length);const[h,d]=lI(c.shape,u),p=sm(d),f=Em(sm(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=OP({inputs:{x:g},backend:n,attrs:{shape:cI(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jz={kernelName:Rv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,mode:s}=r;KO(a,"mirrorPad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),l=i.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===s?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=Cm(a.shape),f=sm(o),m=o.length,g=Cm(o),v=mm(a.dtype,f);for(let e=0;e<f;e++){let t=Fm(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=Dm(t,d,p);v[e]=h[n]}return{dataId:n.write(v,o,a.dtype),shape:o,dtype:a.dtype}}},qz=ZO(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Kz=cM(Av,qz),Xz={kernelName:Av,backendName:"cpu",kernelFunc:Kz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yz(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=a.shape.length;let o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);const u=pm([o],a.shape),l=Lz({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=cI(l.shape,u),h=OP({inputs:{x:l},backend:n,attrs:{shape:c}}),d=mP({inputs:{a:a,b:h},backend:n}),p=DM({inputs:{x:d},backend:n}),f=XB({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=OP({inputs:{x:f},backend:n,attrs:{shape:c}}),g=az({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Qz={kernelName:ky,backendName:"cpu",kernelFunc:Yz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz={kernelName:Dv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r;KO(a,"multinomial");const u=o?a:Yz({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=Em(sm(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=OC.alea(s.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},Zz=GS;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW={kernelName:Ov,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r;KO(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=Zz(l,c,s,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},tW=HS;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW={kernelName:Mv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;KO(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=tW(c,h,s,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},rW=jS;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW={kernelName:Lv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;KO(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=s,p=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=rW(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW={kernelName:Bv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=r;KO(a,"oneHot");const l=sm(a.shape),c=new Float32Array(l*s);c.fill(u);const h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(c[e*s+h[e]]=o);return n.makeTensorInfo([...a.shape,s],i,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=iM({inputs:{input:r},backend:n}),t=sW({inputs:{x:e},backend:n}),a=xB({inputs:{input:r},backend:n}),i=sW({inputs:{x:a},backend:n}),s=eM({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return cz({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const oW={kernelName:Hy,backendName:"cpu",kernelFunc:sW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW={kernelName:Pv,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=iM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=xB({inputs:{input:a},backend:r}),s=sW({inputs:{x:i},backend:r}),o=eM({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return cz({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lW(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return tz({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{am(i,e.shape,"All tensors passed to stack must have matching shapes"),rm(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=tz({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),l=kB({inputs:u,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const cW={kernelName:zv,backendName:"cpu",kernelFunc:lW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW={kernelName:Wv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;KO(a,"pad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),l=n.data.get(a.dataId).values,c=sm(a.shape),h=a.shape.length,d=Cm(a.shape),p=sm(o),f=o.length,m=Cm(o),g=mm(a.dtype,p);0!==s&&g.fill(s);for(let e=0;e<c;e++){const t=Fm(e,h,d).map(((e,t)=>e+u[t]));g[Dm(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},dW=ZO(((e,t)=>Math.pow(e,t))),pW=cM(Vv,dW),fW={kernelName:Vv,backendName:"cpu",kernelFunc:pW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW={kernelName:Hv,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,o=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),l=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,[h,d,p]=AL(o,u,l,i.shape,i.dtype,c,s.shape),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(p,i.dtype,d);return f.concat([m])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW={kernelName:jv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:i}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=FL(s,r.shape,r.dtype,o,a.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:qv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=LL(l,a.shape,c,i.shape,i.dtype,h,s.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:Kv,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:i,step:s}=n,o=PL(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},bW=wM(Yv,(e=>1/e)),xW={kernelName:Yv,backendName:"cpu",kernelFunc:bW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:ty,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;KO(a,"resizeBilinear");const u=Cm(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(sm([h,l,c,f])),v=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c];let b=0;const x=v[0]/y[0],w=v[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=s?x*(t+.5)-.5:x*t;const r=Math.max(0,Math.floor(n)),a=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+i*u[1];for(let e=0;e<c;e++){let t;t=s?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+i*u[2],v=l+i*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],i=t+(m[d+e]-t)*r,s=i+(n+(m[v+e]-n)*r-i)*a;g[b++]=s}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW={kernelName:ny,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;KO([i,a],"resizeBilinearGrad");const o=Cm(a.shape),[u,l,c,h]=a.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),m=[s&&d>1?l-1:l,s&&p>1?c-1:c],g=[s&&d>1?d-1:d,s&&p>1?p-1:p],v=m[0]/g[0],y=m[1]/g[1],b=n.data.get(i.dataId).values;let x=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),i=t+r*o[1],s=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=i+n*o[2],m=i+r*o[2],g=s+n*o[2],v=s+r*o[2],w=d*l,k=d*a,I=u*l,C=u*a;for(let e=0;e<h;e++){const t=b[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[v+e]+=t*C}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW={kernelName:Zv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;KO(a,"resizeNearestNeighbor");const u=Cm(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),v=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c],b=v[0]/y[0],x=v[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=s?b*(e+.5):b*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));s&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=s?x*(e+.5):x*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW={kernelName:ey,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;KO([i,a],"resizeNearestNeighborGrad");const o=Cm(a.shape),u=Cm(i.shape),[l,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=n.data.get(i.dataId).values,v=[s&&p>1?c-1:c,s&&f>1?h-1:h],y=[s&&p>1?p-1:p,s&&f>1?f-1:f],b=v[0]/y[0],x=v[1]/y[1],w=1/b,k=1/x,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],l=Math.floor(r*k),v=Math.floor(l-C/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const l=i+a;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*b;if(e===Math.min(c-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+v;if(t<0||t>=f)continue;const a=d+t*u[2],i=t*x;r===Math.min(h-1,s?Math.round(i):Math.floor(i))&&(o+=g[a+n])}}m[i+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW={kernelName:ay,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r;KO(a,"reverse");const s=a.shape.length,o=pm(i,a.shape);if(0===s)return rM({inputs:{x:a},backend:n});const u=new lx(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},NW={kernelName:qy,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=mm(r.dtype,sm(r.shape)),[l,c,h,d]=r.shape,[p,f]=uT(s,c,h),m=Math.sin(a),g=Math.cos(a),v=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const a=r*d;for(let s=0;s<d;s++){const o=[l,e,r,s],y=o[2],b=o[1];let x=(y-p)*g-(b-f)*m,w=(y-p)*m+(b-f)*g;x=Math.round(x+p),w=Math.round(w+f);let k=i;if("number"!=typeof i&&(k=3===s?255:i[s]),x>=0&&x<h&&w>=0&&w<c){k=v[t+w*(h*d)+x*d+s]}u[t+n+a+s]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},TW=wM(iy,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),EW={kernelName:iy,backendName:"cpu",kernelFunc:TW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW={kernelName:oy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=yS(0,a,s),d=VL(n.bufferSync(a),n.bufferSync(i),s,h,l,u,o,c,0,!0);return n.makeTensorInfo(s,d.dtype,d.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AW(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function DW(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const FW={kernelName:ly,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:s}=r,o=function(e,t,n,r,a,i){const s=gm("int32",n*a);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*a;for(let e=0;e<a;++e)s[u+e]="left"===i?AW(n,t[e+u]):DW(n,t[e+u])}return s}(n.data.get(a.dataId).values,n.data.get(i.dataId).values,a.shape[0],a.shape[1],i.shape[1],s);return n.makeTensorInfo(i.shape,"int32",o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t;KO([r,a,i],"select");const s=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,c=wx(a.dtype,i.dtype),h=Em(sm(a.shape),c);let d=0;const p=0===s||s>1||1===a.shape.length?1:sm(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},$W=wM(hy,(e=>e>=0?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1))),OW={kernelName:hy,backendName:"cpu",kernelFunc:$W},MW=wM(my,(e=>e<0?-1:e>0?1:0)),LW={kernelName:my,backendName:"cpu",kernelFunc:MW},PW=wM(py,(e=>Math.sin(e))),BW={kernelName:py,backendName:"cpu",kernelFunc:PW},zW=wM(fy,(e=>Math.sinh(e))),WW={kernelName:fy,backendName:"cpu",kernelFunc:zW},VW=Math.log(1.1920928955078125e-7)+2,UW=wM(vy,(e=>{const t=e>-VW,n=e<VW,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),GW={kernelName:vy,backendName:"cpu",kernelFunc:UW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW={kernelName:xy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;KO([a],"spaceToBatchND");const o=sm(i),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const l=hW.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=lT(l.shape,i,o,!1),h=cT(c.length,i.length,!1),d=hT(l.shape,i,o,!1),p=OP({inputs:{x:l},backend:n,attrs:{shape:c}}),f=IL({inputs:{x:p},backend:n,attrs:{perm:h}}),m=OP({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jW={kernelName:Iy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values[0],[h,d,p,f,m]=XL(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qW={kernelName:Cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=YL(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW={kernelName:Sy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=QL(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW={kernelName:Ny,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=QL(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YW={kernelName:Ty,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=yS(0,a,o),p=!1,f=n.bufferSync(a);let m;switch(i.dtype){case"bool":m=VL(f,n.bufferSync(i),o,d,c,l,u,h,Boolean(n.data.get(s.dataId).values[0]),p);break;case"float32":m=VL(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(s.dataId).values[0],p);break;case"int32":m=VL(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(s.dataId).values[0],p);break;case"string":m=VL(f,n.bufferSync(i),o,d,c,l,u,h,Xb(n.data.get(s.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW={kernelName:wy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=pm(s,a.shape)[0],u=zT(a,i,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=qL({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},JW={kernelName:Ry,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;KO(n,"square");const a=r.data.get(n.dataId).values,i=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ZW=wM(jy,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),eV={kernelName:jy,backendName:"cpu",kernelFunc:ZW};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tV={kernelName:Dy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;KO(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:v,begin:y,end:b,strides:x}=qN(a.shape,i,s,o,u,l,c,h,d);let w;if(m)w=OP({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||v){rm(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ON(y,b,x),t=qL({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=OP({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=oP(p,n.bufferSync(a),x,y);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV={kernelName:Fy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=lP(d,p,a,i,s,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV={kernelName:_y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values[0],[l,c,h]=hP(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aV={kernelName:$y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=dP(n.data.get(i.dataId).values,a);return n.makeTensorInfo(i.shape,"int32",s)}},iV=wM(My,(e=>Math.tan(e))),sV={kernelName:My,backendName:"cpu",kernelFunc:iV},oV=wM(Ly,(e=>Math.tanh(e)));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uV={kernelName:uy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:i}=t,{sliceRank:s,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=yS(0,a,r.shape),h=n.bufferSync(a),d=n.bufferSync(i),p=n.bufferSync(r),f=VL(h,d,r.shape,c,u,o,s,l,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV={kernelName:Py,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;KO(a,"tile");const s=vP(n.bufferSync(a),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV={kernelName:By,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r;KO(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=xP(o,a.shape,a.dtype,i,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hV={kernelName:zy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],v=Cm(a.shape),y=v[0],b=v[1],x=v[2],w=Cm(g),k=w[0],I=w[1],C=w[2],S=mm(a.dtype,sm(g));S.fill(u);const N=r.data.get(a.dataId).values,T=r.data.get(i.dataId).values;for(let e=0;e<c;++e){const t=1===i.shape[0]?T:T.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let i;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=dV(c,d,o),m=dV(p,h,o);switch(s){case"nearest":i=fV(N,h,d,y,b,x,e,m,f,a,u);break;case"bilinear":i=mV(N,h,d,y,b,x,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}S[e*k+n*I+r*C+a]=i}return r.makeTensorInfo(g,a.dtype,S)}return{dataId:r.write(S,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function dV(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return em(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return em(0,n,t-1)}(e,t);case"nearest":return function(e,t){return em(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function pV(e,t,n,r,a,i,s,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[s*r+o*a+u*i+l]:c}function fV(e,t,n,r,a,i,s,o,u,l,c){return pV(e,t,n,r,a,i,s,Math.round(o),Math.round(u),l,c)}function mV(e,t,n,r,a,i,s,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*pV(e,t,n,r,a,i,s,h,d,l,c)+(u-d)*pV(e,t,n,r,a,i,s,h,f,l,c))+(o-h)*((f-u)*pV(e,t,n,r,a,i,s,p,d,l,c)+(u-d)*pV(e,t,n,r,a,i,s,p,f,l,c))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV={kernelName:Vy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;KO(i,"unique");const s=r.data.get(i.dataId).values,{outputValues:o,outputShape:u,indices:l}=wP(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV={kernelName:Uy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a.shape.length,o=a.shape[i],u=new Array(s-1);let l=0;for(let e=0;e<s;e++)e!==i&&(u[l++]=a.shape[e]);const c=new Array(s).fill(0),h=a.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=qL({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[e]=OP({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV={kernelName:Gy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r;KO(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-i.shape.length;let c=i;for(let e=0;e<l;++e){const t=tz({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<s;++e){const t=Hb(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=EM({inputs:{a:r,b:c},backend:n}),s=uM({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),l=mL({inputs:{a:s,b:a},backend:n}),h=XB({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(i),u.push(s),u.push(l),u.push(h)}const h=lW({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},bV=[BP,JO,WP,UP,mM,GP,HP,jP,qP,KP,YP,JP,eB,rB,iB,lB,cB,hB,dB,PP,pB,fB,mB,bM,gB,lM,SM,yB,tM,bB,IB,SB,NB,TB,EB,RB,AB,FB,$B,OB,MB,LB,PB,BB,WB,VB,UB,GB,HB,jB,qB,KB,QB,CP,JB,RM,ez,FM,nz,OM,lz,hz,dz,PM,WM,pz,fz,mz,gz,jM,XM,aM,vz,wB,bz,wz,Iz,NP,JM,tL,Cz,iL,Nz,Rz,Dz,$z,Oz,Mz,Pz,lL,Bz,zz,Wz,Vz,Uz,Gz,Hz,dL,jz,Xz,Jz,gL,yL,eW,nW,aW,wL,iW,uW,cW,hW,fW,RP,NL,mW,gW,vW,yW,sM,iz,xW,DP,_P,MP,wW,kW,IW,CW,SW,NW,EW,WL,RW,FW,_W,OW,HL,LW,BW,WW,KL,Qz,GW,HW,jW,qW,KW,XW,YW,QW,eP,JW,rP,sP,eV,tV,nV,rV,aV,gP,YB,sV,{kernelName:Ly,backendName:"cpu",kernelFunc:oV},uV,lV,cV,hV,CL,gV,vV,yV,oW];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of bV)rb(e);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV={},wV={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function kV(e,t){if(!(e in xV)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(Lm().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete xV[e]}),!1),Lm().getBool("SOFTWARE_WEBGL_ENABLED")&&(wV.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",wV)||n.getContext("experimental-webgl",wV);return n.getContext("webgl2",wV)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;xV[e]=n}const n=xV[e];return null==n||n.isContextLost()?(delete xV[e],kV(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),xV[e])}var IV,CV,SV;function NV(e,t){return[t,e]}function TV(e){const t=sm(e);return lm(Math.ceil(t/4))}function EV(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function RV(e,t){const n=e;let r,a,i,s,o,u,l,c,h,d;return 2===Lm().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,s=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,i=e.RGBA,s=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(e,t){const n=t();return Lm().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(IV||(IV={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(CV||(CV={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(SV||(SV={}));function DV(e){return!!(Lm().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function FV(e,t){return WV(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const _V=/ERROR: [0-9]+:([0-9]+):/g;function $V(e,t){const n=_V.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map(((e,t)=>cm((t+1).toString(),i)+e));let o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);const u=s.slice(0,r-1),l=s.slice(r-1,r),c=s.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${cm(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function OV(e,t){if(AV(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function MV(e,t,n,r,a,i,s){const o=e.getAttribLocation(t,n);return-1!==o&&(AV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),AV(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,i,s))),AV(e,(()=>e.enableVertexAttribArray(o))),!0)}function LV(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(e,n),AV(e,(()=>e.activeTexture(e.TEXTURE0+n))),AV(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function PV(e,t,n){AV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),AV(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function BV(e,t){AV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),AV(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function zV(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function WV(e,t,n){const r=AV(e,(()=>t()));if(null==r)throw new Error(n);return r}function VV(e,t=2){return sm(e.slice(0,e.length-t))}function UV(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function GV(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[VV(e),...UV(e)]),t}function HV(e){return e%2==0}function jV(e,t){if(om(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(HV(n)&&HV(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&HV(e[0])&&HV(t[0])}let qV,KV;function XV(e,t){return null!=e.getExtension(t)}function YV(e){try{if(null!=kV(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function QV(e){if(0===e)return!1;const t=kV(e);if(1!==e){if(XV(t,"EXT_color_buffer_float"))return JV(t);const e="EXT_color_buffer_half_float";if(XV(t,e)){const n=t.getExtension(e);return function(e,t){const n=RV(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),o}(t,n)}return!1}if(!XV(t,"OES_texture_float"))return!1;if(!XV(t,"WEBGL_color_buffer_float"))return!1;return JV(t)}function JV(e){const t=RV(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function ZV(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&rm("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU=Lm();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tU(){let e,t,n,r,a,i,s,o,u,l;return 2===Lm().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o=Lm().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(e,t,n="index"){const r=Cm(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function rU(e,t,n="index"){const r=Cm(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function aU(e,t,n="index"){const r=e.map(((e,t)=>t)),a=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(r,t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${a[r]}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}function iU(e){const t=Cm(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}eU.registerFlag("HAS_WEBGL",(()=>eU.getNumber("WEBGL_VERSION")>0)),eU.registerFlag("WEBGL_VERSION",(()=>YV(2)?2:YV(1)?1:0)),eU.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),eU.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===eU.get("WEBGL_VERSION"))),eU.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),eU.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),eU.registerFlag("WEBGL_PACK",(()=>eU.getBool("HAS_WEBGL"))),eU.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_CLIP",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_PACK_REDUCE",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_LAZILY_UNPACK",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_CONV_IM2COL",(()=>eU.getBool("WEBGL_PACK"))),eU.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==qV){const t=kV(e);qV=t.getParameter(t.MAX_TEXTURE_SIZE)}return qV}(eU.getNumber("WEBGL_VERSION")))),eU.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==KV){const t=kV(e);KV=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,KV)}(eU.getNumber("WEBGL_VERSION")))),eU.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=eU.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=kV(e);return t=XV(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:XV(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),eU.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>eU.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!$x())),eU.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=kV(e);if(1===e){if(!XV(t,"OES_texture_float"))return!1}else if(!XV(t,"EXT_color_buffer_float"))return!1;return JV(t)}(eU.getNumber("WEBGL_VERSION")))),eU.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!eU.getBool("WEBGL_FORCE_F16_TEXTURES")&&eU.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),eU.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>QV(eU.getNumber("WEBGL_VERSION")))),eU.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=eU.getNumber("WEBGL_VERSION"))&&null!=kV(e).fenceSync;var e})),eU.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>eU.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),eU.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),eU.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>$x()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),eU.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),eU.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),eU.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),eU.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),eU.registerFlag("WEBGL_EXP_CONV",(()=>!1)),eU.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>eU.getBool("IS_TEST"))),eU.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),eU.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),eU.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),eU.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const sU="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:oU}=iE;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(e,t,n){const r=[];if(e.forEach((e=>{const t=sm(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=bU(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?cU(e,r):lU(e,r);const i=e.shapeInfo.logicalShape,s=t.logicalShape;i.length<=s.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=oU(e.shapeInfo.logicalShape,t.logicalShape),u=yU(s),l=s-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":s<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===sm(e.shapeInfo.logicalShape),m=sm(t.logicalShape),g=1===m;if(1!==i||f||g){if(f&&!g)p=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&om(s,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=yU(u),c=oU(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,o=tU(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${hU}\n    ${dU}\n    ${pU}\n  `;return t}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return mU();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(om(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),i=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),i=a*Math.ceil(e[e.length-2]/2);let s=i,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return mU();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(om(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${rU(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=nU(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${rU(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=nU(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=nU(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=nU(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=fU);return[h,u,c,a,l,i,n.userCode].join("\n")}function lU(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,i]=e.shapeInfo.texShape;if(1===a&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=gU(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${vU(e)}\n      }\n    `;const a=e.shapeInfo.texShape,i=a[0],s=a[1];if(1===s&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=gU(n);if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&om(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=fm(n),u=s;if(u.length<n.length){const n=["row","col"];return`\n      ${lU(xU(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${wU(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${vU(e)}\n      }\n    `;const l=i[0],c=i[1],h=gU(r);if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],s=n[2],{newShape:o,keptDims:u}=fm(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${lU(xU(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${wU(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${vU(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=gU(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],s=n[2]*i,o=n[1]*s,{newShape:u,keptDims:l}=fm(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${lU(xU(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${wU(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${i}, 1)));\n        ${vU(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const v=gU(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,{newShape:u,keptDims:l}=fm(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${lU(xU(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${wU(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${i}, ${a})) +\n          depth3;\n        ${vU(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=gU(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=fm(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${lU(xU(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${wU(t,i)});\n      }\n    `}const s=t[5],o=t[4]*s,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${vU(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=gU(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function cU(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=tU();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=tU();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],u=tU();if(null!=i&&om(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${cU(xU(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${wU(i,r)});\n        }\n      `}const o=tU();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=s[0],l=s[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=tU();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[s-1]/2);let d=h*Math.ceil(i[s-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<s-1;e++)p=`int b${e}, `+p,d*=i[s-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const hU="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",dU="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pU="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fU="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function mU(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function gU(e){return`offset${e}`}function vU(e){const t=e.name,n=sm(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function yU(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function bU(e,t,n){const{newShape:r,keptDims:a}=fm(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):r,u=!e&&i>1&&!om(t,n)&&r.length<i||s;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function xU(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function wU(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=uU(a,s,t),u=function(e,t){const n=WV(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(AV(e,(()=>e.shaderSource(n,t))),AV(e,(()=>e.compileShader(n))),Lm().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw $V(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return Lm().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s},IU(e,t,l)))}function IU(e,t,n){const r=[],a=[];let i,s,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===Lm().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const a of t.variableNames){const i={name:a,uniform:e.getUniformLocation(n,a,c),offset:e.getUniformLocation(n,`offset${a}`,c)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${a}Shape`,c),i.texShape=e.getUniformLocation(n,`${a}TexShape`,c)),r.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),s=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:l,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:s}}function CU(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],i=a.shape;if(!om(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!om(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function SU(e){return Lm().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NU{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=IV.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tU();this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rU(["r","c","d"],e):nU(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=IV.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tU();this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rU(["r","c","d"],e):nU(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EU{constructor(e){this.variableNames=["A"],this.outTexUsage=CV.DOWNLOAD;const t=tU();this.outputShape=e,this.userCode=`\n      ${sU}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=CV.DOWNLOAD;const t=tU();this.outputShape=e,this.userCode=`\n      ${sU}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU={R:0,G:1,B:2,A:3};class DU{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=tU();this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${AU[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":iU(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FU{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tU();this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const i=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":iU(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _U(e){const t=tU();return function(e,t){const n=WV(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(AV(e,(()=>e.shaderSource(n,t))),AV(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function $U(e){return function(e,t){const n=WV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return AV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),AV(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function OU(e){return function(e,t){const n=WV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return AV(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),AV(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function MU(e,t,n,r,a,i){!function(e,t){const n=Lm().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return WV(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return AV(e,(()=>e.bindTexture(o,s))),AV(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),AV(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),AV(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),AV(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Lm().getNumber("WEBGL_VERSION")?AV(e,(()=>e.texImage2D(o,0,r,t,n,0,a,i,null))):AV(e,(()=>e.texStorage2D(o,1,r,t,n))),AV(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function LU(e){return e.internalFormatFloat}function PU(e){return e.internalFormatHalfFloat}function BU(e){return e.downloadTextureFormat}function zU(e){return e.internalFormatPackedFloat}function WU(e){return e.internalFormatPackedHalfFloat}function VU(e,t,n,r,a,i,s,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=EV(e,t);return n*r*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class UU{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Lm().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){xV[e]=t}(t,e)):this.gl=kV(t),e=this.gl,2===Lm().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>AV(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>AV(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>AV(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>AV(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>AV(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>AV(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>AV(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>AV(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Lm().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=FV(this.gl,e),XV(this.gl,t))this.textureHalfFloatExtension=FV(this.gl,t);else if(Lm().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),XV(this.gl,r))this.colorBufferHalfFloatExtension=FV(this.gl,r);else if(Lm().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",XV(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!XV(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=$U(this.gl),this.indexBuffer=OU(this.gl),this.framebuffer=function(e){return WV(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=RV(this.gl,this.textureHalfFloatExtension)}get debug(){return Lm().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;AV(e,(()=>e.finish())),AV(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),AV(e,(()=>e.deleteFramebuffer(this.framebuffer))),AV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),AV(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),AV(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=NV(t,n);return MU(e,a,i,LU(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=NV(t,n);return MU(e,a,i,PU(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=NV(t,n);return MU(e,a,i,BU(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){AV(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Lm().getNumber("WEBGL_VERSION")?AV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):AV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Lm().getNumber("WEBGL_VERSION")?AV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):AV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),AV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,i){let s,o,u;AV(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),o=e.FLOAT,u=i.internalFormatPackedFloat),s.set(a),2===Lm().getNumber("WEBGL_VERSION")?AV(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,s))):AV(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,s))),AV(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=EV(t,n);return MU(e,a,i,WU(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=EV(t,n);return MU(e,a,i,zU(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(BV(this.gl,this.framebuffer),this.outputTexture=null),AV(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,i]=NV(t,n),s=new Uint8Array(t*n*4);return AV(e,(()=>e.readPixels(0,0,a,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,i){return VU(this.gl,e,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();AV(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const i=16*t*n;return AV(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),AV(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),AV(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Lm().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return AV(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=_U(t));const n=function(e){return WV(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);AV(t,(()=>t.attachShader(n,this.vertexShader))),AV(t,(()=>t.attachShader(n,e))),function(e,t){if(AV(e,(()=>e.linkProgram(t))),!Lm().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&OV(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;AV(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){AV(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),MV(e,t,"clipSpacePos",n,3,20,0)&&MV(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(AV(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&OV(this.gl,this.program),AV(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return WV(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),AV(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){AV(e,(()=>LV(e,t,r))),AV(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=EV(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&OV(this.gl,this.program),zV(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}AV(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),AV(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=FV(this.gl,2===Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await hm((()=>this.disposed||this.isQueryAvailable(e,Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Lm().platform&&(n=Lm().platform.setTimeoutCustom.bind(Lm().platform)),hm((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),PV(this.gl,e,this.framebuffer),this.debug&&zV(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(PV(this.gl,this.outputTexture,this.framebuffer),this.debug&&zV(this.gl)):BV(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;PV(r,e,this.framebuffer),this.debug&&zV(r),this.outputTexture=e,AV(r,(()=>r.viewport(0,0,t,n))),AV(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),AV(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:GU,bincountImpl:HU,bincountReduceImpl:jU,bitwiseAndImpl:qU,castImpl:KU,ceilImpl:XU,concatImpl:YU,equalImpl:QU,expImpl:JU,expm1Impl:ZU,floorImpl:eG,gatherNdImpl:tG,gatherV2Impl:nG,greaterImpl:rG,greaterEqualImpl:aG,lessImpl:iG,lessEqualImpl:sG,linSpaceImpl:oG,logImpl:uG,maxImpl:lG,maximumImpl:cG,minimumImpl:hG,multiplyImpl:dG,negImpl:pG,notEqualImpl:fG,prodImpl:mG,raggedGatherImpl:gG,raggedRangeImpl:vG,raggedTensorToTensorImpl:yG,rangeImpl:bG,rsqrtImpl:xG,scatterImpl:wG,sigmoidImpl:kG,simpleAbsImpl:IG,sliceImpl:CG,sparseFillEmptyRowsImpl:SG,sparseReshapeImpl:NG,sparseSegmentReductionImpl:TG,sqrtImpl:EG,staticRegexReplaceImpl:RG,stridedSliceImpl:AG,stringNGramsImpl:DG,stringSplitImpl:FG,stringToHashBucketFastImpl:_G,subImpl:$G,tileImpl:OG,topKImpl:MG,transposeImpl:LG,uniqueImpl:PG}=kP;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BG(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function zG(e,t){return 1===t?[e]:BG(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class WG{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=SU(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=zG("rc",this.rank),t=yU(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?aU(["r","c","d"],"inputShape"):nU(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":iU(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class UG{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=HG(t,n),a=jG(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=GG(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let s;return r===SV.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===SV.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===SV.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===SV.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===SV.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=HG(n,r),i=jG(t,a,r);i in this.freeTextures||(this.freeTextures[i]=[]);const s=GG(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Lm().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const u=this.usedTextures[i],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function GG(e,t,n,r,a){const i=function(e,t){switch(e){case SV.PACKED_2X2_FLOAT32:return zU(t);case SV.PACKED_2X2_FLOAT16:return WU(t);case SV.UNPACKED_FLOAT32:return LU(t);case SV.UNPACKED_FLOAT16:return PU(t);case SV.PACKED_4X1_UNSIGNED_BYTE:return BU(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(a){const[t,n]=EV(e[0],e[1]);s=t*n}else{const[t,n]=NV(e[0],e[1]);s=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function HG(e,t){if(e===CV.UPLOAD)return SV.PACKED_2X2_FLOAT32;if(e===CV.RENDER||null==e)return function(e){return Lm().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?SV.PACKED_2X2_FLOAT32:SV.UNPACKED_FLOAT32:e?SV.PACKED_2X2_FLOAT16:SV.UNPACKED_FLOAT16}(t);if(e===CV.DOWNLOAD||e===CV.PIXELS)return SV.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function jG(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qG{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const KG="if (isnan(x)) return x;",XG="return x;",YG="return abs(x);",QG="return (x >= 0.0) ? x : (exp(x) - 1.0);",JG=KG+"\n  return (x < 0.0) ? 0.0 : x;\n",ZG=KG+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",eH="return x;",tH="return 1.0 / (1.0 + exp(-1.0 * x));",nH="return x;",rH="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",aH="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",iH="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",sH="return 1.0 / (1.0 + exp(-1.0 * x));";class oH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length);const t=e.length,n=zG("rc",t),r=yU(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lH=CS,cH={};const hH=Lm().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class dH extends Qf{nextDataId(){return dH.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Lm().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof UU)t=e;else{const n=kV(Lm().getNumber("WEBGL_VERSION"),e);t=new UU(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=kV(Lm().getNumber("WEBGL_VERSION"));t=new UU(e),this.binaryCache=((n=Lm().getNumber("WEBGL_VERSION"))in cH||(cH[n]={}),cH[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new UG(this.gpgpu),this.numMBBeforeWarning=null==Lm().global.screen?1024:Lm().global.screen.height*Lm().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Yf(this,Dw())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,i){const s=this.makeTensorInfo(t,n),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];const u=GV(t),l=new DU(u,!1,i),c=this.runWebGLProgram(l,[s],n,[[r,a]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),c.dataId}write(e,t,n){if((Lm().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Lm().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:CV.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Lm().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:CV.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:i,shape:s,isPacked:o}=t;if(null!=i){let t;t=o?new oH(s,eH):new qG(s,eH);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=qb()),"complex64"===r){c=kT(this.readSync(a.real.dataId),this.readSync(a.imag.dataId))}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=qb()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:i,complexTensorInfos:s,isPacked:o}=t;if(null!=a){let t;t=o?new oH(r,eH):new qG(r,eH);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Lm().getBool("DEBUG")&&!Lm().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Lm().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&Lm().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...TV(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);l=kT(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=sm(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;AV(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dw().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:i,dtype:s,isPacked:o,texture:u}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new oH(a,eH):new qG(a,eH);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:s}],s),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Dw().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Xb(e)));return Tw(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Tw(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!DV(n)){if(Lm().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=sm(t);if(Lm().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...TV(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),i}const i=Lm().getBool("WEBGL_PACK")&&!0===r,s=i?GV(t):t,o=i?new RU(s):new EU(s),u=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=Qb(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=Qb(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);s.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:qb(),endMs:null}}endTimer(e){return Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=qb(),e)}async getQueryTime(e){if(Lm().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,i)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=hH){return Lm().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&sm(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Qy("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return lH(e.shape,t)}packedUnaryOp(e,t,n){const r=new oH(e.shape,t),a=this.compileAndRun(r,[e],n);return Dw().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=IG(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Lm().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,YG,e.dtype);const t=new qG(e.shape,YG),n=this.compileAndRun(t,[e]);return Dw().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&bm(n[0])){const a=n.map((e=>Kb(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Dw().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new uH(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new WG(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[VV(e.shape),...UV(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[VV(t),...UV(t)],i=new VG(a,n),s=[n],o=this.runWebGLProgram(i,[r],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:i}=n;if(null!=t){rm(sm(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=GV(a);let o;o=r?new TU(s):new NU(s);const u=[null!=t?t:TV(s)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(o,[{shape:s,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,i){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===IV.DENSE){const t=null!=i?i:TV(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===sm(s.shape))return o.values=mm(s.dtype,0),s;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&sm(t.shape)<=Lm().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!jV(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:u}=bU(e.packedInputs,t.shape,i);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Cm(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&om(t.shape,i),f=1===sm(t.shape),m=Qk(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&om(i,n.texData.texShape),v=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${s?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${v}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+a+`${Lm().getNumber("WEBGL_VERSION")}`,i}(e,l,c),d=this.getAndSaveBinary(h,(()=>kU(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),Lm().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(CU(t.inShapeInfos,n),CU([t.outShapeInfo],[r]));const i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Lm().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const a=n[r],{uniform:i,offset:s,shape:o,texShape:u}=t.variablesLocations[r];if(o){const{uniformShape:n}=bU(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,a.texData.texShape[0],a.texData.texShape[1]),null!=i)if(a.isUniform)if(sm(a.shape)<2)e.gl.uniform1f(i,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,i,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Cm(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],i=t.customUniformLocations[n],s=a[n];if("float"===r.type)e.gl.uniform1fv(i,s);else if("vec2"===r.type)e.gl.uniform2fv(i,s);else if("vec3"===r.type)e.gl.uniform3fv(i,s);else if("vec4"===r.type)e.gl.uniform4fv(i,s);else if("int"===r.type)e.gl.uniform1iv(i,s);else if("ivec2"===r.type)e.gl.uniform2iv(i,s);else if("ivec3"===r.type)e.gl.uniform3iv(i,s);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(i,s)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=Lm().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=qb();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Lm().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Lm().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=_w((()=>{if(!Lm().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Lm().getBool("DEBUG");Lm().set("DEBUG",!1);const t=this.abs(yI(1e-8)).dataSync()[0];if(Lm().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:i,usage:s,isPacked:o}=t;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=qb());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Lm().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Lm().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&Lm().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?tm(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=fm(e);e=t.newShape}let a=sm(e),i=null;e.length<=1&&a<=n?i=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const s=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s)if(t){const t=VV(e);let n=2,r=2;e.length&&([n,r]=UV(e)),a=t*(n/2)*(r/2),i=lm(a).map((e=>2*e))}else i=lm(a);return i}(n,o),t.texShape=c),null!=a){const e=GV(n);let i,s=c[1],h=c[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&d||([s,h]=EV(c[0],c[1])),i=o?new FU(e,d):new DU(e,d);const p=d?[h,s]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?CV.PIXELS:CV.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,h,a);const g=[[h,s]],v=!0,y=this.runWebGLProgram(i,[f],r,g,v),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Lm().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=qb()-l)}else{const e=this.acquireTexture(c,s,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. */(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ym(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await JN(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw $V(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=IU(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:i,channels:s}=e,o=Dw().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,a,i,s);return Dw().makeTensorFromDataId(u,t,n,o)}}dH.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ox()&&Mw("webgl",(()=>new dH),2)
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;const pH="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class fH{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Zk(t,n),this.enableShapeUniforms=SU(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class gH{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Zk(t,n);const a=this.outputShape.length;this.enableShapeUniforms=SU(a);let i="";if(r)if(0===a||1===sm(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${yU(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=zG("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const yH={kernelName:nv,backendName:"webgl",kernelFunc:vH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(i.dataId),o=vH({inputs:{x:r},backend:n}),u=vH({inputs:{x:a},backend:n});return s.complexTensorInfos={real:o,imag:u},i}const xH={kernelName:fg,backendName:"webgl",kernelFunc:bH},wH="return (a < 0.) ? b * a : a;",kH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IH={kernelName:uv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,s=n.makeTensorInfo([],"float32",Hb(i,"float32")),o=Lm().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gH(kH,a.shape,s.shape):new fH(wH,a.shape,s.shape),u=n.runWebGLProgram(o,[a,s],"float32");return n.disposeIntermediateTensorInfo(s),u}},CH="return (a < 0.) ? b * a : a;",SH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH={kernelName:Uv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=Lm().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gH(SH,r.shape,a.shape):new fH(CH,r.shape,a.shape);return n.runWebGLProgram(i,[r,a],"float32")}},TH="if (isnan(x)) return x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:i})=>{const{x:s}=a,o=i,u=r||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){const e=o.texData.get(s.dataId),t=n(e.values,u);return o.makeTensorInfo(s.shape,u,t)}let l;return l=Lm().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new oH(s.shape,t):new qG(s.shape,e),o.runWebGLProgram(l,[s],u)}}function RH({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:i}){return({inputs:s,backend:o})=>{const{a:u,b:l}=s,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},s=new fH(e,u.shape,l.shape);return c.runWebGLProgram(s,[a,i],wx(n.dtype,r.dtype))})),i=bH({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),i}const h=i||wx(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?rE(e):e,r="string"===u.dtype?rE(t):t,[i,s]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(s,h);return c.texData.get(o.dataId).values=i,o}let d;return d=Lm().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new gH(t,u.shape,l.shape,n):new fH(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function AH(e,t=!1){if("linear"===e)return t?nH:XG;if("relu"===e)return t?aH:JG;if("elu"===e)return t?rH:QG;if("relu6"===e)return t?iH:ZG;if("prelu"===e)return t?SH:CH;if("leakyrelu"===e)return t?kH:wH;if("sigmoid"===e)return t?sH:tH;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(e,t,n,r=!1,a=!1,i=!1,s=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=SU(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const v=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${b};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${v}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class _H{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Zk(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H="return a * b;";function OH(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=wx(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),i=new _H(FH.REAL,r.shape,a.shape),s=new _H(FH.IMAG,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(i,o,"float32"),l=n.runWebGLProgram(s,o,"float32"),c=bH({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,o]=dG(r.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=s,u}let s;return s=Lm().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gH($H,r.shape,a.shape):new fH($H,r.shape,a.shape),n.runWebGLProgram(s,[r,a],i)}const MH={kernelName:Fv,backendName:"webgl",kernelFunc:OH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LH(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=n,o=sm(a.shape),u=dm(i,o),l=sm(u);rm(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=s.texData.get(a.dataId);return!c.isPacked||jV(a.shape,u)||null!==c.texture&&jV(c.shape,u)?(s.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[VV(e.shape),...UV(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},i=[VV(t),...UV(t)],s=new VG(i,r),o=[r],u=n.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,s)}const PH={kernelName:Jv,backendName:"webgl",kernelFunc:LH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BH{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];const s=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${um(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zH{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=oT(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let s=0;s<a.length;s++){const{inSize:o,windowSize:u,outSize:l}=a[s];let c,h;c="mean"===n?0===s?new BH({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new BH({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new zH({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VH{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=yU(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class UH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=yU(this.rank),a=BG("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=a[e];const s=`vec2(${i.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(e,t,n){const r=Lm().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new UH(e.shape,t):new VH(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HH(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;return function(e,t,n,r){const a=t,i=e.shape.length,s=pm(a,e.shape);let o=s;const u=dI(o,i),l=null!=u;let c=e;l&&(c=GH(e,u,r),o=fI(o.length,i)),hI("sum",o,i);const[h,d]=lI(c.shape,o);let p=h;n&&(p=cI(h,s));const f=sm(d),m=LH({inputs:{x:c},attrs:{shape:[sm(e.shape)/f,f]},backend:r}),g=WH(m,kx(e.dtype),"sum",r),v=LH({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),v}(a,i,s,n)}const jH={kernelName:by,backendName:"webgl",kernelFunc:HH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:i}=r,s=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[i[e]];let l;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,t=LG(e,a.shape,a.dtype,i,u);l=s.makeTensorInfo(u,a.dtype);s.texData.get(l.dataId).values=t}else l=GH(a,i,s);return l}const KH={kernelName:Wy,backendName:"webgl",kernelFunc:qH},XH=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),v=sm(m),y=sm(g),b=Zk(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);rm(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=n?[v,h,p]:[v,p,h],w=r?[y,f,d]:[y,d,f],k=LH({inputs:{x:e},backend:a,attrs:{shape:x}}),I=LH({inputs:{x:t},backend:a,attrs:{shape:w}}),C=[k,I],S=Math.max(v,y),N=n?k.shape[1]:k.shape[2],T=null!=i,E=null!=s,R="leakyrelu"===u,A=null!=u?AH(u,!0):null;let D;if((1===p||1===f)&&N>XH&&!1===(T||E||R||null!=A)){let e=k,t=I;n&&(e=qH({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=qH({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));const i=1===f;let s=e;1!==f&&(s=LH({inputs:{x:e},backend:a,attrs:{shape:[S,N,1]}}),C.push(s));const o=1===f?2:1;let u=t;i&&(u=LH({inputs:{x:t},backend:a,attrs:{shape:[S,1,N]}}),C.push(u));const l=OH({inputs:{a:s,b:u},backend:a});D=HH({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const u=wx(e.dtype,t.dtype),l=new DH(x,w,[S,p,f],n,r,T,A,E,R),c=[k,I];if(null!=i&&c.push(i),E&&c.push(s),R){const e=a.makeTensorInfo([],"float32",Hb(o,"float32"));c.push(e),C.push(e)}D=a.runWebGLProgram(l,c,u)}const F=LH({inputs:{x:D},backend:a,attrs:{shape:b}});C.push(D);for(const e of C)a.disposeIntermediateTensorInfo(e);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:Ky,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return YH({a:a,b:i,transposeA:u,transposeB:l,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},JH="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:Vm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=IG(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Lm().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new oH(r.shape,JH):new qG(r.shape,JH),n.runWebGLProgram(a,[r],r.dtype)}},ej=EH({opSnippet:KG+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),tj={kernelName:Um,backendName:"webgl",kernelFunc:ej},nj=EH({opSnippet:KG+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),rj={kernelName:Gm,backendName:"webgl",kernelFunc:nj},aj="return a + b;",ij=RH({opSnippet:aj,packedOpSnippet:aj,supportsComplex:!0,cpuKernelImpl:GU}),sj={kernelName:Hm,backendName:"webgl",kernelFunc:ij};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oj{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uj{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:jm,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return vH({inputs:{x:a[0]},backend:r});if(a.length>Lm().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),i=e({inputs:a.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>wx(e,t))),s=a.map((e=>e.shape)),o=Lm().getBool("WEBGL_PACK")?new uj(a[0].shape,s):new oj(a[0].shape,s);return r.runWebGLProgram(o,a,i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:qm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=pm(i,a.shape);let l=u;const c=dI(l,o);let h=a;null!=c&&(h=qH({inputs:{x:a},backend:n,attrs:{perm:c}}),l=fI(l.length,o)),hI("all",l,o);const[d,p]=lI(h.shape,l),f=LH({inputs:{x:h},backend:n,attrs:{shape:[-1,sm(p)]}}),m=WH(f,f.dtype,"all",n);let g;if(s){g=LH({inputs:{x:m},backend:n,attrs:{shape:cI(d,u)}})}else g=LH({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:Km,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=pm(i,a.shape);let l=u;const c=dI(l,o);let h=a;null!=c&&(h=qH({inputs:{x:a},backend:n,attrs:{perm:c}}),l=fI(l.length,o)),hI("any",l,o);const[d,p]=lI(h.shape,l),f=LH({inputs:{x:h},backend:n,attrs:{shape:[-1,sm(p)]}}),m=WH(f,f.dtype,"any",n);let g;if(s){g=LH({inputs:{x:m},backend:n,attrs:{shape:cI(d,u)}})}else g=LH({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dj{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pj{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,rm(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,o=s.length,u=yU(o),l=zG("coords",o);let c,h;if(1===i){h=o+1;const e=yU(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=zG("sourceLocR",h-1).concat("inIdx.r"),g=zG("sourceLocG",h-1).concat("inIdx.g"),v=zG("sourceLocB",h-1).concat("inIdx.b"),y=zG("sourceLocA",h-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${v.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${s[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${s[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(e,t,n,r=null){let a=t.shape[0],i=t.shape[1];null!=r&&(a=r.shape[0],i=r.shape[1]);const s=oT(i),o={windowSize:s,inSize:i,batchSize:a,outSize:Math.ceil(i/s)},u=new dj(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=fj(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function mj(e,t,n,r=null){const a=null!=r?r.shape:t.shape,i=oT(a[a.length-1]),s=new pj(a,i,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(s,o,"int32");if(u.shape.length===t.shape.length){const r=mj(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function gj(e,t,n,r){const a=[n];if(hI("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Lm().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let s=t;null!==i&&i.isPacked&&(s=e.unpackTensor(t),n.push(s));const[o,u]=lI(s.shape,a),l=sm(u),c=LH({inputs:{x:s},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=fj(e,c,r);n.push(h);const d=LH({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return mj(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj={kernelName:Xm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=pm(i,a.shape);const o=dI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=qH({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=fI(s.length,u.shape.length)),hI("argMax",[s[0]],u.shape.length);const c=gj(n,u,s[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yj={kernelName:Ym,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=pm(i,a.shape);const o=dI(s,a.shape.length);let u=a;const l=[];null!=o&&(u=qH({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=fI(s.length,u.shape.length)),hI("argMin",[s[0]],u.shape.length);const c=gj(n,u,s[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},bj=EH({opSnippet:KG+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),xj={kernelName:Qm,backendName:"webgl",kernelFunc:bj},wj=EH({opSnippet:KG+"return log(x + sqrt(x * x + 1.0));"}),kj={kernelName:Jm,backendName:"webgl",kernelFunc:wj},Ij=EH({opSnippet:KG+"\n  return atan(x);\n"}),Cj={kernelName:Zm,backendName:"webgl",kernelFunc:Ij},Sj=RH({opSnippet:pH+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+mH+"\n  return result;\n"}),Nj={kernelName:tg,backendName:"webgl",kernelFunc:Sj},Tj=EH({opSnippet:KG+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ej={kernelName:eg,backendName:"webgl",kernelFunc:Tj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Rj{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(f||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const b=4*Math.floor(i/4),x=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Aj{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${v});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(i/4),k=i%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${v});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj={kernelName:ng,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ZV(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;rm(ck(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=ek(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&om(l.inShape,l.outShape))return vH({inputs:{x:a},backend:n});const c=new Rj(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj={kernelName:ag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=tk(a.shape,i,s,[1,1,1],o,u,l),h=new Aj(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _j{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $j{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oj={kernelName:ig,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=tk(s.shape,o,u,[1,1,1],l,c),d=new $j(h);return n.runWebGLProgram(d,[a],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj={kernelName:rg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;ZV([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=ek(s.shape,o,u,1,l),h=new _j(c);return n.runWebGLProgram(h,[a],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lj={kernelName:sg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=r;return YH({a:a,b:i,transposeA:s,transposeB:o,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pj{constructor(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Zk(e,t),Zk(e,n);let s="0.0";null!=r&&(Zk(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Zk(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bj{constructor(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Zk(e,t),Zk(e,n);let s="vec4(0.0)";null!=r&&(Zk(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Zk(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj={kernelName:Qg,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:i,offset:s,scale:o}=e;rm(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),rm(null==s||a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),rm(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,i];let c=null;null!=s&&(c=s.shape,l.push(s));let h=null;null!=o&&(h=o.shape,l.push(o));const d=Lm().getBool("WEBGL_PACK_NORMALIZATION")?new Bj(r.shape,a.shape,i.shape,c,h,u):new Pj(r.shape,a.shape,i.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Wj{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=yU(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Vj.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let r;const a=e.map(((e,t)=>`sourceLoc.${Vj[t]} = start[${t}] + coords.${Vj[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Vj=["x","y","z","w","u","v"];class Uj{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=yU(this.rank),n=zG("coords",this.rank),r=zG("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r,[o,u]=jN(a,i,s);if($N(a,o,u),0===sm(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=CG(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=GN(a.shape,o,u);if(l||!c){const e=Lm().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Uj(u):new Wj(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),s=r.texData.get(i.dataId);Object.assign(s,a),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=HN(t,Cm(e.shape));a.slice&&(o+=a.slice.flatOffset),s.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(s.slice.origDataId)||1;return r.dataRefCount.set(s.slice.origDataId,u+1),i}(a,o,u,n)}const Hj={kernelName:dy,backendName:"webgl",kernelFunc:Gj},jj={kernelName:og,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;rm(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=lT(a.shape,i,o),l=cT(u.length,i.length),c=hT(a.shape,i,o),h=dT(s,i.length),d=pT(c,s,i.length),p=[],f=LH({inputs:{x:a},backend:n,attrs:{shape:u}}),m=qH({inputs:{x:f},backend:n,attrs:{perm:l}}),g=LH({inputs:{x:m},backend:n,attrs:{shape:c}}),v=Gj({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj={kernelName:ug,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=n.readSync(a.dataId),u=n.readSync(i.dataId),l=HU(o,u,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,l)}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj={kernelName:lg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=Lm().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=Lm().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===s){const e=n.texData.get(r.dataId).values,t=n.texData.get(a.dataId).values,[i,s]=qU(r.shape,a.shape,e,t,r.dtype),o=n.makeTensorInfo(s,r.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new gH("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new fH("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj={kernelName:cg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.readSync(r.dataId),s=n.readSync(a.dataId),o=Zk(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Yj=RH({opSnippet:"return float(a != b);",cpuKernelImpl:fG,dtype:"bool"}),Qj={kernelName:$v,backendName:"webgl",kernelFunc:Yj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jj(e){const{inputs:t,backend:n}=e,{input:r}=t;return vH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Zj={kernelName:Xv,backendName:"webgl",kernelFunc:Jj},eq="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tq={kernelName:hg,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:i}=n,{dtype:s}=a;if("complex64"===s){if("complex64"===i.dtype)return vH({inputs:{x:i},backend:r});const t=iC(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),a=bH({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Jj({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(t),n}if(!vm(i.dtype,s)){const e=vH({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,a]=KU(e,i.shape,i.dtype,s);return r.makeTensorInfo(t,n,a)}if("int32"===s)return function(e,t){const n=new qG(e.shape,eq),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===s){const e=r.makeTensorInfo([],"bool",mm("bool",1)),t=Yj({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},nq="return ceil(x);",rq=EH({opSnippet:nq,packedOpSnippet:nq,cpuKernelImpl:XU}),aq={kernelName:dg,backendName:"webgl",kernelFunc:rq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iq{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sq{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq={kernelName:pg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:i,clipValueMax:s}=r;let o;o=Lm().getBool("WEBGL_PACK_CLIP")?new sq(a.shape):new iq(a.shape);const u=[[i],[s]];return n.runWebGLProgram(o,[a],a.dtype,u)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uq{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const cq={kernelName:mg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),i=new uq(r.shape),s=[lq(r,a.complexTensorInfos.real),lq(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hq{constructor(e){this.outputShape=[],this.outputShape=eT(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dq{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=eT(e,t);const n=this.outputShape,r=n.length,a=yU(r),i=zG("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=s[t],l=s.slice(-2),c=s.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${pq(s,u,t)}),\n            vec2(${pq(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${pq(s,u,p)}),\n          vec2(${pq(l,u,p)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function pq(e,t,n){const r=e.indexOf(t),a=e.map(((e,t)=>t===r?`${e} - ${n}`:e));return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fq(e){const{inputs:t,backend:n}=e,{input:r}=t;return vH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const mq={kernelName:av,backendName:"webgl",kernelFunc:fq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gq(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Jj({inputs:{input:e},backend:n}))),a=e.map((e=>fq({inputs:{input:e},backend:n}))),i=gq(r,t,n),s=gq(a,t,n),o=bH({inputs:{real:i,imag:s},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=sm(e.shape.slice(t));return LH({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=eT(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=YU(i,s,r,o),l=eT(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>sm(e.shape)>0)),s=Lm().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=s?new qG(e[0].shape,eH):new oH(e[0].shape,eH);return n.runWebGLProgram(t,e,r)}const o=Lm().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let r=0;r<i.length;r+=o){const a=i.slice(r,r+o);e.push(gq(a,t,n))}const r=gq(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(s){const e=new dq(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=eT(e.map((e=>e.shape)),t),a=e.map((e=>LH({inputs:{x:e},attrs:{shape:[-1,sm(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(i,t,n),c=new hq(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=LH({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function vq(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=pm(a,t[0].shape)[0],s=t.map((e=>e.shape));ZN(s,i);const o=eT(t.map((e=>e.shape)),i);if(0===sm(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>sm(e.shape)>0));return 1===u.length?vH({inputs:{x:u[0]},backend:n}):gq(u,i,n)}const yq={kernelName:gg,backendName:"webgl",kernelFunc:vq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bq{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,v=m?2:3,y=m?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${v}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class xq{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wq{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=SU(this.outputShape.length);const i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===s){if(n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=i%2==0?tm(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kq{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=SU(this.outputShape.length);const{dataFormat:n}=t,r=tU(),a="channelsLast"===n,i=a?1:2,s=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Cq({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=i){const e=Iq(i.shape,p);null!=e&&(i=LH({inputs:{x:i},backend:r,attrs:{shape:e}}),m.push(i))}if(null!=a){const e=Iq(a.shape,p);null!=e&&(a=LH({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(!((1===h||1===d)&&c>XH)&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&om(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,rm(jV(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=LH({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=YH({a:h,b:p,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),v=r.texData.get(g.dataId);rm(v.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,v.shape=n.outShape,f=vH({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=LH({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=LH({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=YH({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s});f=LH({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function Sq({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,v=[n.batchSize,m,g],y=[];if(null!=i){const e=Iq(i.shape,f);null!=e&&(i=LH({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=a){const e=Iq(a.shape,f);null!=e&&(a=LH({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}const b=LH({inputs:{x:t},backend:r,attrs:{shape:[1,m,sm(t.shape)/m]}});y.push(b);const x=new kq(v,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(x,[e],"float32",w),I=LH({inputs:{x:k},backend:r,attrs:{shape:v}});y.push(k),y.push(I);const C=null!=a,S=null!=i,N="leakyrelu"===o,T=o?AH(o,!0):null,E=new DH(f?I.shape:b.shape,f?b.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,C,T,S,N),R=f?[I,b]:[b,I];if(a&&R.push(a),S&&R.push(i),N){const e=r.makeTensorInfo([],"float32",Hb(s,"float32"));R.push(e),y.push(e)}const A=r.runWebGLProgram(E,R,"float32"),D=LH({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq={kernelName:vg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=dk(u),d=nk(a.shape,i.shape,s,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Lm().getBool("WEBGL_EXP_CONV")){const e=new wq(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[a,i],"float32",t)}else if(Lm().getBool("WEBGL_CONV_IM2COL"))p=Sq({x:a,filter:i,convInfo:d,backend:n});else{const e=new bq(d);p=n.runWebGLProgram(e,[a,i],"float32")}else p=Cq({x:a,filter:i,convInfo:d,backend:n});const f=LH({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Eq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Aq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq={kernelName:yg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=dk(u),d=nk(a.shape,c,s,1,o,l,!1,h),p=new Tq(d);return n.runWebGLProgram(p,[a,i],"float32")}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fq{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=SU(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q={kernelName:bg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=dk(l),d=nk(s,i.shape,o,1,u,c,!1,h);if(Lm().getBool("WEBGL_PACK")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new Fq(d);return n.runWebGLProgram(t,[a,i],"float32",e)}{const e=new Eq(d);return n.runWebGLProgram(e,[a,i],"float32")}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $q={kernelName:xg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,l=rk(a.shape,i.shape,s,u,o),c=new xq(l);return n.runWebGLProgram(c,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:wg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r,l=rk(a.shape,u,s,1,o),c=new Rq(l);return n.runWebGLProgram(c,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq={kernelName:kg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r,l=rk(u,i.shape,o,1,s),c=new Aq(l);return n.runWebGLProgram(c,[a,i],"float32")}},Lq=EH({opSnippet:TH+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${mH}\n  return result;\n`}),Pq={kernelName:Ig,backendName:"webgl",kernelFunc:Lq},Bq=EH({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),zq={kernelName:Cg,backendName:"webgl",kernelFunc:Bq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Wq{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,s,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[s-1+".0",o-1+".0"],[m,g,v]=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${v};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq={kernelName:Tg,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new Wq(a.shape,i.shape,o,u,l);return n.runWebGLProgram(c,[a,i,s],"float32")}};var Uq;!function(e){e.Prod="*",e.Sum="+"}(Uq||(Uq={}));class Gq{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,i=this.op===Uq.Prod?"1.0":"0.0",s=n?i:`getX(${Hq(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${yU(a)} coords = getOutputCoords();\n        int end = ${jq(a,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${jq(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Hq(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Hq(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function jq(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qq(e,t,n,r,a,i){const s=t.shape.length,o=dI([r],s);let u=t;null!=o&&(u=qH({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=fI(1,s)[0];if(l!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=vH({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new Gq(e,u.shape,!1,i),a=[[t]],s=h;h=n.runWebGLProgram(r,[h],h.dtype,a),n.disposeIntermediateTensorInfo(s)}if(a){const t=new Gq(e,u.shape,a,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=qH({inputs:{x:h},backend:n,attrs:{perm:pI(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq={kernelName:Sg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;return qq(Uq.Prod,a,n,i,s,o)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq={kernelName:Ng,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;return qq(Uq.Sum,a,n,i,s,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq={kernelName:Eg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(i.dataId),r=HU(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=jU(e,t,s,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qq{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq={kernelName:Rg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r,o=a.shape[0],u=("NHWC"===s?a.shape[1]:a.shape[2])*i,l=("NHWC"===s?a.shape[2]:a.shape[3])*i,c=("NHWC"===s?a.shape[3]:a.shape[1])/(i*i),h=new Qq("NHWC"===s?[o,u,l,c]:[o,c,u,l],i,s);return n.runWebGLProgram(h,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zq{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=SU(this.outputShape.length);const i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eK{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=SU(this.outputShape.length);const i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(s%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=s%2==0?tm(u):u;u%2==0&&s%2==1||u%2!=0&&s%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(s%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tK={kernelName:Ag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),rm(ck(s,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const h=nk(a.shape,i.shape,s,c,o,l,!0);let d;d=Lm().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new eK(h):new Zq(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,i],"float32",p)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nK{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rK{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK={kernelName:Dg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=nk(a.shape,c,s,o,u,l,!0),d=new nK(h);return n.runWebGLProgram(d,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK={kernelName:Fg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=nk(c,i.shape,s,o,u,l,!0),d=new rK(h);return n.runWebGLProgram(d,[a,i],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sK{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK={kernelName:_g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],i=sm(r.shape),s=LH({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new sK(i),u=n.runWebGLProgram(o,[s],s.dtype),l=LH({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uK{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK={kernelName:$g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,l=Zw(a.shape,i.shape,s,o,"NHWC",u);let c;const h=new uK(l);c=n.runWebGLProgram(h,[a,i],"float32");const d=LH({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK={kernelName:Pg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=$T(a,i.length);MT(s.length,u,i);const{path:l,steps:c}=LT(o,u),h=c.length;let d=null,p=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=OT(p,u[t]);let a;PT(e)?a=i[t]:(a=qH({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);om(a.shape,s)||(a=LH({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=OH({inputs:{a:a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=HH({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},hK=EH({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),dK={kernelName:Bg,backendName:"webgl",kernelFunc:hK},pK={kernelName:zg,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,i=Lm().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gH("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new fH("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}},fK=RH({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:QU}),mK={kernelName:Vg,backendName:"webgl",kernelFunc:fK},gK=EH({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${gT};\n  float a1 = ${vT};\n  float a2 = ${yT};\n  float a3 = ${bT};\n  float a4 = ${xT};\n  float a5 = ${wT};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),vK={kernelName:Wg,backendName:"webgl",kernelFunc:gK},yK=EH({opSnippet:TH+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:JU,dtype:"float32"}),bK={kernelName:Ug,backendName:"webgl",kernelFunc:yK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xK(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice();let u=a;return a<0&&(rm(-(s+1)<=a,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+a+1),o.splice(u,0,1),LH({inputs:{x:i},backend:r,attrs:{shape:o}})}const wK={kernelName:Gg,backendName:"webgl",kernelFunc:xK},kK="return exp(x) - 1.0;",IK=EH({opSnippet:kK,packedOpSnippet:kK,cpuKernelImpl:ZU}),CK={kernelName:Hg,backendName:"webgl",kernelFunc:IK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SK{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(e,t,n){const r=n.texData.get(e.dataId),a=sm(e.shape),i=e.shape[e.shape.length-1],s=LH({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),o=s.shape,u=new SK("real",o,t),l=new SK("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=bH({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=LH({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(p),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK={kernelName:jg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return NK(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EK{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:i}=n;if(i=i||wm(a),"string"===i){const e=gm(i,sm(r));return e.fill(a),t.makeTensorInfo(r,i,e)}{const e=new EK(r,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const AK={kernelName:qg,backendName:"webgl",kernelFunc:RK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DK{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FK={kernelName:Kg,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new DK(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},_K="return floor(x);",$K=EH({opSnippet:_K,packedOpSnippet:_K,cpuKernelImpl:eG}),OK={kernelName:Xg,backendName:"webgl",kernelFunc:$K},MK=RH({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),LK={kernelName:Yg,backendName:"webgl",kernelFunc:MK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class PK{constructor(e){this.variableNames=["A"];const t=tU(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BK{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=tU(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:i}=r,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,i];if(o||s){const e=Lm().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=WK&&e===VK||(VK=e,WK=document.createElement("canvas").getContext("2d",{willReadFrequently:VK})),WK.canvas.width=u,WK.canvas.height=l,WK.drawImage(a,0,0,u,l),a=WK.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=CV.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=Lm().getBool("WEBGL_PACK")?new BK(h):new PK(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let WK,VK=Lm().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const UK={kernelName:Xy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=dk(c),g=nk(a.shape,i.shape,u,h,l,d,!1,m);let v;const y=[],b=null!=s,x=null!=o,w="leakyrelu"===p,k=()=>{const e=[a,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=LH({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(b&&e.push(t(s,c)),x&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Hb(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Lm().getBool("WEBGL_EXP_CONV")){const e=p?AH(p,!0):null,t=new wq(g,b,e,x,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],a=k();v=n.runWebGLProgram(t,a,"float32",r)}else if(Lm().getBool("WEBGL_CONV_IM2COL"))v=Sq({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?AH(p,!1):null,t=new bq(g,b,e,x,w),r=k();v=n.runWebGLProgram(t,r,"float32")}else v=Cq({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=LH({inputs:{x:v},backend:n,attrs:{shape:g.outShape}});return y.push(v),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK={kernelName:Yy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),rm(ck(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=nk(a.shape,i.shape,u,m,l,h,!0),v=Lm().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?AH(d,v):null,b=[a,i],x=null!=s,w=null!=o,k="leakyrelu"===d;if(x&&b.push(s),w&&b.push(o),k){const e=n.makeTensorInfo([],"float32",Hb(p,"float32"));b.push(e),f.push(e)}let I;I=v?new eK(g,x,y,w,k):new Zq(g,x,y,w,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,b,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class HK{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=yU(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK={kernelName:Zg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=a.shape,s=i[i.length-1],o=sm(r.shape),[u,l,c,h]=DN(r,a),d=LH({inputs:{x:a},backend:n,attrs:{shape:[l,s]}}),p=LH({inputs:{x:r},backend:n,attrs:{shape:[sm(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),i=tG(e,t,r.dtype,l,s,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,i.values)}const f=new HK(s,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=LH({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qK{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=yU(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function KK(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r,u=pm(s,a.shape)[0];if(Lm().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];rm(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=tE(a,i,u,o),c=sm(i.shape),h=[],d=LH({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=LH({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=nG(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new qK(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const v=LH({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const XK={kernelName:Jg,backendName:"webgl",kernelFunc:KK},YK=RH({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:rG,dtype:"bool"}),QK={kernelName:ev,backendName:"webgl",kernelFunc:YK},JK=RH({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:aG}),ZK={kernelName:tv,backendName:"webgl",kernelFunc:JK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eX={kernelName:rv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:r}=t;return NK(r,!0,n)}},tX=EH({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),nX={kernelName:iv,backendName:"webgl",kernelFunc:tX},rX=EH({opSnippet:"return float(isinf(x));",dtype:"bool"}),aX={kernelName:sv,backendName:"webgl",kernelFunc:rX},iX=EH({opSnippet:"return float(isnan(x));",dtype:"bool"}),sX={kernelName:ov,backendName:"webgl",kernelFunc:iX},oX=RH({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:iG,dtype:"bool"}),uX={kernelName:lv,backendName:"webgl",kernelFunc:oX},lX=RH({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:sG,dtype:"bool"}),cX={kernelName:cv,backendName:"webgl",kernelFunc:lX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hX={kernelName:hv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=oG(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},dX=EH({opSnippet:TH+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:uG}),pX={kernelName:dv,backendName:"webgl",kernelFunc:dX},fX=EH({opSnippet:TH+"\n  return log(1.0 + x);\n"}),mX={kernelName:pv,backendName:"webgl",kernelFunc:fX},gX=RH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),vX={kernelName:fv,backendName:"webgl",kernelFunc:gX},yX=EH({opSnippet:"return float(!(x >= 1.0));"}),bX={kernelName:mv,backendName:"webgl",kernelFunc:yX},xX=RH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),wX={kernelName:gv,backendName:"webgl",kernelFunc:xX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kX{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IX{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX={kernelName:vv,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r,l=Lm().getBool("WEBGL_PACK_NORMALIZATION")?new IX(a.shape,i,s,o,u):new kX(a.shape,i,s,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SX{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NX={kernelName:yv,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new SX(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,i,s],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TX(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=a.shape.length,u=pm(i,a.shape);let l=u;const c=dI(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=LG(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype);n.texData.get(p.dataId).values=r}else p=GH(a,c,n);l=fI(l.length,o)}hI("max",l,o);const[f,m]=lI(p.shape,l);let g,v=f;if(s&&(v=cI(f,u)),d){const e=n.texData.get(p.dataId).values,t=lG(e,sm(m),v,a.dtype);g=n.makeTensorInfo(v,a.dtype);n.texData.get(g.dataId).values=t}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=sm(t),i=LH({inputs:{x:e},attrs:{shape:[sm(e.shape)/a,a]},backend:r}),s=WH(i,e.dtype,"max",r),o=LH({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(p,m,v,n);return h&&n.disposeIntermediateTensorInfo(p),g}const EX={kernelName:bv,backendName:"webgl",kernelFunc:TX},RX=RH({opSnippet:pH+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+mH+"\n  return result;\n",cpuKernelImpl:cG}),AX={kernelName:xv,backendName:"webgl",kernelFunc:RX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX={kernelName:wv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ZV(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;rm(ck(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=ek(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&om(l.inShape,l.outShape))return vH({inputs:{x:a},backend:n});const c=new Rj(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FX={kernelName:Iv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=tk(a.shape,i,s,[1,1,1],o,l,u),h=new Aj(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _X{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $X{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OX={kernelName:Cv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=tk(s.shape,o,u,[1,1,1],l,c),d=new Aj(h,"max",!0),p=n.runWebGLProgram(d,[s],s.dtype),f=new $X(h),m=n.runWebGLProgram(f,[a,p],s.dtype);return n.disposeIntermediateTensorInfo(p),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MX={kernelName:kv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;ZV([i,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=ek(o.shape,u,l,1,c,h),p=new Rj(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new _X(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const LX={kernelName:Sv,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;rm(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];rm(ck(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const c=ek(r.shape,a,i,l,s),[h,d]=function(e,t,n,r){let a=new Rj(n,"max",!1);const i=r.runWebGLProgram(a,[e],"float32");return a=new Rj(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const PX={kernelName:Nv,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:i}=t,s=n,o=r.shape.length,u=pm(i,r.shape);let l=u;const c=dI(l,o),h=null!=c,d=s.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=s.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=LG(e,r.shape,r.dtype,c,t);f=s.makeTensorInfo(t,r.dtype);s.texData.get(f.dataId).values=n}else f=GH(r,c,s);p.push(f),l=fI(l.length,o)}hI("sum",l,o);const[m,g]=lI(f.shape,l);let v=m;a&&(v=cI(m,u));const y=function(e,t,n,r){const a=sm(t),i=LH({inputs:{x:e},attrs:{shape:[sm(e.shape)/a,a]},backend:r}),s=WH(i,"float32","mean",r),o=LH({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(f,g,v,s);for(const e of p)s.disposeIntermediateTensorInfo(e);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX={kernelName:Tv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=pm(i,a.shape);let l=u;const c=dI(l,o);let h=a;null!=c&&(h=qH({inputs:{x:a},backend:n,attrs:{perm:c}}),l=fI(l.length,a.shape.length)),hI("min",l,o);const[d,p]=lI(h.shape,l),f=LH({inputs:{x:h},backend:n,attrs:{shape:[-1,sm(p)]}}),m=WH(f,f.dtype,"min",n);let g;if(s){g=LH({inputs:{x:m},backend:n,attrs:{shape:cI(d,u)}})}else g=LH({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},zX=RH({opSnippet:pH+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+mH+"\n  return result;\n",cpuKernelImpl:hG}),WX={kernelName:Ev,backendName:"webgl",kernelFunc:zX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VX{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=yU(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UX{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=yU(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=zG("rc",r),u=zG("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX={kernelName:Rv,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:i}=n,s=Lm().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new UX(r.shape,a,i):new VX(r.shape,a,i);return t.runWebGLProgram(s,[r],r.dtype)}},HX=RH({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+mH+"\n  return result;\n"}),jX={kernelName:Av,backendName:"webgl",kernelFunc:HX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qX{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX=RH({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),XX={kernelName:Lg,backendName:"webgl",kernelFunc:KX},YX="return a - b;",QX=RH({opSnippet:YX,packedOpSnippet:YX,supportsComplex:!0,cpuKernelImpl:$G}),JX={kernelName:Oy,backendName:"webgl",kernelFunc:QX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZX(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=pm([i],a.shape),o=TX({inputs:{x:a},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),u=cI(o.shape,s),l=LH({inputs:{x:o},backend:n,attrs:{shape:u}}),c=QX({inputs:{a:a,b:l},backend:n}),h=yK({inputs:{x:c},backend:n}),d=HH({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:!1}}),p=LH({inputs:{x:d},backend:n,attrs:{shape:u}}),f=KX({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const eY={kernelName:ky,backendName:"webgl",kernelFunc:ZX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tY={kernelName:Dv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r,u=o?a:ZX({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new qX(l,c,i),d=[[s]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},nY=KG+"\n  return -x;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rY={kernelName:_v,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=pG(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Lm().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new oH(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new qG(r.shape,nY),n.runWebGLProgram(a,[r],r.dtype)}},aY=GS;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iY={kernelName:Ov,backendName:"webgl",kernelFunc:function(e){Qy("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=aY(l,c,s,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},sY=HS;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY={kernelName:Mv,backendName:"webgl",kernelFunc:function(e){Qy("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=sY(c,h,s,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},uY=jS;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY={kernelName:Lv,backendName:"webgl",kernelFunc:function(e){Qy("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=s,p=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=uY(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cY{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY={kernelName:Bv,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=r,l=sm(a.shape),c=new cY(l,s,o,u),h=LH({inputs:{x:a},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=LH({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dY(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Jj({inputs:{input:r},backend:n}),t=dY({inputs:{x:e},backend:n}),a=fq({inputs:{input:r},backend:n}),i=dY({inputs:{x:a},backend:n}),s=bH({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return RK({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const pY={kernelName:Hy,backendName:"webgl",kernelFunc:dY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fY={kernelName:Pv,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Jj({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=fq({inputs:{input:a},backend:r}),s=dY({inputs:{x:i},backend:r}),o=bH({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return RK({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mY={kernelName:zv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return xK({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{am(i,e.shape,"All tensors passed to stack must have matching shapes"),rm(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=xK({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),l=vq({inputs:u,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gY{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=yU(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vY{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=yU(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=zG("rc",r),u=zG("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;if(0===sm(a.shape)){const e=i.map(((e,t)=>e[0]+a.shape[t]+e[1]));return RK({backend:n,attrs:{shape:e,value:s,dtype:a.dtype}})}const o=Lm().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vY(a.shape,i,s):new gY(a.shape,i,s),u=[[s]];return n.runWebGLProgram(o,[a],a.dtype,u)},bY={kernelName:Wv,backendName:"webgl",kernelFunc:yY},xY=RH({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+mH+"\n  return result;\n"}),wY={kernelName:Vv,backendName:"webgl",kernelFunc:xY};const kY={kernelName:Gv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=[],l=pm(i,a.shape);let c=l;const h=dI(c,o);let d,p=a;if(null!=h&&(p=qH({inputs:{x:a},backend:n,attrs:{perm:h}}),c=fI(c.length,o),u.push(p)),hI("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=mG(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=lI(p.shape,c),r=sm(t),i=LH({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),s=WH(i,kx(a.dtype),"prod",n);d=LH({inputs:{x:s},backend:n,attrs:{shape:e}}),u.push(i),u.push(s)}if(s){u.push(d);const e=cI(d.shape,l);d=LH({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY={kernelName:Hv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=r,u=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(s.dataId),[d,p,f]=gG(u,l,c,i.shape,i.dtype,h,s.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CY={kernelName:jv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:i}=t,s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=vG(s,r.shape,r.dtype,o,a.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SY={kernelName:qv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(a.dataId),c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=yG(l,a.shape,c,i.shape,i.dtype,h,s.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}},NY=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:i,dtype:s}=n,o=bG(r,a,i,s);return t.makeTensorInfo([o.length],s,o)},TY={kernelName:Kv,backendName:"webgl",kernelFunc:NY},EY=EH({opSnippet:"return 1.0 / x;"}),RY={kernelName:Yv,backendName:"webgl",kernelFunc:EY},AY=EH({opSnippet:KG+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),DY={kernelName:Qv,backendName:"webgl",kernelFunc:AY},FY=EH({opSnippet:KG+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_Y={kernelName:ry,backendName:"webgl",kernelFunc:FY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $Y{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OY{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY={kernelName:ty,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,l]=o,c=Lm().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OY(a.shape,u,l,i,s):new $Y(a.shape,u,l,i,s);return n.runWebGLProgram(c,[a],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LY{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY={kernelName:ny,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new LY(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BY{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zY{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WY={kernelName:Zv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,l]=o,c=Lm().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zY(a.shape,u,l,i,s):new BY(a.shape,u,l,i,s);return n.runWebGLProgram(c,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VY{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY={kernelName:ey,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new VY(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GY{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=yU(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HY{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=zG("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=yU(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY={kernelName:ay,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,s=a.shape.length,o=pm(i,a.shape);if(0===s)return vH({inputs:{x:a},backend:n});const u=Lm().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HY(a.shape,o):new GY(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qY{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY={kernelName:qy,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=new qY(r.shape,i),[l,c]=uT(s,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},XY=EH({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),YY={kernelName:iy,backendName:"webgl",kernelFunc:XY},QY=EH({opSnippet:"return inversesqrt(x);",cpuKernelImpl:xG}),JY={kernelName:sy,backendName:"webgl",kernelFunc:QY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZY{constructor(e,t,n,r,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=yU(a.length),l=yU(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eQ{constructor(e,t,n,r,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=yU(a.length),l=yU(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",v=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${v};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tQ={kernelName:oy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=yS(0,a,s),d=[h/l,l];if(0===h)return n.makeTensorInfo(s,a.dtype);const p=LH({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=LH({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Lm().getBool("WEBGL_PACK")?new eQ(u,o,p.shape.length,f.shape.length,c,d):new ZY(u,o,p.shape.length,f.shape.length,c,d);const v=n.runWebGLProgram(g,[f,p,m],f.dtype),y=LH({inputs:{x:v},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(m),y}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nQ{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Lm().getNumber("WEBGL_VERSION")?"while (left < right) {":a,s="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${s} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rQ={kernelName:ly,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:s}=r,o=new nQ(a.shape[0],a.shape[1],i.shape[1],s),u=[[a.shape[1]]];return n.runWebGLProgram(o,[a,i],"int32",u)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aQ{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),a=s.join()}const i=yU(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iQ={kernelName:cy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,s=new aQ(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(s,[r,a,i],wx(a.dtype,i.dtype))}},sQ=EH({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${mT};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),oQ={kernelName:hy,backendName:"webgl",kernelFunc:sQ},uQ=EH({opSnippet:TH+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:kG}),lQ={kernelName:gy,backendName:"webgl",kernelFunc:uQ},cQ=EH({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),hQ={kernelName:my,backendName:"webgl",kernelFunc:cQ},dQ=EH({opSnippet:TH+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${mH}\n  return result;\n`}),pQ={kernelName:py,backendName:"webgl",kernelFunc:dQ},fQ=EH({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),mQ={kernelName:fy,backendName:"webgl",kernelFunc:fQ},gQ=EH({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),vQ={kernelName:vy,backendName:"webgl",kernelFunc:gQ},yQ={kernelName:xy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;rm(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=yY({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=lT(c.shape,i,o,!1),d=cT(h.length,i.length,!1),p=hT(c.shape,i,o,!1),f=LH({inputs:{x:c},backend:n,attrs:{shape:h}}),m=qH({inputs:{x:f},backend:n,attrs:{perm:d}}),g=LH({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bQ={kernelName:Iy,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(i.dataId),c=n.readSync(s.dataId)[0],[h,d,p,f,m]=SG(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xQ={kernelName:Cy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=NG(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wQ={kernelName:Sy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=TG(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ={kernelName:Ny,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=TG(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ={kernelName:Ty,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=yS(0,a,o);if("string"===i.dtype){const e=n.bufferSync(a),t=n.bufferSync(i),r=Xb(n.readSync(s.dataId)[0]),p=wG(e,t,o,d,c,l,u,h,r,false);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new ZY(l,u,a.shape.length,i.shape.length,h,[d,1],false),f=n.runWebGLProgram(p,[i,a,s],i.dtype),m=LH({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CQ={kernelName:wy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=pm(s,a.shape)[0],u=zT(a,i,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=Gj({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},SQ="return sqrt(x);",NQ=EH({opSnippet:SQ,packedOpSnippet:SQ,cpuKernelImpl:EG}),TQ={kernelName:yy,backendName:"webgl",kernelFunc:NQ},EQ={kernelName:Ry,backendName:"webgl",kernelFunc:EH({opSnippet:"return x * x;"})},RQ="return (a - b) * (a - b);",AQ=RH({opSnippet:RQ,packedOpSnippet:RQ}),DQ={kernelName:Ey,backendName:"webgl",kernelFunc:AQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FQ={kernelName:Ay,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const i=rE(n.readSync(a.dataId)),s=RG(i,"string",r);return n.makeTensorInfo(a.shape,"string",s)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Q={kernelName:jy,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=KG+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new qG(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Q{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=yU(n.length),i=yU(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OQ={kernelName:Dy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:v,begin:y,end:b,strides:x}=qN(a.shape,i,s,o,u,l,c,h,d);let w;if(m)w=LH({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||v){rm(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=ON(y,b,x),t=Gj({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=LH({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Tw(a.shape,a.dtype,e),r=AG(p,t,x,y);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new $Q(y,x,p);w=n.runWebGLProgram(e,[a],a.dtype)}}const k=LH({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MQ={kernelName:Fy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=DG(d,p,a,i,s,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ={kernelName:_y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.readSync(i.dataId),u=n.readSync(s.dataId)[0],[l,c,h]=FG(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PQ={kernelName:$y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(i.dataId),o=_G(s,a);return n.makeTensorInfo(i.shape,"int32",o)}},BQ=EH({opSnippet:"return tan(x);"}),zQ={kernelName:My,backendName:"webgl",kernelFunc:BQ},WQ=EH({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),VQ={kernelName:Ly,backendName:"webgl",kernelFunc:WQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UQ={kernelName:uy,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:i,updates:s}=t,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=yS(0,i,a.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(a.shape,i.dtype);const p=LH({inputs:{x:i},backend:n,attrs:{shape:[u,o]}}),f=LH({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=LH({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new ZY(u,o,p.shape.length,f.shape.length,c,d,!1,!0),v=n.runWebGLProgram(g,[f,p,m],m.dtype),y=LH({inputs:{x:v},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),y}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GQ{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=yU(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function HQ(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Xb(e))):e,r=Tw(a.shape,a.dtype,t),s=OG(r,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new GQ(a.shape,i);return n.runWebGLProgram(s,[a],a.dtype)}const jQ={kernelName:Py,backendName:"webgl",kernelFunc:HQ};class qQ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class KQ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function YQ(e){let t=1;for(;t<e;)t*=2;return t}const QQ={kernelName:By,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r,o=Lm().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Lm().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||i>u){const e=n.readSync(a.dataId),[t,r]=MG(e,l,a.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,RK({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(a):a,f=sm(l)/c,m=LH({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&XQ(n,p);const g=YQ(i),v=YQ(c);let y=null;const b=()=>null===y?[m,m]:[m,y],x=(e,t,r)=>{const a=b(),i=new qQ(r),s=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(i,a,"int32",s),XQ(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,v])}for(let e=v;e>g;e/=2){const t=b(),r=new KQ([f,e/2]),a=[[c],[null===y?1:0],[g]],i=y;y=n.runWebGLProgram(r,t,"int32",a),XQ(n,i);const s=g/2,o=2*s;for(let e=s;e>=1;e/=2)x(o,e,y.shape)}let w=y;y=Gj({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),XQ(n,w);let k=KK({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});XQ(n,m);const I=l.slice(0,-1);I.push(i),w=y,y=LH({inputs:{x:y},attrs:{shape:I},backend:n}),XQ(n,w);const C=k;return k=LH({inputs:{x:k},attrs:{shape:I},backend:n}),XQ(n,C),[k,y]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JQ{constructor(e,t,n,r,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const s="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZQ={kernelName:zy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=new JQ(h,d,s,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ={kernelName:Vy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;ZV(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(i.dataId),{outputValues:o,outputShape:u,indices:l}=PG(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ={kernelName:Uy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a,o=s.shape.length,u=a.shape[i],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(l[c++]=s.shape[e]);const h=[],d=new Array(o).fill(0),p=s.shape.slice();p[i]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[i]=e;const t=Gj({inputs:{x:s},backend:n,attrs:{begin:d,size:p}}),r=LH({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nJ{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ={kernelName:Gy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r,o=a.shape.length,u=[];let l=0;const c=dI([l],o);let h=a;null!=c&&(h=qH({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=fI(1,o)[0]);const d=eE(h.shape,l,s),p=sm([h.shape[l]]),f=LH({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=kx(a.dtype),g=(e,t,r,a,i)=>{const s=e.shape[0],o=e.shape[1],l=ZT(o,i),c=new nJ({windowSize:l,inSize:o,batchSize:s,numSegments:i},t),h=n.compileAndRun(c,[e,r],a);if(u.push(h),h.shape[1]===i)return h;const d=NY({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=HQ({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});u.push(d),u.push(p);return g(h,t,p,a,i)},v=LH({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:d}});let y=v;if(null!=c){u.push(v);const e=pI(c);y=qH({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},aJ=[QH,ZH,tj,rj,sj,lj,cj,hj,vj,yj,xj,kj,Cj,Nj,Ej,Dj,Fj,Oj,Mj,Lj,zj,jj,qj,Kj,Xj,tq,aq,oq,xH,cq,yq,Nq,Dq,_q,$q,Oq,Mq,Pq,zq,Vq,Kq,Xq,Yq,Jq,tK,aK,iK,oK,lK,cK,dK,pK,mK,vK,bK,wK,CK,TK,AK,FK,OK,LK,zK,UK,GK,jK,XK,QK,ZK,yH,eX,mq,nX,aX,sX,IH,uX,cX,hX,pX,mX,vX,bX,wX,CX,NX,EX,AX,DX,FX,OX,MX,LX,PX,BX,WX,GX,jX,tY,MH,rY,iY,oY,lY,Qj,hY,fY,mY,bY,wY,NH,kY,IY,CY,SY,TY,Zj,XX,RY,DY,_Y,PH,MY,PY,WY,UY,jY,KY,YY,JY,tQ,rQ,iQ,oQ,lQ,hQ,pQ,mQ,Hj,eY,vQ,yQ,bQ,xQ,wQ,kQ,IQ,CQ,TQ,EQ,DQ,FQ,_Q,OQ,MQ,LQ,PQ,JX,jH,zQ,VQ,UQ,jQ,QQ,ZQ,KH,eJ,tJ,rJ,pY];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of aJ)rb(e);/** @license See the LICENSE file. */const iJ=new Map,sJ=new URL("https://translate-service.scratch.mit.edu/translate"),oJ=e=>a(void 0,void 0,void 0,(function*(){if(iJ.has(e))return iJ.get(e);const n=(e=>{for(const t in e)sJ.searchParams.set(t,e[t]);return sJ.href})({language:"en",text:encodeURIComponent(e)});try{const r=(yield(yield t.fetchWithTimeout(n,{timeout:30})).json()).result;return iJ.set(e,r),r}catch(e){return console.warn(`error fetching translate result! ${e}`),""}})),{legacyBlock:uJ}=s.for(),{toxicitylabels:{items:lJ},voices:{items:cJ}}=i.menus,hJ={name:"Text Classification"};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dJ=(()=>{var e;let n,s,o,h,d,p,f,m,g,v,y=[];return e=class extends(t.extension(hJ,"legacySupport")){constructor(){super(...arguments),this.labels=void function(e,t,n){for(var r=arguments.length>2,a=0;a<t.length;a++)n=r?t[a].call(e,n):t[a].call(e)}(this,y),this.loudnessTimer={startTime:(new Date).getTime(),start(){this.startTime=(new Date).getTime()},elapsed(){return(new Date).getTime()-this.startTime}},this.soundPlayers=new Map,this.sentiment=new H,this.prediction={label:0,class:"",score:0},this.modelData={textData:new Array,classifierData:new Array}}init(e){return a(this,void 0,void 0,(function*(){const{soundPlayers:n}=this;e.runtime.on(t.RuntimeEvent.ProjectStopAll,(function(){n.forEach((e=>e.stop()))})),e.runtime.on(t.RuntimeEvent.TargetWasCreated,l);try{this.toxicityModel=yield function(e,t){return Rf(this,void 0,void 0,(function(){var n;return Af(this,(function(r){switch(r.label){case 0:return[4,(n=new zf(e,t)).load()];case 1:return r.sent(),[2,n]}}))}))}(.1,lJ.map((({value:e})=>e))),console.log("loaded Toxicity model")}catch(e){console.log("Failed to load toxicity model",e)}}))}getLegacyInfo(){return i}ifTextMatchesClass(e,t){return a(this,void 0,void 0,(function*(){const n=yield this.getEmbeddings(e);return n&&n===t}))}getModelPrediction(e){return a(this,void 0,void 0,(function*(){return yield this.getEmbeddings(e)}))}getModelConfidence(e){return a(this,void 0,void 0,(function*(){return yield this.getConfidence(e)}))}confidenceTrue(e,t){return this.classifyText(e,t,!0)}sentimentScore(e){return this.currentSentiment=this.sentiment.analyze(e),this.currentSentiment.comparative}speakText(e,{target:n}){return a(this,void 0,void 0,(function*(){const{audioEngine:r}=this.runtime,{currentVoice:i}=u(n),{gender:s,playbackRate:o}=O[i],l=(e=>{for(const t in e)c.searchParams.set(t,e[t]);return c.href})({gender:s,locale:"en-US",text:encodeURIComponent(JSON.stringify(e).substring(0,128))});yield new Promise((e=>a(this,void 0,void 0,(function*(){try{const n=yield t.fetchWithTimeout(l,{timeout:40});if(!n.ok)return console.warn(n.statusText);const a={data:n.body},i=yield r.decodeSoundPlayer(a);this.soundPlayers.set(i.id,i),i.setPlaybackRate(o);const s=r.createEffectChain();s.set("volume",250),i.connect(s),i.play(),i.on("stop",(()=>{this.soundPlayers.delete(i.id),e()}))}catch(e){console.warn(e)}}))))}))}askSpeechRecognition(e,t){return a(this,void 0,void 0,(function*(){yield this.speakText(e,t),this.recognizeSpeech()}))}getRecognizedSpeech(){return this.lastRecognizedSpeech}setVoice(e,{target:t}){const n=u(t);n.currentVoice=null!=e?e:n.currentVoice}onHeardSound(e){return this.getLoudness()>e}getLoudness(){const{audioEngine:e,currentStepTime:t}=this.runtime;return e&&t?(this.loudnessTimer.elapsed()>this.runtime.currentStepTime&&(this.currentLoudness=e.getLoudness(),this.loudnessTimer.start()),this.currentLoudness):-1}recognizeSpeech(){return a(this,void 0,void 0,(function*(){const e=new webkitSpeechRecognition,t=yield new Promise((t=>{e.start(),e.onresult=function(e){0===e.results.length&&t(null),t(e.results[0][0].transcript)}}));return this.lastRecognizedSpeech=null!=t?t:this.lastRecognizedSpeech,t}))}classifyText(e,t,n){return a(this,void 0,void 0,(function*(){const{toxicityModel:r}=this;if(this.toxicityModel&&e&&t)try{const a=(yield r.classify([e])).filter((e=>{var n;return e.label===t&&(null===(n=e.results)||void 0===n?void 0:n.length)>0}));return 1===(null==a?void 0:a.length)?Math.round(100*a[0].results[0].probabilities[n?1:0]):0}catch(e){console.log("Failed to classify text",e)}}))}getConfidence(e){return a(this,void 0,void 0,(function*(){const t=yield oJ(e);return yield this.predictScore(t),this.prediction.score}))}predictScore(e){return a(this,void 0,void 0,(function*(){const{prediction:t,currentClassificationInput:n,labels:r}=this;if(n===e)return this.logPrediction();this.currentClassificationInput=e;const a=yield qf(),i=yield a.embed(e),s=yield this.customLanguageModel.predict(i),o=Array.isArray(s)?s[0]:s,u=yield o.data();t.label=yield o.as1D().argMax().dataSync()[0],t.class=r[t.label],t.score=u[t.label],this.logPrediction()}))}logPrediction(){const{label:e,class:t,score:n}=this.prediction;console.log("Classification done"),console.log("Predicted Label",e),console.log("Predicted Class",t),console.log("Predicted Score",n)}buildCustomDeepModel(){return a(this,void 0,void 0,(function*(){const{labels:e,modelData:n}=this,{length:r}=e;if(r<2)return"No classes inputted";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var a;this.runtime.emit(t.RuntimeEvent.Say,this.runtime.executableTargets[1],"think","wait .. loading model"),this.customLanguageModel=new S_(a);const i={sentences:new Array,labels:new Array};for(let t of e)for(let e of n[t])i.sentences.push(e),i.labels.push(t);const s=dC(mS(i.labels.map((t=>e.findIndex((e=>e===t)))),"int32"),r);let o;try{const e=yield qf();o=yield e.embed(i.sentences)}catch(e){console.error("Fit Error:",e)}this.customLanguageModel.add(new P$({inputShape:[512],activation:"sigmoid",kernelInitializer:"ones",units:r})),this.customLanguageModel.compile({loss:"meanSquaredError",optimizer:YN.adam(.06)});const u=yield this.customLanguageModel.fit(o,s,{epochs:100,batchSize:4,shuffle:!0,validationSplit:.15,callbacks:[GO.earlyStopping({monitor:"val_loss",patience:50})]});console.log("Final accuracy",u),this.runtime.emit(t.RuntimeEvent.Say,this.runtime.executableTargets[1],"say","The model is ready")}))}getEmbeddings(e){return a(this,void 0,void 0,(function*(){const t=yield oJ(e);if(0!==this.labels.length&&this.labels[0])return yield this.predictScore(t),this.prediction.class}))}uiEventsTODO(){}},n=[uJ.ifTextMatchesClass((e=>({argumentMethods:{1:{getItems:()=>e.labels}}})))],s=[uJ.getModelPrediction()],o=[uJ.getModelConfidence()],h=[uJ.confidenceTrue({argumentMethods:{1:{handler:e=>{var t,n;return null!==(n=null===(t=lJ.find((({value:t,text:n})=>t===e||n===e)))||void 0===t?void 0:t.value)&&void 0!==n?n:lJ[0].value}}}})],d=[uJ.sentimentScore()],p=[uJ.speakText()],f=[uJ.askSpeechRecognition()],m=[uJ.getRecognizedSpeech()],g=[uJ.setVoice({argumentMethods:{0:{handler:e=>{var n;const r=parseInt(JSON.stringify(e),10);if(!isNaN(r)){const e=t.wrapClamp(r-1,0,cJ.length-1);return cJ[e].value}return null===(n=cJ.find((({value:t,text:n})=>t===e||n===e)))||void 0===n?void 0:n.value}}}})],v=[uJ.onHeardSound()],r(e,null,n,{kind:"method",name:"ifTextMatchesClass",static:!1,private:!1,access:{has:e=>"ifTextMatchesClass"in e,get:e=>e.ifTextMatchesClass}},null,y),r(e,null,s,{kind:"method",name:"getModelPrediction",static:!1,private:!1,access:{has:e=>"getModelPrediction"in e,get:e=>e.getModelPrediction}},null,y),r(e,null,o,{kind:"method",name:"getModelConfidence",static:!1,private:!1,access:{has:e=>"getModelConfidence"in e,get:e=>e.getModelConfidence}},null,y),r(e,null,h,{kind:"method",name:"confidenceTrue",static:!1,private:!1,access:{has:e=>"confidenceTrue"in e,get:e=>e.confidenceTrue}},null,y),r(e,null,d,{kind:"method",name:"sentimentScore",static:!1,private:!1,access:{has:e=>"sentimentScore"in e,get:e=>e.sentimentScore}},null,y),r(e,null,p,{kind:"method",name:"speakText",static:!1,private:!1,access:{has:e=>"speakText"in e,get:e=>e.speakText}},null,y),r(e,null,f,{kind:"method",name:"askSpeechRecognition",static:!1,private:!1,access:{has:e=>"askSpeechRecognition"in e,get:e=>e.askSpeechRecognition}},null,y),r(e,null,m,{kind:"method",name:"getRecognizedSpeech",static:!1,private:!1,access:{has:e=>"getRecognizedSpeech"in e,get:e=>e.getRecognizedSpeech}},null,y),r(e,null,g,{kind:"method",name:"setVoice",static:!1,private:!1,access:{has:e=>"setVoice"in e,get:e=>e.setVoice}},null,y),r(e,null,v,{kind:"method",name:"onHeardSound",static:!1,private:!1,access:{has:e=>"onHeardSound"in e,get:e=>e.onHeardSound}},null,y),e})();return e.Extension=dJ,Object.defineProperty(e,"__esModule",{value:!0}),e}({},ExtensionFramework);//# sourceMappingURL=textClassification.js.map
