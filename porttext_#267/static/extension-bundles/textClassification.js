var textClassification=function(e,t){"use strict";function n(e,t){return t.forEach((function(t){t&&"string"!=typeof t&&!Array.isArray(t)&&Object.keys(t).forEach((function(n){if("default"!==n&&!(n in e)){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}}))})),Object.freeze(e)}function r(){}function a(e){return e()}function i(){return Object.create(null)}function s(e){e.forEach(a)}function o(e){return"function"==typeof e}function u(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function l(e,t,n,r){return e[1]&&r?function(e,t){for(const n in t)e[n]=t[n];return e}(n.ctx.slice(),e[1](r(t))):n.ctx}function c(e,t){e.appendChild(t)}function h(e,t,n){const r=function(e){if(!e)return document;const t=e.getRootNode?e.getRootNode():e.ownerDocument;if(t&&t.host)return t;return e.ownerDocument}(e);if(!r.getElementById(t)){const e=m("style");e.id=t,e.textContent=n,function(e,t){c(e.head||e,t),t.sheet}(r,e)}}function d(e,t,n){e.insertBefore(t,n||null)}function p(e){e.parentNode&&e.parentNode.removeChild(e)}function f(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function m(e){return document.createElement(e)}function g(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function v(e){return document.createTextNode(e)}function y(){return v(" ")}function b(e,t,n,r){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n,r)}function x(e,t,n){null==n?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function w(e,t){t=""+t,e.data!==t&&(e.data=t)}function k(e,t){e.value=null==t?"":t}function I(e,t,n,r){null==n?e.style.removeProperty(t):e.style.setProperty(t,n,r?"important":"")}let C;function S(e){C=e}function N(e,t){const n=e.$$.callbacks[t.type];n&&n.slice().forEach((e=>e.call(this,t)))}const T=[],E=[];let R=[];const A=[],D=Promise.resolve();let $=!1;function F(e){R.push(e)}const _=new Set;let O=0;function M(){if(0!==O)return;const e=C;do{try{for(;O<T.length;){const e=T[O];O++,S(e),L(e.$$)}}catch(e){throw T.length=0,O=0,e}for(S(null),T.length=0,O=0;E.length;)E.pop()();for(let e=0;e<R.length;e+=1){const t=R[e];_.has(t)||(_.add(t),t())}R.length=0}while(T.length);for(;A.length;)A.pop()();$=!1,_.clear(),S(e)}function L(e){if(null!==e.fragment){e.update(),s(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(F)}}const P=new Set;let B;function z(){B={r:0,c:[],p:B}}function W(){B.r||s(B.c),B=B.p}function V(e,t){e&&e.i&&(P.delete(e),e.i(t))}function U(e,t,n,r){if(e&&e.o){if(P.has(e))return;P.add(e),B.c.push((()=>{P.delete(e),r&&(n&&e.d(1),r())})),e.o(t)}else r&&r()}function G(e){return void 0!==e?.length?e:Array.from(e)}function H(e){e&&e.c()}function j(e,t,n){const{fragment:r,after_update:i}=e.$$;r&&r.m(t,n),F((()=>{const t=e.$$.on_mount.map(a).filter(o);e.$$.on_destroy?e.$$.on_destroy.push(...t):s(t),e.$$.on_mount=[]})),i.forEach(F)}function q(e,t){const n=e.$$;null!==n.fragment&&(!function(e){const t=[],n=[];R.forEach((r=>-1===e.indexOf(r)?t.push(r):n.push(r))),n.forEach((e=>e())),R=t}(n.after_update),s(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function K(e,t){-1===e.$$.dirty[0]&&(T.push(e),$||($=!0,D.then(M)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function X(e,t,n,a,o,u,l=null,c=[-1]){const h=C;S(e);const d=e.$$={fragment:null,ctx:[],props:u,update:r,not_equal:o,bound:i(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(t.context||(h?h.$$.context:[])),callbacks:i(),dirty:c,skip_bound:!1,root:t.target||h.$$.root};l&&l(d.root);let f=!1;if(d.ctx=n?n(e,t.props||{},((t,n,...r)=>{const a=r.length?r[0]:n;return d.ctx&&o(d.ctx[t],d.ctx[t]=a)&&(!d.skip_bound&&d.bound[t]&&d.bound[t](a),f&&K(e,t)),n})):[],d.update(),f=!0,s(d.before_update),d.fragment=!!a&&a(d.ctx),t.target){if(t.hydrate){const e=function(e){return Array.from(e.childNodes)}(t.target);d.fragment&&d.fragment.l(e),e.forEach(p)}else d.fragment&&d.fragment.c();t.intro&&V(e.$$.fragment),j(e,t.target,t.anchor),M()}S(h)}class Y{$$=void 0;$$set=void 0;$destroy(){q(this,1),this.$destroy=r}$on(e,t){if(!o(t))return r;const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){var t;this.$$set&&(t=e,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}"undefined"!=typeof window&&(window.__svelte||(window.__svelte={v:new Set})).v.add("4");class Q{constructor(e){this.root=e}get(...e){return`var(--${this.root}-${e.join("-")})`}primary(...e){return this.get("primary",...e)}secondary(...e){return this.get("secondary",...e)}tertiary(...e){return this.get("tertiary",...e)}transparent(...e){return this.get("transparent",...e)}light(...e){return this.get("light",...e)}}const J=new Q("ui"),Z=new Q("text"),ee=new Q("motion"),te=new Q("red"),ne=new Q("sound"),re=new Q("control"),ae=new Q("data"),ie=new Q("pen"),se=new Q("error"),oe=new Q("extensions"),ue=new Q("extensions"),le={ui:{primary:J.primary(),secondary:J.secondary(),tertiary:J.tertiary(),modalOverlay:J.get("modal","overlay"),white:J.get("white"),whiteDim:J.get("white","dim"),whiteTransparent:J.get("white","transparent"),transparent:J.transparent(),blackTransparent:J.get("black","transparent")},text:{primary:Z.primary(),primaryTransparent:Z.transparent()},motion:{primary:ee.primary(),tertiary:ee.tertiary(),transparent:ee.get("transparent"),lightTansparent:ee.light("transparent")},red:{primary:te.primary(),tertiary:te.tertiary()},sound:{primary:ne.primary(),tertiary:ne.tertiary()},control:{primary:re.primary()},data:{primary:ae.primary()},pen:{primary:ie.primary(),transparent:ie.transparent()},error:{primary:se.primary(),light:se.light(),transparent:se.transparent()},extensions:{primary:oe.primary(),tertiary:oe.tertiary(),light:oe.light(),transparent:oe.transparent()},drop:{highlight:ue.get("highlight")}};function ce(e){h(e,"svelte-1blbdzs","button.svelte-1blbdzs:disabled{background:var(--drop-highlight) !important;border:var(--drop-highlight) !important}button.svelte-1blbdzs{border-width:1px;border-style:solid;font-weight:600;font-size:0.85rem;transition:background-color 0.25s, border-color 0.25s}")}function he(e){let t,n,r,a;const i=e[8].default,o=function(e,t,n,r){if(e){const a=l(e,t,n,r);return e[0](a)}}(i,e,e[7],null);return{c(){t=m("button"),o&&o.c(),t.disabled=e[0],x(t,"data-testid",e[1]),x(t,"class","svelte-1blbdzs"),I(t,"border-color",e[6]),I(t,"background-color",e[6]),I(t,"color",e[5]),I(t,"padding",`${e[2]} ${e[3]}`),I(t,"border-radius",e[4])},m(i,s){d(i,t,s),o&&o.m(t,null),n=!0,r||(a=[b(t,"click",e[9]),b(t,"mousedown",e[10]),b(t,"mouseup",e[11])],r=!0)},p(e,[r]){o&&o.p&&(!n||128&r)&&function(e,t,n,r,a,i){if(a){const s=l(t,n,r,i);e.p(s,a)}}(o,i,e,e[7],n?function(e,t,n,r){if(e[2]&&r){const a=e[2](r(n));if(void 0===t.dirty)return a;if("object"==typeof a){const e=[],n=Math.max(t.dirty.length,a.length);for(let r=0;r<n;r+=1)e[r]=t.dirty[r]|a[r];return e}return t.dirty|a}return t.dirty}(i,e[7],r,null):function(e){if(e.ctx.length>32){const t=[],n=e.ctx.length/32;for(let e=0;e<n;e++)t[e]=-1;return t}return-1}(e[7]),null),(!n||1&r)&&(t.disabled=e[0]),(!n||2&r)&&x(t,"data-testid",e[1]),12&r&&I(t,"padding",`${e[2]} ${e[3]}`),16&r&&I(t,"border-radius",e[4])},i(e){n||(V(o,e),n=!0)},o(e){U(o,e),n=!1},d(e){e&&p(t),o&&o.d(e),r=!1,s(a)}}}function de(e,t,n){let{$$slots:r={},$$scope:a}=t,{disabled:i=!1}=t,{dataTestID:s=null}=t,{paddingVertical:o="0.75rem"}=t,{paddingHorizontal:u="1rem"}=t,{borderRadius:l="0.25rem"}=t;const c=le.ui.white,h=le.motion.primary;return e.$$set=e=>{"disabled"in e&&n(0,i=e.disabled),"dataTestID"in e&&n(1,s=e.dataTestID),"paddingVertical"in e&&n(2,o=e.paddingVertical),"paddingHorizontal"in e&&n(3,u=e.paddingHorizontal),"borderRadius"in e&&n(4,l=e.borderRadius),"$$scope"in e&&n(7,a=e.$$scope)},[i,s,o,u,l,c,h,a,r,function(t){N.call(this,e,t)},function(t){N.call(this,e,t)},function(t){N.call(this,e,t)}]}class pe extends Y{constructor(e){super(),X(this,e,de,he,u,{disabled:0,dataTestID:1,paddingVertical:2,paddingHorizontal:3,borderRadius:4},ce)}}function fe(e){h(e,"svelte-1jtpb9s","div.svelte-1jtpb9s{position:relative}svg.svelte-1jtpb9s{position:absolute;cursor:pointer;transition:transform 0.3s}svg.svelte-1jtpb9s:hover{transform:scale(1.2)}line.svelte-1jtpb9s{stroke-linecap:round}")}function me(e){let t,n,a,i,s,o,u,l=-e[4]+"px",h=-e[4]+"px",f=`${e[0]}px`,v=`${e[0]}px`,y=`${e[0]}px`,w=`${e[0]}px`;return{c(){t=m("div"),n=g("svg"),a=g("circle"),i=g("line"),s=g("line"),x(a,"cx",e[5]),x(a,"cy",e[5]),x(a,"r",e[5]),x(i,"x1",e[6]),x(i,"y1",e[6]),x(i,"x2",e[7]),x(i,"y2",e[7]),x(i,"class","svelte-1jtpb9s"),I(i,"stroke",e[2]),I(i,"stroke-width",e[3]),x(s,"x1",e[7]),x(s,"y1",e[6]),x(s,"x2",e[6]),x(s,"y2",e[7]),x(s,"class","svelte-1jtpb9s"),I(s,"stroke",e[2]),I(s,"stroke-width",e[3]),x(n,"viewBox","0 0 "+e[4]+" "+e[4]),x(n,"class","svelte-1jtpb9s"),I(n,"top",l),I(n,"right",h),I(n,"width",f),I(n,"height",v),I(n,"fill",e[1]),x(t,"class","svelte-1jtpb9s"),I(t,"width",y),I(t,"height",w)},m(r,l){d(r,t,l),c(t,n),c(n,a),c(n,i),c(n,s),o||(u=b(n,"click",e[8]),o=!0)},p(e,[r]){4&r&&I(i,"stroke",e[2]),8&r&&I(i,"stroke-width",e[3]),4&r&&I(s,"stroke",e[2]),8&r&&I(s,"stroke-width",e[3]),1&r&&f!==(f=`${e[0]}px`)&&I(n,"width",f),1&r&&v!==(v=`${e[0]}px`)&&I(n,"height",v),2&r&&I(n,"fill",e[1]),1&r&&y!==(y=`${e[0]}px`)&&I(t,"width",y),1&r&&w!==(w=`${e[0]}px`)&&I(t,"height",w)},i:r,o:r,d(e){e&&p(t),o=!1,u()}}}function ge(e,t,n){let{size:r=12}=t,{fill:a="#f44"}=t,{stroke:i="#fff"}=t,{strokeWidth:s=1}=t;const o=r/2,u=o/2,l=o/4,c=3*o/4;return e.$$set=e=>{"size"in e&&n(0,r=e.size),"fill"in e&&n(1,a=e.fill),"stroke"in e&&n(2,i=e.stroke),"strokeWidth"in e&&n(3,s=e.strokeWidth)},[r,a,i,s,o,u,l,c,function(t){N.call(this,e,t)}]}class ve extends Y{constructor(e){super(),X(this,e,ge,me,u,{size:0,fill:1,stroke:2,strokeWidth:3},fe)}}function ye(e){h(e,"svelte-15dvcwd",".container.svelte-15dvcwd{padding:0.25rem 1rem;margin:0rem 0.25rem;margin-top:1rem;border-radius:0.25rem;position:relative}")}function be(e){let n,r,a;return r=new ve({props:{fill:t.color.motion.primary,size:16}}),r.$on("click",(function(){o(e[1])&&e[1].apply(this,arguments)})),{c(){n=m("div"),H(r.$$.fragment),I(n,"position","absolute"),I(n,"right","0px"),I(n,"top","0px")},m(e,t){d(e,n,t),j(r,n,null),a=!0},p(t,n){e=t},i(e){a||(V(r.$$.fragment,e),a=!0)},o(e){U(r.$$.fragment,e),a=!1},d(e){e&&p(n),q(r)}}}function xe(e){let n,r,a,i,s=e[1]&&be(e);return{c(){n=m("div"),r=v(e[0]),a=y(),s&&s.c(),x(n,"class","container svelte-15dvcwd"),I(n,"background-color",t.color.motion.lightTansparent)},m(e,t){d(e,n,t),c(n,r),c(n,a),s&&s.m(n,null),i=!0},p(e,[t]){(!i||1&t)&&w(r,e[0]),e[1]?s?(s.p(e,t),2&t&&V(s,1)):(s=be(e),s.c(),V(s,1),s.m(n,null)):s&&(z(),U(s,1,1,(()=>{s=null})),W())},i(e){i||(V(s),i=!0)},o(e){U(s),i=!1},d(e){e&&p(n),s&&s.d()}}}function we(e,t,n){let{text:r}=t,{xOut:a=null}=t;return e.$$set=e=>{"text"in e&&n(0,r=e.text),"xOut"in e&&n(1,a=e.xOut)},[r,a]}class ke extends Y{constructor(e){super(),X(this,e,we,xe,u,{text:0,xOut:1},ye)}}function Ie(e){h(e,"svelte-1cwbdmm",'.row.svelte-1cwbdmm{margin:0.5rem 0.5rem;border-radius:0.25rem;background-color:white;padding:0.5rem}input.svelte-1cwbdmm{height:1.3rem;padding:0 0.75rem;font-family:"Helvetica Neue", Helvetica, Arial, sans-serif;font-size:0.875rem;font-weight:bold;color:hsla(225, 15%, 40%, 1);border-width:1px;border-style:solid;border-color:hsla(0, 0%, 0%, 0.15);border-radius:0.25rem;outline:none;cursor:text;transition:0.25s ease-out;box-shadow:none;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;min-width:0}.examples.svelte-1cwbdmm{display:flex;width:90%;margin:auto;overflow-y:auto;flex-wrap:wrap}')}function Ce(e,t,n){const r=e.slice();return r[18]=t[n],r}function Se(e,t,n){const r=e.slice();return r[18]=t[n],r[20]=n,r}function Ne(e){let t,n,r,a,i,s,u,l,h,g,b,k,I,C,S,N=e[0].length+"",T=1!==e[0].length?"s":"";k=new pe({props:{paddingVertical:Oe,paddingHorizontal:Me,$$slots:{default:[Ee]},$$scope:{ctx:e}}}),k.$on("click",(function(){o(e[3])&&e[3].apply(this,arguments)}));let E=G(e[0]),R=[];for(let t=0;t<E.length;t+=1)R[t]=Re(Ce(e,E,t));const A=e=>U(R[e],1,1,(()=>{R[e]=null}));return{c(){t=m("div"),n=m("span"),r=v(e[2]),a=y(),i=m("span"),s=v("("),u=v(N),l=v(" example"),h=v(T),g=v(")"),b=y(),H(k.$$.fragment),I=y(),C=m("div");for(let e=0;e<R.length;e+=1)R[e].c();x(C,"class","examples svelte-1cwbdmm")},m(e,o){d(e,t,o),c(t,n),c(n,r),c(t,a),c(t,i),c(i,s),c(i,u),c(i,l),c(i,h),c(i,g),c(t,b),j(k,t,null),d(e,I,o),d(e,C,o);for(let e=0;e<R.length;e+=1)R[e]&&R[e].m(C,null);S=!0},p(t,n){e=t,(!S||4&n)&&w(r,e[2]),(!S||1&n)&&N!==(N=e[0].length+"")&&w(u,N),(!S||1&n)&&T!==(T=1!==e[0].length?"s":"")&&w(h,T);const a={};if(8388608&n&&(a.$$scope={dirty:n,ctx:e}),k.$set(a),1&n){let t;for(E=G(e[0]),t=0;t<E.length;t+=1){const r=Ce(e,E,t);R[t]?(R[t].p(r,n),V(R[t],1)):(R[t]=Re(r),R[t].c(),V(R[t],1),R[t].m(C,null))}for(z(),t=E.length;t<R.length;t+=1)A(t);W()}},i(e){if(!S){V(k.$$.fragment,e);for(let e=0;e<E.length;e+=1)V(R[e]);S=!0}},o(e){U(k.$$.fragment,e),R=R.filter(Boolean);for(let e=0;e<R.length;e+=1)U(R[e]);S=!1},d(e){e&&(p(t),p(I),p(C)),q(k),f(R,e)}}}function Te(e){let t,n,r,a,i,u,l,h,g,C,S,N,T,E,R,A,D,$,F,_,O,M,L,P,B=e[0].length+"",K=1!==e[0].length?"s":"";S=new pe({props:{paddingVertical:Oe,paddingHorizontal:Me,$$slots:{default:[Ae]},$$scope:{ctx:e}}}),S.$on("click",(function(){o(e[4])&&e[4].apply(this,arguments)})),T=new pe({props:{paddingVertical:Oe,paddingHorizontal:Me,$$slots:{default:[De]},$$scope:{ctx:e}}}),T.$on("click",(function(){o(e[5])&&e[5].apply(this,arguments)}));let X=G(e[0]),Y=[];for(let t=0;t<X.length;t+=1)Y[t]=$e(Se(e,X,t));const Q=e=>U(Y[e],1,1,(()=>{Y[e]=null}));return O=new pe({props:{paddingVertical:Oe,paddingHorizontal:Me,disabled:!e[8],$$slots:{default:[Fe]},$$scope:{ctx:e}}}),O.$on("click",e[10]),{c(){t=m("div"),n=m("input"),r=y(),a=m("span"),i=v("("),u=v(B),l=v(" example"),h=v(K),g=v(")"),C=y(),H(S.$$.fragment),N=y(),H(T.$$.fragment),E=y(),R=m("div");for(let e=0;e<Y.length;e+=1)Y[e].c();A=y(),D=m("center"),$=m("div"),F=m("input"),_=y(),H(O.$$.fragment),x(n,"type","text"),n.value=e[2],x(n,"id","label"),x(n,"name","label"),x(n,"class","svelte-1cwbdmm"),x(R,"class","examples svelte-1cwbdmm"),x(F,"class","svelte-1cwbdmm"),I($,"margin-top","1rem")},m(s,p){d(s,t,p),c(t,n),e[14](n),c(t,r),c(t,a),c(a,i),c(a,u),c(a,l),c(a,h),c(a,g),c(t,C),j(S,t,null),c(t,N),j(T,t,null),d(s,E,p),d(s,R,p);for(let e=0;e<Y.length;e+=1)Y[e]&&Y[e].m(R,null);d(s,A,p),d(s,D,p),c(D,$),c($,F),k(F,e[6]),c($,_),j(O,$,null),M=!0,L||(P=[b(n,"blur",e[9]),b(n,"keypress",(function(){o(e[12](e[9],e[4]))&&e[12](e[9],e[4]).apply(this,arguments)})),b(F,"input",e[16]),b(F,"keypress",(function(){o(e[12](e[17]))&&e[12](e[17]).apply(this,arguments)}))],L=!0)},p(t,r){e=t,(!M||4&r&&n.value!==e[2])&&(n.value=e[2]),(!M||1&r)&&B!==(B=e[0].length+"")&&w(u,B),(!M||1&r)&&K!==(K=1!==e[0].length?"s":"")&&w(h,K);const a={};8388608&r&&(a.$$scope={dirty:r,ctx:e}),S.$set(a);const i={};if(8388608&r&&(i.$$scope={dirty:r,ctx:e}),T.$set(i),2049&r){let t;for(X=G(e[0]),t=0;t<X.length;t+=1){const n=Se(e,X,t);Y[t]?(Y[t].p(n,r),V(Y[t],1)):(Y[t]=$e(n),Y[t].c(),V(Y[t],1),Y[t].m(R,null))}for(z(),t=X.length;t<Y.length;t+=1)Q(t);W()}64&r&&F.value!==e[6]&&k(F,e[6]);const s={};256&r&&(s.disabled=!e[8]),8388608&r&&(s.$$scope={dirty:r,ctx:e}),O.$set(s)},i(e){if(!M){V(S.$$.fragment,e),V(T.$$.fragment,e);for(let e=0;e<X.length;e+=1)V(Y[e]);V(O.$$.fragment,e),M=!0}},o(e){U(S.$$.fragment,e),U(T.$$.fragment,e),Y=Y.filter(Boolean);for(let e=0;e<Y.length;e+=1)U(Y[e]);U(O.$$.fragment,e),M=!1},d(n){n&&(p(t),p(E),p(R),p(A),p(D)),e[14](null),q(S),q(T),f(Y,n),q(O),L=!1,s(P)}}}function Ee(e){let t;return{c(){t=v("Edit Label")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function Re(e){let t,n;return t=new ke({props:{text:e[18]}}),{c(){H(t.$$.fragment)},m(e,r){j(t,e,r),n=!0},p(e,n){const r={};1&n&&(r.text=e[18]),t.$set(r)},i(e){n||(V(t.$$.fragment,e),n=!0)},o(e){U(t.$$.fragment,e),n=!1},d(e){q(t,e)}}}function Ae(e){let t;return{c(){t=v("Done Editing")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function De(e){let t;return{c(){t=v("Delete Label")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function $e(e){let t,n;return t=new ke({props:{text:e[18],xOut:function(){return e[15](e[20])}}}),{c(){H(t.$$.fragment)},m(e,r){j(t,e,r),n=!0},p(n,r){e=n;const a={};1&r&&(a.text=e[18]),t.$set(a)},i(e){n||(V(t.$$.fragment,e),n=!0)},o(e){U(t.$$.fragment,e),n=!1},d(e){q(t,e)}}}function Fe(e){let t;return{c(){t=v("Add Example")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function _e(e){let t,n,r,a;const i=[Te,Ne],s=[];function o(e,t){return e[1]?0:1}return n=o(e),r=s[n]=i[n](e),{c(){t=m("div"),r.c(),x(t,"class","row svelte-1cwbdmm")},m(e,r){d(e,t,r),s[n].m(t,null),a=!0},p(e,[a]){let u=n;n=o(e),n===u?s[n].p(e,a):(z(),U(s[u],1,1,(()=>{s[u]=null})),W(),r=s[n],r?r.p(e,a):(r=s[n]=i[n](e),r.c()),V(r,1),r.m(t,null))},i(e){a||(V(r),a=!0)},o(e){U(r),a=!1},d(e){e&&p(t),s[n].d()}}}const Oe="0.3rem",Me="0.5rem";function Le(e,t,n){let r,a,{isActive:i}=t,{label:s}=t,{examples:o}=t,{setActive:u}=t,{deactivate:l}=t,{deleteSelf:c}=t,{rename:h}=t;let d="";const p=()=>{o.push(d),n(0,o),n(6,d="")},f=e=>{o.splice(e,1),n(0,o)};return e.$$set=e=>{"isActive"in e&&n(1,i=e.isActive),"label"in e&&n(2,s=e.label),"examples"in e&&n(0,o=e.examples),"setActive"in e&&n(3,u=e.setActive),"deactivate"in e&&n(4,l=e.deactivate),"deleteSelf"in e&&n(5,c=e.deleteSelf),"rename"in e&&n(13,h=e.rename)},e.$$.update=()=>{65&e.$$.dirty&&n(8,r=""!==d&&!o.includes(d))},[o,i,s,u,l,c,d,a,r,()=>s!==(null==a?void 0:a.value)?h(a.value):void 0,p,f,(...e)=>t=>{"Enter"===t.key&&(t.preventDefault(),e.forEach((e=>e())))},h,function(e){E[e?"unshift":"push"]((()=>{a=e,n(7,a)}))},e=>f(e),function(){d=this.value,n(6,d)},()=>r?p():void 0]}class Pe extends Y{constructor(e){super(),X(this,e,Le,_e,u,{isActive:1,label:2,examples:0,setActive:3,deactivate:4,deleteSelf:5,rename:13},Ie)}}function Be(e){h(e,"svelte-1syqeeg",".container.svelte-1syqeeg{text-align:center;width:600px;background-color:white}.pane.svelte-1syqeeg{height:300px;text-align:left;overflow-y:scroll}.footer.svelte-1syqeeg{padding:1rem 0}")}function ze(e,t,n){const r=e.slice();r[11]=t[n],r[14]=n;const a=r[0].modelData.get(r[11]);return r[12]=a,r}function We(e){let t,n;function r(){return e[6](e[14])}function a(...t){return e[8](e[11],e[14],...t)}return t=new Pe({props:{label:e[11],examples:e[12],setActive:r,isActive:e[2]===e[14],deactivate:e[7],deleteSelf:e[5],rename:a}}),{c(){H(t.$$.fragment)},m(e,r){j(t,e,r),n=!0},p(n,i){e=n;const s={};1&i&&(s.label=e[11]),1&i&&(s.examples=e[12]),4&i&&(s.setActive=r),4&i&&(s.isActive=e[2]===e[14]),4&i&&(s.deactivate=e[7]),1&i&&(s.rename=a),t.$set(s)},i(e){n||(V(t.$$.fragment,e),n=!0)},o(e){U(t.$$.fragment,e),n=!1},d(e){q(t,e)}}}function Ve(e){let t,n,r=e[12]&&We(e);return{c(){r&&r.c(),t=v("")},m(e,a){r&&r.m(e,a),d(e,t,a),n=!0},p(e,n){e[12]?r?(r.p(e,n),1&n&&V(r,1)):(r=We(e),r.c(),V(r,1),r.m(t.parentNode,t)):r&&(z(),U(r,1,1,(()=>{r=null})),W())},i(e){n||(V(r),n=!0)},o(e){U(r),n=!1},d(e){e&&p(t),r&&r.d(e)}}}function Ue(e){let t;return{c(){t=v("Add a Label")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function Ge(e){let t;return{c(){t=v("Clear All")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function He(e){let t;return{c(){t=v("Done")},m(e,n){d(e,t,n)},d(e){e&&p(t)}}}function je(e){let n,r,a,i,s,u,l,h,g,v,b=G(e[0].labels),w=[];for(let t=0;t<b.length;t+=1)w[t]=Ve(ze(e,b,t));const k=e=>U(w[e],1,1,(()=>{w[e]=null}));return s=new pe({props:{$$slots:{default:[Ue]},$$scope:{ctx:e}}}),s.$on("click",e[4]),l=new pe({props:{$$slots:{default:[Ge]},$$scope:{ctx:e}}}),l.$on("click",e[9]),g=new pe({props:{$$slots:{default:[He]},$$scope:{ctx:e}}}),g.$on("click",(function(){o(e[1])&&e[1].apply(this,arguments)})),{c(){n=m("div"),r=m("div");for(let e=0;e<w.length;e+=1)w[e].c();a=y(),i=m("div"),H(s.$$.fragment),u=y(),H(l.$$.fragment),h=y(),H(g.$$.fragment),x(r,"class","pane svelte-1syqeeg"),I(r,"background-color",t.color.ui.secondary),x(i,"class","footer svelte-1syqeeg"),x(n,"class","container svelte-1syqeeg")},m(e,t){d(e,n,t),c(n,r);for(let e=0;e<w.length;e+=1)w[e]&&w[e].m(r,null);c(n,a),c(n,i),j(s,i,null),c(i,u),j(l,i,null),c(i,h),j(g,i,null),v=!0},p(t,[n]){if(e=t,45&n){let t;for(b=G(e[0].labels),t=0;t<b.length;t+=1){const a=ze(e,b,t);w[t]?(w[t].p(a,n),V(w[t],1)):(w[t]=Ve(a),w[t].c(),V(w[t],1),w[t].m(r,null))}for(z(),t=b.length;t<w.length;t+=1)k(t);W()}const a={};32768&n&&(a.$$scope={dirty:n,ctx:e}),s.$set(a);const i={};32768&n&&(i.$$scope={dirty:n,ctx:e}),l.$set(i);const o={};32768&n&&(o.$$scope={dirty:n,ctx:e}),g.$set(o)},i(e){if(!v){for(let e=0;e<b.length;e+=1)V(w[e]);V(s.$$.fragment,e),V(l.$$.fragment,e),V(g.$$.fragment,e),v=!0}},o(e){w=w.filter(Boolean);for(let e=0;e<w.length;e+=1)U(w[e]);U(s.$$.fragment,e),U(l.$$.fragment,e),U(g.$$.fragment,e),v=!1},d(e){e&&p(n),f(w,e),q(s),q(l),q(g)}}}function qe(e,n,r){let{extension:a}=n,{close:i}=n;const s=(e,...n)=>t.reactiveInvoke(r(0,a),e,n);let o=0;return e.$$set=e=>{"extension"in e&&r(0,a=e.extension),"close"in e&&r(1,i=e.close)},[a,i,o,s,()=>{s("addLabel",(()=>{let e,t=a.labels.length+1;do{e="Class "+t++}while(a.labels.includes(e));return e})()),r(2,o=a.labels.length-1)},()=>{s("deleteLabel",a.labels[o],o),r(2,o=-1)},e=>r(2,o=e),()=>r(2,o=-1),(e,t,n)=>s("renameLabel",e,n,t),()=>s("clearLabels")]}function Ke(e,t,n,r,a,i){function s(e){if(void 0!==e&&"function"!=typeof e)throw new TypeError("Function expected");return e}for(var o,u=r.kind,l="getter"===u?"get":"setter"===u?"set":"value",c=!t&&e?r.static?e:e.prototype:null,h=t||(c?Object.getOwnPropertyDescriptor(c,r.name):{}),d=!1,p=n.length-1;p>=0;p--){var f={};for(var m in r)f[m]="access"===m?{}:r[m];for(var m in r.access)f.access[m]=r.access[m];f.addInitializer=function(e){if(d)throw new TypeError("Cannot add initializers after decoration has completed");i.push(s(e||null))};var g=(0,n[p])("accessor"===u?{get:h.get,set:h.set}:h[l],f);if("accessor"===u){if(void 0===g)continue;if(null===g||"object"!=typeof g)throw new TypeError("Object expected");(o=s(g.get))&&(h.get=o),(o=s(g.set))&&(h.set=o),(o=s(g.init))&&a.unshift(o)}else(o=s(g))&&("field"===u?a.unshift(o):h[l]=o)}c&&Object.defineProperty(c,r.name,h),d=!0}function Xe(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,o)}u((r=r.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const Ye={id:"textClassification",name:"Text Classification",blocks:[{opcode:"ifTextMatchesClass",text:"[TEXT] matches [CLASS_NAME] ?",blockType:"Boolean",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"},CLASS_NAME:{type:"string",menu:"model_classes",defaultValue:""}}},{opcode:"getModelPrediction",text:"predict class for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"}}},{opcode:"getModelConfidence",text:"Confidence of predict class for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"Enter text or answer block"}}},{opcode:"confidenceTrue",text:"probability that [TEXT] is [LABEL]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"TEXT"},LABEL:{type:"string",defaultValue:"toxicity",menu:"toxicitylabels"}}},{opcode:"sentimentScore",text:"Sentiment Score for [TEXT]",blockType:"reporter",arguments:{TEXT:{type:"string",defaultValue:"TEXT"}}},{opcode:"speakText",text:"speak [TEXT]",blockType:"command",arguments:{TEXT:{type:"string",defaultValue:"Hello"}}},{opcode:"askSpeechRecognition",text:"speak [PROMPT] then listen for response",blockType:"command",arguments:{PROMPT:{type:"string",defaultValue:"How are you?"}}},{opcode:"getRecognizedSpeech",text:"response",blockType:"reporter"},{opcode:"setVoice",text:"set voice to [VOICE]",blockType:"command",arguments:{VOICE:{type:"string",menu:"voices",defaultValue:"SQUEAK"}}},{opcode:"onHeardSound",text:"when heard sound > [THRESHOLD]",blockType:"hat",arguments:{THRESHOLD:{type:"number",defaultValue:10}}}],menus:{voices:{acceptReporters:!0,items:[{text:"squeak",value:"SQUEAK"},{text:"tenor",value:"TENOR"},{text:"alto",value:"ALTO"},{text:"giant",value:"GIANT"}]},model_classes:{acceptReporters:!1,items:"getLabels"},toxicitylabels:{items:[{value:"toxicity",text:"toxic"},{value:"severe_toxicity",text:"severely toxic"},{value:"identity_attack",text:"an identity-based attack"},{value:"insult",text:"insulting"},{value:"threat",text:"threatening"},{value:"obscene",text:"profanity"}],acceptReporters:!0}}},Qe=t.legacy(Ye);t.legacy(Ye,{incrementalDevelopment:!0});const Je="Scratch.text2speech",Ze=e=>{let t=e.getCustomState(Je);return t||(t={currentVoice:"SQUEAK"},e.setCustomState(Je,t),t)},et=(e,t)=>{t&&Boolean(t.getCustomState(Je))&&((e,t)=>{e.setCustomState(Je,t)})(e,{currentVoice:Ze(t).currentVoice})},tt=new URL("https://synthesis-service.scratch.mit.edu/synth");var nt="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function rt(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){if(this instanceof e){var n=[null];return n.push.apply(n,arguments),new(Function.bind.apply(t,n))}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var at={},it={get exports(){return at},set exports(e){at=e}},st={};!function(e,t){var n="{",r="}",a=",",i="#",s="<",o=">",u="</",l="/>",c="'",h="offset:",d=["number","date","time","ordinal","duration","spellout"],p=["plural","select","selectordinal"];function f(e,t){var n=e.pattern,a=n.length,i=[],s=e.index,o=m(e,t);for(o&&i.push(o),o&&e.tokens&&e.tokens.push(["text",n.slice(s,e.index)]);e.index<a;){if(n[e.index]===r){if(!t)throw C(e);break}if(t&&e.tagsType&&n.slice(e.index,e.index+u.length)===u)break;i.push(y(e)),s=e.index,(o=m(e,t))&&i.push(o),o&&e.tokens&&e.tokens.push(["text",n.slice(s,e.index)])}return i}function m(e,t){for(var a=e.pattern,o=a.length,u="plural"===t||"selectordinal"===t,l=!!e.tagsType,h="{style}"===t,d="";e.index<o;){var p=a[e.index];if(p===n||p===r||u&&p===i||l&&p===s||h&&g(p.charCodeAt(0)))break;if(p===c)if((p=a[++e.index])===c)d+=p,++e.index;else if(p===n||p===r||u&&p===i||l&&p===s||h)for(d+=p;++e.index<o;)if((p=a[e.index])===c&&a[e.index+1]===c)d+=c,++e.index;else{if(p===c){++e.index;break}d+=p}else d+=c;else d+=p,++e.index}return d}function g(e){return e>=9&&e<=13||32===e||133===e||160===e||6158===e||e>=8192&&e<=8205||8232===e||8233===e||8239===e||8287===e||8288===e||12288===e||65279===e}function v(e){for(var t=e.pattern,n=t.length,r=e.index;e.index<n&&g(t.charCodeAt(e.index));)++e.index;r<e.index&&e.tokens&&e.tokens.push(["space",e.pattern.slice(r,e.index)])}function y(e){var t=e.pattern;if(t[e.index]===i)return e.tokens&&e.tokens.push(["syntax",i]),++e.index,[i];var c=function(e){var t=e.tagsType;if(!t||e.pattern[e.index]!==s)return;if(e.pattern.slice(e.index,e.index+u.length)===u)throw C(e,null,"closing tag without matching opening tag");e.tokens&&e.tokens.push(["syntax",s]);++e.index;var n=b(e,!0);if(!n)throw C(e,"placeholder id");e.tokens&&e.tokens.push(["id",n]);if(v(e),e.pattern.slice(e.index,e.index+l.length)===l)return e.tokens&&e.tokens.push(["syntax",l]),e.index+=l.length,[n,t];if(e.pattern[e.index]!==o)throw C(e,o);e.tokens&&e.tokens.push(["syntax",o]);++e.index;var r=f(e,t),a=e.index;if(e.pattern.slice(e.index,e.index+u.length)!==u)throw C(e,u+n+o);e.tokens&&e.tokens.push(["syntax",u]);e.index+=u.length;var i=b(e,!0);i&&e.tokens&&e.tokens.push(["id",i]);if(n!==i)throw e.index=a,C(e,u+n+o,u+i+o);if(v(e),e.pattern[e.index]!==o)throw C(e,o);e.tokens&&e.tokens.push(["syntax",o]);return++e.index,[n,t,{children:r}]}(e);if(c)return c;if(t[e.index]!==n)throw C(e,n);e.tokens&&e.tokens.push(["syntax",n]),++e.index,v(e);var p=b(e);if(!p)throw C(e,"placeholder id");e.tokens&&e.tokens.push(["id",p]),v(e);var m=t[e.index];if(m===r)return e.tokens&&e.tokens.push(["syntax",r]),++e.index,[p];if(m!==a)throw C(e,a+" or "+r);e.tokens&&e.tokens.push(["syntax",a]),++e.index,v(e);var g,y=b(e);if(!y)throw C(e,"placeholder type");if(e.tokens&&e.tokens.push(["type",y]),v(e),(m=t[e.index])===r){if(e.tokens&&e.tokens.push(["syntax",r]),"plural"===y||"selectordinal"===y||"select"===y)throw C(e,y+" sub-messages");return++e.index,[p,y]}if(m!==a)throw C(e,a+" or "+r);if(e.tokens&&e.tokens.push(["syntax",a]),++e.index,v(e),"plural"===y||"selectordinal"===y){var I=function(e){var t=e.pattern,n=t.length,r=0;if(t.slice(e.index,e.index+h.length)===h){e.tokens&&e.tokens.push(["offset","offset"],["syntax",":"]),e.index+=h.length,v(e);for(var a=e.index;e.index<n&&w(t.charCodeAt(e.index));)++e.index;if(a===e.index)throw C(e,"offset number");e.tokens&&e.tokens.push(["number",t.slice(a,e.index)]),r=+t.slice(a,e.index)}return r}(e);v(e),g=[p,y,I,k(e,y)]}else if("select"===y)g=[p,y,k(e,y)];else if(d.indexOf(y)>=0)g=[p,y,x(e)];else{var S=e.index,N=x(e);v(e),t[e.index]===n&&(e.index=S,N=k(e,y)),g=[p,y,N]}if(v(e),t[e.index]!==r)throw C(e,r);return e.tokens&&e.tokens.push(["syntax",r]),++e.index,g}function b(e,t){for(var u=e.pattern,l=u.length,h="";e.index<l;){var d=u[e.index];if(d===n||d===r||d===a||d===i||d===c||g(d.charCodeAt(0))||t&&(d===s||d===o||"/"===d))break;h+=d,++e.index}return h}function x(e){var t=e.index,n=m(e,"{style}");if(!n)throw C(e,"placeholder style name");return e.tokens&&e.tokens.push(["style",e.pattern.slice(t,e.index)]),n}function w(e){return e>=48&&e<=57}function k(e,t){for(var n=e.pattern,a=n.length,i={};e.index<a&&n[e.index]!==r;){var s=b(e);if(!s)throw C(e,"sub-message selector");e.tokens&&e.tokens.push(["selector",s]),v(e),i[s]=I(e,t),v(e)}if(!i.other&&p.indexOf(t)>=0)throw C(e,null,null,'"other" sub-message must be specified in '+t);return i}function I(e,t){if(e.pattern[e.index]!==n)throw C(e,n+" to start sub-message");e.tokens&&e.tokens.push(["syntax",n]),++e.index;var a=f(e,t);if(e.pattern[e.index]!==r)throw C(e,r+" to end sub-message");return e.tokens&&e.tokens.push(["syntax",r]),++e.index,a}function C(e,t,n,r){var a=e.pattern,i=a.slice(0,e.index).split(/\r?\n/),s=e.index,o=i.length,u=i.slice(-1)[0].length;return n=n||(e.index>=a.length?"end of message pattern":b(e)||a[e.index]),r||(r=function(e,t){return e?"Expected "+e+" but found "+t:"Unexpected "+t+" found"}(t,n)),new S(r+=" in "+a.replace(/\r?\n/g,"\n"),t,n,s,o,u)}function S(e,t,n,r,a,i){Error.call(this,e),this.name="SyntaxError",this.message=e,this.expected=t,this.found=n,this.offset=r,this.line=a,this.column=i}t=e.exports=function(e,t){return f({pattern:String(e),index:0,tagsType:t&&t.tagsType||null,tokens:t&&t.tokens||null},"")},S.prototype=Object.create(Error.prototype),t.SyntaxError=S}({get exports(){return st},set exports(e){st=e}},st);var ot={},ut="long",lt="short",ct="narrow",ht="numeric",dt="2-digit",pt={number:{decimal:{style:"decimal"},integer:{style:"decimal",maximumFractionDigits:0},currency:{style:"currency",currency:"USD"},percent:{style:"percent"},default:{style:"decimal"}},date:{short:{month:ht,day:ht,year:dt},medium:{month:lt,day:ht,year:ht},long:{month:ut,day:ht,year:ht},full:{month:ut,day:ht,year:ht,weekday:ut},default:{month:lt,day:ht,year:ht}},time:{short:{hour:ht,minute:ht},medium:{hour:ht,minute:ht,second:ht},long:{hour:ht,minute:ht,second:ht,timeZoneName:lt},full:{hour:ht,minute:ht,second:ht,timeZoneName:lt},default:{hour:ht,minute:ht,second:ht}},duration:{default:{hours:{minimumIntegerDigits:1,maximumFractionDigits:0},minutes:{minimumIntegerDigits:2,maximumFractionDigits:0},seconds:{minimumIntegerDigits:2,maximumFractionDigits:3}}},parseNumberPattern:function(e){if(e){var t={},n=e.match(/\b[A-Z]{3}\b/i),r=e.replace(/[^¤]/g,"").length;if(!r&&n&&(r=1),r?(t.style="currency",t.currencyDisplay=1===r?"symbol":2===r?"code":"name",t.currency=n?n[0].toUpperCase():"USD"):e.indexOf("%")>=0&&(t.style="percent"),!/[@#0]/.test(e))return t.style?t:void 0;if(t.useGrouping=e.indexOf(",")>=0,/E\+?[@#0]+/i.test(e)||e.indexOf("@")>=0){var a=e.replace(/E\+?[@#0]+|[^@#0]/gi,"");t.minimumSignificantDigits=Math.min(Math.max(a.replace(/[^@0]/g,"").length,1),21),t.maximumSignificantDigits=Math.min(Math.max(a.length,1),21)}else{for(var i=e.replace(/[^#0.]/g,"").split("."),s=i[0],o=s.length-1;"0"===s[o];)--o;t.minimumIntegerDigits=Math.min(Math.max(s.length-1-o,1),21);var u=i[1]||"";for(o=0;"0"===u[o];)++o;for(t.minimumFractionDigits=Math.min(Math.max(o,0),20);"#"===u[o];)++o;t.maximumFractionDigits=Math.min(Math.max(o,0),20)}return t}},parseDatePattern:function(e){if(e){for(var t={},n=0;n<e.length;){for(var r=e[n],a=1;e[++n]===r;)++a;switch(r){case"G":t.era=5===a?ct:4===a?ut:lt;break;case"y":case"Y":t.year=2===a?dt:ht;break;case"M":case"L":a=Math.min(Math.max(a-1,0),4),t.month=[ht,dt,lt,ut,ct][a];break;case"E":case"e":case"c":t.weekday=5===a?ct:4===a?ut:lt;break;case"d":case"D":t.day=2===a?dt:ht;break;case"h":case"K":t.hour12=!0,t.hour=2===a?dt:ht;break;case"H":case"k":t.hour12=!1,t.hour=2===a?dt:ht;break;case"m":t.minute=2===a?dt:ht;break;case"s":case"S":t.second=2===a?dt:ht;break;case"z":case"Z":case"v":case"V":t.timeZoneName=1===a?lt:ut}}return Object.keys(t).length?t:void 0}}},ft=function(e,t){if("string"==typeof e&&t[e])return e;for(var n=[].concat(e||[]),r=0,a=n.length;r<a;++r)for(var i=n[r].split("-");i.length;){var s=i.join("-");if(t[s])return s;i.pop()}},mt="zero",gt="one",vt="two",yt="few",bt="many",xt="other",wt=[function(e){return 1===+e?gt:xt},function(e){var t=+e;return 0<=t&&t<=1?gt:xt},function(e){return 0===Math.floor(Math.abs(+e))||1===+e?gt:xt},function(e){var t=+e;return 0===t?mt:1===t?gt:2===t?vt:3<=t%100&&t%100<=10?yt:11<=t%100&&t%100<=99?bt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?gt:xt},function(e){var t=+e;return t%10==1&&t%100!=11?gt:2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?yt:t%10==0||5<=t%10&&t%10<=9||11<=t%100&&t%100<=14?bt:xt},function(e){var t=+e;return t%10==1&&t%100!=11&&t%100!=71&&t%100!=91?gt:t%10==2&&t%100!=12&&t%100!=72&&t%100!=92?vt:(3<=t%10&&t%10<=4||t%10==9)&&(t%100<10||19<t%100)&&(t%100<70||79<t%100)&&(t%100<90||99<t%100)?yt:0!==t&&t%1e6==0?bt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%10==1&&t%100!=11||r%10==1&&r%100!=11?gt:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)||2<=r%10&&r%10<=4&&(r%100<12||14<r%100)?yt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?gt:2<=t&&t<=4&&0===n?yt:0!==n?bt:xt},function(e){var t=+e;return 0===t?mt:1===t?gt:2===t?vt:3===t?yt:6===t?bt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=+(""+e).replace(/^[^.]*.?|0+$/g,"");return 1===+e||0!==n&&(0===t||1===t)?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%100==1||r%100==1?gt:0===n&&t%100==2||r%100==2?vt:0===n&&3<=t%100&&t%100<=4||3<=r%100&&r%100<=4?yt:xt},function(e){var t=Math.floor(Math.abs(+e));return 0===t||1===t?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&(1===t||2===t||3===t)||0===n&&t%10!=4&&t%10!=6&&t%10!=9||0!==n&&r%10!=4&&r%10!=6&&r%10!=9?gt:xt},function(e){var t=+e;return 1===t?gt:2===t?vt:3<=t&&t<=6?yt:7<=t&&t<=10?bt:xt},function(e){var t=+e;return 1===t||11===t?gt:2===t||12===t?vt:3<=t&&t<=10||13<=t&&t<=19?yt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%10==1?gt:0===n&&t%10==2?vt:0!==n||t%100!=0&&t%100!=20&&t%100!=40&&t%100!=60&&t%100!=80?0!==n?bt:xt:yt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+e;return 1===t&&0===n?gt:2===t&&0===n?vt:0===n&&(r<0||10<r)&&r%10==0?bt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=+(""+e).replace(/^[^.]*.?|0+$/g,"");return 0===n&&t%10==1&&t%100!=11||0!==n?gt:xt},function(e){var t=+e;return 1===t?gt:2===t?vt:xt},function(e){var t=+e;return 0===t?mt:1===t?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=+e;return 0===n?mt:0!==t&&1!==t||0===n?xt:gt},function(e){var t=+(e+".").split(".")[1],n=+e;return n%10==1&&(n%100<11||19<n%100)?gt:2<=n%10&&n%10<=9&&(n%100<11||19<n%100)?yt:0!==t?bt:xt},function(e){var t=(e+".").split(".")[1].length,n=+(e+".").split(".")[1],r=+e;return r%10==0||11<=r%100&&r%100<=19||2===t&&11<=n%100&&n%100<=19?mt:r%10==1&&r%100!=11||2===t&&n%10==1&&n%100!=11||2!==t&&n%10==1?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+(e+".").split(".")[1];return 0===n&&t%10==1&&t%100!=11||r%10==1&&r%100!=11?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length,r=+e;return 1===t&&0===n?gt:0!==n||0===r||1!==r&&1<=r%100&&r%100<=19?yt:xt},function(e){var t=+e;return 1===t?gt:0===t||2<=t%100&&t%100<=10?yt:11<=t%100&&t%100<=19?bt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 1===t&&0===n?gt:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?yt:0===n&&1!==t&&0<=t%10&&t%10<=1||0===n&&5<=t%10&&t%10<=9||0===n&&12<=t%100&&t%100<=14?bt:xt},function(e){var t=Math.floor(Math.abs(+e));return 0<=t&&t<=1?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%10==1&&t%100!=11?gt:0===n&&2<=t%10&&t%10<=4&&(t%100<12||14<t%100)?yt:0===n&&t%10==0||0===n&&5<=t%10&&t%10<=9||0===n&&11<=t%100&&t%100<=14?bt:xt},function(e){var t=+e;return 0===Math.floor(Math.abs(+e))||1===t?gt:2<=t&&t<=10?yt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=+(e+".").split(".")[1],r=+e;return 0===r||1===r||0===t&&1===n?gt:xt},function(e){var t=Math.floor(Math.abs(+e)),n=(e+".").split(".")[1].length;return 0===n&&t%100==1?gt:0===n&&t%100==2?vt:0===n&&3<=t%100&&t%100<=4||0!==n?yt:xt},function(e){var t=+e;return 0<=t&&t<=1||11<=t&&t<=99?gt:xt},function(e){var t=+e;return 1===t||5===t||7===t||8===t||9===t||10===t?gt:2===t||3===t?vt:4===t?yt:6===t?bt:xt},function(e){var t=Math.floor(Math.abs(+e));return t%10==1||t%10==2||t%10==5||t%10==7||t%10==8||t%100==20||t%100==50||t%100==70||t%100==80?gt:t%10==3||t%10==4||t%1e3==100||t%1e3==200||t%1e3==300||t%1e3==400||t%1e3==500||t%1e3==600||t%1e3==700||t%1e3==800||t%1e3==900?yt:0===t||t%10==6||t%100==40||t%100==60||t%100==90?bt:xt},function(e){var t=+e;return t%10!=2&&t%10!=3||t%100==12||t%100==13?xt:yt},function(e){var t=+e;return 1===t||3===t?gt:2===t?vt:4===t?yt:xt},function(e){var t=+e;return 0===t||7===t||8===t||9===t?mt:1===t?gt:2===t?vt:3===t||4===t?yt:5===t||6===t?bt:xt},function(e){var t=+e;return t%10==1&&t%100!=11?gt:t%10==2&&t%100!=12?vt:t%10==3&&t%100!=13?yt:xt},function(e){var t=+e;return 1===t||11===t?gt:2===t||12===t?vt:3===t||13===t?yt:xt},function(e){var t=+e;return 1===t?gt:2===t||3===t?vt:4===t?yt:6===t?bt:xt},function(e){var t=+e;return 1===t||5===t?gt:xt},function(e){var t=+e;return 11===t||8===t||80===t||800===t?bt:xt},function(e){var t=Math.floor(Math.abs(+e));return 1===t?gt:0===t||2<=t%100&&t%100<=20||t%100==40||t%100==60||t%100==80?bt:xt},function(e){var t=+e;return t%10==6||t%10==9||t%10==0&&0!==t?bt:xt},function(e){var t=Math.floor(Math.abs(+e));return t%10==1&&t%100!=11?gt:t%10==2&&t%100!=12?vt:t%10!=7&&t%10!=8||t%100==17||t%100==18?xt:bt},function(e){var t=+e;return 1===t?gt:2===t||3===t?vt:4===t?yt:xt},function(e){var t=+e;return 1<=t&&t<=4?gt:xt},function(e){var t=+e;return 1===t||5===t||7<=t&&t<=9?gt:2===t||3===t?vt:4===t?yt:6===t?bt:xt},function(e){var t=+e;return 1===t?gt:t%10==4&&t%100!=14?bt:xt},function(e){var t=+e;return t%10!=1&&t%10!=2||t%100==11||t%100==12?xt:gt},function(e){var t=+e;return t%10==6||t%10==9||10===t?yt:xt},function(e){var t=+e;return t%10==3&&t%100!=13?yt:xt}],kt={af:{cardinal:wt[0]},ak:{cardinal:wt[1]},am:{cardinal:wt[2]},ar:{cardinal:wt[3]},ars:{cardinal:wt[3]},as:{cardinal:wt[2],ordinal:wt[34]},asa:{cardinal:wt[0]},ast:{cardinal:wt[4]},az:{cardinal:wt[0],ordinal:wt[35]},be:{cardinal:wt[5],ordinal:wt[36]},bem:{cardinal:wt[0]},bez:{cardinal:wt[0]},bg:{cardinal:wt[0]},bh:{cardinal:wt[1]},bn:{cardinal:wt[2],ordinal:wt[34]},br:{cardinal:wt[6]},brx:{cardinal:wt[0]},bs:{cardinal:wt[7]},ca:{cardinal:wt[4],ordinal:wt[37]},ce:{cardinal:wt[0]},cgg:{cardinal:wt[0]},chr:{cardinal:wt[0]},ckb:{cardinal:wt[0]},cs:{cardinal:wt[8]},cy:{cardinal:wt[9],ordinal:wt[38]},da:{cardinal:wt[10]},de:{cardinal:wt[4]},dsb:{cardinal:wt[11]},dv:{cardinal:wt[0]},ee:{cardinal:wt[0]},el:{cardinal:wt[0]},en:{cardinal:wt[4],ordinal:wt[39]},eo:{cardinal:wt[0]},es:{cardinal:wt[0]},et:{cardinal:wt[4]},eu:{cardinal:wt[0]},fa:{cardinal:wt[2]},ff:{cardinal:wt[12]},fi:{cardinal:wt[4]},fil:{cardinal:wt[13],ordinal:wt[0]},fo:{cardinal:wt[0]},fr:{cardinal:wt[12],ordinal:wt[0]},fur:{cardinal:wt[0]},fy:{cardinal:wt[4]},ga:{cardinal:wt[14],ordinal:wt[0]},gd:{cardinal:wt[15],ordinal:wt[40]},gl:{cardinal:wt[4]},gsw:{cardinal:wt[0]},gu:{cardinal:wt[2],ordinal:wt[41]},guw:{cardinal:wt[1]},gv:{cardinal:wt[16]},ha:{cardinal:wt[0]},haw:{cardinal:wt[0]},he:{cardinal:wt[17]},hi:{cardinal:wt[2],ordinal:wt[41]},hr:{cardinal:wt[7]},hsb:{cardinal:wt[11]},hu:{cardinal:wt[0],ordinal:wt[42]},hy:{cardinal:wt[12],ordinal:wt[0]},ia:{cardinal:wt[4]},io:{cardinal:wt[4]},is:{cardinal:wt[18]},it:{cardinal:wt[4],ordinal:wt[43]},iu:{cardinal:wt[19]},iw:{cardinal:wt[17]},jgo:{cardinal:wt[0]},ji:{cardinal:wt[4]},jmc:{cardinal:wt[0]},ka:{cardinal:wt[0],ordinal:wt[44]},kab:{cardinal:wt[12]},kaj:{cardinal:wt[0]},kcg:{cardinal:wt[0]},kk:{cardinal:wt[0],ordinal:wt[45]},kkj:{cardinal:wt[0]},kl:{cardinal:wt[0]},kn:{cardinal:wt[2]},ks:{cardinal:wt[0]},ksb:{cardinal:wt[0]},ksh:{cardinal:wt[20]},ku:{cardinal:wt[0]},kw:{cardinal:wt[19]},ky:{cardinal:wt[0]},lag:{cardinal:wt[21]},lb:{cardinal:wt[0]},lg:{cardinal:wt[0]},ln:{cardinal:wt[1]},lt:{cardinal:wt[22]},lv:{cardinal:wt[23]},mas:{cardinal:wt[0]},mg:{cardinal:wt[1]},mgo:{cardinal:wt[0]},mk:{cardinal:wt[24],ordinal:wt[46]},ml:{cardinal:wt[0]},mn:{cardinal:wt[0]},mo:{cardinal:wt[25],ordinal:wt[0]},mr:{cardinal:wt[2],ordinal:wt[47]},mt:{cardinal:wt[26]},nah:{cardinal:wt[0]},naq:{cardinal:wt[19]},nb:{cardinal:wt[0]},nd:{cardinal:wt[0]},ne:{cardinal:wt[0],ordinal:wt[48]},nl:{cardinal:wt[4]},nn:{cardinal:wt[0]},nnh:{cardinal:wt[0]},no:{cardinal:wt[0]},nr:{cardinal:wt[0]},nso:{cardinal:wt[1]},ny:{cardinal:wt[0]},nyn:{cardinal:wt[0]},om:{cardinal:wt[0]},or:{cardinal:wt[0],ordinal:wt[49]},os:{cardinal:wt[0]},pa:{cardinal:wt[1]},pap:{cardinal:wt[0]},pl:{cardinal:wt[27]},prg:{cardinal:wt[23]},ps:{cardinal:wt[0]},pt:{cardinal:wt[28]},"pt-PT":{cardinal:wt[4]},rm:{cardinal:wt[0]},ro:{cardinal:wt[25],ordinal:wt[0]},rof:{cardinal:wt[0]},ru:{cardinal:wt[29]},rwk:{cardinal:wt[0]},saq:{cardinal:wt[0]},sc:{cardinal:wt[4],ordinal:wt[43]},scn:{cardinal:wt[4],ordinal:wt[43]},sd:{cardinal:wt[0]},sdh:{cardinal:wt[0]},se:{cardinal:wt[19]},seh:{cardinal:wt[0]},sh:{cardinal:wt[7]},shi:{cardinal:wt[30]},si:{cardinal:wt[31]},sk:{cardinal:wt[8]},sl:{cardinal:wt[32]},sma:{cardinal:wt[19]},smi:{cardinal:wt[19]},smj:{cardinal:wt[19]},smn:{cardinal:wt[19]},sms:{cardinal:wt[19]},sn:{cardinal:wt[0]},so:{cardinal:wt[0]},sq:{cardinal:wt[0],ordinal:wt[50]},sr:{cardinal:wt[7]},ss:{cardinal:wt[0]},ssy:{cardinal:wt[0]},st:{cardinal:wt[0]},sv:{cardinal:wt[4],ordinal:wt[51]},sw:{cardinal:wt[4]},syr:{cardinal:wt[0]},ta:{cardinal:wt[0]},te:{cardinal:wt[0]},teo:{cardinal:wt[0]},ti:{cardinal:wt[1]},tig:{cardinal:wt[0]},tk:{cardinal:wt[0],ordinal:wt[52]},tl:{cardinal:wt[13],ordinal:wt[0]},tn:{cardinal:wt[0]},tr:{cardinal:wt[0]},ts:{cardinal:wt[0]},tzm:{cardinal:wt[33]},ug:{cardinal:wt[0]},uk:{cardinal:wt[29],ordinal:wt[53]},ur:{cardinal:wt[4]},uz:{cardinal:wt[0]},ve:{cardinal:wt[0]},vo:{cardinal:wt[0]},vun:{cardinal:wt[0]},wa:{cardinal:wt[1]},wae:{cardinal:wt[0]},xh:{cardinal:wt[0]},xog:{cardinal:wt[0]},yi:{cardinal:wt[4]},zu:{cardinal:wt[2]},lo:{ordinal:wt[0]},ms:{ordinal:wt[0]},vi:{ordinal:wt[0]}};!function(e,t){var n=pt,r=ft,a=kt;function i(e,t,n,r,a){var o=e.map((function(e){return function(e,t,n,r,a){if("string"==typeof e){var o=e;return function(){return o}}var u,l=e[0],c=e[1];if(t&&"#"===e[0]){l=t[0];var d=t[2],p=(r.number||h.number)([l,"number"],n);return function(e){return p(s(l,e)-d,e)}}"plural"===c||"selectordinal"===c?(u={},Object.keys(e[3]).forEach((function(t){u[t]=i(e[3][t],e,n,r,a)})),e=[e[0],e[1],e[2],u]):e[2]&&"object"==typeof e[2]&&(u={},Object.keys(e[2]).forEach((function(t){u[t]=i(e[2][t],e,n,r,a)})),e=[e[0],e[1],u]);var f=c&&(r[c]||h[c]);if(f){var m=f(e,n);return function(e){return m(s(l,e),e)}}return a?function(e){return String(s(l,e))}:function(e){return s(l,e)}}(e,t,n,r,a)}));return a?1===o.length?o[0]:function(e){for(var t="",n=0;n<o.length;++n)t+=o[n](e);return t}:function(e){return o.reduce((function(t,n){return t.concat(n(e))}),[])}}function s(e,t){if(t&&e in t)return t[e];for(var n=e.split("."),r=t,a=0,i=n.length;r&&a<i;++a)r=r[n[a]];return r}function o(e,t){var r=e[2],a=n.number[r]||n.parseNumberPattern(r)||n.number.default;return new Intl.NumberFormat(t,a).format}function u(e,t){var r=e[1],a=e[2],i=n[r][a]||n.parseDatePattern(a)||n[r].default;return new Intl.DateTimeFormat(t,i).format}function l(e,t){var n,i="selectordinal"===e[1]?"ordinal":"cardinal",s=e[2],o=e[3];if(Intl.PluralRules&&Intl.PluralRules.supportedLocalesOf(t).length>0)n=new Intl.PluralRules(t,{type:i});else{var u=r(t,a),l=u&&a[u][i]||c;n={select:l}}return function(e,t){return(o["="+ +e]||o[n.select(e-s)]||o.other)(t)}}function c(){return"other"}(t=e.exports=function(e,t,n){return i(e,null,t||"en",n||{},!0)}).toParts=function(e,t,n){return i(e,null,t||"en",n||{},!1)};var h={number:o,ordinal:o,spellout:o,duration:function(e,t){var r=e[2],a=n.duration[r]||n.duration.default,i=new Intl.NumberFormat(t,a.seconds).format,s=new Intl.NumberFormat(t,a.minutes).format,o=new Intl.NumberFormat(t,a.hours).format,u=/^fi$|^fi-|^da/.test(String(t))?".":":";return function(e,t){if(e=+e,!isFinite(e))return i(e);var n=~~(e/60/60),r=~~(e/60%60),a=(n?o(Math.abs(n))+u:"")+s(Math.abs(r))+u+i(Math.abs(e%60));return e<0?o(-1).replace(o(1),a):a}},date:u,time:u,plural:l,selectordinal:l,select:function(e,t){var n=e[2];return function(e,t){return(n[e]||n.other)(t)}}};t.types=h}({get exports(){return ot},set exports(e){ot=e}},ot),function(e,t){var n=st,r=ot,a=kt,i=ft,s=pt;function o(e,t){return Object.keys(t).forEach((function(n){e[n]=t[n]})),e}e.exports=function e(){var t=o({},s),u="en",l={},c=function(e){return e},h=null,d="warning",p={};function f(e,t,a){var i="string"==typeof e?e:e.default,s=v(i,"object"==typeof e&&e.id||c(i),a||u);return(s.format||(s.format=r(n(s.message),a||u,p)))(t)}f.rich=function(e,t,a){var i="string"==typeof e?e:e.default,s=v(i,"object"==typeof e&&e.id||c(i),a||u);return(s.toParts||(s.toParts=r.toParts(n(s.message,{tagsType:m}),a||u,p)))(t)};var m="<>";function g(e,t){var n=e[2];return function(e,t){var r="object"==typeof n?function(e,t){return Object.keys(e).reduce((function(n,r){return n[r]=e[r](t),n}),{})}(n,t):n;return"function"==typeof e?e(r):e}}function v(e,t,n){var r=i(n,l)||"en",a=l[r]||(l[r]={}),s=a[t];if("string"==typeof s&&(s=a[t]={message:s}),!s){var o='Translation for "'+t+'" in "'+r+'" is missing';if("warning"===d)"undefined"!=typeof console&&console.warn(o);else if("ignore"!==d)throw new Error(o);var u="function"==typeof h?h(e,t,r)||e:h||e;s=a[t]={message:u}}return s}function y(e,t,n,r,s){"object"==typeof n&&"object"!=typeof r&&(s=r,r=n,n=0);var o=i(s||u,a),l=o&&a[o][e]||b;return r["="+ +t]||r[l(t-n)]||r.other}function b(){return"other"}return p[m]=g,f.setup=function(e){return(e=e||{}).locale&&(u=e.locale),"translations"in e&&(l=e.translations||{}),e.generateId&&(c=e.generateId),"missingReplacement"in e&&(h=e.missingReplacement),e.missingTranslation&&(d=e.missingTranslation),e.formats&&(e.formats.number&&o(t.number,e.formats.number),e.formats.date&&o(t.date,e.formats.date),e.formats.time&&o(t.time,e.formats.time)),e.types&&((p=e.types)[m]=g),{locale:u,translations:l,generateId:c,missingReplacement:h,missingTranslation:d,formats:t,types:p}},f.number=function(e,n,r){var a=n&&t.number[n]||t.parseNumberPattern(n)||t.number.default;return new Intl.NumberFormat(r||u,a).format(e)},f.date=function(e,n,r){var a=n&&t.date[n]||t.parseDatePattern(n)||t.date.default;return new Intl.DateTimeFormat(r||u,a).format(e)},f.time=function(e,n,r){var a=n&&t.time[n]||t.parseDatePattern(n)||t.time.default;return new Intl.DateTimeFormat(r||u,a).format(e)},f.select=function(e,t){return t[e]||t.other},f.custom=function(e,t,n,r){return e[1]in p?p[e[1]](e,t)(n,r):n},f.plural=y.bind(null,"cardinal"),f.selectordinal=y.bind(null,"ordinal"),f.namespace=e,f}()}(it);var It=at;const Ct=(e,t)=>It({id:`text2speech.${e.toLocaleLowerCase()}`,default:e.toLocaleLowerCase(),description:`Name for a funny voice with ${t}.`}),St=e=>Math.pow(2,e/12);var Nt={SQUEAK:{name:Ct("SQUEAK","a high pitch"),gender:"female",playbackRate:St(3)},TENOR:{name:Ct("TENOR","ambiguous gender"),gender:"male",playbackRate:1},ALTO:{name:Ct("ALTO","ambiguous gender"),gender:"female",playbackRate:1},GIANT:{name:Ct("GIANT","a low pitch."),gender:"male",playbackRate:St(-3)}};var Tt={cant:1,"can't":1,dont:1,"don't":1,doesnt:1,"doesn't":1,not:1,non:1,wont:1,"won't":1,isnt:1,"isn't":1},Et={"😂":1,"❤":3,"♥":3,"😍":3,"😭":-1,"😘":3,"😊":3,"👌":2,"💕":3,"👏":2,"😁":2,"☺":3,"♡":3,"👍":2,"😩":-2,"🙏":2,"✌":2,"😏":1,"😉":2,"🙌":2,"🙈":2,"💪":2,"😄":2,"😒":-2,"💃":3,"💖":3,"😃":2,"😔":-1,"🎉":3,"😜":2,"🌸":3,"💜":3,"💙":3,"✨":1,"💗":3,"★":1,"█":-1,"☀":2,"😡":-1,"😎":2,"💋":3,"😋":3,"🙊":2,"😴":-1,"🎶":2,"💞":3,"😌":2,"🔫":-1,"💛":3,"💁":1,"💚":3,"♫":1,"😞":-1,"😆":2,"😝":2,"😪":-1,"😫":-1,"👊":1,"💀":-2,"😀":2,"😚":3,"😻":3,"💘":3,"☕":1,"👋":2,"🎊":3,"🍕":2,"❄":2,"😕":-2,"💔":-1,"😤":-2,"😈":1,"✈":2,"🔝":2,"😰":-1,"⚽":3,"😑":-2,"👑":3,"👉":1,"🍃":1,"🎁":3,"😠":-2,"🐧":2,"☆":2,"🍀":1,"🎈":3,"🎅":1,"😓":-1,"😣":-2,"😐":-2,"✊":2,"😨":-1,"😖":-1,"💤":1,"💓":3,"👎":-1,"💦":2,"✔":1,"😷":-1,"🙋":2,"🎄":2,"💩":-1,"🎵":2,"😛":3,"👯":2,"💎":2,"🌿":1,"🎂":3,"🌟":1,"🔮":1,"👫":1,"🏆":3,"✖":1,"☝":1,"😙":3,"⛄":2,"👅":2,"♪":2,"🍂":2,"💏":1,"🌴":2,"👈":2,"🌹":3,"🙆":2,"👻":1,"💰":1,"🍻":2,"🙅":-2,"🌞":2,"🍁":2,"⭐":2,"▪":1,"🎀":3,"🐷":1,"🙉":1,"🌺":2,"💅":1,"🐶":2,"🌚":2,"👽":1,"🎤":2,"👭":2,"🎧":2,"👆":1,"🍸":2,"🍷":2,"®":1,"🍉":3,"😇":3,"🏃":2,"😿":-2,"│":1,"🍺":2,"▶":1,"😲":-1,"🎸":2,"🍹":3,"💫":2,"📚":1,"😶":-1,"🌷":2,"💝":3,"💨":1,"🏈":2,"💍":2,"☔":1,"👸":3,"🇪":3,"░":-1,"🍩":1,"👾":1,"☁":1,"🌻":2,"↿":3,"🐯":2,"👼":1,"🍔":1,"😸":2,"👶":2,"↾":3,"💐":3,"🌊":2,"🍦":2,"🍓":3,"👇":1,"💆":1,"🍴":2,"😧":-1,"🇸":2,"😮":1,"🚫":-3,"😽":2,"🌈":2,"🙀":1,"⚠":-1,"🎮":2,"╯":-1,"🍆":2,"🍰":2,"✓":1,"👐":-1,"🍟":1,"🍌":2,"💑":3,"👬":-1,"🐣":2,"🎃":3,"▬":2,"￼":-3,"🐾":3,"🎓":2,"🏊":2,"📷":2,"👄":2,"🌼":4,"🚶":-1,"🐱":2,"🐸":-1,"🇺":2,"👿":-3,"🚬":2,"✿":1,"🐒":2,"🌍":3,"┊":5,"🐥":3,"🐼":1,"🎥":1,"💄":2,"⛔":2,"🏀":1,"💉":1,"💟":3,"🚗":1,"📝":1,"♦":2,"💭":1,"🌙":3,"🐟":3,"👣":1,"✂":-3,"🗿":2,"👪":-1,"🍭":1,"🌃":2,"❌":1,"🐰":3,"💊":2,"🚨":3,"😦":-2,"🍪":1,"🍣":-2,"✧":1,"🎆":3,"🎎":4,"🇩":3,"✅":2,"📱":1,"🙍":-2,"🍑":1,"🎼":1,"🔊":2,"🌌":2,"🍎":1,"🐻":2,"╰":-1,"💇":1,"♬":1,"🔴":2,"🍱":-2,"🍊":2,"🍒":1,"🐭":3,"👟":2,"🌎":1,"🍍":2,"🐮":3,"📲":1,"☼":1,"🌅":1,"🇷":3,"👠":1,"🌽":2,"💧":-1,"🍬":1,"😺":2,"🚀":2,"¦":3,"💢":1,"🎬":1,"🍧":1,"🍜":2,"🐏":3,"🏄":2,"➤":1,"⬆":1,"🍋":1,"🆗":2,"⚪":2,"📺":2,"🍅":1,"⛅":2,"🐢":1,"👙":2,"🏡":2,"🌾":2,"◉":1,"✏":1,"🐬":2,"🇹":3,"♣":1,"🐝":1,"🌝":1,"🇮":3,"🔋":-3,"🐍":1,"♔":2,"🔵":1,"😾":-2,"🌕":3,"🐨":2,"🔐":1,"💿":3,"🌳":2,"👰":2,"❀":2,"⚓":3,"🚴":3,"▀":-1,"👗":1,"➕":2,"💬":2,"▒":-1,"🔜":1,"🍨":1,"💲":1,"🍙":1,"🍥":-4,"▸":1,"♛":1,"😼":1,"🐙":2,"👨":2,"🍚":2,"♨":4,"🎹":1,"♕":2,"▃":5,"🇬":1,"🇧":1,"☠":-1,"🐠":2,"🚹":3,"💵":2,"✰":4,"╠":1,"👛":2,"🌱":3,"💻":1,"🌏":1,"▄":-1,"👓":1,"◄":1,"⚾":-1,"🌲":2,"👴":1,"🏠":2,"🍇":1,"🍘":2,"🐇":1,"🔞":-1,"👵":2,"◀":1,"🔙":1,"🌵":1,"🍮":-1,"🎇":3,"🐎":2,"➔":-1,"🐤":2,"╩":1,"🌑":2,"🚲":2,"🐑":-1,"🏁":2,"🎾":3,"╚":1,"🈹":1,"👮":-2,"☹":-3,"🐵":2,"✪":1,"◕":2,"🗼":3,"▐":-1,"♠":1,"┳":-2,"👺":-2,"🐚":1,"👂":-1,"🗽":1,"🍵":2,"🆒":2,"🐺":1,"⇨":2,"🌓":3,"🔒":1,"╬":-1,"👳":3,"🌂":1,"🚌":1,"♩":3,"🍡":-1,"❥":1,"🎡":1,"💌":2,"🐩":2,"🌜":2,"⌚":1,"🚿":3,"🔆":3,"🌛":3,"💂":-1,"🐔":1,"🙎":-1,"🏩":2,"🇫":2,"🔨":-1,"📢":2,"🐦":2,"🐲":-1,"♻":2,"🌘":3,"🌔":3,"👖":2,"😗":3,"🐄":1,"◟":-1,"🍢":-1,"🎨":1,"⬇":2,"🚼":3,"🇴":2,"🌗":3,"🌖":3,"🔅":5,"👜":1,"🐌":3,"💼":3,"🐹":1,"🌠":3,"🐈":1,"🌁":1,"⚫":1,"♧":2,"🏰":1,"🚵":2,"🎢":2,"🎷":3,"🎐":1,"┈":-4,"╗":2,"🌇":3,"⏰":2,"🚂":1,"◠":2,"🎿":2,"🆔":4,"🌒":3,"🐪":3,"╔":1,"╝":2,"👔":2,"🆓":1,"🐋":1,"▽":2,"🐛":1,"👕":2,"💳":2,"🏧":5,"💡":3,"⬅":2,"🐫":2,"🇱":2,"📹":2,"👞":2,"👚":3,"□":-2,"🚣":3,"🏉":3,"🗻":3,"╦":2,"⛺":3,"🐕":1,"🏂":2,"👡":2,"📻":2,"✒":1,"🌰":3,"🏢":1,"🎒":3,"⌒":3,"🏫":-2,"📴":4,"🚢":1,"🚚":-1,"🐉":1,"❒":1,"🔔":5,"◢":4,"🏥":1,"🚖":-1,"▌":-2,"☛":2,"💒":3,"🚤":2,"🐐":2,"■":-2,"🔚":2,"🎻":2,"🔷":1,"🎽":2,"📅":1,"🎺":3,"🍈":-3,"✉":1,"◤":5,"○":3,"🍼":3,"🚛":-2,"📓":1,"☉":1,"💴":-2,"➰":-1,"🔌":-1,"📕":1,"📣":2,"🚓":1,"🐗":3,"⛳":4,"┻":-3,"┛":3,"┃":2,"💺":1,"🏇":-1,"☻":1,"📞":2,"Ⓐ":-1,"🌉":3,"🚩":-2,"✎":3,"📃":2,"🏨":1,"📌":-3,"♎":-1,"💷":2,"🚄":3,"▲":3,"⛵":3,"🔸":1,"🚜":5,"🐆":2,"👒":1,"❕":1,"🔛":2,"♢":2,"🇲":2,"❅":4,"👝":2,"✞":2,"◡":1,"🎋":3,"👥":1,"🐡":1,"◆":4,"🔭":2,"🎪":1,"🐜":3,"♌":4,"☐":-5,"👷":1,"🔈":1,"📄":5,"🚐":4,"🌋":3,"📡":1,"🚳":5,"✘":4,"🅰":1,"🇼":2,"┓":3,"┣":3,"Ⓛ":2,"Ⓔ":2,"👤":4,"🚁":1,"🎠":3,"🐁":-2,"📗":1,"┐":-1,"♂":1,"📯":-1,"🔩":1,"👢":4,"◂":2,"📰":1,"📶":2,"🌄":1,"🗾":2,"🔶":2,"🏤":2,"🎩":2,"Ⓜ":1,"🔧":-4,"🐅":1,"♮":1,"🅾":-1,"📦":1,"🚊":1,"🔲":3,"△":1,"📆":5,"❛":2,"📉":2,"▵":2,"🔎":3,"☜":1,"🇯":2,"🇵":2,"📘":1,"ⓔ":3,"🔑":1,"⭕":2,"🔘":1,"🚭":5,"🚉":3,"🚪":3,"➳":2,"🚃":3,"┯":-3,"🆙":2,"🆖":1,"┗":5,"Ⓞ":2,"❇":3,"✴":3,"☊":5,"🔕":-2,"⬛":-2,"🚞":3,"🍶":3,"🌐":3,"♀":1,"🚅":3,"🚒":-2,"♋":1,"♍":3,"🕝":-2,"ⓐ":5,"📙":1,"Ⓢ":1,"📋":3,"🎱":1,"🐞":1,"🔺":1,"ⓡ":5,"♤":3,"🎯":3,"🔉":3,"↩":5,"🚾":1,"🎣":-4,"🔣":1,"❎":-5,"➥":1,"🎌":5,"◣":1,"⏬":5,"♭":1,"ⓞ":5,"🔳":2,"🏭":2,"🎳":-3,"☚":5,"➽":2,"➫":2,"➖":-5,"꒰":2,"꒱":2,"◝":-3,"📑":5,"ⓧ":5,"🔟":5,"〓":5,"ⓜ":2,"➠":5,"🚆":2,"℅":-5,"☃":2,"🚽":5,"ⓝ":5,"⇦":5,"👲":2,"🚡":-3,"🔬":5,"➗":-3,"📈":2,"⏪":2,"◎":5,"꒦":-5,"📎":5,"⑅":5,"✭":5,"♓":2,"┏":5,"☇":5,"࿎":-5,"👘":5,"↙":5,"Ⓕ":2,"Ⓦ":2,"Ⓟ":2,"🕑":2,"🕛":5,"♈":-5,"↬":5,"✍":5,"🏦":5,"🔻":5,"ⓟ":5,"ⓕ":5,"ⓘ":5,"♿":5,"⇗":5,"⇘":5,"ⓨ":5,"ⓙ":5,"▫":5,"🔇":5,"⌃":-5,"🔖":5,"📜":5,"🚝":5,"┘":-5,"✝":-5,"⍣":-5,"📮":-5,"🕕":-5,"🔯":5,"➸":5,"꒵":5,"🕥":-5,"✽":5,"📼":5,"🕐":-5,"🀄":5,"✬":5,"✫":5,"🕔":-5,"❣":5,"📫":5,"🉐":5,"🈂":-5,"🎰":-5,"҂":-5,"╤":-5,"📔":5},Rt={labels:{abandon:-2,abandoned:-2,abandons:-2,abducted:-2,abduction:-2,abductions:-2,abhor:-3,abhorred:-3,abhorrent:-3,abhors:-3,abilities:2,ability:2,aboard:1,aborted:-1,aborts:-1,absentee:-1,absentees:-1,absolve:2,absolved:2,absolves:2,absolving:2,absorbed:1,abuse:-3,abused:-3,abuses:-3,abusing:-3,abusive:-3,accept:1,acceptable:1,acceptance:1,accepted:1,accepting:1,accepts:1,accessible:1,accident:-2,accidental:-2,accidentally:-2,accidents:-2,acclaim:2,acclaimed:2,accolade:2,accomplish:2,accomplished:2,accomplishes:2,accomplishment:2,accomplishments:2,accusation:-2,accusations:-2,accuse:-2,accused:-2,accuses:-2,accusing:-2,ache:-2,achievable:1,aching:-2,acquit:2,acquits:2,acquitted:2,acquitting:2,acrimonious:-3,active:1,adequate:1,admire:3,admired:3,admires:3,admiring:3,admit:-1,admits:-1,admitted:-1,admonish:-2,admonished:-2,adopt:1,adopts:1,adorable:3,adoration:3,adore:3,adored:3,adores:3,adoring:3,adoringly:3,advanced:1,advantage:2,advantageous:2,advantageously:2,advantages:2,adventure:2,adventures:2,adventurous:2,adversary:-1,advisable:1,affected:-1,affection:3,affectionate:3,affectionateness:3,afflicted:-1,affordable:2,affronted:-1,aficionados:2,afraid:-2,aggravate:-2,aggravated:-2,aggravates:-2,aggravating:-2,aggression:-2,aggressions:-2,aggressive:-2,aggressiveness:-2,aghast:-2,agog:2,agonise:-3,agonised:-3,agonises:-3,agonising:-3,agonize:-3,agonized:-3,agonizes:-3,agonizing:-3,agree:1,agreeable:2,agreed:1,agreement:1,agrees:1,alarm:-2,alarmed:-2,alarmist:-2,alarmists:-2,alas:-1,alert:-1,alienation:-2,alive:1,allegation:-2,allegations:-2,allergic:-2,allow:1,ally:2,alone:-2,altruistic:2,amaze:2,amazed:2,amazes:2,amazing:4,ambitious:2,ambivalent:-1,amicable:2,amuse:3,amused:3,amusement:3,amusements:3,anger:-3,angered:-3,angers:-3,angry:-3,anguish:-3,anguished:-3,animosity:-2,annoy:-2,annoyance:-2,annoyed:-2,annoying:-2,annoys:-2,antagonistic:-2,anti:-1,anticipation:1,anxiety:-2,anxious:-2,apathetic:-3,apathy:-3,apeshit:-3,apocalyptic:-2,apologise:-1,apologised:-1,apologises:-1,apologising:-1,apologize:-1,apologized:-1,apologizes:-1,apologizing:-1,apology:-1,appalled:-2,appalling:-2,appealing:2,appease:2,appeased:2,appeases:2,appeasing:2,applaud:2,applauded:2,applauding:2,applauds:2,applause:2,appreciate:2,appreciated:2,appreciates:2,appreciating:2,appreciation:2,apprehensive:-2,appropriate:2,appropriately:2,approval:2,approved:2,approves:2,ardent:1,arrest:-2,arrested:-3,arrests:-2,arrogant:-2,arsehole:-4,ashame:-2,ashamed:-2,ass:-4,assassination:-3,assassinations:-3,assault:-2,assaults:-2,asset:2,assets:2,assfucking:-4,asshole:-4,astonished:2,astound:3,astounded:3,astounding:3,astoundingly:3,astounds:3,atrocious:-3,atrocity:-3,attack:-1,attacked:-1,attacking:-1,attacks:-1,attract:1,attracted:1,attracting:2,attraction:2,attractions:2,attractive:2,attractively:2,attractiveness:2,attracts:1,audacious:3,aura:1,authority:1,avenge:-2,avenged:-2,avenger:-2,avengers:-2,avenges:-2,avenging:-2,avert:-1,averted:-1,averts:-1,avid:2,avoid:-1,avoided:-1,avoids:-1,await:-1,awaited:-1,awaits:-1,award:3,awarded:3,awards:3,awesome:4,awful:-3,awkward:-2,axe:-1,axed:-1,backed:1,backing:2,backs:1,bad:-3,"bad luck":-2,badass:-3,badly:-3,badness:-3,bailout:-2,balanced:1,bamboozle:-2,bamboozled:-2,bamboozles:-2,ban:-2,banish:-1,bankrupt:-3,bankruptcy:-3,bankster:-3,banned:-2,barbarian:-2,barbaric:-2,barbarous:-2,bargain:2,barrier:-2,bastard:-5,bastards:-5,battle:-1,battled:-1,battles:-1,battling:-2,beaten:-2,beatific:3,beating:-1,beauties:3,beautiful:3,beautifully:3,beautify:3,beauty:3,befit:2,befitting:2,belittle:-2,belittled:-2,beloved:3,benefactor:2,benefactors:2,benefit:2,benefits:2,benefitted:2,benefitting:2,benevolent:3,bereave:-2,bereaved:-2,bereaves:-2,bereaving:-2,best:3,"best damn":4,betray:-3,betrayal:-3,betrayed:-3,betraying:-3,betrays:-3,better:2,bias:-1,biased:-2,big:1,bitch:-5,bitches:-5,bitter:-2,bitterest:-2,bitterly:-2,bizarre:-2,blackmail:-3,blackmailed:-3,blackmailing:-3,blackmails:-3,blah:-2,blame:-2,blamed:-2,blames:-2,blaming:-2,bless:2,blesses:2,blessing:3,blessings:3,blind:-1,bliss:3,blissful:3,blithe:2,bloated:-1,block:-1,blockade:-2,blockbuster:3,blocked:-1,blocking:-1,blocks:-1,bloody:-3,blurry:-2,boastful:-2,bold:2,boldly:2,bomb:-1,boost:1,boosted:1,boosting:1,boosts:1,bore:-2,bored:-2,boring:-3,bother:-2,bothered:-2,bothers:-2,bothersome:-2,boycott:-2,boycotted:-2,boycotting:-2,boycotts:-2,brainwashing:-3,brave:2,braveness:2,bravery:2,bravura:3,breach:-2,breached:-2,breaches:-2,breaching:-2,breakthrough:3,breathtaking:5,bribe:-3,bribed:-3,bribes:-3,bribing:-3,bright:1,brightest:2,brightness:1,brilliant:4,brilliance:3,brilliances:3,brisk:2,broke:-1,broken:-1,brooding:-2,brutal:-3,brutally:-3,bullied:-2,bullshit:-4,bully:-2,bullying:-2,bummer:-2,buoyant:2,burden:-2,burdened:-2,burdening:-2,burdens:-2,burglar:-2,burglary:-2,calm:2,calmed:2,calming:2,calms:2,"can't stand":-3,cancel:-1,cancelled:-1,cancelling:-1,cancels:-1,cancer:-1,capabilities:1,capability:1,capable:1,captivated:3,care:2,carefree:1,careful:2,carefully:2,carefulness:2,careless:-2,cares:2,caring:2,"cashing in":-2,casualty:-2,catastrophe:-3,catastrophic:-4,cautious:-1,celebrate:3,celebrated:3,celebrates:3,celebrating:3,celebration:3,celebrations:3,censor:-2,censored:-2,censors:-2,certain:1,chagrin:-2,chagrined:-2,challenge:-1,champion:2,championed:2,champions:2,chance:2,chances:2,chaos:-2,chaotic:-2,charged:-3,charges:-2,charisma:2,charitable:2,charm:3,charming:3,charmingly:3,charmless:-3,chastise:-3,chastised:-3,chastises:-3,chastising:-3,cheat:-3,cheated:-3,cheater:-3,cheaters:-3,cheating:-3,cheats:-3,cheer:2,cheered:2,cheerful:2,cheerfully:2,cheering:2,cheerless:-2,cheers:2,cheery:3,cherish:2,cherished:2,cherishes:2,cherishing:2,chic:2,chide:-3,chided:-3,chides:-3,chiding:-3,childish:-2,chilling:-1,choke:-2,choked:-2,chokes:-2,choking:-2,clarifies:2,clarity:2,clash:-2,classy:3,clean:2,cleaner:2,clear:1,cleared:1,clearly:1,clears:1,clever:2,clouded:-1,clueless:-2,cock:-5,cocksucker:-5,cocksuckers:-5,cocky:-2,coerced:-2,coercion:-2,collapse:-2,collapsed:-2,collapses:-2,collapsing:-2,collide:-1,collides:-1,colliding:-1,collision:-2,collisions:-2,colluding:-3,combat:-1,combats:-1,comedy:1,comfort:2,comfortable:2,comfortably:2,comforting:2,comforts:2,comic:1,commend:2,commended:2,commit:1,commitment:2,commits:1,committed:1,committing:1,compassion:2,compassionate:2,compelled:1,competencies:1,competent:2,competitive:2,complacent:-2,complain:-2,complained:-2,complaining:-2,complains:-2,complaint:-2,complaints:-2,complicating:-2,compliment:2,complimented:2,compliments:2,comprehensive:2,concerned:-2,conciliate:2,conciliated:2,conciliates:2,conciliating:2,condemn:-2,condemnation:-2,condemned:-2,condemns:-2,confidence:2,confident:2,confidently:2,conflict:-2,conflicting:-2,conflictive:-2,conflicts:-2,confuse:-2,confused:-2,confusing:-2,congrats:2,congratulate:2,congratulation:2,congratulations:2,consent:2,consents:2,consolable:2,conspiracy:-3,constipation:-2,constrained:-2,contagion:-2,contagions:-2,contagious:-1,contaminant:-2,contaminants:-2,contaminate:-2,contaminated:-2,contaminates:-2,contaminating:-2,contamination:-2,contaminations:-2,contempt:-2,contemptible:-2,contemptuous:-2,contemptuously:-2,contend:-1,contender:-1,contending:-1,contentious:-2,contestable:-2,controversial:-2,controversially:-2,controversies:-2,controversy:-2,convicted:-2,convince:1,convinced:1,convinces:1,convivial:2,cool:1,"cool stuff":3,cornered:-2,corpse:-1,corrupt:-3,corrupted:-3,corrupting:-3,corruption:-3,corrupts:-3,costly:-2,courage:2,courageous:2,courageously:2,courageousness:2,courteous:2,courtesy:2,"cover-up":-3,coward:-2,cowardly:-2,coziness:2,cramp:-1,crap:-3,crappy:-3,crash:-2,crazier:-2,craziest:-2,crazy:-2,creative:2,crestfallen:-2,cried:-2,cries:-2,crime:-3,crimes:-3,criminal:-3,criminals:-3,criminate:-3,criminated:-3,criminates:-3,crisis:-3,critic:-2,criticise:-2,criticised:-2,criticises:-2,criticising:-2,criticism:-2,criticize:-2,criticized:-2,criticizes:-2,criticizing:-2,critics:-2,critique:-2,crowding:-1,crude:-1,cruel:-3,cruelty:-3,crush:-1,crushed:-2,crushes:-1,crushing:-1,cry:-1,crying:-2,cunning:2,cunt:-5,curious:1,curse:-1,cut:-1,cutback:-2,cutbacks:-2,cute:2,cuts:-1,cutting:-1,cynic:-2,cynical:-2,cynicism:-2,damage:-3,damaged:-3,damages:-3,damaging:-3,damn:-2,"damn cute":3,"damn good":4,damned:-4,damnit:-4,danger:-2,dangerous:-2,dangerously:-2,daredevil:2,daring:2,darkest:-2,darkness:-1,dauntless:2,dazzling:3,dead:-3,deadening:-2,deadlock:-2,deadly:-3,deafening:-1,dear:2,dearly:3,death:-2,deaths:-2,debonair:2,debt:-2,deceit:-3,deceitful:-3,deceive:-3,deceived:-3,deceives:-3,deceiving:-3,deception:-3,deceptive:-3,decisive:1,dedicated:2,dedication:2,defeat:-2,defeated:-2,defect:-3,defective:-3,defects:-3,defender:2,defenders:2,defenseless:-2,defer:-1,deferring:-1,defiant:-1,deficient:-2,deficiency:-2,deficiencies:-2,deficit:-2,deformed:-2,deformities:-2,deformity:-2,defraud:-3,defrauds:-3,deft:2,defunct:-2,degrade:-2,degraded:-2,degrades:-2,dehumanize:-2,dehumanized:-2,dehumanizes:-2,dehumanizing:-2,deject:-2,dejected:-2,dejecting:-2,dejects:-2,delay:-1,delayed:-1,delectable:3,delicious:3,delight:3,delighted:3,delightful:3,delightfully:3,delighting:3,delights:3,demand:-1,demanded:-1,demanding:-1,demands:-1,demonstration:-1,demoralize:-2,demoralized:-2,demoralizes:-2,demoralizing:-2,denial:-2,denials:-2,denied:-2,denier:-2,deniers:-2,denies:-2,denounce:-2,denounces:-2,dent:-2,deny:-2,denying:-2,deplore:-3,deplored:-3,deplores:-3,deploring:-3,deport:-2,deported:-2,deporting:-2,deports:-2,deportation:-2,deportations:-2,depressed:-2,depressing:-2,deprivation:-3,derail:-2,derailed:-2,derails:-2,derelict:-2,deride:-2,derided:-2,derides:-2,deriding:-2,derision:-2,desirable:2,desire:1,desired:2,desirous:2,despair:-3,despairing:-3,despairs:-3,desperate:-3,desperately:-3,despondent:-3,destroy:-3,destroyed:-3,destroying:-3,destroys:-3,destruction:-3,destructive:-3,detached:-1,detain:-2,detained:-2,detention:-2,deteriorate:-2,deteriorated:-2,deteriorates:-2,deteriorating:-2,determined:2,deterrent:-2,detract:-1,detracted:-1,detracts:-1,devastate:-2,devastated:-2,devastating:-2,devastation:-2,devastations:-2,devoted:3,devotion:2,devotional:2,diamond:1,dick:-4,dickhead:-4,die:-3,died:-3,difficult:-1,diffident:-2,dignity:2,dilemma:-1,dilligence:2,dipshit:-3,dire:-3,direful:-3,dirt:-2,dirtier:-2,dirtiest:-2,dirty:-2,disabilities:-2,disability:-2,disabling:-1,disadvantage:-2,disadvantaged:-2,disagree:-2,disagreeable:-2,disagreement:-2,disappear:-1,disappeared:-1,disappears:-1,disappoint:-2,disappointed:-2,disappointing:-2,disappointment:-2,disappointments:-2,disappoints:-2,disapproval:-2,disapprovals:-2,disapprove:-2,disapproved:-2,disapproves:-2,disapproving:-2,disaster:-2,disasters:-2,disastrous:-3,disbelieve:-2,discard:-1,discarded:-1,discarding:-1,discards:-1,discernment:2,discomfort:-2,disconsolate:-2,disconsolation:-2,discontented:-2,discord:-2,discounted:-1,discouraged:-2,discredited:-2,discriminate:-2,discriminated:-2,discriminates:-2,discriminating:-2,discriminatory:-2,disdain:-2,disease:-1,diseases:-1,disgrace:-2,disgraced:-2,disguise:-1,disguised:-1,disguises:-1,disguising:-1,disgust:-3,disgusted:-3,disgustful:-3,disgusting:-3,disheartened:-2,dishonest:-2,disillusioned:-2,disinclined:-2,disjointed:-2,dislike:-2,disliked:-2,dislikes:-2,dismal:-2,dismayed:-2,dismissed:-2,disorder:-2,disorders:-2,disorganized:-2,disoriented:-2,disparage:-2,disparaged:-2,disparages:-2,disparaging:-2,displeased:-2,displeasure:-2,disproportionate:-2,dispute:-2,disputed:-2,disputes:-2,disputing:-2,disqualified:-2,disquiet:-2,disregard:-2,disregarded:-2,disregarding:-2,disregards:-2,disrespect:-2,disrespected:-2,disrupt:-2,disrupted:-2,disrupting:-2,disruption:-2,disruptions:-2,disruptive:-2,disrupts:-2,dissatisfied:-2,distasteful:-2,distinguished:2,distort:-2,distorted:-2,distorting:-2,distorts:-2,distract:-2,distracted:-2,distraction:-2,distracts:-2,distress:-2,distressed:-2,distresses:-2,distressing:-2,distrust:-3,distrustful:-3,disturb:-2,disturbed:-2,disturbing:-2,disturbs:-2,dithering:-2,diverting:-1,dizzy:-1,dodging:-2,dodgy:-2,"does not work":-3,dolorous:-2,donate:2,donated:2,donates:2,donating:2,donation:2,"dont like":-2,doom:-2,doomed:-2,doubt:-1,doubted:-1,doubtful:-1,doubting:-1,doubts:-1,douche:-3,douchebag:-3,dour:-2,downcast:-2,downer:-2,downhearted:-2,downside:-2,drag:-1,dragged:-1,drags:-1,drained:-2,dread:-2,dreaded:-2,dreadful:-3,dreading:-2,dream:1,dreams:1,dreary:-2,droopy:-2,drop:-1,dropped:-1,drown:-2,drowned:-2,drowns:-2,drudgery:-2,drunk:-2,dubious:-2,dud:-2,dull:-2,dumb:-3,dumbass:-3,dump:-1,dumped:-2,dumps:-1,dupe:-2,duped:-2,dupery:-2,durable:2,dying:-3,dysfunction:-2,eager:2,earnest:2,ease:2,easy:1,ecstatic:4,eerie:-2,eery:-2,effective:2,effectively:2,effectiveness:2,effortlessly:2,elated:3,elation:3,elegant:2,elegantly:2,embarrass:-2,embarrassed:-2,embarrasses:-2,embarrassing:-2,embarrassment:-2,embezzlement:-3,embittered:-2,embrace:1,emergency:-2,empathetic:2,empower:2,empowerment:2,emptiness:-1,empty:-1,enchanted:2,encourage:2,encouraged:2,encouragement:2,encourages:2,encouraging:2,endorse:2,endorsed:2,endorsement:2,endorses:2,enemies:-2,enemy:-2,energetic:2,engage:1,engages:1,engrossed:1,engrossing:3,enjoy:2,enjoyable:2,enjoyed:2,enjoying:2,enjoys:2,enlighten:2,enlightened:2,enlightening:2,enlightens:2,ennui:-2,enrage:-2,enraged:-2,enrages:-2,enraging:-2,enrapture:3,enslave:-2,enslaved:-2,enslaves:-2,ensure:1,ensuring:1,enterprising:1,entertaining:2,enthral:3,enthusiastic:3,entitled:1,entrusted:2,envies:-1,envious:-2,"environment-friendly":2,envy:-1,envying:-1,erroneous:-2,error:-2,errors:-2,escape:-1,escapes:-1,escaping:-1,esteem:2,esteemed:2,ethical:2,euphoria:3,euphoric:4,evacuate:-1,evacuated:-1,evacuates:-1,evacuating:-1,evacuation:-1,evergreen:2,evergreens:2,evergreening:-3,eviction:-1,evil:-3,exacerbate:-2,exacerbated:-2,exacerbates:-2,exacerbating:-2,exaggerate:-2,exaggerated:-2,exaggerates:-2,exaggerating:-2,exasparate:-2,exasperated:-2,exasperates:-2,exasperating:-2,excellence:3,excellent:3,excite:3,excited:3,excitement:3,exciting:3,exclude:-1,excluded:-2,exclusion:-1,exclusive:2,excruciatingly:-1,excuse:-1,exempt:-1,exhausted:-2,exhilarated:3,exhilarates:3,exhilarating:3,exonerate:2,exonerated:2,exonerates:2,exonerating:2,expand:1,expands:1,expel:-2,expelled:-2,expelling:-2,expels:-2,expertly:2,exploit:-2,exploited:-2,exploiting:-2,exploits:-2,exploration:1,explorations:1,expose:-1,exposed:-1,exposes:-1,exposing:-1,exquisite:3,extend:1,extends:1,extremist:-2,extremists:-2,exuberant:4,exultant:3,exultantly:3,fabulous:4,fabulously:4,fad:-2,fag:-3,faggot:-3,faggots:-3,fail:-2,failed:-2,failing:-2,fails:-2,failure:-2,failures:-2,fainthearted:-2,fair:2,fairness:2,faith:1,faithful:3,fake:-3,faker:-3,fakes:-3,faking:-3,fallen:-2,falling:-1,false:-1,falsely:-2,falsified:-3,falsify:-3,fame:1,famine:-2,famous:2,fan:3,fantastic:4,farce:-1,fascinate:3,fascinated:3,fascinates:3,fascinating:3,fascination:3,fascist:-2,fascists:-2,fatal:-3,fatalities:-3,fatality:-3,fatigue:-2,fatigued:-2,fatigues:-2,fatiguing:-2,favor:2,favorable:2,favorably:2,favored:2,favorite:2,favorited:2,favorites:2,favors:2,favour:2,favourable:2,favourably:2,favoured:2,favourite:2,favourited:2,favourites:2,favours:2,fear:-2,fearful:-2,fearfully:-2,fearing:-2,fearless:2,fearlessness:2,fearsome:-2,"fed up":-3,feeble:-2,feeling:1,felonies:-3,felony:-3,fertile:2,fervent:2,fervid:2,festive:2,fever:-2,fiasco:-3,fidgety:-2,fight:-1,fighting:-2,fine:2,fines:-2,finest:3,fire:-2,fired:-2,firing:-2,fit:1,fitness:1,filth:-2,filthy:-2,flagship:2,flaw:-2,flawed:-3,flawless:2,flawlessly:2,flaws:-2,flees:-1,flop:-2,flops:-2,flu:-2,flustered:-2,focused:2,fond:2,fondness:2,fool:-2,foolish:-2,fools:-2,forbid:-1,forbidden:-2,forbidding:-2,forced:-1,foreclosure:-2,foreclosures:-2,forefront:1,forget:-1,forgetful:-2,forgettable:-1,forgive:1,forgiving:1,forgot:-1,forgotten:-1,fortune:2,fortunate:2,fortunately:2,foul:-3,frantic:-1,fraud:-4,frauds:-4,fraudster:-4,fraudsters:-4,fraudulence:-4,fraudulent:-4,freak:-2,free:1,freedom:2,freedoms:2,frenzy:-3,fresh:1,friend:1,friendliness:2,friendly:2,friendship:2,fright:-2,frightened:-2,frightening:-3,frikin:-2,frisky:2,frowning:-1,fruitless:-2,frustrate:-2,frustrated:-2,frustrates:-2,frustrating:-2,frustration:-2,ftw:3,fuck:-4,fucked:-4,fucker:-4,fuckers:-4,fuckface:-4,fuckhead:-4,fuckin:-4,fucking:-4,"fucking amazing":4,"fucking beautiful":4,"fucking cute":4,"fucking fantastic":4,"fucking good":4,"fucking great":4,"fucking hot":2,"fucking love":4,"fucking loves":4,"fucking perfect":4,fucktard:-4,fud:-3,fuked:-4,fuking:-4,fulfill:2,fulfilled:2,fulfillment:2,fulfills:2,fuming:-2,fun:4,funeral:-1,funerals:-1,funky:2,funnier:4,funny:4,furious:-3,futile:-2,gag:-2,gagged:-2,gain:2,gained:2,gaining:2,gains:2,gallant:3,gallantly:3,gallantry:3,"game-changing":3,garbage:-1,gem:3,generous:2,generously:2,genial:3,ghastly:-2,ghost:-1,giddy:-2,gift:2,glad:3,glamorous:3,glamourous:3,glee:3,gleeful:3,gloom:-1,gloomy:-2,glorious:2,glory:2,glum:-2,god:1,goddamn:-3,godsend:4,gold:2,good:3,goodlooking:3,goodmorning:1,goodness:3,goodwill:3,goofiness:-2,goofy:-2,grace:1,graceful:2,gracious:3,grand:3,grant:1,granted:1,granting:1,grants:1,grateful:3,gratification:2,grave:-2,gray:-1,grisly:-2,gr8:3,great:3,greater:3,greatest:3,greed:-3,greedy:-2,"green wash":-3,"green washing":-3,greenwash:-3,greenwasher:-3,greenwashers:-3,greenwashing:-3,greet:1,greeted:1,greeting:1,greetings:2,greets:1,grey:-1,grief:-2,grieved:-2,grim:-2,gripping:2,groan:-2,groaned:-2,groaning:-2,groans:-2,gross:-2,growing:1,growth:2,growths:2,gruesome:-3,guarantee:1,guilt:-3,guilty:-3,gullibility:-2,gullible:-2,gun:-1,ha:2,hacked:-1,haha:3,hahaha:3,hahahah:3,hail:2,hailed:2,hallelujah:3,handpicked:1,handsome:3,hapless:-2,haplessness:-2,happiest:3,happiness:3,happy:3,harass:-3,harassed:-3,harasses:-3,harassing:-3,harassment:-3,hard:-1,hardier:2,hardship:-2,hardy:2,harm:-2,harmed:-2,harmful:-2,harming:-2,harmony:2,harmonious:2,harmoniously:2,harms:-2,harried:-2,harsh:-2,harsher:-2,harshest:-2,harshly:-2,hate:-3,hated:-3,hater:-3,haters:-3,hates:-3,hating:-3,hatred:-3,haunt:-1,haunted:-2,haunting:1,haunts:-1,havoc:-2,hazardous:-3,headache:-2,healthy:2,heartbreaking:-3,heartbroken:-3,heartfelt:3,heartless:-2,heartwarming:3,heaven:2,heavenly:4,heavyhearted:-2,hehe:2,hell:-4,hellish:-2,help:2,helpful:2,helping:2,helpless:-2,helps:2,hero:2,heroes:2,heroic:3,hesitant:-2,hesitate:-2,hid:-1,hide:-1,hideous:-3,hides:-1,hiding:-1,highlight:2,hilarious:2,hinder:-2,hindrance:-2,hoax:-2,hollow:-1,homeless:-2,homesick:-2,homicide:-2,homicides:-2,honest:2,honor:2,honored:2,honoring:2,honour:2,honoured:2,honouring:2,hooligan:-2,hooliganism:-2,hooligans:-2,hope:2,hopeful:2,hopefully:2,hopeless:-2,hopelessness:-2,hopes:2,hoping:2,horrendous:-3,horrid:-3,horrible:-3,horrific:-3,horrified:-3,hospitalized:-2,hostile:-2,huckster:-2,hug:2,huge:1,hugs:2,humane:2,humble:1,humbug:-2,humerous:3,humiliated:-3,humiliation:-3,humor:2,humorous:2,humour:2,humourous:2,hunger:-2,hurrah:5,hurt:-2,hurting:-2,hurts:-2,hypocritical:-2,hysteria:-3,hysterical:-3,hysterics:-3,icky:-3,idiocy:-3,idiot:-3,idiotic:-3,ignorance:-2,ignorant:-2,ignore:-1,ignored:-2,ignores:-1,ill:-2,"ill-fated":-2,illegal:-3,illegally:-3,illegitimate:-3,illiteracy:-2,illness:-2,illnesses:-2,illogical:-2,imaginative:2,imbecile:-3,immobilized:-1,immortal:2,immune:1,impair:-2,impaired:-2,impairing:-2,impairment:-2,impairs:-2,impatient:-2,impeachment:-3,impeachments:-3,impede:-2,impeded:-2,impedes:-2,impeding:-2,impedingly:-2,imperfect:-2,importance:2,important:2,impose:-1,imposed:-1,imposes:-1,imposing:-1,imposter:-2,impotent:-2,impress:3,impressed:3,impresses:3,impressive:3,imprisoned:-2,imprisonment:-2,improper:-2,improperly:-2,improve:2,improved:2,improvement:2,improves:2,improving:2,inability:-2,inaction:-2,inadequate:-2,inadvertently:-2,inappropriate:-2,incapable:-2,incapacitated:-2,incapacitates:-2,incapacitating:-2,incense:-2,incensed:-2,incenses:-2,incensing:-2,incoherent:-2,incompetence:-2,incompetent:-2,incomplete:-1,incomprehensible:-2,inconsiderate:-2,inconvenience:-2,inconvenient:-2,increase:1,increased:1,indecisive:-2,indestructible:2,indicted:-2,indifference:-2,indifferent:-2,indignant:-2,indignation:-2,indoctrinate:-2,indoctrinated:-2,indoctrinates:-2,indoctrinating:-2,inediable:-2,inexorable:-3,inexcusable:-3,ineffective:-2,ineffectively:-2,ineffectual:-2,inefficiency:-2,inefficient:-2,inefficiently:-2,inept:-2,ineptitude:-2,infantile:-2,infantilized:-2,infatuated:2,infatuation:2,infect:-2,infected:-2,infecting:-2,infection:-2,infections:-2,infectious:-2,infects:-2,inferior:-2,infest:-2,infested:-2,infesting:-2,infests:-2,inflamed:-2,inflict:-2,inflicted:-2,inflicting:-2,inflicts:-2,influential:2,infract:-2,infracted:-2,infracting:-2,infracts:-2,infringement:-2,infuriate:-2,infuriated:-2,infuriates:-2,infuriating:-2,inhibit:-1,inhuman:-2,injured:-2,injuries:-2,injury:-2,injustice:-2,innovate:1,innovates:1,innovation:1,innovative:2,inoperative:-2,inquisition:-2,inquisitive:2,insane:-2,insanity:-2,insecure:-2,insensitive:-2,insensitivity:-2,insignificant:-2,insipid:-2,insolvent:-2,insomnia:-2,inspiration:2,inspirational:2,inspire:2,inspired:2,inspires:2,inspiring:3,insufficiency:-2,insufficient:-2,insufficiently:-2,insult:-2,insulted:-2,insulting:-2,insults:-2,intact:2,integrity:2,intelligent:2,intense:1,interest:1,interested:2,interesting:2,interests:1,interrogated:-2,interrupt:-2,interrupted:-2,interrupting:-2,interruption:-2,interrupts:-2,intimacy:2,intimidate:-2,intimidated:-2,intimidates:-2,intimidating:-2,intimidation:-2,intransigence:-2,intransigency:-2,intricate:2,intrigues:1,invasion:-1,invincible:2,invite:1,inviting:1,invulnerable:2,irate:-3,ironic:-1,irony:-1,irrational:-1,irreparable:-2,irreproducible:-2,irresistible:2,irresistibly:2,irresolute:-2,irresponsible:-2,irresponsibly:-2,irreversible:-1,irreversibly:-1,irritate:-3,irritated:-3,irritates:-3,irritating:-3,isolated:-1,itchy:-2,jackass:-4,jackasses:-4,jailed:-2,jaunty:2,jealous:-2,jealousy:-2,jeopardy:-2,jerk:-3,jesus:1,jewel:1,jewels:1,jocular:2,join:1,joke:2,jokes:2,jolly:2,jovial:2,joy:3,joyful:3,joyfully:3,joyless:-2,joyous:3,jubilant:3,jumpy:-1,justice:2,justifiably:2,justified:2,keen:1,kickback:-3,kickbacks:-3,kidnap:-2,kidnapped:-2,kidnapping:-2,kidnappings:-2,kidnaps:-2,kill:-3,killed:-3,killing:-3,kills:-3,kind:2,"kind of":0,kinder:2,kindness:2,kiss:2,kudos:3,lack:-2,lackadaisical:-2,lag:-1,lagged:-2,lagging:-2,lags:-2,lame:-2,landmark:2,lapse:-1,lapsed:-1,laugh:1,laughed:1,laughing:1,laughs:1,laughting:1,launched:1,lawl:3,lawsuit:-2,lawsuits:-2,lazy:-1,leadership:1,leading:2,leak:-1,leaked:-1,leave:-1,legal:1,legally:1,lenient:1,lethal:-2,lethality:-2,lethargic:-2,lethargy:-2,liar:-3,liars:-3,libelous:-2,lied:-2,lifeless:-1,lifesaver:4,lighthearted:1,likable:2,like:2,likeable:2,liked:2,likers:2,likes:2,liking:2,limitation:-1,limited:-1,limits:-1,litigation:-1,litigious:-2,lively:2,livid:-2,lmao:4,lmfao:4,loathe:-3,loathed:-3,loathes:-3,loathing:-3,loathsome:-3,lobbied:-2,lobby:-2,lobbying:-2,lobbyist:-2,lobbyists:-2,lol:3,lolol:4,lololol:4,lolololol:4,lonely:-2,lonesome:-2,longing:-1,lool:3,loom:-1,loomed:-1,looming:-1,looms:-1,loool:3,looool:3,loose:-3,looses:-3,loser:-3,losing:-3,loss:-3,losses:-3,lost:-3,lousy:-2,lovable:3,love:3,loved:3,lovelies:3,lovely:3,loves:3,loving:2,"loving-kindness":3,lowest:-1,loyal:3,loyalty:3,luck:3,luckily:3,lucky:3,lucrative:3,ludicrous:-3,lugubrious:-2,lunatic:-3,lunatics:-3,lurk:-1,lurking:-1,lurks:-1,luxury:2,macabre:-2,mad:-3,maddening:-3,"made-up":-1,madly:-3,madness:-3,magnificent:3,maladaption:-2,maldevelopment:-2,maltreatment:-2,mandatory:-1,manipulated:-1,manipulating:-1,manipulation:-1,manslaughter:-3,marvel:3,marvelous:3,marvels:3,masterpiece:4,masterpieces:4,matter:1,matters:1,mature:2,meaningful:2,meaningless:-2,medal:3,mediocrity:-3,meditative:1,melancholy:-2,memorable:1,memoriam:-2,menace:-2,menaced:-2,menaces:-2,mercy:2,merry:3,mesmerizing:3,mess:-2,messed:-2,"messing up":-2,methodical:2,methodically:2,mindless:-2,miracle:4,mirth:3,mirthful:3,mirthfully:3,misbehave:-2,misbehaved:-2,misbehaves:-2,misbehaving:-2,misbranding:-3,miscast:-2,mischief:-1,mischiefs:-1,misclassified:-2,misclassifies:-2,misclassify:-2,misconduct:-2,misconducted:-2,misconducting:-2,misconducts:-2,miserable:-3,miserably:-3,misery:-2,misfire:-2,misfortune:-2,misgiving:-2,misinformation:-2,misinformed:-2,misinterpreted:-2,mislead:-3,misleaded:-3,misleading:-3,misleads:-3,misplace:-2,misplaced:-2,misplaces:-2,misplacing:-2,mispricing:-3,misread:-1,misreport:-2,misreported:-2,misreporting:-2,misreports:-2,misrepresent:-2,misrepresentation:-2,misrepresentations:-2,misrepresented:-2,misrepresenting:-2,misrepresents:-2,miss:-2,missed:-2,missing:-2,mistake:-2,mistaken:-2,mistakes:-2,mistaking:-2,misunderstand:-2,misunderstanding:-2,misunderstands:-2,misunderstood:-2,misuse:-2,misused:-2,misuses:-2,misusing:-2,moan:-2,moaned:-2,moaning:-2,moans:-2,mock:-2,mocked:-2,mocking:-2,mocks:-2,modernize:2,modernized:2,modernizes:2,modernizing:2,mongering:-2,monopolize:-2,monopolized:-2,monopolizes:-2,monopolizing:-2,monotone:-1,moody:-1,mope:-1,moping:-1,moron:-3,motherfucker:-5,motherfucking:-5,motivate:1,motivated:2,motivating:2,motivation:1,mourn:-2,mourned:-2,mournful:-2,mourning:-2,mourns:-2,muddy:-2,mumpish:-2,murder:-2,murderer:-2,murdering:-3,murderous:-3,murders:-2,murky:-2,myth:-1,n00b:-2,naive:-2,narcissism:-2,nasty:-3,natural:1,"naïve":-2,needy:-2,negative:-2,negativity:-2,neglect:-2,neglected:-2,neglecting:-2,neglects:-2,nerves:-1,nervous:-2,nervously:-2,nice:3,nifty:2,niggas:-5,nigger:-5,no:-1,"no fun":-3,noble:2,noblest:2,noisy:-1,"non-approved":-2,nonsense:-2,noob:-2,nosey:-2,"not good":-2,"not working":-3,notable:2,noticeable:2,notorious:-2,novel:2,numb:-1,nurturing:2,nuts:-3,obliterate:-2,obliterated:-2,obnoxious:-3,obscene:-2,obscenity:-2,obsessed:2,obsolete:-2,obstacle:-2,obstacles:-2,obstinate:-2,obstruct:-2,obstructed:-2,obstructing:-2,obstruction:-2,obstructs:-2,odd:-2,offence:-2,offences:-2,offend:-2,offended:-2,offender:-2,offending:-2,offends:-2,offense:-2,offenses:-2,offensive:-2,offensively:-2,offline:-1,oks:2,ominous:3,"once-in-a-lifetime":3,oops:-2,opportunities:2,opportunity:2,oppressed:-2,oppression:-2,oppressions:-2,oppressive:-2,optimism:2,optimistic:2,optionless:-2,ostracize:-2,ostracized:-2,ostracizes:-2,ouch:-2,outage:-2,outages:-2,outbreak:-2,outbreaks:-2,outcry:-2,outmaneuvered:-2,outnumbered:-2,outrage:-3,outraged:-3,outrageous:-3,outreach:2,outstanding:5,overjoyed:4,overload:-1,overlooked:-1,overprotective:-2,overran:-2,overreact:-2,overreacted:-2,overreacting:-2,overreaction:-2,overreacts:-2,oversell:-2,overselling:-2,oversells:-2,oversight:-1,oversimplification:-2,oversimplified:-2,oversimplifies:-2,oversimplify:-2,oversold:-2,overstatement:-2,overstatements:-2,overweight:-1,overwrought:-3,oxymoron:-1,pain:-2,pained:-2,painful:-2,panic:-3,panicked:-3,panics:-3,paradise:3,paradox:-1,pardon:2,pardoned:2,pardoning:2,pardons:2,parley:-1,passion:1,passionate:2,passive:-1,passively:-1,pathetic:-2,pay:-1,peace:2,peaceful:2,peacefully:2,penalize:-2,penalized:-2,penalizes:-2,penalizing:-2,penalty:-2,pensive:-1,perfect:3,perfected:2,perfection:3,perfectly:3,perfects:2,peril:-2,perjury:-3,perpetrated:-2,perpetrator:-2,perpetrators:-2,perplexed:-2,persecute:-2,persecuted:-2,persecutes:-2,persecuting:-2,perturbed:-2,pervert:-3,pesky:-2,pessimism:-2,pessimistic:-2,petrified:-2,philanthropy:2,phobic:-2,picturesque:2,pileup:-1,pillage:-2,pique:-2,piqued:-2,piss:-4,pissed:-4,pissing:-3,piteous:-2,pitied:-1,pity:-2,plague:-3,plagued:-3,plagues:-3,plaguing:-3,playful:2,pleasant:3,please:1,pleased:3,pleasurable:3,pleasure:3,plodding:-2,poignant:2,pointless:-2,poised:-2,poison:-2,poisoned:-2,poisons:-2,polished:2,polite:2,politeness:2,pollutant:-2,pollute:-2,polluted:-2,polluter:-2,polluters:-2,pollutes:-2,pollution:-2,poor:-2,poorer:-2,poorest:-2,poorly:-2,popular:3,popularity:3,positive:2,positively:2,possessive:-2,"post-traumatic":-2,postpone:-1,postponed:-1,postpones:-1,postponing:-1,poverty:-1,powerful:2,powerless:-2,praise:3,praised:3,praises:3,praising:3,pray:1,praying:1,prays:1,prblm:-2,prblms:-2,predatory:-2,prepared:1,pressure:-1,pressured:-2,pretend:-1,pretending:-1,pretends:-1,pretty:1,prevent:-1,prevented:-1,preventing:-1,prevents:-1,prick:-5,prison:-2,prisoner:-2,prisoners:-2,privileged:2,proactive:2,problem:-2,problems:-2,profit:2,profitable:2,profiteer:-2,profits:2,progress:2,prohibit:-1,prohibits:-1,prominent:2,promise:1,promised:1,promises:1,promote:1,promoted:1,promotes:1,promoting:1,promptly:1,propaganda:-2,prosecute:-1,prosecuted:-2,prosecutes:-1,prosecution:-1,prospect:1,prospects:1,prosperity:3,prosperous:3,protect:1,protected:1,protects:1,protest:-2,protesters:-2,protesting:-2,protests:-2,proud:2,proudly:2,provoke:-1,provoked:-1,provokes:-1,provoking:-1,prudence:2,pseudoscience:-3,psychopathic:-2,punish:-2,punished:-2,punishes:-2,punishing:-2,punitive:-2,pure:1,purest:1,purposeful:2,pushy:-1,puzzled:-2,quaking:-2,qualities:2,quality:2,questionable:-2,questioned:-1,questioning:-1,racism:-3,racist:-3,racists:-3,rage:-2,rageful:-2,rainy:-1,rant:-3,ranter:-3,ranters:-3,rants:-3,rape:-4,raped:-4,rapist:-4,rapture:2,raptured:2,raptures:2,rapturous:4,rash:-2,ratified:2,reach:1,reached:1,reaches:1,reaching:1,reassure:1,reassured:1,reassures:1,reassuring:2,rebel:-2,rebellion:-2,rebels:-2,recession:-2,reckless:-2,recognition:2,recommend:2,recommended:2,recommends:2,redeemed:2,refine:1,refined:1,refines:1,refreshingly:2,refuse:-2,refused:-2,refuses:-2,refusing:-2,regret:-2,regretful:-2,regrets:-2,regretted:-2,regretting:-2,reigning:1,reject:-1,rejected:-1,rejecting:-1,rejection:-2,rejects:-1,rejoice:4,rejoiced:4,rejoices:4,rejoicing:4,relaxed:2,relentless:-1,reliability:2,reliable:2,reliably:2,reliant:2,relieve:1,relieved:2,relieves:1,relieving:2,relishing:2,remarkable:2,remorse:-2,repellent:-2,repercussion:-2,repercussions:-2,reprimand:-2,reprimanded:-2,reprimanding:-2,reprimands:-2,repulse:-1,repulsed:-2,repulsive:-2,rescue:2,rescued:2,rescues:2,resentful:-2,resign:-1,resigned:-1,resigning:-1,resigns:-1,resolute:2,resolution:2,resolve:2,resolved:2,resolves:2,resolving:2,respect:2,respected:2,respects:2,responsibility:1,responsible:2,responsive:2,restful:2,restless:-2,restore:1,restored:1,restores:1,restoring:1,restrict:-2,restricted:-2,restricting:-2,restriction:-2,restrictive:-1,restricts:-2,retained:-1,retard:-2,retarded:-2,retreat:-1,revenge:-2,revengeful:-2,revered:2,revive:2,revives:2,revolting:-2,reward:2,rewarded:2,rewarding:2,rewards:2,rich:2,richly:2,ridiculous:-3,rig:-1,rigged:-1,"right direction":3,righteousness:2,rightful:2,rightfully:2,rigorous:3,rigorously:3,riot:-2,riots:-2,rise:1,rises:1,risk:-2,risks:-2,risky:-2,riveting:3,rob:-2,robber:-2,robed:-2,robing:-2,robs:-2,robust:2,rofl:4,roflcopter:4,roflmao:4,romance:2,romantical:2,romantically:2,rose:1,rotfl:4,rotflmfao:4,rotflol:4,rotten:-3,rude:-2,ruin:-2,ruined:-2,ruining:-2,ruins:-2,sabotage:-2,sad:-2,sadden:-2,saddened:-2,sadly:-2,safe:1,safely:1,safer:2,safety:1,salient:1,salute:2,saluted:2,salutes:2,saluting:2,salvation:2,sappy:-1,sarcastic:-2,satisfied:2,savange:-2,savanges:-2,save:2,saved:2,savings:1,scam:-2,scams:-2,scandal:-3,scandalous:-3,scandals:-3,scapegoat:-2,scapegoats:-2,scare:-2,scared:-2,scar:-2,scars:-2,scary:-2,sceptical:-2,scold:-2,scoop:3,scorn:-2,scornful:-2,scream:-2,screamed:-2,screaming:-2,screams:-2,screwed:-2,"screwed up":-3,scum:-3,scumbag:-4,seamless:2,seamlessly:2,secure:2,secured:2,secures:2,sedition:-2,seditious:-2,seduced:-1,"self-abuse":-2,"self-confident":2,"self-contradictory":-2,"self-deluded":-2,selfish:-3,selfishness:-3,sentence:-2,sentenced:-2,sentences:-2,sentencing:-2,serene:2,settlement:1,settlements:1,severe:-2,severely:-2,sexist:-2,sexistic:-2,sexy:3,shaky:-2,shame:-2,shamed:-2,shameful:-2,share:1,shared:1,shares:1,shattered:-2,shit:-4,shithead:-4,shitty:-3,shock:-2,shocked:-2,shocking:-2,shocks:-2,shoody:-2,shoot:-1,"short-sighted":-2,"short-sightedness":-2,shortage:-2,shortages:-2,shrew:-4,shy:-1,sick:-2,sickness:-2,"side-effect":-2,"side-effects":-2,sigh:-2,significance:1,significant:1,silencing:-1,silly:-1,simplicity:1,sin:-2,sincere:2,sincerely:2,sincerest:2,sincerity:2,sinful:-3,singleminded:-2,sinister:-2,sins:-2,skeptic:-2,skeptical:-2,skepticism:-2,skeptics:-2,slam:-2,slash:-2,slashed:-2,slashes:-2,slashing:-2,slave:-3,slavery:-3,slaves:-3,sleeplessness:-2,slick:2,slicker:2,slickest:2,slip:-1,sloppy:-2,sluggish:-2,slumping:-1,slut:-5,smart:1,smarter:2,smartest:2,smear:-2,smile:2,smiled:2,smiles:2,smiling:2,smog:-2,smuggle:-2,smuggled:-2,smuggling:-2,smuggles:-2,sneaky:-1,sneeze:-2,sneezed:-2,sneezes:-2,sneezing:-2,snub:-2,snubbed:-2,snubbing:-2,snubs:-2,sobering:1,solemn:-1,solid:2,solidarity:2,solidified:2,solidifies:2,solidify:2,solidifying:2,solution:1,solutions:1,solve:1,solved:1,solves:1,solving:1,somber:-2,"some kind":0,"son-of-a-bitch":-5,soothe:3,soothed:3,soothing:3,sophisticated:2,sore:-1,sorrow:-2,sorrowful:-2,sorry:-1,spacious:1,spam:-2,spammer:-3,spammers:-3,spamming:-2,spark:1,sparkle:3,sparkles:3,sparkling:3,spearhead:2,speculative:-2,spirit:1,spirited:2,spiritless:-2,spiteful:-2,splendid:3,spoiled:-2,spoilt:-2,spotless:2,sprightly:2,squander:-2,squandered:-2,squandering:-2,squanders:-2,squelched:-1,stab:-2,stabbed:-2,stable:2,stabs:-2,stall:-2,stalled:-2,stalling:-2,stamina:2,stampede:-2,stank:-2,startled:-2,startling:3,starve:-2,starved:-2,starves:-2,starving:-2,steadfast:2,steal:-2,stealing:-2,steals:-2,stereotype:-2,stereotyped:-2,stifled:-1,stimulate:1,stimulated:1,stimulates:1,stimulating:2,stingy:-2,stink:-2,stinked:-2,stinker:-2,stinking:-2,stinks:-2,stinky:-2,stole:-2,stolen:-2,stop:-1,stopped:-1,stopping:-1,stops:-1,stout:2,straight:1,strange:-1,strangely:-1,strangled:-2,strength:2,strengthen:2,strengthened:2,strengthening:2,strengthens:2,strengths:2,stress:-1,stressed:-2,stressor:-2,stressors:-2,stricken:-2,strike:-1,strikers:-2,strikes:-1,strong:2,stronger:2,strongest:2,struck:-1,struggle:-2,struggled:-2,struggles:-2,struggling:-2,stubborn:-2,stuck:-2,stunned:-2,stunning:4,stupid:-2,stupidity:-3,stupidly:-2,suave:2,subpoena:-2,substantial:1,substantially:1,subversive:-2,succeed:3,succeeded:3,succeeding:3,succeeds:3,success:2,successful:3,successfully:3,suck:-3,sucks:-3,sue:-2,sued:-2,sueing:-2,sues:-2,suffer:-2,suffered:-2,sufferer:-2,sufferers:-2,suffering:-2,suffers:-2,suicidal:-2,suicide:-2,suicides:-2,suing:-2,suitable:2,suited:2,sulking:-2,sulky:-2,sullen:-2,sunshine:2,super:3,superb:5,superior:2,support:2,supported:2,supporter:1,supporters:1,supporting:1,supportive:2,supports:2,supreme:4,survived:2,surviving:2,survivor:2,suspect:-1,suspected:-1,suspecting:-1,suspects:-1,suspend:-1,suspended:-1,suspicious:-2,sustainability:1,sustainable:2,sustainably:2,swear:-2,swearing:-2,swears:-2,sweet:2,sweeter:3,sweetest:3,swift:2,swiftly:2,swindle:-3,swindles:-3,swindling:-3,sympathetic:2,sympathy:2,taint:-2,tainted:-2,talent:2,tard:-2,tarnish:-2,tarnished:-2,tarnishes:-2,tears:-2,tender:2,tenderness:2,tense:-2,tension:-1,terrible:-3,terribly:-3,terrific:4,terrifically:4,terrified:-3,terror:-3,terrorist:-2,terrorists:-2,terrorize:-3,terrorized:-3,terrorizes:-3,thank:2,thankful:2,thanks:2,thorny:-2,thoughtful:2,thoughtless:-2,threat:-2,threaten:-2,threatened:-2,threatening:-2,threatens:-2,threats:-2,thrilled:5,thwart:-2,thwarted:-2,thwarting:-2,thwarts:-2,timid:-2,timorous:-2,tired:-2,tits:-2,tolerance:2,tolerant:2,toothless:-2,top:2,tops:2,torn:-2,torture:-4,tortured:-4,tortures:-4,torturing:-4,totalitarian:-2,totalitarianism:-2,tout:-2,touted:-2,touting:-2,touts:-2,toxic:-3,tragedies:-2,tragedy:-2,tragic:-2,tranquil:2,transgress:-2,transgressed:-2,transgresses:-2,transgressing:-2,trap:-1,trapped:-2,traps:-1,trauma:-3,traumatic:-3,travesty:-2,treason:-3,treasonous:-3,treasure:2,treasures:2,trembling:-2,tremor:-2,tremors:-2,tremulous:-2,tribulation:-2,tribute:2,tricked:-2,trickery:-2,triumph:4,triumphant:4,troll:-2,trouble:-2,troubled:-2,troubles:-2,troubling:-2,true:2,trust:1,trusted:2,trusts:1,tumor:-2,twat:-5,tyran:-3,tyrannic:-3,tyrannical:-3,tyrannically:-3,tyrans:-3,ubiquitous:2,ugh:-2,ugliness:-3,ugly:-3,unable:-2,unacceptable:-2,unappeasable:-2,unappreciated:-2,unapproved:-2,unattractive:-2,unavailable:-1,unavailing:-2,unaware:-2,unbearable:-2,unbelievable:-1,unbelieving:-1,unbiased:2,uncertain:-1,unclear:-1,uncomfortable:-2,unconcerned:-2,unconfirmed:-1,unconvinced:-1,uncredited:-1,undecided:-1,undercooked:-2,underestimate:-1,underestimated:-1,underestimates:-1,underestimating:-1,undermine:-2,undermined:-2,undermines:-2,undermining:-2,underperform:-2,underperformed:-2,underperforming:-2,underperforms:-2,undeserving:-2,undesirable:-2,uneasy:-2,unemployed:-1,unemployment:-2,unequal:-1,unequaled:2,unethical:-2,uneventful:-2,unfair:-2,unfavorable:-2,unfit:-2,unfitted:-2,unfocused:-2,unforgivable:-3,unforgiving:-2,unfulfilled:-2,unfunny:-2,ungenerous:-2,ungrateful:-3,unhappy:-2,unhappiness:-2,unhealthy:-2,unhygienic:-2,unified:1,unimaginative:-2,unimpressed:-2,uninspired:-2,unintelligent:-2,unintentional:-2,uninvolving:-2,united:1,unjust:-2,unlikely:-1,unlovable:-2,unloved:-2,unmatched:1,unmotivated:-2,unoriginal:-2,unparliamentary:-2,unpleasant:-2,unpleasantness:-2,unprofessional:-2,unravel:1,unreleting:-2,unresearched:-2,unsafe:-2,unsatisfied:-2,unscientific:-2,unsecured:-2,unselfish:2,unsettled:-1,unsold:-1,unsophisticated:-2,unsound:-2,unstable:-2,unstoppable:2,unsuccessful:-2,unsuccessfully:-2,unsupported:-2,unsure:-1,untarnished:2,untrue:-2,unwanted:-2,unworthy:-2,uplifting:2,uproar:-3,upset:-2,upsets:-2,upsetting:-2,uptight:-2,urgent:-1,useful:2,usefulness:2,useless:-2,uselessness:-2,vague:-2,validate:1,validated:1,validates:1,validating:1,vapid:-2,verdict:-1,verdicts:-1,vested:1,vexation:-2,vexing:-2,vibrant:3,vicious:-2,victim:-3,victimization:-3,victimize:-3,victimized:-3,victimizes:-3,victimizing:-3,victims:-3,victor:3,victors:3,victory:3,victories:3,vigilant:3,vigor:3,vile:-3,vindicate:2,vindicated:2,vindicates:2,vindicating:2,violate:-2,violated:-2,violates:-2,violating:-2,violation:-2,violations:-2,violence:-3,"violence-related":-3,violent:-3,violently:-3,virtuous:2,virulent:-2,vision:1,visionary:3,visioning:1,visions:1,vitality:3,vitamin:1,vitriolic:-3,vivacious:3,vividly:2,vociferous:-1,vomit:-3,vomited:-3,vomiting:-3,vomits:-3,vulnerability:-2,vulnerable:-2,walkout:-2,walkouts:-2,wanker:-3,want:1,war:-2,warfare:-2,warm:1,warmhearted:2,warmness:2,warmth:2,warn:-2,warned:-2,warning:-3,warnings:-3,warns:-2,waste:-1,wasted:-2,wasting:-2,wavering:-1,weak:-2,weakened:-2,weakness:-2,weaknesses:-2,wealth:3,wealthier:2,wealthy:2,weary:-2,weep:-2,weeping:-2,weird:-2,welcome:2,welcomed:2,welcomes:2,"well-being":2,"well-championed":3,"well-developed":2,"well-established":2,"well-focused":2,"well-groomed":2,"well-proportioned":2,whimsical:1,whitewash:-3,whore:-4,wicked:-2,widowed:-1,willingness:2,win:4,winner:4,winning:4,wins:4,winwin:3,wisdom:1,wish:1,wishes:1,wishing:1,withdrawal:-3,wits:2,woebegone:-2,woeful:-3,won:3,wonderful:4,wonderfully:4,woo:3,woohoo:3,wooo:4,woow:4,worn:-1,worried:-3,worries:-3,worry:-3,worrying:-3,worse:-3,worsen:-3,worsened:-3,worsening:-3,worsens:-3,worshiped:3,worst:-3,worth:2,worthless:-2,worthy:2,wow:4,wowow:4,wowww:4,wrathful:-3,wreck:-2,wrenching:-2,wrong:-2,wrongdoing:-2,wrongdoings:-2,wronged:-2,wrongful:-2,wrongfully:-2,wrongly:-2,wtf:-4,wtff:-4,wtfff:-4,xo:3,xoxo:3,xoxoxo:4,xoxoxoxo:4,yeah:1,yearning:1,yeees:2,yes:1,youthful:2,yucky:-2,yummy:3,zealot:-2,zealots:-2,zealous:2},scoringStrategy:{apply:function(e,t,n){if(t>0){var r=e[t-1];Tt[r]&&(n=-n)}return n}}};Object.assign(Rt.labels,Et);var At={en:Rt},Dt={addLanguage:function(e,t){if(!t.labels)throw new Error("language.labels must be defined!");Object.assign(t.labels,Et),At[e]=t},getLanguage:function(e){if(!e)return At.en;if(!At[e])try{var t=function(e){throw new Error('Could not dynamically require "'+e+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}("../languages/"+e+"/index");this.addLanguage(e,t)}catch(t){throw new Error("No language found: "+e)}return At[e]},getLabels:function(e){return this.getLanguage(e).labels},applyScoringStrategy:function(e,t,n,r){return(this.getLanguage(e).scoringStrategy||$t).apply(t,n,r)}},$t={apply:function(e,t,n){return n}},Ft=function(e){return e.toLowerCase().replace(/\n/g," ").replace(/[.,\/#!?$%\^&\*;:{}=_`\"~()]/g," ").replace(/\s\s+/g," ").trim().split(" ")},_t=Dt,Ot=function(e){this.options=e};Ot.prototype.registerLanguage=function(e,t){_t.addLanguage(e,t)},Ot.prototype.analyze=function(e,t,n){void 0===e&&(e=""),"function"==typeof t&&(n=t,t={});var r=(t=t||{}).language||"en",a=_t.getLabels(r);"object"==typeof t.extras&&(a=Object.assign(a,t.extras));for(var i=Ft(e),s=0,o=[],u=[],l=[],c=[],h=i.length;h--;){var d=i[h];if(a.hasOwnProperty(d)){o.push(d);var p=a[d];(p=_t.applyScoringStrategy(r,i,h,p))>0&&u.push(d),p<0&&l.push(d),s+=p;var f={};f[d]=p,c.push(f)}}var m={score:s,comparative:i.length>0?s/i.length:0,calculation:c,tokens:i,words:o,positive:u,negative:l};if("function"!=typeof n)return m;process.nextTick((function(){n(null,m)}))};var Mt=Ot,Lt=function(e,t){return(Lt=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(e,t){function n(){this.constructor=e}Lt(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function Bt(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function zt(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var Wt=function(){function e(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return e.prototype.setPlatform=function(e,t){null!=this.platform&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+t+"."),this.platformName=e,this.platform=t},e.prototype.registerFlag=function(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){var r=this.urlFlags[e];console.warn("Setting feature override from URL "+e+": "+r+"."),this.set(e,r)}},e.prototype.get=function(e){return e in this.flags||(this.flags[e]=this.evaluateFlag(e)),this.flags[e]},e.prototype.getNumber=function(e){return this.get(e)},e.prototype.getBool=function(e){return this.get(e)},e.prototype.getFlags=function(){return this.flags},Object.defineProperty(e.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),e.prototype.set=function(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag "+e+" as it has not been registered.");this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)},e.prototype.evaluateFlag=function(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '"+e+"': no evaluation function found.");return this.flagRegistry[e].evaluationFn()},e.prototype.setFlags=function(e){this.flags=Object.assign({},e)},e.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},e.prototype.populateURLFlags=function(){var e=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var t,n,r=(t=this.global.location.search,n={},t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(n,t[0],t[1]),t.join("=")})),n);"tfjsflags"in r&&r.tfjsflags.split(",").forEach((function(t){var n=t.split(":"),r=n[0],a=n[1];e.urlFlags[r]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error("Could not parse value flag value "+t+" for flag "+e+".")}(r,a)}))}},e}();function Vt(){return Ut}var Ut=null,Gt=new Map,Ht=new Map;function jt(e,t){var n=Qt(e,t);return Gt.get(n)}function qt(e){return Ht.get(e)}function Kt(e){for(var t=Gt.entries(),n=[];;){var r=t.next(),a=r.done,i=r.value;if(a)break;var s=i[0],o=i[1];s.split("_")[0]===e&&n.push(o)}return n}function Xt(e){var t=e.kernelName,n=e.backendName,r=Qt(t,n);if(Gt.has(r))throw new Error("The kernel '"+t+"' for backend '"+n+"' is already registered");Gt.set(r,e)}function Yt(e){var t=e.kernelName;Ht.has(t)&&console.warn("Overriding the gradient for '"+t+"'"),Ht.set(t,e)}function Qt(e,t){return t+"_"+e}function Jt(e){for(var t=e.length,n=0,r=0;t>0;)r=Math.random()*t|0,n=e[--t],e[t]=e[r],e[r]=n}function Zt(e,t,n){return Math.max(e,Math.min(t,n))}function en(e){return e%2==0?e:e+1}function tn(e){for(var t=0,n=0;n<e.length;n++)t+=e[n];return t}function nn(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function rn(e,t,n){void 0===n&&(n=""),nn(un(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))}function an(e){nn(null!=e,(function(){return"The input to the tensor constructor must be a non-null value."}))}function sn(e,t,n){if(void 0===t&&(t=[]),void 0===n&&(n=!1),null==t&&(t=[]),Array.isArray(e)||kn(e)&&!n)for(var r=0;r<e.length;++r)sn(e[r],t,n);else t.push(e);return t}function on(e){if(0===e.length)return 1;for(var t=e[0],n=1;n<e.length;n++)t*=e[n];return t}function un(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ln(e){return e%1==0}function cn(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)}function hn(e){var t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function dn(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function pn(e,t,n){return void 0===t&&(t=function(e){return 0}),new Promise((function(r,a){var i=0,s=function(){if(e())r();else{i++;var o=t(i);null!=n&&i>=n?a():setTimeout(s,o)}};s()}))}function fn(e,t){for(var n=1,r=-1,a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+a);r=a}else if(e[a]<0)throw Error("Shapes can not be < 0. Found "+e[a]+" at dim "+a);if(-1===r){if(t>0&&t!==n)throw Error("Size("+t+") must match the product of shape "+e);return e}if(0===n)throw Error("Cannot infer the missing size in ["+e+"] when there are 0 elements");if(t%n!=0)throw Error("The implicit shape can't be a fractional number. Got "+t+" / "+n);var i=e.slice();return i[r]=t/n,i}function mn(e,t){var n=t.length;return nn((e=null==e?t.map((function(e,t){return t})):[].concat(e)).every((function(e){return e>=-n&&e<n})),(function(){return"All values in axis param must be in range [-"+n+", "+n+") but got axis "+e})),nn(e.every((function(e){return ln(e)})),(function(){return"All values in axis param must be integers but got axis "+e})),e.map((function(e){return e<0?n+e:e}))}function gn(e,t){for(var n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:mn(t,e).sort(),s=0,o=0;o<e.length;++o){if(null!=i){if(i[s]===o&&1!==e[o])throw new Error("Can't squeeze axis "+o+" since its dim '"+e[o]+"' is not 1");(null==i[s]||i[s]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),i[s]<=o&&s++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function vn(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function yn(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function bn(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+t+" being uploaded contains "+r+".")}}function xn(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function wn(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function kn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function In(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Cn(e){if(null==e)return 0;var t=0;return e.forEach((function(e){return t+=e.length})),t}function Sn(e){return"string"==typeof e||e instanceof String}function Nn(e){return"boolean"==typeof e}function Tn(e){return"number"==typeof e}function En(e){return Array.isArray(e)?En(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Tn(e)?"float32":Sn(e)?"string":Nn(e)?"bool":"float32"}function Rn(e){return!!(e&&e.constructor&&e.call&&e.apply)}function An(e,t){for(var n=t;n<e;++n)if(e%n==0)return n;return e}function Dn(e){var t=e.length;if(t<2)return[];var n=new Array(t-1);n[t-2]=e[t-1];for(var r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $n(e,t,n){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=sn(e)),n&&bn(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){for(var r=new Uint8Array(e.length),a=0;a<r.length;++a)0!==Math.round(e[a])&&(r[a]=1);return r}throw new Error("Unknown data type "+t)}function Fn(e,t){if(0===e.length)return t[0];var n=e.reduce((function(e,t){return e*t}));if(0===n)return[];if(n!==t.length)throw new Error("["+e+"] does not match the input size.");return function e(t,n,r){var a=new Array;if(1===n.length)for(var i=n[0],s=0;s<i;s++)a[s]=r[t+s];else{i=n[0];var o=n.slice(1),u=o.reduce((function(e,t){return e*t}));for(s=0;s<i;s++)a[s]=e(t+s*u,o,r)}return a}(0,e,t)}function _n(e,t){for(var n=On(e,t),r=0;r<n.length;r++)n[r]=1;return n}function On(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function Mn(){return Vt().platform.now()}function Ln(e){e.forEach((function(t){nn(Number.isInteger(t)&&t>=0,(function(){return"Tensor must have a shape comprised of positive integers but got shape ["+e+"]."}))}))}function Pn(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",Vt().platform.encode(e,t)}function Bn(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",Vt().platform.decode(e,t)}function zn(e,t,n){if(0===t)return 0;if(1===t)return e[0];for(var r=e[e.length-1],a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function Wn(e,t,n){if(0===t)return[];if(1===t)return[e];for(var r=new Array(t),a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}var Vn=Object.freeze({shuffle:Jt,clamp:Zt,nearestLargerEven:en,sum:tn,randUniform:function(e,t){var n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){for(var n=0,r=0;r<e.length;r++){var a=Number(e[r])-Number(t[r]);n+=a*a}return n},assert:nn,assertShapesMatch:rn,assertNonNull:an,flatten:sn,sizeFromShape:on,isScalarShape:function(e){return 0===e.length},arraysEqual:un,isInt:ln,tanh:cn,sizeToSquarishShape:hn,createShuffledIndices:function(e){for(var t=new Uint32Array(e),n=0;n<e;++n)t[n]=n;return Jt(t),t},rightPad:dn,repeatedTry:pn,inferFromImplicitShape:fn,parseAxisParam:mn,squeezeShape:gn,getTypedArrayFromDType:vn,getArrayFromDType:yn,checkConversionForErrors:bn,isValidDtype:xn,hasEncodingLoss:wn,isTypedArray:kn,bytesPerElement:In,bytesFromStringArray:Cn,isString:Sn,isBoolean:Nn,isNumber:Tn,inferDtype:En,isFunction:Rn,nearestDivisor:An,computeStrides:Dn,toTypedArray:$n,toNestedArray:Fn,makeOnesTypedArray:_n,makeZerosTypedArray:On,now:Mn,assertNonNegativeIntegerDimensions:Ln,fetch:function(e,t){return Vt().platform.fetch(e,t)},encodeString:Pn,decodeString:Bn,locToIndex:zn,indexToLoc:Wn}),Un=function(){function e(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Gn)}return e.prototype.profileKernel=function(e,t,n){var r,a=this,i=this.backendTimer.time((function(){r=n()}));return r.forEach((function(n){n.data().then((function(r){!function(e,t,n){if("float32"!==t)return!1;for(var r=0;r<e.length;r++){var a=e[r];if(isNaN(a)||!isFinite(a))return console.warn("Found "+a+" in the result of '"+n+"'"),!0}}(r,n.dtype,e),i.then((function(i){var s="";null!=i.getExtraProfileInfo&&(s=i.getExtraProfileInfo()),a.logger.logKernelProfile(e,n,r,i.kernelMs,t,s)}))}))})),r},e}(),Gn=function(){function e(){}return e.prototype.logKernelProfile=function(e,t,n,r,a,i){var s="number"==typeof r?dn(r+"ms",9):r.error,o=dn(e,25),u=t.rank,l=t.size,c=dn(t.shape.toString(),14),h="";for(var d in a){var p=a[d].shape||t.shape,f=p.length;h+=d+": "+f+"D "+(f>0?p:"")+" "}console.log("%c"+o+"\t%c"+s+"\t%c"+u+"D "+c+"\t%c"+l+"\t%c"+h+"\t%c"+i,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},e}(),Hn=7;function jn(e,t,n){return dn(Array.isArray(e)?parseFloat(e[0].toFixed(Hn))+" + "+parseFloat(e[1].toFixed(Hn))+"j":Sn(e)?"'"+e+"'":"bool"===n?qn(e):parseFloat(e.toFixed(Hn)).toString(),t)}function qn(e){return 0===e?"false":"true"}function Kn(e){for(var t=[],n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Xn=function(){function e(e,t,n){var r=this;if(this.dtype=t,this.shape=e.slice(),this.size=on(e),null!=n){var a=n.length;nn(a===this.size,(function(){return"Length of values '"+a+"' does not match the size inferred by the shape '"+r.size+"'."}))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||yn(t,this.size),this.strides=Dn(e)}return e.prototype.set=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),nn(n.length===this.rank,(function(){return"The number of provided coordinates ("+n.length+") must match the rank ("+t.rank+")"}));var a=this.locToIndex(n);this.values[a]=e},e.prototype.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];0===e.length&&(e=[0]);for(var n=0,r=0,a=e;r<a.length;r++){var i=a[r];if(i<0||i>=this.shape[n]){var s="Requested out of range element at "+e+".   Buffer shape="+this.shape;throw new Error(s)}n++}for(var o=e[e.length-1],u=0;u<e.length-1;++u)o+=this.strides[u]*e[u];return this.values[o]},e.prototype.locToIndex=function(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];for(var t=e[e.length-1],n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t},e.prototype.indexToLoc=function(e){if(0===this.rank)return[];if(1===this.rank)return[e];for(var t=new Array(this.shape.length),n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.toTensor=function(){return Yn().makeTensor(this.values,this.shape,this.dtype)},e}(),Yn=null,Qn=null,Jn=null,Zn=function(){function e(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=on(e),this.strides=Dn(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}return e.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},e.prototype.asScalar=function(){return this.throwIfDisposed(),nn(1===this.size,(function(){return"The array must have only 1 element."})),this.reshape([])},e.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},e.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},e.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),this.reshape([e,t,n])},e.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),this.reshape([e,t,n,r])},e.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),this.reshape([e,t,n,r,a])},e.prototype.asType=function(e){return this.throwIfDisposed(),Qn.cast(this,e)},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.buffer=function(){return Bt(this,void 0,void 0,(function(){var e;return zt(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,Qn.buffer(this.shape,this.dtype,e)]}}))}))},e.prototype.bufferSync=function(){return Qn.buffer(this.shape,this.dtype,this.dataSync())},e.prototype.array=function(){return Bt(this,void 0,void 0,(function(){var e;return zt(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,Fn(this.shape,e)]}}))}))},e.prototype.arraySync=function(){return Fn(this.shape,this.dataSync())},e.prototype.data=function(){return Bt(this,void 0,void 0,(function(){var e,t;return zt(this,(function(n){switch(n.label){case 0:return this.throwIfDisposed(),e=Yn().read(this.dataId),"string"!==this.dtype?[3,2]:[4,e];case 1:t=n.sent();try{return[2,t.map((function(e){return Bn(e)}))]}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}n.label=2;case 2:return[2,e]}}))}))},e.prototype.dataSync=function(){this.throwIfDisposed();var e=Yn().readSync(this.dataId);if("string"===this.dtype)try{return e.map((function(e){return Bn(e)}))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e},e.prototype.bytes=function(){return Bt(this,void 0,void 0,(function(){var e;return zt(this,(function(t){switch(t.label){case 0:return this.throwIfDisposed(),[4,Yn().read(this.dataId)];case 1:return e=t.sent(),"string"===this.dtype?[2,e]:[2,new Uint8Array(e.buffer)]}}))}))},e.prototype.dispose=function(){this.isDisposed||(Yn().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(e.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),e.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},e.prototype.toFloat=function(){return this.asType("float32")},e.prototype.toInt=function(){return this.asType("int32")},e.prototype.toBool=function(){return this.asType("bool")},e.prototype.print=function(e){return void 0===e&&(e=!1),Qn.print(this,e)},e.prototype.reshape=function(e){return this.throwIfDisposed(),Qn.reshape(this,e)},e.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},e.prototype.expandDims=function(e){return void 0===e&&(e=0),Qn.expandDims(this,e)},e.prototype.cumsum=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=!1),void 0===n&&(n=!1),Qn.cumsum(this,e,t,n)},e.prototype.squeeze=function(e){return this.throwIfDisposed(),Qn.squeeze(this,e)},e.prototype.clone=function(){return this.throwIfDisposed(),Qn.clone(this)},e.prototype.toString=function(e){return void 0===e&&(e=!1),function(e,t,n,r){var a=Dn(t),i=function(e,t,n,r){var a=on(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?Kn(e):e;if(o>1)for(var l=0;l<a/i;l++)for(var c=l*i,h=0;h<i;h++)s[h]=Math.max(s[h],jn(u[c+h],0,n).length);return s}(e,t,n,a),s=t.length,o=function e(t,n,r,a,i,s){void 0===s&&(s=!0);var o="complex64"===r?2:1,u=n[0],l=n.length;if(0===l)return"complex64"===r?[jn(Kn(t)[0],0,r)]:"bool"===r?[qn(t[0])]:[t[0].toString()];if(1===l){if(u>20){var c=3*o,h=Array.from(t.slice(0,c)),d=Array.from(t.slice((u-3)*o,u*o));return"complex64"===r&&(h=Kn(h),d=Kn(d)),["["+h.map((function(e,t){return jn(e,i[t],r)})).join(", ")+", ..., "+d.map((function(e,t){return jn(e,i[u-3+t],r)})).join(", ")+"]"]}return["["+("complex64"===r?Kn(t):Array.from(t)).map((function(e,t){return jn(e,i[t],r)})).join(", ")+"]"]}var p=n.slice(1),f=a.slice(1),m=a[0]*o,g=[];if(u>20){for(var v=0;v<3;v++){var y=(b=v*m)+m;g.push.apply(g,e(t.slice(b,y),p,r,f,i,!1))}for(g.push("..."),v=u-3;v<u;v++)y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),p,r,f,i,v===u-1))}else for(v=0;v<u;v++){var b;y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),p,r,f,i,v===u-1))}var x=2===l?",":"";for(g[0]="["+g[0]+x,v=1;v<g.length-1;v++)g[v]=" "+g[v]+x;var w=",\n";for(v=2;v<l;v++)w+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":w),g}(e,t,n,a,i),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+s),u.push("  shape: ["+t+"]"),u.push("  values:")),u.push(o.map((function(e){return"    "+e})).join("\n")),u.join("\n")}(this.dataSync(),this.shape,this.dtype,e)},e.prototype.gather=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),Qn.gather(this,e,t)},e.prototype.matMul=function(e,t,n){return void 0===t&&(t=!1),void 0===n&&(n=!1),this.throwIfDisposed(),Qn.matMul(this,e,t,n)},e.prototype.dot=function(e){return this.throwIfDisposed(),Qn.dot(this,e)},e.prototype.norm=function(e,t,n){return void 0===e&&(e="euclidean"),void 0===t&&(t=null),void 0===n&&(n=!1),this.throwIfDisposed(),Qn.norm(this,e,t,n)},e.prototype.slice=function(e,t){return this.throwIfDisposed(),Qn.slice(this,e,t)},e.prototype.reverse=function(e){return this.throwIfDisposed(),Qn.reverse(this,e)},e.prototype.concat=function(t,n){return void 0===n&&(n=0),this.throwIfDisposed(),t instanceof e&&(t=[t]),Qn.concat([this].concat(t),n)},e.prototype.split=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),Qn.split(this,e,t)},e.prototype.stack=function(e,t){return void 0===t&&(t=0),Qn.stack([this,e],t)},e.prototype.unstack=function(e){return void 0===e&&(e=0),Qn.unstack(this,e)},e.prototype.batchNormalization=function(e,t,n,r,a){return void 0===n&&(n=.001),Jn("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(e,t,a,r,n)},e.prototype.all=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.all(this,e,t)},e.prototype.any=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.any(this,e,t)},e.prototype.logSumExp=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.logSumExp(this,e,t)},e.prototype.sum=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.sum(this,e,t)},e.prototype.prod=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.prod(this,e,t)},e.prototype.mean=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.mean(this,e,t)},e.prototype.min=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.min(this,e,t)},e.prototype.max=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),Qn.max(this,e,t)},e.prototype.argMin=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),Qn.argMin(this,e)},e.prototype.argMax=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),Qn.argMax(this,e)},e.prototype.cast=function(e){return this.throwIfDisposed(),Qn.cast(this,e)},e.prototype.addStrict=function(e){return this.throwIfDisposed(),Qn.addStrict(this,e)},e.prototype.atan2=function(e){return this.throwIfDisposed(),Qn.atan2(this,e)},e.prototype.sub=function(e){return this.throwIfDisposed(),Qn.sub(this,e)},e.prototype.subStrict=function(e){return this.throwIfDisposed(),Qn.subStrict(this,e)},e.prototype.pow=function(e){return this.throwIfDisposed(),Qn.pow(this,e)},e.prototype.powStrict=function(e){return this.throwIfDisposed(),Qn.powStrict(this,e)},e.prototype.mul=function(e){return this.throwIfDisposed(),Qn.mul(this,e)},e.prototype.mulStrict=function(e){return this.throwIfDisposed(),Qn.mulStrict(this,e)},e.prototype.floorDiv=function(e){return this.throwIfDisposed(),Qn.floorDiv(this,e)},e.prototype.divStrict=function(e){return this.throwIfDisposed(),Qn.divStrict(this,e)},e.prototype.minimum=function(e){return this.throwIfDisposed(),Qn.minimum(this,e)},e.prototype.minimumStrict=function(e){return this.throwIfDisposed(),Qn.minimumStrict(this,e)},e.prototype.maximum=function(e){return this.throwIfDisposed(),Qn.maximum(this,e)},e.prototype.maximumStrict=function(e){return this.throwIfDisposed(),Qn.maximumStrict(this,e)},e.prototype.mod=function(e){return this.throwIfDisposed(),Qn.mod(this,e)},e.prototype.modStrict=function(e){return this.throwIfDisposed(),Qn.modStrict(this,e)},e.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),Qn.squaredDifferenceStrict(this,e)},e.prototype.notEqual=function(e){return this.throwIfDisposed(),Qn.notEqual(this,e)},e.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Qn.notEqualStrict(this,e)},e.prototype.less=function(e){return this.throwIfDisposed(),Qn.less(this,e)},e.prototype.lessStrict=function(e){return this.throwIfDisposed(),Qn.lessStrict(this,e)},e.prototype.equal=function(e){return this.throwIfDisposed(),Qn.equal(this,e)},e.prototype.equalStrict=function(e){return this.throwIfDisposed(),Qn.equalStrict(this,e)},e.prototype.lessEqual=function(e){return this.throwIfDisposed(),Qn.lessEqual(this,e)},e.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),Qn.lessEqualStrict(this,e)},e.prototype.greater=function(e){return this.throwIfDisposed(),Qn.greater(this,e)},e.prototype.greaterStrict=function(e){return this.throwIfDisposed(),Qn.greaterStrict(this,e)},e.prototype.greaterEqual=function(e){return this.throwIfDisposed(),Qn.greaterEqual(this,e)},e.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Qn.greaterEqualStrict(this,e)},e.prototype.logicalAnd=function(e){return this.throwIfDisposed(),Qn.logicalAnd(this,e)},e.prototype.logicalOr=function(e){return this.throwIfDisposed(),Qn.logicalOr(this,e)},e.prototype.logicalNot=function(){return this.throwIfDisposed(),Qn.logicalNot(this)},e.prototype.logicalXor=function(e){return this.throwIfDisposed(),Qn.logicalXor(this,e)},e.prototype.where=function(e,t){return this.throwIfDisposed(),Qn.where(e,this,t)},e.prototype.neg=function(){return this.throwIfDisposed(),Qn.neg(this)},e.prototype.ceil=function(){return this.throwIfDisposed(),Qn.ceil(this)},e.prototype.floor=function(){return this.throwIfDisposed(),Qn.floor(this)},e.prototype.sign=function(){return this.throwIfDisposed(),Qn.sign(this)},e.prototype.isNaN=function(){return this.throwIfDisposed(),Qn.isNaN(this)},e.prototype.isInf=function(){return this.throwIfDisposed(),Qn.isInf(this)},e.prototype.isFinite=function(){return this.throwIfDisposed(),Qn.isFinite(this)},e.prototype.exp=function(){return this.throwIfDisposed(),Qn.exp(this)},e.prototype.expm1=function(){return this.throwIfDisposed(),Qn.expm1(this)},e.prototype.log=function(){return this.throwIfDisposed(),Qn.log(this)},e.prototype.log1p=function(){return this.throwIfDisposed(),Qn.log1p(this)},e.prototype.sqrt=function(){return this.throwIfDisposed(),Qn.sqrt(this)},e.prototype.rsqrt=function(){return this.throwIfDisposed(),Qn.rsqrt(this)},e.prototype.square=function(){return this.throwIfDisposed(),Qn.square(this)},e.prototype.reciprocal=function(){return this.throwIfDisposed(),Qn.reciprocal(this)},e.prototype.abs=function(){return this.throwIfDisposed(),Qn.abs(this)},e.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Qn.clipByValue(this,e,t)},e.prototype.relu=function(){return this.throwIfDisposed(),Qn.relu(this)},e.prototype.relu6=function(){return this.throwIfDisposed(),Qn.relu6(this)},e.prototype.elu=function(){return this.throwIfDisposed(),Qn.elu(this)},e.prototype.selu=function(){return this.throwIfDisposed(),Qn.selu(this)},e.prototype.leakyRelu=function(e){return void 0===e&&(e=.2),this.throwIfDisposed(),Qn.leakyRelu(this,e)},e.prototype.prelu=function(e){return this.throwIfDisposed(),Qn.prelu(this,e)},e.prototype.sigmoid=function(){return this.throwIfDisposed(),Qn.sigmoid(this)},e.prototype.logSigmoid=function(){return this.throwIfDisposed(),Qn.logSigmoid(this)},e.prototype.softplus=function(){return this.throwIfDisposed(),Qn.softplus(this)},e.prototype.zerosLike=function(){return this.throwIfDisposed(),Qn.zerosLike(this)},e.prototype.onesLike=function(){return this.throwIfDisposed(),Qn.onesLike(this)},e.prototype.sin=function(){return this.throwIfDisposed(),Qn.sin(this)},e.prototype.cos=function(){return this.throwIfDisposed(),Qn.cos(this)},e.prototype.tan=function(){return this.throwIfDisposed(),Qn.tan(this)},e.prototype.asin=function(){return this.throwIfDisposed(),Qn.asin(this)},e.prototype.acos=function(){return this.throwIfDisposed(),Qn.acos(this)},e.prototype.atan=function(){return this.throwIfDisposed(),Qn.atan(this)},e.prototype.sinh=function(){return this.throwIfDisposed(),Qn.sinh(this)},e.prototype.cosh=function(){return this.throwIfDisposed(),Qn.cosh(this)},e.prototype.tanh=function(){return this.throwIfDisposed(),Qn.tanh(this)},e.prototype.asinh=function(){return this.throwIfDisposed(),Qn.asinh(this)},e.prototype.acosh=function(){return this.throwIfDisposed(),Qn.acosh(this)},e.prototype.atanh=function(){return this.throwIfDisposed(),Qn.atanh(this)},e.prototype.erf=function(){return this.throwIfDisposed(),Qn.erf(this)},e.prototype.round=function(){return this.throwIfDisposed(),Qn.round(this)},e.prototype.step=function(e){return void 0===e&&(e=0),this.throwIfDisposed(),Qn.step(this,e)},e.prototype.softmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),Qn.softmax(this,e)},e.prototype.logSoftmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),Qn.logSoftmax(this,e)},e.prototype.resizeBilinear=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),Qn.image.resizeBilinear(this,e,t)},e.prototype.resizeNearestNeighbor=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),Qn.image.resizeNearestNeighbor(this,e,t)},e.prototype.conv1d=function(e,t,n,r,a,i){return void 0===r&&(r="NWC"),void 0===a&&(a=1),this.throwIfDisposed(),Qn.conv1d(this,e,t,n,r,a,i)},e.prototype.conv2d=function(e,t,n,r,a,i){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),Qn.conv2d(this,e,t,n,r,a,i)},e.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Qn.conv2dTranspose(this,e,t,n,r,a)},e.prototype.depthwiseConv2D=function(e,t,n,r,a,i){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),Qn.depthwiseConv2d(this,e,t,n,r,a,i)},e.prototype.separableConv2d=function(e,t,n,r,a,i){return void 0===a&&(a=[1,1]),void 0===i&&(i="NHWC"),this.throwIfDisposed(),Qn.separableConv2d(this,e,t,n,r,a,i)},e.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Qn.avgPool(this,e,t,n,r)},e.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Qn.maxPool(this,e,t,n,r)},e.prototype.localResponseNormalization=function(e,t,n,r){return void 0===e&&(e=5),void 0===t&&(t=1),void 0===n&&(n=1),void 0===r&&(r=.5),Qn.localResponseNormalization(this,e,t,n,r)},e.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Qn.pool(this,e,t,n,r,a)},e.prototype.variable=function(e,t,n){return void 0===e&&(e=!0),this.throwIfDisposed(),Yn().makeVariable(this,e,t,n)},e.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Qn.unsortedSegmentSum(this,e,t)},e.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Qn.batchToSpaceND(this,e,t)},e.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Qn.spaceToBatchND(this,e,t)},e.prototype.topk=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),this.throwIfDisposed(),Qn.topk(this,e,t)},e.prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return void 0===r&&(r=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===o&&(o=0),this.throwIfDisposed(),Qn.stridedSlice(this,e,t,n,r,a,i,s,o)},e.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Qn.depthToSpace(this,e,t)},e.prototype.fft=function(){return this.throwIfDisposed(),Qn.spectral.fft(this)},e.prototype.ifft=function(){return this.throwIfDisposed(),Qn.spectral.ifft(this)},e.prototype.rfft=function(){return this.throwIfDisposed(),Qn.spectral.rfft(this)},e.prototype.irfft=function(){return this.throwIfDisposed(),Qn.spectral.irfft(this)},e}();Object.defineProperty(Zn,Symbol.hasInstance,{value:function(e){return!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype}});var er,tr,nr,rr,ar,ir=function(e){function t(t,n,r,a){var i=e.call(this,t.shape,t.dtype,t.dataId,a)||this;return i.trainable=n,i.name=r,i}return Pt(t,e),t.prototype.assign=function(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value ("+e.dtype+") and previous value ("+this.dtype+") must match");if(!un(e.shape,this.shape))throw new Error("shape of the new value ("+e.shape+") and previous value ("+this.shape+") must match");Yn().disposeTensor(this),this.dataId=e.dataId,Yn().incRef(this,null)},t.prototype.dispose=function(){Yn().disposeVariable(this),this.isDisposedInternal=!0},t}(Zn);Object.defineProperty(ir,Symbol.hasInstance,{value:function(e){return e instanceof Zn&&null!=e.assign&&e.assign instanceof Function}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(er||(er={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(tr||(tr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(nr||(nr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(rr||(rr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ar||(ar={}));var sr,or={float32:rr,int32:tr,bool:nr,complex64:ar};function ur(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast "+e+" with "+t)}return or[e][t]}function lr(e){return ur(e,"int32")}function cr(e,t){if(e.dtype===t.dtype)return[e,t];var n=ur(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function hr(e,t){nn(e.dtype===t.dtype,(function(){return"The dtypes of the first("+e.dtype+") and second("+t.dtype+") input must match"}))}function dr(e){var t=[];return function e(t,n,r){if(null!=t)if(t instanceof Zn)n.push(t);else if(a=t,Array.isArray(a)||"object"==typeof a){var a,i=t;for(var s in i){var o=i[s];r.has(o)||(r.add(o),e(o,n,r))}}}(e,t,new Set),t}Object.freeze({makeTypesMatch:cr,assertTypesMatch:hr,isTensorInList:function(e,t){return t.some((function(t){return t.id===e.id}))},getTensorsInContainer:dr});var pr=function(){function e(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return e.prototype.dispose=function(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()},e}(),fr=function(){function e(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pr}return e.prototype.ready=function(){return Bt(this,void 0,void 0,(function(){var e,t,n;return zt(this,(function(r){switch(r.label){case 0:if(null!=this.pendingBackendInit)return[2,this.pendingBackendInit.then((function(){}))];if(null!=this.backendInstance)return[2];e=this.getSortedBackends(),t=0,r.label=1;case 1:return t<e.length?(n=e[t],[4,this.initializeBackend(n).success]):[3,5];case 2:return r.sent()?[4,this.setBackend(n)]:[3,4];case 3:return r.sent(),[2];case 4:return t++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}}))}))},Object.defineProperty(e.prototype,"backend",{get:function(){if(null!=this.pendingBackendInit)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){var e=this.initializeBackendsAndReturnBest(),t=e.name;if(e.asyncInit)throw new Error("The highest priority backend '"+t+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance},enumerable:!0,configurable:!0}),e.prototype.backendNames=function(){return Object.keys(this.registryFactory)},e.prototype.findBackend=function(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;if(this.initializeBackend(e).asyncInit)return null}return this.registry[e]},e.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e].factory:null},e.prototype.registerBackend=function(e,t,n){return void 0===n&&(n=1),e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)},e.prototype.setBackend=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r;return zt(this,(function(a){switch(a.label){case 0:if(null==this.registryFactory[e])throw new Error("Backend name '"+e+"' not found in registry");return this.backendName=e,null!=this.registry[e]?[3,4]:(this.backendInstance=null,t=this.initializeBackend(e),n=t.success,t.asyncInit?[4,n]:[3,2]);case 1:return r=a.sent(),[3,3];case 2:r=n,a.label=3;case 3:if(!r)return[2,!1];a.label=4;case 4:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Un(this.backendInstance),[2,!0]}}))}))},e.prototype.setupRegisteredKernels=function(){var e=this;Kt(this.backendName).forEach((function(t){null!=t.setupFunc&&t.setupFunc(e.backendInstance)}))},e.prototype.disposeRegisteredKernels=function(e){var t=this;Kt(e).forEach((function(n){null!=n.disposeFunc&&n.disposeFunc(t.registry[e])}))},e.prototype.initializeBackend=function(e){var t=this,n=this.registryFactory[e];if(null==n)throw new Error("Cannot initialize backend "+e+", no registration found.");try{var r=n.factory();if(Promise.resolve(r)===r){var a=++this.pendingBackendInitId,i=r.then((function(n){return!(a<t.pendingBackendInitId||(t.registry[e]=n,t.pendingBackendInit=null,0))})).catch((function(n){return!(a<t.pendingBackendInitId||(t.pendingBackendInit=null,console.warn("Initialization of backend "+e+" failed"),console.warn(n.stack||n.message),1))}));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(t){return console.warn("Initialization of backend "+e+" failed"),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}},e.prototype.removeBackend=function(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},e.prototype.getSortedBackends=function(){var e=this;if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((function(t,n){return e.registryFactory[n].priority-e.registryFactory[t].priority}))},e.prototype.initializeBackendsAndReturnBest=function(){for(var e=this.getSortedBackends(),t=0;t<e.length;t++){var n=e[t],r=this.initializeBackend(n),a=r.success,i=r.asyncInit;if(i||a)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")},e.prototype.moveData=function(e,t){var n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},e.prototype.tidy=function(e,t){var n,r=this,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((function(){return r.startScope(a)}),(function(){return r.endScope(n)}),(function(){return(n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n}))},e.prototype.scopedRun=function(e,t,n){e();try{var r=n();return t(),r}catch(e){throw t(),e}},e.prototype.nextTensorId=function(){return e.nextTensorId++},e.prototype.nextVariableId=function(){return e.nextVariableId++},e.prototype.clone=function(e){var t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(function(e){return{x:function(){return e.toFloat()}}}),[],{}),t},e.prototype.runKernel=function(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)},e.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},e.prototype.checkKernelForMemLeak=function(e,t,n){var r=this.backend.numDataIds(),a=0;n.forEach((function(e){a+="complex64"===e.dtype?3:1}));var i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+s+" data ids) after running '"+e+"'")},e.prototype.runKernelFunc=function(e,t,n,r,a,i,s){var o,u=this,l=[],c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");var h,d=this.state.numBytes,p=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var f,m=jt(r,this.backendName);if(null!=m)h=function(){var e=u.backend.numDataIds();f=m.kernelFunc({inputs:t,attrs:a,backend:u.backend});var n=Array.isArray(f)?f:[f];u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,e,n);var o=n.map((function(e){var t=e.dataId,n=e.shape,r=e.dtype;return u.makeTensorFromDataId(t,n,r)}));if(c){var h=u.getTensorsForGradient(r,t,o);if(null==h){null==s&&(s=[]);var d=o.filter((function(e,t){return s[t]}));h=(i||[]).slice().concat(d)}l=u.saveTensorsForBackwardMode(h)}return o};else{var g=function(e){c&&(l=e.map((function(e){return u.keep(u.clone(e))})))};h=function(){var t=u.backend.numDataIds();f=u.tidy((function(){return e(u.backend,g)}));var n=Array.isArray(f)?f:[f];return u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,t,n),n}}return this.scopedRun((function(){return u.state.kernelDepth++}),(function(){return u.state.kernelDepth--}),(function(){o=u.ENV.getBool("DEBUG")?u.profiler.profileKernel(r,t,(function(){return h()})):h()})),c&&this.addTapeNode(r,t,o,n,l,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((function(e){return t[e].shape})),outputShapes:o.map((function(e){return e.shape}))}),Array.isArray(f)?o:o[0]},e.prototype.saveTensorsForBackwardMode=function(e){var t=this;return e.map((function(e){return t.keep(t.clone(e))}))},e.prototype.getTensorsForGradient=function(e,t,n){var r=qt(e);if(null!=r){var a=r.inputsToSave||[],i=r.outputsToSave||[],s=void 0;r.saveAllInputs?(nn(Array.isArray(t),(function(){return"saveAllInputs is true, expected inputs to be an array."})),s=Object.keys(t).map((function(e){return t[e]}))):s=a.map((function(e){return t[e]}));var o=n.filter((function(e,t){return i[t]}));return s.concat(o)}return null},e.prototype.makeTensor=function(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;var a=e;"string"===n&&Sn(e[0])&&(a=e.map((function(e){return Pn(e)})));var i=r.write(a,t,n),s=new Zn(t,n,i,this.nextTensorId());if(this.incRef(s,r),"string"===n){var o=this.state.tensorInfo.get(i),u=Cn(a);this.state.numBytes+=u-o.bytes,o.bytes=u}return s},e.prototype.makeTensorFromDataId=function(e,t,n,r){var a=new Zn(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a},e.prototype.makeVariable=function(e,t,n,r){void 0===t&&(t=!0),n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.asType(r));var a=new ir(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name "+a.name+" was already registered");return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a},e.prototype.incRef=function(e,t){var n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;var r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*In(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.state.numBytes+=r}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof ir||this.track(e)},e.prototype.disposeTensor=function(e){if(this.state.tensorInfo.has(e.dataId)){this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;var t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}},e.prototype.disposeVariables=function(){for(var e in this.state.registeredVariables){var t=this.state.registeredVariables[e];this.disposeVariable(t)}},e.prototype.disposeVariable=function(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]},e.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e},e.prototype.profile=function(e){return Bt(this,void 0,void 0,(function(){var t,n;return zt(this,(function(r){return this.state.profiling=!0,t=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map((function(e){return e.totalBytesSnapshot}))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,[2,this.state.activeProfile]}))}))},e.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth},e.prototype.addTapeNode=function(e,t,n,r,a,i){var s=this,o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=qt(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=function(e){return e=e.map((function(e,t){if(null==e){var r=n[t],a=On(r.size,r.dtype);return s.makeTensor(a,r.shape,r.dtype)}return e})),r(e.length>1?e:e[0],a,i)}),this.state.activeTape.push(o)},e.prototype.keep=function(e){return e.kept=!0,e},e.prototype.startTape=function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++},e.prototype.endTape=function(){this.state.gradientDepth--},e.prototype.startScope=function(e){var t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t},e.prototype.endScope=function(e){for(var t=this,n=dr(e),r=new Set(n.map((function(e){return e.id}))),a=0;a<this.state.activeScope.track.length;a++){var i=this.state.activeScope.track[a];i.kept||r.has(i.id)||i.dispose()}var s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach((function(e){e.kept||e.scopeId!==s.id||t.track(e)}))},e.prototype.gradients=function(e,t,n,r){var a=this;if(void 0===r&&(r=!1),nn(t.length>0,(function(){return"gradients() received an empty list of xs."})),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '"+n.dtype+"'");var i=this.scopedRun((function(){return a.startTape()}),(function(){return a.endTape()}),(function(){return a.tidy("forward",e)}));nn(i instanceof Zn,(function(){return"The result y returned by f() must be a tensor."}));var s=function(e,t,n){for(var r={},a={},i=0;i<t.length;i++)r[t[i].id]=!0;for(i=0;i<e.length;i++){var s=(f=e[i]).inputs;for(var o in s){for(var u=s[o],l=!1,c=0;c<t.length;c++)if(r[u.id]){f.outputs.forEach((function(e){return r[e.id]=!0})),l=!0,a[f.id]=!0;break}if(l)break}}var h={};h[n.id]=!0;var d={};for(i=e.length-1;i>=0;i--)for(s=(f=e[i]).inputs,c=0;c<f.outputs.length;c++)if(h[f.outputs[c].id]){for(var o in s)h[s[o].id]=!0,d[f.id]=!0;break}var p=[];for(i=0;i<e.length;i++){var f;if(a[(f=e[i]).id]&&d[f.id]){var m={};for(var o in f.inputs){var g=f.inputs[o];r[g.id]&&(m[o]=g)}var v=Object.assign({},f);v.inputs=m,v.outputs=f.outputs,p.push(v)}}return p}(this.state.activeTape,t,i);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(function(){var e,r,o={};o[i.id]=null==n?(r=_n(on(e=i.shape),"float32"),mr.makeTensor(r,e,"float32")):n,function(e,t,n){for(var r=function(r){var a=t[r],i=[];if(a.outputs.forEach((function(t){var n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error("Cannot compute gradient: gradient function not found for "+a.kernelName+".");var s=a.gradient(i),o=function(t){if(!(t in s))throw new Error("Cannot backprop through input "+t+". Available gradients found: "+Object.keys(s)+".");var r=n((function(){return s[t]()}));if("float32"!==r.dtype)throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input "+t+" must have 'float32' dtype, but has '"+r.dtype+"'");var i=a.inputs[t];if(!un(r.shape,i.shape))throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input '"+t+"' has shape '"+r.shape+"', which does not match the shape of the input '"+i.shape+"'");if(null==e[i.id])e[i.id]=r;else{var o=e[i.id];e[i.id]=o.add(r),o.dispose()}};for(var u in a.inputs)o(u)},a=t.length-1;a>=0;a--)r(a)}(o,s,(function(e){return a.tidy(e)}));var u=t.map((function(e){return o[e.id]}));return 0===a.state.gradientDepth&&(a.state.activeTape.forEach((function(e){for(var t=0,n=e.saved;t<n.length;t++)n[t].dispose()})),a.state.activeTape=null),{value:i,grads:u}}))},e.prototype.customGrad=function(e){var t=this;return nn(Rn(e),(function(){return"The f passed in customGrad(f) must be a function."})),function(){for(var n,r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];nn(r.every((function(e){return e instanceof Zn})),(function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"}));var i={};return r.forEach((function(e,t){i[t]=e})),t.runKernelFunc((function(t,a){return nn((n=e.apply(void 0,r.concat([a]))).value instanceof Zn,(function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"})),nn(Rn(n.gradFunc),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."})),n.value}),i,(function(e,t){var a=n.gradFunc(e,t),i=Array.isArray(a)?a:[a];nn(i.length===r.length,(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."})),nn(i.every((function(e){return e instanceof Zn})),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."}));var s={};return i.forEach((function(e,t){s[t]=function(){return e}})),s}))}},e.prototype.readSync=function(e){return this.state.tensorInfo.get(e).backend.readSync(e)},e.prototype.read=function(e){return this.state.tensorInfo.get(e).backend.read(e)},e.prototype.time=function(e){return Bt(this,void 0,void 0,(function(){var t,n;return zt(this,(function(r){switch(r.label){case 0:return t=Mn(),[4,this.backend.time(e)];case 1:return(n=r.sent()).wallMs=Mn()-t,[2,n]}}))}))},e.prototype.track=function(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e},Object.defineProperty(e.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),e.prototype.reset=function(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pr,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},e.nextTensorId=0,e.nextVariableId=0,e}(),mr=function(){var e=function(){if(null==sr){var e=void 0;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}sr=e}return sr}();if(null==e._tfengine){var t=new Wt(e);e._tfengine=new fr(t)}return function(e){Ut=e}(e._tfengine.ENV),Yn=function(){return e._tfengine},e._tfengine}();function gr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var vr=Vt();vr.registerFlag("DEBUG",(function(){return!1}),(function(e){e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),vr.registerFlag("IS_BROWSER",(function(){return gr()})),vr.registerFlag("IS_NODE",(function(){return"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node})),vr.registerFlag("IS_CHROME",(function(){return"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)})),vr.registerFlag("PROD",(function(){return!1})),vr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(function(){return vr.getBool("DEBUG")})),vr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(function(){return!0})),vr.registerFlag("IS_TEST",(function(){return!1}));var yr,br,xr,wr={},kr={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ir(e,t){wr[e]=t}function Cr(e){e in wr||(wr[e]=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(function(t){t.preventDefault(),delete wr[e]}),!1),1===e?t.getContext("webgl",kr)||t.getContext("experimental-webgl",kr):t.getContext("webgl2",kr)}(e));var t=wr[e];return t.isContextLost()?(delete wr[e],Cr(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),wr[e])}function Sr(e,t){return[t,e]}function Nr(e){var t=on(e);return hn(Math.ceil(t/4))}function Tr(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Er(e,t){var n,r,a,i,s,o,u,l,c,h=e;return 2===Vt().getNumber("WEBGL_VERSION")?(n=h.R32F,r=h.R16F,a=h.RGBA16F,i=h.RGBA32F,s=h.RED,o=4,u=1,l=h.HALF_FLOAT,c=h.FLOAT):(n=e.RGBA,r=e.RGBA,a=e.RGBA,i=h.RGBA,s=e.RGBA,o=4,u=4,l=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:e.RGBA,downloadUnpackNumChannels:o,defaultNumChannels:u,textureTypeHalfFloat:l,textureTypeFloat:c}}function Rr(e,t,n){var r=n();return t&&function(e){var t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Dr(e,t))}(e),r}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(yr||(yr={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(br||(br={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(xr||(xr={}));function Ar(e){return!!(Vt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Dr(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function $r(e,t,n){return ta(e,t,(function(){return e.getExtension(n)}),'Extension "'+n+'" not supported on this browser.')}function Fr(e,t,n){var r=ta(e,t,(function(){return e.createShader(e.VERTEX_SHADER)}),"Unable to create vertex WebGLShader.");if(Rr(e,t,(function(){return e.shaderSource(r,n)})),Rr(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function _r(e,t,n){var r=ta(e,t,(function(){return e.createShader(e.FRAGMENT_SHADER)}),"Unable to create fragment WebGLShader.");if(Rr(e,t,(function(){return e.shaderSource(r,n)})),Rr(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw function(e,t){var n=Lr.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);for(var r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map((function(e,t){return dn((t+1).toString(),i)+e})),o=0,u=0;u<s.length;u++)o=Math.max(s[u].length,o);var l=s.slice(0,r-1),c=s.slice(r-1,r),h=s.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+dn(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(n,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var Or,Mr,Lr=/ERROR: [0-9]+:([0-9]+):/g;function Pr(e,t){return ta(e,t,(function(){return e.createProgram()}),"Unable to create WebGLProgram.")}function Br(e,t,n){if(Rr(e,t,(function(){return e.linkProgram(n)})),!1===e.getProgramParameter(n,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}function zr(e,t,n){if(Rr(e,t,(function(){return e.validateProgram(n)})),!1===e.getProgramParameter(n,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function Wr(e,t,n){var r=ta(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return Rr(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),Rr(e,t,(function(){return e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function Vr(e,t,n){var r=ta(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return Rr(e,t,(function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)})),Rr(e,t,(function(){return e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function Ur(e,t){return ta(e,t,(function(){return e.createTexture()}),"Unable to create WebGLTexture.")}function Gr(e,t){var n=Vt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){var r="["+e+"x"+t+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n)throw r="["+e+"x"+t+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU ["+n+"x"+n+"].")}function Hr(e,t){return ta(e,t,(function(){return e.createFramebuffer()}),"Unable to create WebGLFramebuffer.")}function jr(e,t,n,r,a,i,s,o){var u=e.getAttribLocation(n,r);return-1!==u&&(Rr(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,a)})),Rr(e,t,(function(){return e.vertexAttribPointer(u,i,e.FLOAT,!1,s,o)})),Rr(e,t,(function(){return e.enableVertexAttribArray(u)})),!0)}function qr(e,t,n,r){na(e,r),Rr(e,t,(function(){return e.activeTexture(e.TEXTURE0+r)})),Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)}))}function Kr(e,t,n,r){return ta(e,t,(function(){return e.getUniformLocation(n,r)}),'uniform "'+r+'" not present in program.')}function Xr(e,t,n){return e.getUniformLocation(t,n)}function Yr(e,t,n,r,a,i){Rr(e,t,(function(){return qr(e,t,r,i)})),Rr(e,t,(function(){return e.uniform1i(a,i)}))}function Qr(e,t,n,r){Rr(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,r)})),Rr(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}))}function Jr(e,t,n){Rr(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,n)})),Rr(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)}))}function Zr(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ea(e,t))}function ea(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function ta(e,t,n,r){var a=Rr(e,t,(function(){return n()}));if(null==a)throw new Error(r);return a}function na(e,t){var n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error("textureUnit must be in [gl.TEXTURE0, gl.TEXTURE"+n+"].")}function ra(e,t){return void 0===t&&(t=2),on(e.slice(0,e.length-t))}function aa(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function ia(e){var t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[ra(e)].concat(aa(e))),t}function sa(e,t){var n;void 0===t&&(t=!1);var r=Vt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(r*=2,1===(e=e.map((function(t,n){return n>=e.length-2?en(e[n]):e[n]}))).length&&(e=[2,e[0]])),2!==e.length){var a=gn(e);e=a.newShape}var i=on(e);if(e.length<=1&&i<=r)return[1,i];if(2===e.length&&e[0]<=r&&e[1]<=r)return e;if(3===e.length&&e[0]*e[1]<=r&&e[2]<=r)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=r&&e[1]*e[2]<=r)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r)return[e[0],e[1]*e[2]*e[3]];if(t){var s=ra(e),o=2,u=2;return e.length&&(o=(n=aa(e))[0],u=n[1]),hn(i=s*(o/2)*(u/2)).map((function(e){return 2*e}))}return hn(i)}function oa(e){return e%2==0}function ua(e,t){if(un(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(oa(n)&&oa(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&oa(e[0])&&oa(t[0])}function la(e){if(null==Or){var t=Cr(e);Or=t.getParameter(t.MAX_TEXTURE_SIZE)}return Or}function ca(e){if(null==Mr){var t=Cr(e);Mr=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Mr)}function ha(e){if(0===e)return 0;var t=Cr(e);return da(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:da(t,"EXT_disjoint_timer_query")?1:0}function da(e,t){return null!=e.getExtension(t)}function pa(e){try{if(null!=Cr(e))return!0}catch(e){return!1}return!1}function fa(e){if(0===e)return!1;var t=Cr(e);if(1===e){if(!da(t,"OES_texture_float"))return!1}else if(!da(t,"EXT_color_buffer_float"))return!1;return ga(t)}function ma(e){if(0===e)return!1;var t=Cr(e);if(1!==e){if(da(t,"EXT_color_buffer_float"))return ga(t);if(da(t,"EXT_color_buffer_half_float")){var n=t.getExtension("EXT_color_buffer_half_float");return function(e,t){var n=Er(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);var a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);var i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),i}(t,n)}return!1}return!!da(t,"OES_texture_float")&&!!da(t,"WEBGL_color_buffer_float")&&ga(t)}function ga(e){var t=Er(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);var r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function va(e){return 2===e&&null!=Cr(e).fenceSync}var ya=Object.freeze({callAndCheck:Rr,canBeRepresented:Ar,getWebGLErrorMessage:Dr,getExtensionOrThrow:$r,createVertexShader:Fr,createFragmentShader:_r,createProgram:Pr,linkProgram:Br,validateProgram:zr,createStaticVertexBuffer:Wr,createStaticIndexBuffer:Vr,getNumChannels:function(){return 2===Vt().getNumber("WEBGL_VERSION")?1:4},createTexture:Ur,validateTextureSize:Gr,createFramebuffer:Hr,bindVertexBufferToProgramAttribute:jr,bindTextureUnit:qr,unbindTextureUnit:function(e,t,n){na(e,n),Rr(e,t,(function(){return e.activeTexture(e.TEXTURE0+n)})),Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))},getProgramUniformLocationOrThrow:Kr,getProgramUniformLocation:Xr,bindTextureToProgramUniformSampler:Yr,bindCanvasToFramebuffer:function(e,t){Rr(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)})),Rr(e,t,(function(){return e.viewport(0,0,e.canvas.width,e.canvas.height)})),Rr(e,t,(function(){return e.scissor(0,0,e.canvas.width,e.canvas.height)}))},bindColorTextureToFramebuffer:Qr,unbindColorTextureFromFramebuffer:Jr,validateFramebuffer:Zr,getFramebufferErrorMessage:ea,getBatchDim:ra,getRowsCols:aa,getShapeAs3D:ia,getTextureShapeFromLogicalShape:sa,isReshapeFree:ua,getWebGLMaxTextureSize:la,resetMaxTextureSize:function(){Or=null},resetMaxTexturesInShader:function(){Mr=null},getMaxTexturesInShader:ca,getWebGLDisjointQueryTimerVersion:ha,hasExtension:da,isWebGLVersionEnabled:pa,isCapableOfRenderingToFloatTexture:fa,isDownloadFloatTextureEnabled:ma,isWebGLFenceEnabled:va}),ba=Vt();function xa(e){Vt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function wa(e,t){return mr.tidy(e,t)}function ka(e){dr(e).forEach((function(e){return e.dispose()}))}function Ia(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];Vt().getBool("IS_TEST")||console.warn.apply(console,e)}function Ca(e,t){var n=e;if(kn(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];for(var r=[];Array.isArray(n)||kn(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Vt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],Array.isArray(t)||kn(t)){nn(n.length>0,(function(){return"Element arr["+r.join("][")+"] should be a primitive, but is an array of "+t.length+" elements"})),nn(t.length===n[0],(function(){return"Element arr["+r.join("][")+"] should have "+n[0]+" elements, but has "+t.length+" elements"}));for(var a=n.slice(1),i=0;i<t.length;++i)e(t[i],a,r.concat(i))}else nn(0===n.length,(function(){return"Element arr["+r.join("][")+"] is a primitive, but should be an array/TypedArray of "+n[0]+" elements"}))}(e,r,[]),r}function Sa(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error("Argument '"+n+"' passed to '"+r+"' must be "+e+" tensor, but got "+t+" tensor")}function Na(e,t,n,r){if(void 0===r&&(r="numeric"),e instanceof Zn)return Sa(r,e.dtype,t,n),e;var a=En(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Sa(r,a,t,n),null==e||!kn(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){var i=null==e?"null":e.constructor.name;throw new Error("Argument '"+t+"' passed to '"+n+"' must be a Tensor or TensorLike, but got '"+i+"'")}var s=Ca(e,a);kn(e)||Array.isArray(e)||(e=[e]);var o="string"!==a?$n(e,a,Vt().getBool("DEBUG")):sn(e,[],!0);return mr.makeTensor(o,s,a)}function Ta(e,t,n,r){if(void 0===r&&(r="numeric"),!Array.isArray(e))throw new Error("Argument "+t+" passed to "+n+" must be a `Tensor[]` or `TensorLike[]`");return e.map((function(e,r){return Na(e,t+"["+r+"]",n)}),r)}function Ea(e,t){for(var n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ra(e,t,n){for(var r=e.length+t.length,a=[],i=0,s=0,o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function Aa(e,t){for(var n=[],r=e.length,a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((function(t){return e[t]}))]}function Da(e,t){return Ra(e,t.map((function(e){return 1})),t)}function $a(e,t,n){nn(Ea(t,n),(function(){return e+" supports only inner-most axes for now. Got axes "+t+" and rank-"+n+" input."}))}function Fa(e,t){if(Ea(e,t))return null;for(var n=[],r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((function(e){return n.push(e)})),n}function _a(e){return e.map((function(e,t){return[t,e]})).sort((function(e,t){return e[1]-t[1]})).map((function(e){return e[0]}))}function Oa(e,t){for(var n=[],r=t-e;r<t;++r)n.push(r);return n}function Ma(e,t){var n=e[0].length;e.forEach((function(e,t){nn(e.length===n,(function(){return"Error in concat"+n+"D: rank of tensors["+t+"] must be the same as the rank of the rest ("+n+")"}))})),nn(t>=0&&t<n,(function(){return"Error in concat"+n+"D: axis must be between 0 and "+(n-1)+"."}));var r=e[0];e.forEach((function(e,a){for(var i=0;i<n;i++)nn(i===t||e[i]===r[i],(function(){return"Error in concat"+n+"D: Shape of tensors["+a+"] ("+e+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+a+"."}))}))}function La(e,t){for(var n=e[0].slice(),r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Pa(e){var t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");var n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));var a=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];mr.startScope(n);try{var a=r.apply(void 0,e);return a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),mr.endScope(a),a}catch(e){throw mr.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}ba.registerFlag("HAS_WEBGL",(function(){return ba.getNumber("WEBGL_VERSION")>0})),ba.registerFlag("WEBGL_VERSION",(function(){return pa(2)?2:pa(1)?1:0})),ba.registerFlag("WEBGL_BUFFER_SUPPORTED",(function(){return 2===ba.get("WEBGL_VERSION")})),ba.registerFlag("WEBGL_CPU_FORWARD",(function(){return!0})),ba.registerFlag("WEBGL_FORCE_F16_TEXTURES",(function(){return!1})),ba.registerFlag("WEBGL_PACK",(function(){return ba.getBool("HAS_WEBGL")})),ba.registerFlag("WEBGL_PACK_NORMALIZATION",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_PACK_CLIP",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_PACK_DEPTHWISECONV",(function(){return!1})),ba.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_PACK_REDUCE",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_LAZILY_UNPACK",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_CONV_IM2COL",(function(){return ba.getBool("WEBGL_PACK")})),ba.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(function(){return la(ba.getNumber("WEBGL_VERSION"))})),ba.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(function(){return ca(ba.getNumber("WEBGL_VERSION"))})),ba.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(function(){var e=ba.getNumber("WEBGL_VERSION");return 0===e?0:ha(e)})),ba.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(function(){return ba.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(e=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))));var e})),ba.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(function(){return fa(ba.getNumber("WEBGL_VERSION"))})),ba.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(function(){return!ba.getBool("WEBGL_FORCE_F16_TEXTURES")&&ba.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")})),ba.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(function(){return ma(ba.getNumber("WEBGL_VERSION"))})),ba.registerFlag("WEBGL_FENCE_API_ENABLED",(function(){return va(ba.getNumber("WEBGL_VERSION"))})),ba.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(function(){return ba.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0})),Jn=xa;var Ba=Pa({complex_:function(e,t){var n=Na(e,"real","complex"),r=Na(t,"imag","complex");return rn(n.shape,r.shape,"real and imag shapes, "+n.shape+" and "+r.shape+", must match in call to tf.complex()."),mr.runKernelFunc((function(e){return e.complex(n,r)}),{$real:n,$imag:r})}}),za=Pa({real_:function(e){var t=Na(e,"input","real");return mr.runKernelFunc((function(e){return e.real(t)}),{$input:t})}}),Wa=Pa({imag_:function(e){var t=Na(e,"input","imag");return mr.runKernelFunc((function(e){return e.imag(t)}),{$input:t})}});function Va(e,t,n){return Ua(e,t,Ca(e,n),n)}function Ua(e,t,n,r){if(null==r&&(r=En(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!kn(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ln(t);var a=on(t),i=on(n);nn(a===i,(function(){return"Based on the provided shape, ["+t+"], the tensor should have "+a+" values but has "+i}));for(var s=0;s<n.length;++s){var o=n[s],u=s!==n.length-1||o!==on(t.slice(s));nn(n[s]===t[s]||!u,(function(){return"Error creating a new Tensor. Inferred shape ("+n+") does not match the provided shape ("+t+"). "}))}}return kn(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?$n(e,r,Vt().getBool("DEBUG")):sn(e,[],!0),mr.makeTensor(e,t,r)}function Ga(e,t){if((kn(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&kn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ua(e,[],[],t)}function Ha(e,t){an(e);var n=Ca(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ua(e,null,n,t)}function ja(e,t,n){if(an(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");var r=Ca(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ua(e,t,r,n)}function qa(e,t,n){if(an(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");var r=Ca(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ua(e,t,r,n)}function Ka(e,t,n){if(an(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");var r=Ca(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ua(e,t,r,n)}function Xa(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=Xa(e,"float32"),r=Ya(e,"float32");return Ba(n,r)}var a=_n(on(e),t);return mr.makeTensor(a,e,t)}function Ya(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=Ya(e,"float32"),r=Ya(e,"float32");return Ba(n,r)}var a=On(on(e),t);return mr.makeTensor(a,e,t)}function Qa(e,t,n){return mr.runKernelFunc((function(r){return r.fill(e,t,n)}),{})}function Ja(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return mr.runKernelFunc((function(r){return r.linspace(e,t,n)}),{})}function Za(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r="float32"),0===n)throw new Error("Cannot have a step of zero");if(e===t||e<t&&n<0||t<e&&n>1)return Ya([0],r);var a=On(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(var i=1;i<a.length;i++)a[i]=a[i-1]+n;return Ha(a,r)}var ei=Pa({onesLike_:function(e){var t=Na(e,"x","onesLike");if("complex64"===t.dtype){var n=ei(za(t)),r=ti(Wa(t));return Ba(n,r)}return mr.runKernelFunc((function(e){return e.onesLike(t)}),{x:t},(function(e,t){return{x:function(){return ti(e)}}}),"OnesLike")}}),ti=Pa({zerosLike_:function(e){var t=Na(e,"x","zerosLike");return mr.runKernelFunc((function(e){return e.zerosLike(t)}),{x:t},(function(e,t){return{x:function(){return ti(e)}}}),"ZerosLike")}}),ni=Pa({concat_:function(e,t){void 0===t&&(t=0),nn(e.length>=1,(function(){return"Pass at least one tensor to concat"}));var n=Ta(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((function(e){if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype "+e.dtype+". ")})),t=mn(t,n[0].shape)[0];var r=La(n.map((function(e){return e.shape})),t);if(0===on(r))return Va([],r);if(1===(n=n.filter((function(e){return e.size>0}))).length)return n[0];var a=n.map((function(e){return e.shape}));Ma(a,t);var i=n,s={axis:t};return mr.runKernelFunc((function(e){return e.concat(n,t)}),i,(function(e){var n=a.map((function(e){return e[t]}));return oi(e,n,t).map((function(e){return function(){return e}}))}),"Concat",s)}}),ri=Pa({concat1d_:function(e){return ni(e,0)}}),ai=Pa({concat2d_:function(e,t){return ni(e,t)}}),ii=Pa({concat3d_:function(e,t){return ni(e,t)}}),si=Pa({concat4d_:function(e,t){return ni(e,t)}}),oi=Pa({split_:function(e,t,n){void 0===n&&(n=0);var r,a=Na(e,"x","split");return n=mn(n,a.shape)[0],"number"==typeof t?(nn(a.shape[n]%t==0,(function(){return"Number of splits must evenly divide the axis."})),r=new Array(t).fill(a.shape[n]/t)):(nn(a.shape[n]===t.reduce((function(e,t){return e+t})),(function(){return"The sum of sizes must match the size of the axis dimension."})),r=t),mr.runKernelFunc((function(e){return e.split(a,r,n)}),{$x:a},(function(e){return{$x:function(){return ni(e,n)}}}))}});function ui(e,t,n){return void 0===t&&(t="float32"),t=t||"float32",Ln(e),new Xn(e,t,n)}var li=Pa({batchToSpaceND_:function(e,t,n){var r=Na(e,"x","batchToSpaceND"),a=t.reduce((function(e,t){return e*t}));return nn(r.rank>=1+t.length,(function(){return"input rank is "+r.rank+" but should be > than blockShape.length "+t.length})),nn(n.length===t.length,(function(){return"crops.length is "+n.length+" but should be equal to blockShape.length  "+t.length})),nn(r.shape[0]%a==0,(function(){return"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+t.join(" * ")+" === "+a})),mr.runKernelFunc((function(e){return e.batchToSpaceND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.spaceToBatchND(t,n)}}}))}}),ci=Pa({cast_:function(e,t){var n=Na(e,"x","cast");if(!xn(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");var r={dtype:t};return mr.runKernelFunc((function(e){return e.cast(n,t)}),{x:n},(function(e){return{x:function(){return e.clone()}}}),"Cast",r)}}),hi=Pa({cumsum_:function(e,t,n,r){void 0===t&&(t=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var a=Na(e,"x","cumsum"),i=Fa([t|=0],a.rank),s=a;null!=i&&(s=a.transpose(i));var o=Oa(1,a.rank)[0],u=mr.runKernelFunc((function(e){return e.cumsum(s,o,n,r)}),{permutedX:s},(function(e){return{permutedX:function(){return e.cumsum(t,n,!r)}}}));return null!=i&&(u=u.transpose(i)),u}}),di=Pa({depthToSpace_:function(e,t,n){void 0===n&&(n="NHWC");var r=Na(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];return nn(a*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+a+" and "+t+"  for depthToSpace with input shape\n      "+r.shape})),nn(i*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+i+" and "+t+" for depthToSpace with input shape\n          "+r.shape})),nn(s%(t*t)==0,(function(){return"Dimension size must be evenly divisible by "+t*t+" but is "+s+" for depthToSpace with input shape "+r.shape})),mr.runKernelFunc((function(e){return e.depthToSpace(r,t,n)}),{$x:r})}}),pi=Pa({expandDims_:function(e,t){void 0===t&&(t=0);var n=Na(e,"x","expandDims",null);nn(t<=n.rank,(function(){return"Axis must be <= rank of the tensor"}));var r=n.shape.slice();return t<0&&(nn(-(n.rank+1)<=t,(function(){return"Axis must be in the interval ["+-(n.rank+1)+", "+n.rank+"]"})),t=n.rank+t+1),r.splice(t,0,1),fi(n,r)}}),fi=Pa({reshape_:function(e,t){var n=Na(e,"x","reshape",null);t=fn(t,n.size),nn(n.size===on(t),(function(){return"new shape and old shape must have the same number of elements."}));var r={shape:t};return mr.runKernelFunc((function(e){return e.reshape(n,t)}),{x:n},(function(e){return{x:function(){return e.reshape(n.shape)}}}),"Reshape",r)}}),mi=Pa({spaceToBatchND_:function(e,t,n){var r=Na(e,"x","spaceToBatchND");return nn(r.rank>=1+t.length,(function(){return"input rank "+r.rank+" should be > than [blockShape] "+t.length})),nn(n.length===t.length,(function(){return"paddings.shape[0] "+n.length+" must be equal to [blockShape] "+t.length})),nn(r.shape.reduce((function(e,r,a){return a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e}),!0),(function(){return"input spatial dimensions "+r.shape.slice(1)+" with paddings "+n.toString()+" must be divisible by blockShapes "+t.toString()})),mr.runKernelFunc((function(e){return e.spaceToBatchND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.batchToSpaceND(t,n)}}}))}}),gi=Pa({squeeze_:function(e,t){var n=Na(e,"x","squeeze");return fi(n,gn(n.shape,t).newShape)}}),vi=Pa({stack_:function(e,t){void 0===t&&(t=0);var n=Ta(e,"tensors","stack");if(nn(n.length>=1,(function(){return"Pass at least one tensor to tf.stack"})),1===n.length)return n[0].expandDims(t);var r=n[0].rank,a=n[0].shape,i=n[0].dtype;nn(t<=r,(function(){return"Axis must be <= rank of the tensor"})),n.forEach((function(e){rn(a,e.shape,"All tensors passed to stack must have matching shapes")})),n.forEach((function(e){nn(i===e.dtype,(function(){return"All tensors passed to stack must have matching dtypes"}))}));var s=n.map((function(e){return e.expandDims(t)}));return ni(s,t)}}),yi=Pa({unstack_:function(e,t){void 0===t&&(t=0),t=t||0;var n=Na(e,"x","unstack");nn(t>=-n.shape.length&&t<n.shape.length,(function(){return"Axis = "+t+" is not in [-"+n.shape.length+", "+n.shape.length+")"})),t<0&&(t+=n.shape.length);var r={axis:t};return mr.runKernelFunc((function(e){return e.unstack(n,t)}),{x:n},(function(e){return{x:function(){return vi(e,t)}}}),"Unpack",r)}}),bi=function(e,t){return Bt(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c,h;return zt(this,(function(d){switch(d.label){case 0:return n=Na(e,"x","setdiff1d"),r=Na(t,"y","setdiff1d"),nn(n.dtype===r.dtype,(function(){return"x and y should have the same dtype, but got x ("+n.dtype+") and y ("+r.dtype+")."})),nn(1===n.rank,(function(){return"x should be 1D tensor, but got x ("+n.shape+")."})),nn(1===r.rank,(function(){return"y should be 1D tensor, but got y ("+r.shape+")."})),[4,n.data()];case 1:return a=d.sent(),[4,r.data()];case 2:for(i=d.sent(),s=new Set(i),o=0,c=0;c<a.length;c++)s.has(a[c])||o++;for(u=new Xn([o],n.dtype),l=new Xn([o],"int32"),c=0,h=0;c<a.length;c++)s.has(a[c])||(u.values[h]=a[c],l.values[h]=c,h++);return[2,[u.toTensor(),l.toTensor()]]}}))}))};function xi(e,t,n,r){void 0===r&&(r=!0);var a=[];if(r)(a=a.concat(t.slice(0))).push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);for(var i=t.length,s=0;s<i;++s)a=a.concat([e[s+1]/t[s],t[s]]);a=a.concat(e.slice(i+1))}return a}function wi(e,t,n){void 0===n&&(n=!0);var r=[];if(n){r.push(t);for(var a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{var i=[],s=[];for(a=1;a<e;++a)a>=2*t+1||a%2==1?s.push(a):i.push(a);r.push.apply(r,i),r.push(0),r.push.apply(r,s)}return r}function ki(e,t,n,r){void 0===r&&(r=!0);var a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(var i=1;i<e.length;++i)i<=t.length?r?a.push(t[i-1]*e[i]):a.push(e[i]/t[i-1]):a.push(e[i]);return a}function Ii(e,t){for(var n=[0],r=0;r<t;++r)n.push(e[r][0]);return n}function Ci(e,t,n){for(var r=e.slice(0,1),a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Si="Div",Ni="SquaredDifference",Ti="BroadcastTo",Ei="OneHot",Ri="Identity",Ai="Tile",Di="PadV2",$i=Pa({add_:function(e,t){var n,r=Na(e,"a","add"),a=Na(t,"b","add");n=cr(r,a),r=n[0],a=n[1];var i={a:r,b:a};return mr.runKernelFunc((function(e,t){var n=e.add(r,a);return t([r,a]),n}),i,null,"Add")}});function Fi(e,t){for(var n=e.length,r=[],a=0;a<n;a++){var i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function _i(e,t){for(var n=[],r=0;r<t.length;r++){var a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function Oi(e,t){for(var n=[],r=Math.max(e.length,t.length),a=0;a<r;a++){var i=e[e.length-a-1];null==i&&(i=1);var s=t[t.length-a-1];if(null==s&&(s=1),1===i)n.unshift(s);else if(1===s)n.unshift(i);else{if(i!==s)throw Error("Operands could not be broadcast together with shapes "+e+" and "+t+".");n.unshift(i)}}return n}var Mi=Pa({abs_:function(e){var t=Na(e,"x","abs");return"complex64"===t.dtype?mr.runKernelFunc((function(e){return e.complexAbs(t)}),{$x:t}):mr.runKernelFunc((function(e,n){var r=e.abs(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().step(-1))}}}),"Abs")}}),Li=Pa({acos_:function(e){var t=Na(e,"x","acos");return mr.runKernelFunc((function(e,n){var r=e.acos(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Ga(1).sub(n.toFloat().square()).sqrt()).neg()}}}))}}),Pi=Pa({acosh_:function(e){var t=Na(e,"x","acosh");return mr.runKernelFunc((function(e,n){var r=e.acosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(n.toFloat().square().sub(1).sqrt())}}}))}}),Bi=Pa({asin_:function(e){var t=Na(e,"x","asin");return mr.runKernelFunc((function(e,n){var r=e.asin(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Ga(1).sub(n.toFloat().square()).sqrt())}}}))}}),zi=Pa({asinh_:function(e){var t=Na(e,"x","asinh");return mr.runKernelFunc((function(e,n){var r=e.asinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Ga(1).add(n.toFloat().square()).sqrt())}}}))}}),Wi=Pa({atan_:function(e){var t=Na(e,"x","atan");return mr.runKernelFunc((function(e,n){var r=e.atan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().square().add(1))}}}))}}),Vi=Pa({atanh_:function(e){var t=Na(e,"x","atanh");return mr.runKernelFunc((function(e,n){var r=e.atanh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(Ga(1).sub(n.toFloat().square()))}}}))}}),Ui=Pa({ceil_:function(e){var t=Na(e,"x","ceil");return mr.runKernelFunc((function(e){return e.ceil(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),Gi=Pa({clipByValue_:function(e,t,n){var r=Na(e,"x","clipByValue");nn(t<=n,(function(){return"Error in clip: min ("+t+") must be less than or equal to max ("+n+")."}));var a=[r],i={min:t,max:n};return mr.runKernelFunc((function(e,a){var i=e.clip(r,t,n);return a([r]),i}),{x:r},(function(e,r){var a=r[0];return{x:function(){return e.where(a.greaterEqual(t).logicalAnd(a.lessEqual(n)),ti(e))}}}),"ClipByValue",i,a)}}),Hi=Pa({cos_:function(e){var t=Na(e,"x","cos"),n=[t];return mr.runKernelFunc((function(e,n){var r=e.cos(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().sin().neg().mul(e)}}}),"Cos",{},n)}}),ji=Pa({cosh_:function(e){var t=Na(e,"x","cosh");return mr.runKernelFunc((function(e,n){var r=e.cosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().sinh().mulStrict(e)}}}))}}),qi=Pa({erf_:function(e){var t=Na(e,"x","erf");return nn("int32"===t.dtype||"float32"===t.dtype,(function(){return"Input dtype must be `int32` or `float32`."})),"int32"===t.dtype&&(t=t.toFloat()),mr.runKernelFunc((function(e,n){var r=e.erf(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}}))}}),Ki=Pa({exp_:function(e){var t=Na(e,"x","exp");return mr.runKernelFunc((function(e,n){var r=e.exp(t);return n([r]),r}),{x:t},(function(e,t){return{x:function(){return e.mulStrict(t[0])}}}),"Exp",{},[],[!0])}}),Xi=Pa({expm1_:function(e){var t=Na(e,"x","expm1");return mr.runKernelFunc((function(e,n){var r=e.expm1(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.exp())}}}))}}),Yi=Pa({floor_:function(e){var t=Na(e,"x","floor");return mr.runKernelFunc((function(e){return e.floor(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),Qi=Pa({log_:function(e){var t=Na(e,"x","log"),n=[t];return mr.runKernelFunc((function(e,n){var r=e.log(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.toFloat())}}}),"Log",{},n)}}),Ji=Pa({log1p_:function(e){var t=Na(e,"x","log1p");return mr.runKernelFunc((function(e,n){var r=e.log1p(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.add(1))}}}))}}),Zi=Pa({logSigmoid_:function(e){var t=Na(e,"x","logSigmoid");return mr.runKernelFunc((function(e,n){var r=e.softplus(t.neg()).neg();return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.neg().sigmoid())}}}))}}),es=Pa({neg_:function(e){var t=Na(e,"x","neg"),n=[t];return mr.runKernelFunc((function(e){return e.neg(t)}),{x:t},(function(e){return{x:function(){return e.neg()}}}),"Neg",{},n)}}),ts=Pa({reciprocal_:function(e){var t=Na(e,"x","reciprocal");return mr.runKernelFunc((function(e,n){var r=e.reciprocal(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.square().neg())}}}))}}),ns=Pa({round_:function(e){var t=Na(e,"x","round");return mr.runKernelFunc((function(e){return e.round(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),rs=Pa({rsqrt_:function(e){var t=Na(e,"x","rsqrt"),n=[t];return mr.runKernelFunc((function(e,n){var r=e.rsqrt(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.pow(1.5).mul(2)).neg()}}}),"Rsqrt",{},n)}}),as=Pa({sigmoid_:function(e){var t=Na(e,"x","sigmoid");return mr.runKernelFunc((function(e,n){var r=e.sigmoid(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.mul(Ga(1).sub(n)))}}}),"Sigmoid")}}),is=Pa({sign_:function(e){var t=Na(e,"x","sign");return mr.runKernelFunc((function(e){return e.sign(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),ss=Pa({isNaN_:function(e){var t=Na(e,"x","isNaN");return mr.runKernelFunc((function(e){return e.isNaN(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),os=Pa({isInf_:function(e){var t=Na(e,"x","isInf");return mr.runKernelFunc((function(e){return e.isInf(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),us=Pa({isFinite_:function(e){var t=Na(e,"x","isFinite");return mr.runKernelFunc((function(e){return e.isFinite(t)}),{$x:t},(function(e){return{$x:function(){return ti(e)}}}))}}),ls=Pa({sin_:function(e){var t=Na(e,"x","sin"),n=[t];return mr.runKernelFunc((function(e,n){var r=e.sin(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().cos().mul(e)}}}),"Sin",{},n)}}),cs=Pa({sinh_:function(e){var t=Na(e,"x","sinh");return mr.runKernelFunc((function(e,n){var r=e.sinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().cosh().mulStrict(e)}}}))}}),hs=Pa({softplus_:function(e){var t=Na(e,"x","softplus");return mr.runKernelFunc((function(e,n){var r=e.softplus(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.sigmoid())}}}))}}),ds=Pa({sqrt_:function(e){var t=Na(e,"x","sqrt");return mr.runKernelFunc((function(e,n){var r=e.sqrt(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().sqrt().mul(2))}}}))}}),ps=Pa({step_:function(e,t){void 0===t&&(t=0);var n=Na(e,"x","step");return mr.runKernelFunc((function(e){return e.step(n,t)}),{$x:n},(function(e){return{$x:function(){return ti(e)}}}))}}),fs=Pa({tan_:function(e){var t=Na(e,"x","tan");return mr.runKernelFunc((function(e,n){var r=e.tan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.cos().square())}}}))}}),ms=Pa({tanh_:function(e){var t=Na(e,"x","tanh");return mr.runKernelFunc((function(e,n){var r=e.tanh(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return Ga(1).sub(n.square()).mulStrict(e)}}}),"Tanh",{},null,[!0])}}),gs=Pa({addStrict_:function(e,t){var n=Na(e,"a","addStrict"),r=Na(t,"b","addStrict");return rn(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),vs=Pa({atan2_:function(e,t){var n,r=Na(e,"a","atan2"),a=Na(t,"b","atan2");n=cr(r,a),r=n[0],a=n[1];var i=Oi(r.shape,a.shape);return mr.runKernelFunc((function(e,t){var n=e.atan2(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=$i(n.square(),r.square()),a=e.mul(r.div(t)),s=_i(n.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(n.shape)},$b:function(){var t=$i(n.square(),r.square()),a=es(e.mul(n.div(t))),s=_i(r.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(r.shape)}}}))}}),ys=Pa({divStrict_:function(e,t){var n=Na(e,"a","div"),r=Na(t,"b","div");return rn(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),bs=Pa({floorDiv_:function(e,t){var n,r=Na(e,"a","floorDiv"),a=Na(t,"b","floorDiv");n=cr(r,a),r=n[0],a=n[1];var i=Oi(r.shape,a.shape);return mr.runKernelFunc((function(e,t){var n=e.floorDiv(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.div(r.toFloat()),a=_i(n.shape,i);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=_i(r.shape,i);a.length>0&&(t=t.sum(a).reshape(r.shape));var s=r.square();return t.div(s.toFloat()).neg()}}}),"FloorDiv")}}),xs=Pa({maximum_:function(e,t){var n,r=Na(e,"a","maximum"),a=Na(t,"b","maximum");return n=cr(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),Oi(r.shape,a.shape),mr.runKernelFunc((function(e,t){var n=e.maximum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.greaterEqual(r).toFloat())},b:function(){return e.mul(n.less(r).toFloat())}}}),"Maximum")}}),ws=Pa({maximumStrict_:function(e,t){var n=Na(e,"a","maximumStrict"),r=Na(t,"b","maximumStrict");return rn(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),ks=Pa({minimum_:function(e,t){var n,r=Na(e,"a","minimum"),a=Na(t,"b","minimum");return n=cr(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),Oi(r.shape,a.shape),mr.runKernelFunc((function(e,t){var n=e.minimum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.lessEqual(r).toFloat())},b:function(){return e.mul(n.greater(r).toFloat())}}}),"Minimum")}}),Is=Pa({minimumStrict_:function(e,t){var n=Na(e,"a","minimumStrict"),r=Na(t,"b","minimumStrict");return rn(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),Cs=Pa({mod_:function(e,t){var n,r=Na(e,"a","mod"),a=Na(t,"b","mod");n=cr(r,a),r=n[0],a=n[1];var i=Oi(r.shape,a.shape);return mr.runKernelFunc((function(e,t){var n=e.mod(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=_i(n.shape,i);return t.length>0?e.sum(t).reshape(n.shape):e},$b:function(){var t=e.mul(n.div(r).floor().neg()),a=_i(r.shape,i);return a.length>0?t.sum(a).reshape(r.shape):t}}}))}}),Ss=Pa({modStrict_:function(e,t){var n=Na(e,"a","modStrict"),r=Na(t,"b","modStrict");return rn(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),Ns=Pa({mul_:function(e,t){var n,r=Na(e,"a","mul"),a=Na(t,"b","mul");n=cr(r,a),r=n[0],a=n[1];var i=Oi(r.shape,a.shape);return mr.runKernelFunc((function(e,t){var n=e.multiply(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.mul(r.toFloat()),a=_i(n.shape,i);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=_i(r.shape,i);return a.length>0?t.sum(a).reshape(r.shape):t}}}),"Mul")}}),Ts=Pa({mulStrict_:function(e,t){var n=Na(e,"a","mul"),r=Na(t,"b","mul");return rn(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),Es=Pa({pow_:function(e,t){var n,r=Na(e,"base","pow"),a=Na(t,"exp","pow");n=cr(r,a),r=n[0],a=n[1];var i=Oi(r.shape,a.shape),s=[r,a];return mr.runKernelFunc((function(e,t){var n=e.pow(r,a);return t([r,a,n]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1],a=t[2];return{a:function(){var t=r.toFloat(),a=e.mul(t.mul(n.pow(t.sub(Ga(1))))),s=_i(n.shape,i);return s.length>0&&(a=a.sum(s)),a.reshape(n.shape)},b:function(){var t=n.greater(0),s=n.log().where(t,ti(n)),o=e.mul(a.mul(s)),u=_i(r.shape,i);return u.length>0&&(o=o.sum(u)),o.reshape(r.shape)}}}),"Pow",{},s,[!0])}}),Rs=Pa({powStrict_:function(e,t){return rn(e.shape,t.shape,"Error in powStrict: "),e.pow(t)}}),As=Pa({squaredDifferenceStrict_:function(e,t){var n=Na(e,"a","squaredDifferenceStrict"),r=Na(t,"b","squaredDifferenceStrict");return rn(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),Ds=Pa({sub_:function(e,t){var n,r=Na(e,"a","sub"),a=Na(t,"b","sub");n=cr(r,a),r=n[0],a=n[1];var i=Oi(r.shape,a.shape);return mr.runKernelFunc((function(e){return e.subtract(r,a)}),{a:r,b:a},(function(e){return{a:function(){var t=e,n=_i(r.shape,i);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)},b:function(){var t=e,n=_i(a.shape,i);return n.length>0&&(t=t.sum(n)),t.neg().reshape(a.shape)}}}),"Sub")}}),$s=Pa({subStrict_:function(e,t){var n=Na(e,"a","subStrict"),r=Na(t,"b","subStrict");return rn(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}}),Fs=Pa({div_:function(e,t){var n,r=Na(e,"a","div"),a=Na(t,"b","div");if(n=cr(r,a),r=n[0],a=n[1],"int32"===r.dtype&&"int32"===a.dtype)return bs(r,a);var i={a:r,b:a};return mr.runKernelFunc((function(e,t){var n=e.realDivide(r,a);return t([r,a]),n}),i,null,Si,{})}});function _s(e,t){if(e.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+e.rank+".");if(t.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+t.dtype+".");if(t.shape[t.rank-1]>e.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+t.shape[t.rank-1]+" vs. "+e.rank);if(0===e.size)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+e.shape+".");for(var n=t.shape,r=n[n.length-1],a=1,i=0;i<n.length-1;++i)a*=n[i];var s=e.shape,o=n.slice();o.pop();var u=1;for(i=r;i<e.rank;++i)u*=s[i],o.push(s[i]);var l=Dn(e.shape).map((function(e){return e/u})).concat([1]).slice(0,r);return[o,a,u,l]}Object.freeze({prepareAndValidate:_s});function Os(e){return e<=30?e:An(e,Math.floor(Math.sqrt(e)))}function Ms(e,t,n){var r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+", indices.shape: "+t.shape+", shape: "+e+", sliceDim: "+r+", and batchDim: "+a+".";if(n.rank<a)throw new Error(i+" update.rank < "+a+". ");if(e.length<r+(n.rank-a))throw new Error(i+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(var s=0;s<a;++s)if(n.shape[s]!==t.shape[s])throw new Error(i+" updates.shape["+s+"] ("+n.shape[s]+") != indices.shape["+s+"] ("+t.shape[s]+").");for(s=0;s<n.rank-a;++s)if(n.shape[s+a]!==e[s+r])throw new Error(i+" updates.shape["+(s+a)+"] ("+n.shape[s+a]+") != shape["+(s+a)+"] ("+e[s+a]+")")}function Ls(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+e.rank+".");if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Ms(n,t,e)}function Ps(e,t,n){for(var r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length,s=1,o=a;o<i;++o)s*=n[o];var u=a<1?1:a;return{sliceRank:a,numUpdates:on(t.shape)/u,sliceSize:s,strides:Dn(n.slice(0,a)).concat([1]),outputSize:on(n)}}function Bs(e,t,n){nn(e.rank===t.length,(function(){return"Error in slice"+e.rank+"D: Length of begin "+t+" must match the rank of the array ("+e.rank+")."})),nn(e.rank===n.length,(function(){return"Error in slice"+e.rank+"D: Length of size "+n+" must match the rank of the array ("+e.rank+")."}));for(var r=function(r){nn(t[r]+n[r]<=e.shape[r],(function(){return"Error in slice"+e.rank+"D: begin["+r+"] + size["+r+"] ("+(t[r]+n[r])+") would overflow input.shape["+r+"] ("+e.shape[r]+")"}))},a=0;a<e.rank;++a)r(a)}function zs(e){for(var t=[],n=0;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ws(e,t,n){for(var r=[],a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Vs(e,t,n,r,a){var i=t[a],s=n[a]||1;(e&1<<a||null==i)&&(i=s>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var o=r[a];return i<0&&(i+=o),Zt(0,i,o-1)}function Us(e,t,n,r,a){var i=t[a],s=n[a]||1;(e&1<<a||null==i)&&(i=s>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var o=r[a];return i<0&&(i+=o),s>0?Zt(0,i,o):Zt(-1,i,o-1)}function Gs(e,t,n){for(var r=n.length,a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Hs(e,t){for(var n=e.length>0?e[e.length-1]:1,r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function js(e){return mr.customGrad(e)}Object.freeze({validateUpdateShape:Ms,validateInput:Ls,calculateShapes:Ps}),Object.freeze({assertParamsValid:Bs,maskToAxes:zs,computeOutShape:Ws,startForAxis:Vs,stopForAxis:Us,isSliceContinous:Gs,computeFlatOffset:Hs});var qs=Pa({softmax_:function(e,t){void 0===t&&(t=-1);var n=Na(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and dim was "+t);return mr.runKernelFunc((function(e,r){var a=e.softmax(n,t);return r([a]),a}),{logits:n},(function(e,n){var r=n[0],a=e.mul(r);return{logits:function(){return a.sub(a.sum([t],!0).mul(r))}}}),"Softmax",{dim:t},[],[!0])}}),Ks=Pa({logSoftmax_:function(e,t){void 0===t&&(t=-1);var n=Na(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and axis was "+t);return js((function(e,n){var r=e.max(t,!0),a=e.sub(r),i=a.toFloat().sub(a.exp().sum(t,!0).log());return n([i]),{value:i,gradFunc:function(e,n){var r=n[0].exp();return e.sub(e.sum(t,!0).mul(r))}}}))(n)}}),Xs=Pa({transpose_:function(e,t){var n=Na(e,"x","transpose");if(null==t&&(t=n.shape.map((function(e,t){return t})).reverse()),nn(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of perm "+t+"."})),t.forEach((function(e){nn(e>=0&&e<n.rank,(function(){return"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t}))})),n.rank<=1)return n.clone();var r={perm:t};return mr.runKernelFunc((function(e){return e.transpose(n,t)}),{x:n},null,"Transpose",r)}}),Ys=function(){function e(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}return e.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)},e.prototype.set=function(e,t){this.dataIdsCount++,this.data.set(e,t)},e.prototype.has=function(e){return this.data.has(e)},e.prototype.delete=function(e){return this.dataIdsCount--,this.data.delete(e)},e.prototype.numDataIds=function(){return this.dataIdsCount},e}(),Qs=function(){function e(){}return e.prototype.time=function(e){return Js("time")},e.prototype.read=function(e){return Js("read")},e.prototype.readSync=function(e){return Js("readSync")},e.prototype.numDataIds=function(){return Js("numDataIds")},e.prototype.disposeData=function(e){return Js("disposeData")},e.prototype.write=function(e,t,n){return Js("write")},e.prototype.move=function(e,t,n,r){return Js("move")},e.prototype.memory=function(){return Js("memory")},e.prototype.floatPrecision=function(){return Js("floatPrecision")},e.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},e.prototype.batchMatMul=function(e,t,n,r){return Js("batchMatMul")},e.prototype.fusedBatchMatMul=function(e){return e.a,e.b,e.transposeA,e.transposeB,e.bias,e.activation,e.preluActivationWeights,Js("fusedBatchMatMul")},e.prototype.slice=function(e,t,n){return Js("slice")},e.prototype.stridedSlice=function(e,t,n,r){return Js("stridedSlice")},e.prototype.unstack=function(e,t){return Js("unstack")},e.prototype.reverse=function(e,t){return Js("reverse")},e.prototype.concat=function(e,t){return Js("concat")},e.prototype.neg=function(e){return Js("neg")},e.prototype.add=function(e,t){return Js("add")},e.prototype.addN=function(e){return Js("addN")},e.prototype.subtract=function(e,t){return Js("subtract")},e.prototype.multiply=function(e,t){return Js("multiply")},e.prototype.realDivide=function(e,t){return Js("realDivide")},e.prototype.floorDiv=function(e,t){return Js("floorDiv")},e.prototype.sum=function(e,t){return Js("sum")},e.prototype.prod=function(e,t){return Js("prod")},e.prototype.unsortedSegmentSum=function(e,t,n){return Js("unsortedSegmentSum")},e.prototype.argMin=function(e,t){return Js("argMin")},e.prototype.argMax=function(e,t){return Js("argMax")},e.prototype.equal=function(e,t){return Js("equal")},e.prototype.notEqual=function(e,t){return Js("notEqual")},e.prototype.less=function(e,t){return Js("less")},e.prototype.lessEqual=function(e,t){return Js("lessEqual")},e.prototype.greater=function(e,t){return Js("greater")},e.prototype.greaterEqual=function(e,t){return Js("greaterEqual")},e.prototype.logicalNot=function(e){return Js("logicalNot")},e.prototype.logicalAnd=function(e,t){return Js("logicalAnd")},e.prototype.logicalOr=function(e,t){return Js("logicalOr")},e.prototype.where=function(e){return Js("where")},e.prototype.select=function(e,t,n){return Js("select")},e.prototype.topk=function(e,t,n){return Js("topk")},e.prototype.min=function(e,t){return Js("min")},e.prototype.minimum=function(e,t){return Js("minimum")},e.prototype.mod=function(e,t){return Js("mod")},e.prototype.max=function(e,t){return Js("max")},e.prototype.maximum=function(e,t){return Js("maximum")},e.prototype.all=function(e,t){return Js("all")},e.prototype.any=function(e,t){return Js("any")},e.prototype.squaredDifference=function(e,t){return Js("squaredDifference")},e.prototype.ceil=function(e){return Js("ceil")},e.prototype.floor=function(e){return Js("floor")},e.prototype.round=function(e){return Js("round")},e.prototype.sign=function(e){return Js("sign")},e.prototype.isNaN=function(e){return Js("isNaN")},e.prototype.isInf=function(e){return Js("isInf")},e.prototype.isFinite=function(e){return Js("isFinite")},e.prototype.pow=function(e,t){return Js("pow")},e.prototype.exp=function(e){return Js("exp")},e.prototype.expm1=function(e){return Js("expm1")},e.prototype.softmax=function(e,t){return Js("softmax")},e.prototype.log=function(e){return Js("log")},e.prototype.log1p=function(e){return Js("log1p")},e.prototype.sqrt=function(e){return Js("sqrt")},e.prototype.rsqrt=function(e){return Js("rsqrt")},e.prototype.square=function(e){return Js("square")},e.prototype.reciprocal=function(e){return Js("reciprocal")},e.prototype.relu=function(e){return Js("relu")},e.prototype.relu6=function(e){return Js("relu6")},e.prototype.prelu=function(e,t){return Js("prelu")},e.prototype.elu=function(e){return Js("elu")},e.prototype.eluDer=function(e,t){return Js("eluDer")},e.prototype.selu=function(e){return Js("selu")},e.prototype.int=function(e){return Js("int")},e.prototype.clip=function(e,t,n){return Js("clip")},e.prototype.abs=function(e){return Js("abs")},e.prototype.complexAbs=function(e){return Js("complexAbs")},e.prototype.sigmoid=function(e){return Js("sigmoid")},e.prototype.softplus=function(e){return Js("softplus")},e.prototype.sin=function(e){return Js("sin")},e.prototype.cos=function(e){return Js("cos")},e.prototype.tan=function(e){return Js("tan")},e.prototype.asin=function(e){return Js("asin")},e.prototype.acos=function(e){return Js("acos")},e.prototype.atan=function(e){return Js("atan")},e.prototype.atan2=function(e,t){return Js("atan2")},e.prototype.sinh=function(e){return Js("sinh")},e.prototype.cosh=function(e){return Js("cosh")},e.prototype.tanh=function(e){return Js("tanh")},e.prototype.asinh=function(e){return Js("asinh")},e.prototype.acosh=function(e){return Js("acosh")},e.prototype.atanh=function(e){return Js("atanh")},e.prototype.erf=function(e){return Js("erf")},e.prototype.step=function(e,t){return Js("step")},e.prototype.fusedConv2d=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,Js("fusedConv2d")},e.prototype.conv2d=function(e,t,n){return Js("conv2d")},e.prototype.conv2dDerInput=function(e,t,n){return Js("conv2dDerInput")},e.prototype.conv2dDerFilter=function(e,t,n){return Js("conv2dDerFilter")},e.prototype.fusedDepthwiseConv2D=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,Js("fusedDepthwiseConv2D")},e.prototype.depthwiseConv2D=function(e,t,n){return Js("depthwiseConv2D")},e.prototype.depthwiseConv2DDerInput=function(e,t,n){return Js("depthwiseConv2DDerInput")},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){return Js("depthwiseConv2DDerFilter")},e.prototype.conv3d=function(e,t,n){return Js("conv3d")},e.prototype.conv3dDerInput=function(e,t,n){return Js("conv3dDerInput")},e.prototype.conv3dDerFilter=function(e,t,n){return Js("conv3dDerFilter")},e.prototype.maxPool=function(e,t){return Js("maxPool")},e.prototype.maxPoolBackprop=function(e,t,n,r){return Js("maxPoolBackprop")},e.prototype.avgPool=function(e,t){return Js("avgPool")},e.prototype.avgPoolBackprop=function(e,t,n){return Js("avgPoolBackprop")},e.prototype.avgPool3d=function(e,t){return Js("avgPool3d")},e.prototype.avgPool3dBackprop=function(e,t,n){return Js("avgPool3dBackprop")},e.prototype.maxPool3d=function(e,t){return Js("maxPool3d")},e.prototype.maxPool3dBackprop=function(e,t,n,r){return Js("maxPool3dBackprop")},e.prototype.reshape=function(e,t){return Js("reshape")},e.prototype.cast=function(e,t){return Js("cast")},e.prototype.tile=function(e,t){return Js("tile")},e.prototype.pad=function(e,t,n){return Js("pad")},e.prototype.transpose=function(e,t){return Js("transpose")},e.prototype.gather=function(e,t,n){return Js("gather")},e.prototype.gatherND=function(e,t){return Js("gatherND")},e.prototype.scatterND=function(e,t,n){return Js("scatterND")},e.prototype.batchToSpaceND=function(e,t,n){return Js("batchToSpaceND")},e.prototype.spaceToBatchND=function(e,t,n){return Js("spaceToBatchND")},e.prototype.resizeBilinear=function(e,t,n,r){return Js("resizeBilinear")},e.prototype.resizeBilinearBackprop=function(e,t,n){return Js("resizeBilinearBackprop")},e.prototype.resizeNearestNeighbor=function(e,t,n,r){return Js("resizeNearestNeighbor")},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){return Js("resizeNearestNeighborBackprop")},e.prototype.batchNormalization=function(e,t,n,r,a,i){return Js("batchNormalization")},e.prototype.localResponseNormalization4D=function(e,t,n,r,a){return Js("localResponseNormalization4D")},e.prototype.LRNGrad=function(e,t,n,r,a,i,s){return Js("LRNGrad")},e.prototype.multinomial=function(e,t,n,r){return Js("multinomial")},e.prototype.oneHot=function(e,t,n,r){return Js("oneHot")},e.prototype.cumsum=function(e,t,n,r){return Js("cumsum")},e.prototype.nonMaxSuppression=function(e,t,n,r,a){return Js("nonMaxSuppression")},e.prototype.fft=function(e){return Js("fft")},e.prototype.ifft=function(e){return Js("ifft")},e.prototype.complex=function(e,t){return Js("complex")},e.prototype.real=function(e){return Js("real")},e.prototype.imag=function(e){return Js("imag")},e.prototype.cropAndResize=function(e,t,n,r,a,i){return Js("cropAndResize")},e.prototype.depthToSpace=function(e,t,n){return Js("depthToSpace")},e.prototype.split=function(e,t,n){return Js("split")},e.prototype.sparseToDense=function(e,t,n,r){return Js("sparseToDense")},e.prototype.diag=function(e){return Js("diag")},e.prototype.fill=function(e,t,n){return Js("fill")},e.prototype.onesLike=function(e){return Js("onesLike")},e.prototype.zerosLike=function(e){return Js("zerosLike")},e.prototype.linspace=function(e,t,n){return Js("linspace")},e.prototype.dispose=function(){return Js("dispose")},e}();function Js(e){throw new Error("'"+e+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function Zs(e,t,n,r,a,i,s){void 0===s&&(s="channelsLast");var o,u=ao(t),l=u[0],c=u[1];if("channelsLast"===s)o=[l,c,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);o=[l,c,e[1],e[1]]}return to(e,o,n,r,a,i,!1,s)}function eo(e,t,n,r,a,i,s){void 0===s&&(s="NDHWC");var o,u,l=io(t),c=l[0],h=l[1],d=l[2];if("NDHWC"===s)u="channelsLast",o=[c,h,d,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat "+s);u="channelsFirst",o=[c,h,d,e[1],e[1]]}return no(e,o,n,r,a,!1,u,i)}function to(e,t,n,r,a,i,s,o){void 0===s&&(s=!1),void 0===o&&(o="channelsLast");var u=[-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],d=u[3];if("channelsLast"===o)l=e[0],c=e[1],h=e[2],d=e[3];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=e[0],d=e[1],c=e[2],h=e[3]}var p,f=t[0],m=t[1],g=t[3],v=ao(n),y=v[0],b=v[1],x=ao(r),w=x[0],k=x[1],I=so(f,w),C=so(m,k),S=function(e,t,n,r,a,i,s,o){var u,l,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};var h=function(e,t,n,r,a){null==r&&(r=ro(e,t,n));var i=e[1],s=oo((e[0]-t+2*r)/n+1,a);nn(ln(s),(function(){return"The output # of rows ("+s+") must be an integer. Change the stride and/or zero pad parameters"}));var o=oo((i-t+2*r)/n+1,a);return nn(ln(o),(function(){return"The output # of columns ("+o+") must be an integer. Change the stride and/or zero pad parameters"})),[s,o]}([t,n],i,r,e,o);l=h[0],c=h[1]}else if("same"===e){l=Math.ceil(t/r),c=Math.ceil(n/a);var d=Math.max(0,(l-1)*r+i-t),p=Math.max(0,(c-1)*a+s-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2);u={top:f,bottom:m,left:g,right:p-g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-i+1)/r),c=Math.ceil((n-s+1)/a)}return{padInfo:u,outHeight:l,outWidth:c}}(a,c,h,y,b,I,C,i),N=S.padInfo,T=S.outHeight,E=S.outWidth,R=s?g*d:g;return"channelsFirst"===o?p=[l,R,T,E]:"channelsLast"===o&&(p=[l,T,E,R]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:h,inChannels:d,outHeight:T,outWidth:E,outChannels:R,padInfo:N,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationHeight:w,dilationWidth:k,inShape:e,outShape:p,filterShape:t}}function no(e,t,n,r,a,i,s,o){void 0===i&&(i=!1),void 0===s&&(s="channelsLast");var u=[-1,-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],d=u[3],p=u[4];if("channelsLast"===s)l=e[0],c=e[1],h=e[2],d=e[3],p=e[4];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);l=e[0],p=e[1],c=e[2],h=e[3],d=e[4]}var f,m=t[0],g=t[1],v=t[2],y=t[4],b=io(n),x=b[0],w=b[1],k=b[2],I=io(r),C=I[0],S=I[1],N=I[2],T=so(m,C),E=so(g,S),R=so(v,N),A=function(e,t,n,r,a,i,s,o,u,l,c){var h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};var m=function(e,t,n,r,a,i){null==a&&(a=ro(e,t,r));var s=e[1],o=e[2],u=oo((e[0]-t+2*a)/r+1,i);nn(ln(u),(function(){return"The output # of depths ("+u+") must be an integer. Change the stride and/or zero pad parameters"}));var l=oo((s-t+2*a)/r+1,i);nn(ln(l),(function(){return"The output # of rows ("+l+") must be an integer. Change the stride and/or zero pad parameters"}));var c=oo((o-t+2*a)/r+1,i);return nn(ln(c),(function(){return"The output # of columns ("+c+") must be an integer. Change the stride and/or zero pad parameters"})),[u,l,c,1]}([t,n,r,1],o,0,a,e,c);d=m[0],p=m[1],f=m[2]}else if("same"===e){var g=((d=Math.ceil(t/a))-1)*a+o-t,v=((p=Math.ceil(n/i))-1)*i+u-n,y=((f=Math.ceil(r/s))-1)*s+l-r,b=Math.floor(g/2),x=g-b,w=Math.floor(v/2),k=v-w,I=Math.floor(y/2);h={top:w,bottom:k,left:I,right:y-I,front:b,back:x,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/i),f=Math.ceil((r-l+1)/s)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,c,h,d,x,w,k,T,E,R,o),D=A.padInfo,$=A.outDepth,F=A.outHeight,_=A.outWidth,O=i?y*p:y;return"channelsFirst"===s?f=[l,O,$,F,_]:"channelsLast"===s&&(f=[l,$,F,_,O]),{batchSize:l,dataFormat:s,inDepth:c,inHeight:h,inWidth:d,inChannels:p,outDepth:$,outHeight:F,outWidth:_,outChannels:O,padInfo:D,strideDepth:x,strideHeight:w,strideWidth:k,filterDepth:m,filterHeight:g,filterWidth:v,effectiveFilterDepth:T,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:C,dilationHeight:S,dilationWidth:N,inShape:e,outShape:f,filterShape:t}}function ro(e,t,n,r){void 0===r&&(r=1);var a=so(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ao(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function io(e){return"number"==typeof e?[e,e,e]:e}function so(e,t){return t<=1?e:e+(e-1)*(t-1)}function oo(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function uo(e){var t=ao(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function lo(e,t){return uo(e)||uo(t)}function co(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function ho(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();var r=Ya(e.shape),a=e.toFloat(),i=n.complex(a,r);return r.dispose(),a.dispose(),i}if(!wn(e.dtype,t))return mr.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){var s=n.real(e);return i=s.cast(t),s.dispose(),i}if("int32"===t)return n.int(e);if("bool"===t){var o=Ga(0,e.dtype);return i=n.notEqual(e,o),o.dispose(),i}throw new Error("Error in Cast: failed to cast "+e.dtype+" to "+t)}function po(e,t){return mr.makeTensorFromDataId(e.dataId,t,e.dtype)}function fo(e,t,n){var r=(t-e)/(n-1),a=On(n,"float32");a[0]=e;for(var i=1;i<a.length;i++)a[i]=a[i-1]+r;return Ha(a,"float32")}function mo(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+e.length+", imag: "+t.length+".");for(var n=new Float32Array(2*e.length),r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function go(e,t){return{real:e[2*t],imag:e[2*t+1]}}function vo(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function yo(e,t,n){var r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function bo(e,t,n){var r=function(e,t,n){return function(e,t,n){for(var r=0,a=e.length,i=0,s=!1;r<a;){var o=n(t,e[i=r+(a-r>>>1)]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}(e,t,n||xo)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function xo(e,t){return e>t?1:e<t?-1:0}function wo(e,t,n,r,a){return Io(e,t,n,r,a,0).selectedIndices}function ko(e,t,n,r,a,i){var s=Io(e,t,n,r,a,i);return s.numValidOutputs.dispose(),{selectedIndices:s.selectedIndices,selectedScores:s.selectedScores}}function Io(e,t,n,r,a,i,s,o){void 0===o&&(o=!1);for(var u=Array.from(t).map((function(e,t){return{score:e,boxIndex:t,suppressBeginIndex:0}})).filter((function(e){return e.score>a})).sort(No),l=i>0?-.5/i:0,c=[],h=[];c.length<n&&u.length>0;){var d=u.pop(),p=d.score,f=d.boxIndex,m=d.suppressBeginIndex;if(p<a)break;for(var g=!1,v=c.length-1;v>=m;--v){var y=Co(e,f,c[v]);if(y>=r){g=!0;break}if(d.score=d.score*So(r,l,y),d.score<=a)break}d.suppressBeginIndex=c.length,g||(d.score===p?(c.push(f),h.push(d.score)):d.score>a&&bo(u,d,No))}var b=c.length;return o&&(c.fill(0,b),h.fill(0,b)),{selectedIndices:Ha(c,"int32"),selectedScores:Ha(h,"float32"),numValidOutputs:Ga(b,"int32")}}function Co(e,t,n){var r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(u-s),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;var m=Math.max(i,l),g=Math.max(s,c),v=Math.min(o,h),y=Math.min(u,d),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(p+f-b)}function So(e,t,n){var r=Math.exp(t*n*n);return n<=e?r:0}function No(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function To(e,t,n){var r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((function(t){a[n]=t;var i=e.slice(r,a);return r[n]+=t,i}))}function Eo(e,t){for(var n=new Array(e.rank),r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];var a=ui(n,e.dtype);for(r=0;r<a.values.length;++r){for(var i=a.indexToLoc(r),s=new Array(e.rank),o=0;o<s.length;o++)s[o]=i[o]%e.shape[o];var u=e.locToIndex(s);a.values[r]=e.values[u]}return a.toTensor()}function Ro(e,t,n,r,a){for(var i=t[t.length-1],s=[e.length/i,i],o=s[0],u=s[1],l=vn(n,o*r),c=vn("int32",o*r),h=0;h<o;h++){for(var d=h*u,p=e.subarray(d,d+u),f=[],m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((function(e,t){return t.value-e.value}));var g=h*r,v=l.subarray(g,g+r),y=c.subarray(g,g+r);for(m=0;m<r;m++)v[m]=f[m].value,y[m]=f[m].index}var b=t.slice();return b[b.length-1]=r,[Va(l,b,n),Va(c,b,"int32")]}function Ao(e,t){for(var n=[],r=0;r<t.length;r++)t[r]&&n.push(r);var a=ui(e,"int32"),i=ui([n.length,e.length],"int32");for(r=0;r<n.length;r++){var s=a.indexToLoc(n[r]),o=r*e.length;i.values.set(s,o)}return i.toTensor()}Object.freeze({castTensor:ho,reshapeTensor:po,linspaceImpl:fo,upcastType:ur,axesAreInnerMostDims:Ea,combineLocations:Ra,computeOutAndReduceShapes:Aa,expandShapeToKeepDim:Da,assertAxesAreInnerMostDims:$a,getAxesPermutation:Fa,getUndoAxesPermutation:_a,getInnerMostAxes:Oa,getBroadcastDims:Fi,getReductionAxes:_i,assertAndGetBroadcastShape:Oi,assertParamsConsistent:Ma,computeOutShape:La,computePool2DInfo:Zs,computePool3DInfo:eo,computeConv2DInfo:to,computeConv3DInfo:no,computeDefaultPad:ro,tupleValuesAreOne:uo,eitherStridesOrDilationsAreOne:lo,convertConv2DDataFormat:co,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:Os});var Do=function(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("float v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        float result = "+r+";\n        setOutput(result);\n      }\n    "},$o=function(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("vec4 v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        vec4 result = "+r+";\n        setOutput(result);\n      }\n    "},Fo=function(e,t,n){this.variableNames=["A"];var r=e.windowSize,a=e.batchSize,i=e.inSize,s=Math.ceil(i/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];var o="max"===t?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < "+r+"; i++) {\n          int inIdx = "+u+";\n          float candidate = getA(batch, inIdx);\n          if (candidate "+o+" bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    "};function _o(e,t){return["x","y","z","w","u","v"].slice(0,t).map((function(t){return e+"."+t}))}function Oo(e,t){return 1===t?[e]:_o(e,t)}function Mo(){var e,t,n,r,a,i,s,o,u,l;return 2===Vt().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function Lo(e,t,n){void 0===n&&(n="index");var r=Dn(t);return r.map((function(t,a){return"int "+e[a]+" = "+n+" / "+t+"; "+(a===r.length-1?"int "+e[a+1]+" = "+n+" - "+e[a]+" * "+t:"index -= "+e[a]+" * "+t)+";"})).join("")}function Po(e){var t=Dn(e).map((function(e){return e.toString()}));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * "+t[0]+" + coords.y * "+t[1]+" + coords.z;\n  }\n"}var Bo="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function zo(e,t,n,r){var a=[];e.forEach((function(e){var t=on(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push("uniform float "+e.name+(t>1?"["+t+"]":"")+";"):(a.push("uniform sampler2D "+e.name+";"),a.push("uniform int offset"+e.name+";"))}));var i,s,o=a.join("\n"),u=e.map((function(e){return function(e,t,n){void 0===n&&(n=!1);var r="";r+=n?Vo(e):Wo(e);var a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){var n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=Fi(e.shapeInfo.logicalShape,t.logicalShape),l=Xo(o),c=o-s,h=["x","y","z","w","u","v"];n=0===s?"":o<2&&u.length>=1?"coords = 0;":u.map((function(e){return"coords."+h[e+c]+" = 0;"})).join("\n");var d;d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+h[t+c]})).join(", ");var p="return outputValue;",f=1===on(e.shapeInfo.logicalShape),m=1===on(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){var g=s-2,v=s-1;u.indexOf(g)>-1&&u.indexOf(v)>-1?p="return vec4(outputValue.x);":u.indexOf(g)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 "+i+"() {\n      "+l+" coords = getOutputCoords();\n      "+n+"\n      vec4 outputValue = get"+a+"("+d+");\n      "+p+"\n    }\n  "}(e,t):function(e,t){var n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&un(s,i))return"\n      float "+a+"() {\n        return sampleTexture("+n+", resultUV);\n      }\n    ";var l,c=Xo(u),h=Fi(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,p=["x","y","z","w","u","v"];l=0===o?"":u<2&&h.length>=1?"coords = 0;":h.map((function(e){return"coords."+p[e+d]+" = 0;"})).join("\n");var f;return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+p[t+d]})).join(", "),"\n    float "+a+"() {\n      "+c+" coords = getOutputCoords();\n      "+l+"\n      return get"+r+"("+f+");\n    }\n  "}(e,t)),r}(e,t,r)})).join("\n"),l=t.texShape,c=Mo(),h=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return "+e.texture2D+"(textureSampler, uv).r;\n    }\n  "}(c),d=function(e){return e.version+"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    "+e.varyingFs+" vec2 resultUV;\n    "+e.defineOutput+"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    "+e.defineSpecialNaN+"\n    "+e.defineSpecialInf+"\n    "+e.defineRound+"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    "+Uo+"\n    "+Go+"\n    "+Ho+"\n  "}(c);return t.isPacked?(i=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * "+n[1]+".0);\n      }\n    ":1===n[1]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * "+n[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      return 2 * (resTexRC.x * "+n[1]+" + resTexRC.y);\n    }\n  "}(0,t);case 2:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(un(e,t))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2("+n[0]+", "+n[1]+"));\n      }\n    ";var r=Math.ceil(e[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=e,r=t,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=(i=Math.ceil(n[2]/2))*Math.ceil(n[1]/2),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+a[0]+", "+a[1]+"));\n      int index = resTexRC.x * "+a[1]+" + resTexRC.y;\n\n      int b = index / "+s+";\n      index -= b * "+s+";\n\n      int r = 2 * (index / "+i+");\n      int c = imod(index, "+i+") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";default:return function(e,t){for(var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,s="",o="b, r, c",u=2;u<e.length-1;u++)s="\n      int b"+u+" = index / "+(i*=e[e.length-u-1])+";\n      index -= b"+u+" * "+i+";\n    "+s,o="b"+u+", "+o;return"\n    ivec"+e.length+" getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      "+s+"\n\n      int b = index / "+a+";\n      index -= b * "+a+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec"+e.length+"("+o+");\n    }\n  "}(e,t)}var n,r,a,i,s}(t.logicalShape,l),s=function(e){return"\n    void setOutput(vec4 val) {\n      "+e.output+" = val;\n    }\n  "}(c)):(i=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){return 1===t[0]?"\n      int getOutputCoords() {\n        return int(resultUV.x * "+t[1]+".0);\n      }\n    ":1===t[1]?"\n      int getOutputCoords() {\n        return int(resultUV.y * "+t[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      return resTexRC.x * "+t[1]+" + resTexRC.y;\n    }\n  "}(0,t);case 2:return function(e,t){return un(e,t)?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2("+t[0]+", "+t[1]+"));\n      }\n    ":1===e[1]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":1===e[0]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      int r = index / "+e[1]+";\n      int c = index - r * "+e[1]+";\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=t,r=Lo(["r","c","d"],e),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      "+r+"\n      return ivec3(r, c, d);\n    }\n  ";case 4:return function(e,t){var n=Lo(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      "+n+"\n      return ivec4(r, c, d, d2);\n    }\n  "}(e,t);case 5:return function(e,t){var n=Lo(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2("+t[0]+",\n                             "+t[1]+"));\n\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "}(e,t);case 6:return function(e,t){var n=Lo(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n,r}(t.logicalShape,l),s=function(e){return"\n    void setOutput(float val) {\n      "+e.output+" = vec4(val, 0, 0, 0);\n    }\n  "}(c)),r&&(d+=jo),[d,h,s,o,i,u,n].join("\n")}function Wo(e){var t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"float "+n+"() {return "+t+";}";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===a&&1===i)return"\n      float "+n+"() {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var s=e.shapeInfo.texShape;return"\n    float "+n+"() {\n      vec2 uv = uvFromFlat("+s[0]+", "+s[1]+", "+qo(t)+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"\n      float "+n+"(int index) {\n        "+Ko(e)+"\n      }\n    ";var r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return"\n      float "+n+"(int index) {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var s=qo(t);return 1===i?"\n      float "+n+"(int index) {\n        vec2 uv = vec2(0.5, (float(index + "+s+") + 0.5) / "+a+".0);\n        return sampleTexture("+t+", uv);\n      }\n    ":1===a?"\n      float "+n+"(int index) {\n        vec2 uv = vec2((float(index + "+s+") + 0.5) / "+i+".0, 0.5);\n        return sampleTexture("+t+", uv);\n      }\n    ":"\n    float "+n+"(int index) {\n      vec2 uv = uvFromFlat("+a+", "+i+", index + "+s+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&un(t,a)){var i=a[0];return"\n    float "+r+"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2("+a[1]+".0, "+i+".0);\n      return sampleTexture("+n+", uv);\n    }\n  "}var s=gn(t),o=s.newShape,u=s.keptDims,l=o;if(l.length<t.length)return"\n      "+Wo(Yo(e,l))+"\n      float "+r+"(int row, int col) {\n        return "+r+"("+Qo(["row","col"],u)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2("+t[1]+", 1)));\n        "+Ko(e)+"\n      }\n    ";var c=a[0],h=a[1],d=qo(n);return 1===h?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+d+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / "+c+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":1===c?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+d+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2((index + 0.5) / "+h+".0, 0.5);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n  float "+r+"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * "+t[1]+" + col + "+d+";\n    vec2 uv = uvFromFlat("+c+", "+h+", index);\n    return sampleTexture("+n+", uv);\n  }\n"}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],s=gn(t),o=s.newShape,u=s.keptDims,l=o;if(l.length<t.length)return"\n        "+Wo(Yo(e,l))+"\n        float "+r+"(int row, int col, int depth) {\n          return "+r+"("+Qo(["row","col","depth"],u)+");\n        }\n      ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3("+a+", "+i+", 1)));\n        "+Ko(e)+"\n      }\n    ";var c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;return d===a&&null==p?"\n        float "+r+"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2("+i+", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2("+d+".0, "+h+".0);\n          return sampleTexture("+n+", uv);\n        }\n      ":d===i&&null==p?"\n    float "+r+"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2("+t[1]+", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+d+".0, "+h+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n      float "+r+"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * "+a+" + col * "+i+" + depth + "+qo(n)+";\n        vec2 uv = uvFromFlat("+h+", "+d+", index);\n        return sampleTexture("+n+", uv);\n      }\n  "}(e);case 4:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,s=t[1]*i,o=gn(t),u=o.newShape,l=o.keptDims;if(u.length<t.length)return"\n      "+Wo(Yo(e,u))+"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        return "+r+"("+Qo(["row","col","depth","depth2"],l)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4("+s+", "+i+", "+a+", 1)));\n        "+Ko(e)+"\n      }\n    ";var c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];return p===s&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3("+i+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+p+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":p===a&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3("+t[1]*t[2]+", "+t[2]+", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+p+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+s+" + col * "+i+" +\n          depth * "+a+" + depth2;\n      vec2 uv = uvFromFlat("+d+", "+p+", index + "+qo(n)+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 5:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,u=gn(t),l=u.newShape,c=u.keptDims;if(l.length<t.length)return"\n      "+Wo(Yo(e,l))+"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        return "+r+"("+Qo(["row","col","depth","depth2","depth3"],c)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+o+", "+s+", "+i+", "+a+")) +\n          depth3;\n        "+Ko(e)+"\n      }\n    ";var h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];return f===o&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4("+s+", "+i+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+f+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":f===a&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]+",\n               "+t[2]*t[3]+", "+t[3]+", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+f+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+o+" + col * "+s+" + depth * "+i+" +\n          depth2 * "+a+" + depth3 + "+qo(n)+";\n      vec2 uv = uvFromFlat("+p+", "+f+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 6:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=gn(t),i=a.newShape,s=a.keptDims;if(i.length<t.length)return"\n      "+Wo(Yo(e,i))+"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return "+r+"("+Qo(["row","col","depth","depth2","depth3","depth4"],s)+");\n      }\n    ";var o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4("+h+", "+c+", "+l+", "+u+")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2("+o+", 1)));\n        "+Ko(e)+"\n      }\n    ";var d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];return m===h&&null==d?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4("+c+", "+l+", "+u+", "+o+")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":m===o&&null==d?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]*t[4]+",\n               "+t[2]*t[3]*t[4]+",\n               "+t[3]*t[4]+",\n               "+t[4]+")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+h+" + col * "+c+" + depth * "+l+" +\n          depth2 * "+u+" + depth3 * "+o+" + depth4 + "+qo(n)+";\n      vec2 uv = uvFromFlat("+f+", "+m+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function Vo(e){var t;switch(e.shapeInfo.logicalShape.length){case 0:return"\n    vec4 "+("get"+(t=e.name).charAt(0).toUpperCase()+t.slice(1))+"() {\n      return "+Mo().texture2D+"("+t+", halfCR);\n    }\n  ";case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=Mo();return"\n    vec4 "+n+"(int index) {\n      vec2 uv = packedUVfrom1D(\n        "+a[0]+", "+a[1]+", index);\n      return "+i.texture2D+"("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],s=a[1],o=Mo();if(null!=a&&un(t,a))return"\n      vec4 "+r+"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2("+s+".0, "+i+".0);\n\n        return "+o.texture2D+"("+n+", uv);\n      }\n    ";var u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return"\n    vec4 "+r+"(int row, int col) {\n      vec2 uv = packedUVfrom2D("+Math.ceil(t[1]/2)+", "+u[0]+", "+u[1]+", row, col);\n      return "+o.texture2D+"("+n+", uv);\n    }\n  "}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0])return"\n        "+Vo(Yo(e,t.slice(1)))+"\n        vec4 "+r+"(int b, int row, int col) {\n          return "+r+"("+Qo(["b","row","col"],[1,2])+");\n        }\n      ";var s=i[0],o=i[1],u=Math.ceil(t[2]/2);return"\n    vec4 "+r+"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        "+s+", "+o+", "+u*Math.ceil(t[1]/2)+", "+u+", b, row, col);\n      return "+Mo().texture2D+"("+n+", uv);\n    }\n  "}(e);default:return function(e){for(var t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],o=s[0],u=s[1],l=Math.ceil(t[n-1]/2),c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",d="b * "+c+" + (row / 2) * "+l+" + (col / 2)",p=2;p<n-1;p++)h="int b"+p+", "+h,d="b"+p+" * "+(c*=t[n-p-1])+" + "+d;return"\n    vec4 "+a+"("+h+") {\n      int index = "+d+";\n      int texR = index / "+u+";\n      int texC = index - texR * "+u+";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+u+", "+o+");\n      return "+Mo().texture2D+"("+r+", uv);\n    }\n  "}(e)}}var Uo="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Go="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ho="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",jo="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function qo(e){return"offset"+e}function Ko(e){var t=e.name,n=on(e.shapeInfo.logicalShape);return n<2?"return "+t+";":"\n    for (int i = 0; i < "+n+"; i++) {\n      if (i == index) {\n        return "+t+"[i];\n      }\n    }\n  "}function Xo(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank "+e+" is not yet supported")}function Yo(e,t){var n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Qo(e,t){return t.map((function(t){return e[t]})).join(", ")}var Jo=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,nn(e.length>2,(function(){return"Packed arg"+(n.charAt(0).toUpperCase()+n.slice(1))+" supports only inputs with rank above 2."}));var a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");var s,o,u=this.outputShape,l=u.length,c=Xo(l),h=Oo("coords",l);if(1===i){var d=Xo(o=l+1);s="\n        "+d+" sourceLocR = "+d+"("+h.join()+", 0);\n        ++"+h[l-1]+";\n        "+d+" sourceLocG = "+d+"("+h.join()+", 0);\n        ++"+h[l-2]+";\n        "+d+" sourceLocA = "+d+"("+h.join()+", 0);\n        --"+h[l-1]+";\n        "+d+" sourceLocB = "+d+"("+h.join()+", 0);\n        --"+h[l-2]+";"}else o=l,s="\n        "+c+" sourceLocR = coords;\n        ++"+h[l-1]+";\n        "+c+" sourceLocG = coords;\n        ++"+h[l-2]+";\n        "+c+" sourceLocA = coords;\n        --"+h[l-1]+";\n        "+c+" sourceLocB = coords;\n        --"+h[l-2]+";";var p=["x","y","z","w","u","v"].slice(0,o),f="."+p[o-1],m=p.map((function(e){return"int "+e})),g=Oo("sourceLocR",o-1).concat("inIdx.r"),v=Oo("sourceLocG",o-1).concat("inIdx.g"),y=Oo("sourceLocB",o-1).concat("inIdx.b"),b=Oo("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel("+g.join()+"),\n                             getBestIndicesAChannel("+v.join()+"),\n                             getBestIndicesAChannel("+y.join()+"),\n                             getBestIndicesAChannel("+b.join()+")));",k="vec4(\n            getAChannel("+g.join()+"),\n            hasNextCol ? getAChannel("+v.join()+") : 0.,\n            hasNextRow ? getAChannel("+y.join()+") : 0.,\n            hasNextRow && hasNextCol ? getAChannel("+b.join()+") : 0.)",I=r?"":"\n      float getBestIndicesAChannel("+m.join()+") {\n        return getChannel(getBestIndicesA("+p.join()+"),\n                                          vec2("+p.slice(-2).join()+"));\n      }";this.userCode="\n      float getAChannel("+m.join()+") {\n        return getChannel(getA("+p.join()+"),\n                               vec2("+p.slice(-2).join()+"));\n      }\n      "+I+"\n      void main() {\n        "+c+" coords = getOutputCoords();\n        bool hasNextCol = "+h[l-1]+" < "+(u[l-1]-1)+";\n        bool hasNextRow = "+h[l-2]+" < "+(u[l-2]-1)+";\n        "+s+"\n        ivec4 srcIdx = ivec4(sourceLocR"+f+", sourceLocG"+f+",\n          sourceLocB"+f+", sourceLocA"+f+") * "+t+";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = "+k+";\n\n        for (int i = 0; i < "+t+"; i++) {\n          inIdx = srcIdx;\n          "+w+"\n          vec4 candidate = "+k+";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4("+x+"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    "},Zo=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2("+l+", "+c+");\n      const float avgMultiplier = float("+h+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+o+";\n            wR += "+i+") {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+u+";\n            wC+= "+s+") {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},eu=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode="\n      const ivec3 pads = ivec3("+p+", "+f+", "+m+");\n      const float avgMultiplier = float("+g+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+c+";\n            wD += "+o+") {\n          float dyD = float(dyDCorner + wD) / "+a+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+h+";\n              wR += "+u+") {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+d+";\n                wC += "+l+") {\n              float dyC = float(dyCCorner + wC) / "+s+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},tu=function(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Oi(e,t),Oi(e,n);var s="0.0";null!=r&&(Oi(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var o="1.0";null!=a&&(Oi(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = "+s+";\n        float scale = "+o+";\n        float inv = scale * inversesqrt(variance + float("+i+"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    "},nu=function(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Oi(e,t),Oi(e,n);var s="vec4(0.0)";null!=r&&(Oi(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");var o="vec4(1.0)";null!=a&&(Oi(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = "+s+";\n        vec4 scale = "+o+";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4("+i+"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    "},ru=function(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Oi(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        "+e+"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    "},au="return a + b;",iu="return a - b;",su="return a * b;",ou="return (a < 0.) ? b * a : a;",uu=function(e,t,n){this.variableNames=["A","B"],this.outputShape=Oi(t,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        "+e+"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "},lu="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",cu=function(e,t,n,r){void 0===r&&(r=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Oi(t,n);var a=this.outputShape.length,i="";if(r)if(0===a||1===on(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i="\n          "+Xo(a)+" coords = getOutputCoords();\n        ",1===a)i+="\n            result.y = (coords + 1) >= "+this.outputShape[0]+" ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ";else{var s=Oo("coords",a);i+="\n            bool nextRowOutOfBounds =\n              ("+s[a-2]+" + 1) >= "+this.outputShape[a-2]+";\n            bool nextColOutOfBounds =\n              ("+s[a-1]+" + 1) >= "+this.outputShape[a-1]+";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        "+e+"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        "+i+"\n\n        setOutput(result);\n      }\n    "},hu=function(){function e(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),du=function(){function e(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),pu=function(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "},fu=function(e){this.outputShape=[],this.outputShape=La(e,1),this.variableNames=e.map((function(e,t){return"T"+t}));var t=new Array(e.length-1);t[0]=e[0][1];for(var n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];var r=["if (yC < "+t[0]+") setOutput(getT0(yR, yC));"];for(n=1;n<t.length;n++){var a=t[n-1];r.push("else if (yC < "+t[n]+") setOutput(getT"+n+"(yR, yC-"+a+"));")}var i=t.length,s=t[t.length-1];r.push("else setOutput(getT"+i+"(yR, yC-"+s+"));"),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        "+r.join("\n        ")+"\n      }\n    "},mu=function(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=La(e,t);var n=this.outputShape,r=n.length,a=Xo(r),i=Oo("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((function(e,t){return"T"+t}));var o=new Array(e.length-1);o[0]=e[0][t];for(var u=1;u<o.length;u++)o[u]=o[u-1]+e[u][t];var l=s[t],c=s.slice(-2),h=s.join(),d="if ("+l+" < "+o[0]+") {\n        return getChannel(\n            getT0("+h+"), vec2("+c.join()+"));\n        }";for(u=1;u<o.length;u++){var p=o[u-1];d+="\n        if ("+l+" < "+o[u]+"  && "+l+" >= "+o[u-1]+") {\n          return getChannel(\n            getT"+u+"("+gu(s,l,p)+"),\n            vec2("+gu(c,l,p)+"));\n        }"}var f=o.length,m=o[o.length-1];d+="\n        return getChannel(\n          getT"+f+"("+gu(s,l,m)+"),\n          vec2("+gu(c,l,m)+"));",this.userCode="\n      float getValue("+s.map((function(e){return"int "+e}))+") {\n        "+d+"\n      }\n\n      void main() {\n        "+a+" coords = getOutputCoords();\n        vec4 result = vec4(getValue("+i+"), 0., 0., 0.);\n\n        "+i[r-1]+" = "+i[r-1]+" + 1;\n        if ("+i[r-1]+" < "+n[r-1]+") {\n          result.g = getValue("+i+");\n        }\n\n        "+i[r-2]+" = "+i[r-2]+" + 1;\n        if ("+i[r-2]+" < "+n[r-2]+") {\n          result.a = getValue("+i+");\n        }\n\n        "+i[r-1]+" = "+i[r-1]+" - 1;\n        if ("+i[r-2]+" < "+n[r-2]+" &&\n            "+i[r-1]+" < "+n[r-1]+") {\n          result.b = getValue("+i+");\n        }\n        setOutput(result);\n      }\n    "};function gu(e,t,n){var r=e.indexOf(t);return e.map((function(e,t){return t===r?e+" - "+n:e})).join()}var vu=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              if ("+i+") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},yu=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords["+c+"];\n\n        ivec2 dyCorner = ivec2(coords["+u+"], coords["+l+"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n\n              if ("+i+") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},bu=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yF = 0; yF < "+e.outDepth+"; yF++) {\n            int xF = wF + yF * "+t+" - "+a+";\n\n            if (xF < 0 || xF >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n              int xR = wR + yR * "+n+" - "+i+";\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n                int xC = wC + yC * "+r+" - "+s+";\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},xu=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3("+o+", "+u+", "+l+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+t+"; wF++) {\n          float dyF = float(dyFCorner + wF) / "+a+".0;\n\n          if (dyF < 0.0 || dyF >= "+e.outDepth+".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = "+t+" - 1 - wF;\n\n          for (int wR = 0; wR < "+n+"; wR++) {\n            float dyR = float(dyRCorner + wR) / "+i+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = "+n+" - 1 - wR;\n\n            for (int wC = 0; wC < "+r+"; wC++) {\n              float dyC = float(dyCCorner + wC) / "+s+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = "+r+" - 1 - wC;\n\n              for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},wu=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * "+i+" + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ku=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2("+i+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < "+o+"; dm++) {\n              int d2 = d1 * "+o+" + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Iu=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.padInfo.top,i=e.padInfo.left,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),p=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,v=f?3:1,y="",b="";n&&(y=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",b="result = activation(result);");var x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+y+"\n\n      const ivec2 strides = ivec2("+s+", "+o+");\n      const ivec2 pads = ivec2("+a+", "+i+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords["+v+"];\n\n        ivec2 xRCCorner =\n            ivec2(coords["+m+"], coords["+g+"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+c+"; wR++) {\n          int xR = xRCorner + wR * "+u+";\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+h+"; wC++) {\n            int xC = xCCorner + wC * "+l+";\n\n            if (xC < 0 || xC >= "+e.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+d+"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if ("+f+") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if ("+(1===p)+") {\n\n              if ("+f+") {\n                dotProd +=\n                    getX(batch, xR, xC, "+d+") *\n                    getW(wR, wC, "+d+", d2);\n              } else {\n                dotProd +=\n                    getX(batch, "+d+", xR, xC) *\n                    getW(wR, wC, "+d+", d2);\n              }\n\n            } else if ("+(2===p)+") {\n              vec2 wValues = vec2(\n                getW(wR, wC, "+d+", d2),\n                getW(wR, wC, "+d+" + 1, d2)\n              );\n\n              if ("+f+") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, "+d+"),\n                  getX(batch, xR, xC, "+d+" + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, "+d+", xR, xC),\n                  getX(batch, "+d+" + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if ("+(3===p)+") {\n              vec3 wValues = vec3(\n                getW(wR, wC, "+d+", d2),\n                getW(wR, wC, "+d+" + 1, d2),\n                getW(wR, wC, "+d+" + 2, d2)\n              );\n\n              if ("+f+") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, "+d+"),\n                  getX(batch, xR, xC, "+d+" + 1),\n                  getX(batch, xR, xC, "+d+" + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, "+d+", xR, xC),\n                  getX(batch, "+d+" + 1, xR, xC),\n                  getX(batch, "+d+" + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        "+x+"\n        "+b+"\n        setOutput(result);\n      }\n    "},Cu=function(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3("+a+", "+i+", "+s+");\n      const ivec3 pads = ivec3("+t+", "+n+", "+r+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+c+"; wF++) {\n          int xF = xFCorner + wF * "+o+";\n\n          if (xF < 0 || xF >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+h+"; wR++) {\n            int xR = xRCorner + wR * "+u+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+d+"; wC++) {\n              int xC = xCCorner + wC * "+l+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < "+p+"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if ("+(1===f)+") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, "+p+") *\n                  getW(wF, wR, wC, "+p+", d2);\n              } else if ("+(2===f)+") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if ("+(3===f)+") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, "+p+"),\n                  getX(batch, xF, xR, xC, "+p+" + 1),\n                  getX(batch, xF, xR, xC, "+p+" + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, "+p+", d2),\n                  getW(wF, wR, wC, "+p+" + 1, d2),\n                  getW(wF, wR, wC, "+p+" + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Su=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.inHeight,i=e.inWidth,s=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=e.outChannels/e.inChannels,m="",g="";n&&(m=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",g="result = activation(result);");var v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+m+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+f+";\n        int q = d2 - d1 * "+f+";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < "+d+"; wR++) {\n          int xR = xRCorner + wR * "+c+";\n\n          if (xR < 0 || xR >= "+a+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+p+"; wC++) {\n            int xC = xCCorner + wC * "+h+";\n\n            if (xC < 0 || xC >= "+i+") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        "+v+"\n        "+g+"\n        setOutput(result);\n      }\n    "},Nu=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;for(var a=e.inHeight,i=e.inWidth,s=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=p,m="int xR; int xC; int xCOffset;",g=0;g<d;g++)for(var v=0;v<p;v++)m+="\n          vec4 xTexelR"+g+"C"+2*v+" = vec4(0.);\n          vec4 wR"+g+"C"+v+" = vec4(0.);\n          vec4 xR"+g+"C"+v+" = vec4(0.);";for(g=0;g<d;g++)for(var y=0;y<f;y++){if(m+="\n          xR = xRCorner + "+g*c+";\n          xC = xCCorner + "+(v=2*y)*h+";\n        ",1===l){if(v<p&&(m+=o%2==1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+i+") {\n                    xTexelR"+g+"C"+v+".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+i+") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+i+") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR"+g+"C"+v+" = vec4(previous.zw, xTexelR"+g+"C"+v+".xy);\n                } else {\n                  xR"+g+"C"+v+" = vec4(0, 0, xTexelR"+g+"C"+v+".xy);\n                }\n              ":"\n                if(xR >= 0 && xR < "+a+" && xC >= 0 && xC < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = xTexelR"+g+"C"+v+";\n              ",v+1<p)){var b=o%2==0?en(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+="\n                  xCOffset = xC + "+o%2+" + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+i+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n                ",h>1&&(m+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < "+a+" &&\n                      xCOffset >= 0 && xCOffset < "+i+") {\n                      xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR"+g+"C"+v+" = vec4(0.);\n                    }\n                  "),m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".xy);\n                "):m+="\n                  xCOffset = xC + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+i+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR"+g+"C"+(v+1)+" = xTexelR"+g+"C"+(v+2)+";\n                "}}else v<p&&(m+="\n              if(xR >= 0 && xR < "+a+") {\n            ",o%2==1?(m+="\n                xCOffset = xC + 1 - "+l+";\n                if(xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < "+i+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n              ",v+1<p&&(m+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + "+l+";\n                  if(xCOffset >= 0 && xCOffset < "+i+") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR"+g+"C"+(v+1)+" = vec4(xTexelR"+g+"C"+(v+2)+".xy, final.xy);\n                ")):(m+="\n                if(xC >= 0 && xC < "+i+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + "+l+";\n                if(xCOffset >= 0 && xCOffset < "+i+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".xy, xTexelR"+g+"C"+(v+2)+".xy);\n              ",v+1<p&&(m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n                ")),m+="}");v<p&&(m+="\n            vec4 wTexelR"+g+"C"+v+" = getW("+g+", "+v+", d1, q);\n            wR"+g+"C"+v+" = vec4(wTexelR"+g+"C"+v+".xz, wTexelR"+g+"C"+v+".xz);\n          ",v+1<p&&(m+="\n              vec4 wTexelR"+g+"C"+(v+1)+" = getW("+g+", "+(v+1)+", d1, q);\n              wR"+g+"C"+(v+1)+" =\n                vec4(wTexelR"+g+"C"+(v+1)+".xz, wTexelR"+g+"C"+(v+1)+".xz);"))}for(g=0;g<d;g++)for(v=0;v<p;v++)m+="dotProd += xR"+g+"C"+v+" * wR"+g+"C"+v+";";var x="",w="";n&&(x=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"vec4 activation(vec4 x) {\n          "+n+"\n        }",w="result = activation(result);");var k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+x+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        "+m+"\n\n        vec4 result = dotProd;\n        "+k+"\n        "+w+"\n        setOutput(result);\n      }\n    "},Tu=function(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var i=e[0],s=e[1],o=e[2],u=e[3],l=t[0],c=n[0],h=n[1];this.outputShape=[l,c,h,u];var d="bilinear"===r?1:0,p=[s-1+".0",o-1+".0"],f=p[0],m=p[1],g=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio","y1*"+f+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+f],v=g[0],y=g[1],b=g[2],x=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=x[0],k=x[1],I=x[2];this.userCode="\n      const float height_ratio = float("+v+");\n      const float width_ratio = float("+w+");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= "+i+") {\n          return;\n        }\n\n        float height_scale = "+y+";\n        float width_scale = "+k+";\n\n        float in_y = "+b+";\n        if( in_y < 0.0 || in_y > "+f+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n        float in_x = "+I+";\n        if( in_x < 0.0 || in_x > "+m+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if("+d+" == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    "},Eu=function(e,t,n){this.variableNames=["x"],this.outputShape=e;var r=e.length,a=e[e.length-1],i=n?"<":">";this.userCode="\n      int getIndex(int i) {\n        "+(n?"return "+a+" -i - 1;":"return i;")+"\n      }\n\n      void main() {\n        "+Xo(r)+" coords = getOutputCoords();\n        int end = "+Ru(r,"coords")+";\n        float val = 0.0;\n        for (int i = "+a+" - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx "+i+" end) {\n            continue;\n          }\n          if (idx == end && "+t+") {\n            continue;\n          }\n          "+Ru(r,"coords")+" = idx;\n          val += getX("+function(e,t){if(1===e)return""+t;if(2===e)return t+".x, "+t+".y";if(3===e)return t+".x, "+t+".y, "+t+".z";if(4===e)return t+".x, "+t+".y, "+t+".z, "+t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}(r,"coords")+");\n        }\n        setOutput(val);\n      }\n    "};function Ru(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}var Au=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=yr.DENSE;var t=Nr(e),n=Mo();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+Lo(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        "+n.output+" = result;\n      }\n    "},Du=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=yr.DENSE;var t=Nr(e),n=Mo();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+Lo(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        "+n.output+" = result;\n      }\n    "},$u=function(){function e(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = "+this.getHeightCoordString()+";\n      int w = "+this.getWidthCoordString()+";\n      int d = "+this.getDepthCoordString()+";\n\n      int in_h = h / "+t+";\n      int offset_h = imod(h, "+t+");\n      int in_w = w / "+t+";\n      int offset_w = imod(w, "+t+");\n      int offset_d = (offset_h * "+t+" + offset_w) *\n        "+this.getOutputDepthSize()+";\n      int in_d = d + offset_d;\n\n      float result = "+this.getInputSamplingString()+";\n      setOutput(result);\n    }\n  "}return e.prototype.getHeightCoordString=function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"},e.prototype.getWidthCoordString=function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"},e.prototype.getDepthCoordString=function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"},e.prototype.getOutputDepthSize=function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},e.prototype.getInputSamplingString=function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},e}(),Fu=function(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "},_u=function(e){this.variableNames=["A"],this.outTexUsage=br.DOWNLOAD;var t=Mo();this.outputShape=e,this.userCode="\n      "+Bo+"\n\n      void main() {\n        float x = getAAtOutCoords();\n        "+t.output+" = encode_float(x);\n      }\n    "},Ou=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=br.DOWNLOAD;var t=Mo();this.outputShape=e,this.userCode="\n      "+Bo+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        "+t.output+" = encode_float(x);\n      }\n    "},Mu=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"];var r=Mo(),a=t[0],i=t[1];this.outputShape=e;var s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode="\n      "+Po(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / "+i+";\n        int c = imod(flatIndex, "+i+");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n        vec4 values = "+r.texture2D+"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        "+r.output+" = vec4("+s+", 0., 0., 0.);\n      }\n    "},Lu=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=Mo(),a=t[0],i=t[1];this.outputShape=e;var s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var l=0;l<=1;l++){var c=2*u+l;s+="\n          localCoords = coords;\n          if(localCoords[2] + "+l+" < "+e[2]+") {\n            localCoords[2] += "+l+";\n            if(localCoords[1] + "+u+" < "+e[1]+") {\n              localCoords[1] += "+u+";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / "+i+";\n              c = imod(flatIndex, "+i+");\n              uv = (vec2(c, r) + halfCR) / vec2("+i+".0, "+a+".0);\n              values = "+r.texture2D+"(A, uv);\n\n              if(offset == 0) {\n                result["+c+"] = values[0];\n              } else if(offset == 1) {\n                result["+c+"] = values[1];\n              } else if(offset == 2) {\n                result["+c+"] = values[2];\n              } else {\n                result["+c+"] = values[3];\n              }\n            }\n          }\n        "}this.userCode="\n      "+Po(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        "+s+"\n\n        "+r.output+" = "+o+";\n      }\n    "},Pu=function(e,t,n){this.variableNames=["real","imag"];var r=t[1];this.outputShape=t;var a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,i=n?r+".0":"1.0";this.userCode="\n      const float exponentMultiplier = "+a+";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        "+e+"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float("+r+");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < "+r+"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / "+i+";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    "},Bu=function(){function e(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.valueLoc&&(t.valueLoc=n.getUniformLocationNoThrow(r,"value")),n.gl.uniform1f(t.valueLoc,e)}},e}(),zu=function(e,t,n){this.variableNames=["A","indices"];var r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;var a=Xo(this.rank),i=function(e,t){var n=e.length;if(n>4)throw Error("Gather for rank "+n+" is not yet supported");if(1===n)return"int(getIndices(resRC))";for(var r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=0;i<e.length;i++)i===t?a.push("int(getIndices("+r[i]+"))"):a.push(""+r[i]);return a.join()}(e,n);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "},Wu=function(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;var r=Xo(t.length),a=Xo(n.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        "+r+" strides = "+r+"("+this.strides+");\n         void main() {\n          "+a+" coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < "+this.sliceDim+"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * "+i+";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      "};function Vu(e,t){var n=Mo();return Fr(e,t,n.version+"\n    precision highp float;\n    "+n.attribute+" vec3 clipSpacePos;\n    "+n.attribute+" vec2 uv;\n    "+n.varyingVs+" vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }")}function Uu(e,t){return Wr(e,t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Gu(e,t){return Vr(e,t,new Uint16Array([0,1,2,2,1,3]))}function Hu(e,t,n,r,a,i,s){Gr(n,r);var o=Ur(e,t),u=e.TEXTURE_2D;return Rr(e,t,(function(){return e.bindTexture(u,o)})),Rr(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)})),Rr(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)})),Rr(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)})),Rr(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)})),Rr(e,t,(function(){return e.texImage2D(u,0,a,n,r,0,i,s,null)})),Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)})),o}function ju(e,t,n,r,a){var i=Sr(n,r);return Hu(e,t,i[0],i[1],a.internalFormatFloat,a.textureFormatFloat,e.FLOAT)}function qu(e,t,n,r,a){var i=Sr(n,r);return Hu(e,t,i[0],i[1],a.internalFormatHalfFloat,a.textureFormatFloat,a.textureTypeHalfFloat)}function Ku(e,t,n,r,a){var i=Sr(n,r);return Hu(e,t,i[0],i[1],e.RGBA,e.RGBA,e.UNSIGNED_BYTE)}function Xu(e,t,n,r,a){var i=Tr(n,r);return Hu(e,t,i[0],i[1],a.internalFormatPackedFloat,e.RGBA,e.FLOAT)}function Yu(e,t,n,r,a){var i=Tr(n,r);return Hu(e,t,i[0],i[1],a.internalFormatPackedHalfFloat,e.RGBA,a.textureTypeHalfFloat)}function Qu(e,t,n,r){return Rr(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),jr(e,t,n,"clipSpacePos",r,3,20,0)&&jr(e,t,n,"uv",r,2,20,12)}function Ju(e,t,n,r,a,i,s){var o,u,l;Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),i instanceof Uint8Array?(o=new Uint8Array(r*a*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(r*a*4),u=e.FLOAT,l=s.internalFormatPackedFloat),o.set(i),Rr(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,l,r,a,0,e.RGBA,u,o)})),Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function Zu(e,t,n,r){Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),r.data instanceof Uint8Array?Rr(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)})):Rr(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)})),Rr(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function el(e,t,n,r,a){var i=e.createBuffer();Rr(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,i)}));var s=16*n*r;return Rr(e,t,(function(){return e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)})),Rr(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,0)})),Rr(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,null)})),i}function tl(e,t,n){var r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function nl(e,t,n,r,a){var i=Sr(n,r),s=i[0],o=i[1],u=new Uint8Array(n*r*4);return Rr(e,t,(function(){return e.readPixels(0,0,s,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,u)})),new Float32Array(u.buffer)}function rl(e,t,n,r,a,i,s,o){var u=e,l=new Float32Array(function(e,t){var n=Tr(e,t);return n[0]*n[1]*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function al(e,t,n,r){var a=new Float32Array(n*r*4);return Rr(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,a)})),a}var il=Object.freeze({createVertexShader:Vu,createVertexBuffer:Uu,createIndexBuffer:Gu,createFloat32MatrixTexture:ju,createFloat16MatrixTexture:qu,createUnsignedBytesMatrixTexture:Ku,createPackedMatrixTexture:Xu,createFloat16PackedMatrixTexture:Yu,bindVertexProgramAttributeStreams:Qu,uploadDenseMatrixToTexture:Ju,uploadPixelDataToTexture:Zu,createBufferFromOutputTexture:el,downloadFloat32MatrixFromBuffer:tl,downloadByteEncodedFloatMatrixFromOutputTexture:nl,downloadPackedMatrixFromBuffer:rl,downloadMatrixFromPackedOutputTexture:al}),sl=function(){function e(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=Vt().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,Ir(t,e)):this.gl=Cr(t);var n="WEBGL_color_buffer_float";if(1===Vt().getNumber("WEBGL_VERSION")){if(this.textureFloatExtension=$r(this.gl,this.debug,"OES_texture_float"),da(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=$r(this.gl,this.debug,"OES_texture_half_float");else if(Vt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),da(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=$r(this.gl,this.debug,"EXT_color_buffer_half_float");else if(Vt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",da(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!da(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Uu(this.gl,this.debug),this.indexBuffer=Gu(this.gl,this.debug),this.framebuffer=Hr(this.gl,this.debug),this.textureConfig=Er(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(e.prototype,"debug",{get:function(){return Vt().getBool("DEBUG")},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){var e=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var t=this.gl;Rr(t,this.debug,(function(){return t.finish()})),Rr(t,this.debug,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)})),Rr(t,this.debug,(function(){return t.deleteFramebuffer(e.framebuffer)})),Rr(t,this.debug,(function(){return t.bindBuffer(t.ARRAY_BUFFER,null)})),Rr(t,this.debug,(function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)})),Rr(t,this.debug,(function(){return t.deleteBuffer(e.indexBuffer)})),this.disposed=!0}},e.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),ju(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),qu(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),Ku(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),Zu(this.gl,this.debug,e,t)},e.prototype.uploadDenseMatrixToTexture=function(e,t,n,r){this.throwIfDisposed(),Ju(this.gl,this.debug,e,t,n,r,this.textureConfig)},e.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),Yu(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),Xu(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&&(Jr(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Rr(this.gl,this.debug,(function(){return t.gl.deleteTexture(e)}))},e.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return nl(r.gl,r.debug,t,n,r.textureConfig)}))},e.prototype.downloadPackedMatrixFromBuffer=function(e,t,n,r,a,i){return rl(this.gl,e,0,0,0,a,i,this.textureConfig)},e.prototype.downloadFloat32MatrixFromBuffer=function(e,t){return tl(this.gl,e,t)},e.prototype.createBufferFromTexture=function(e,t,n){this.bindTextureToFrameBuffer(e);var r=el(this.gl,this.debug,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},e.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},e.prototype.createFence=function(e){var t,n,r=this;if(Vt().getBool("WEBGL_FENCE_API_ENABLED")){var a=e,i=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=function(){var e=a.clientWaitSync(i,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=i}else Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(t,Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):n=function(){return!0};return{query:t,isFencePassed:n}},e.prototype.downloadMatrixFromPackedTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return al(r.gl,r.debug,t,n)}))},e.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,n=_r(t,this.debug,e),r=Vu(t,this.debug),a=Pr(t,this.debug);return Rr(t,this.debug,(function(){return t.attachShader(a,r)})),Rr(t,this.debug,(function(){return t.attachShader(a,n)})),Br(t,this.debug,a),this.debug&&zr(t,this.debug,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Qu(t,this.debug,this.program,this.vertexBuffer)),a},e.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Rr(this.gl,this.debug,(function(){return t.gl.deleteProgram(e)}))},e.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&zr(this.gl,this.debug,this.program),Rr(this.gl,this.debug,(function(){return t.gl.useProgram(e)}))},e.prototype.getUniformLocation=function(e,t,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?Kr(this.gl,this.debug,e,t):Xr(this.gl,e,t)},e.prototype.getAttributeLocation=function(e,t){var n=this;return this.throwIfDisposed(),Rr(this.gl,this.debug,(function(){return n.gl.getAttribLocation(e,t)}))},e.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},e.prototype.setInputMatrixTexture=function(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Yr(this.gl,this.debug,this.program,e,t,n)},e.prototype.setOutputMatrixTexture=function(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)},e.prototype.setOutputPackedMatrixTexture=function(e,t,n){this.throwIfDisposed();var r=Tr(t,n),a=r[0],i=r[1];this.setOutputMatrixTextureDriver(e,a,i)},e.prototype.setOutputMatrixWriteRegion=function(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)},e.prototype.setOutputPackedMatrixWriteRegion=function(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},e.prototype.debugValidate=function(){null!=this.program&&zr(this.gl,this.debug,this.program),Zr(this.gl)},e.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),Rr(e,this.debug,(function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}))},e.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),Rr(this.gl,this.debug,(function(){return e.gl.finish()}))},e.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$r(this.gl,this.debug,2===Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},e.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},e.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},e.prototype.beginQuery=function(){if(2===Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),a=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,a),a},e.prototype.endQuery=function(){if(2!==Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT)}},e.prototype.waitForQueryAndGetTime=function(e){return Bt(this,void 0,void 0,(function(){var t=this;return zt(this,(function(n){switch(n.label){case 0:return[4,pn((function(){return t.disposed||t.isQueryAvailable(e,Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}))];case 1:return n.sent(),[2,this.getQueryTime(e,Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}}))}))},e.prototype.getQueryTime=function(e,t){if(0===t)return null;if(2===t){var n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6},e.prototype.isQueryAvailable=function(e,t){if(0===t)return!0;if(2===t){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}return a=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT),null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint},e.prototype.pollFence=function(e){var t=this;return new Promise((function(n){t.addItemToPoll((function(){return e.isFencePassed()}),(function(){return n()}))}))},e.prototype.pollItems=function(){for(var e=function(e){for(var t=0;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((function(e){return e.isDoneFn}))),t=0;t<=e;++t)(0,this.itemsToPoll[t].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(e+1)},e.prototype.addItemToPoll=function(e,t){var n=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||pn((function(){return n.pollItems(),0===n.itemsToPoll.length}))},e.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),Qr(this.gl,this.debug,e,this.framebuffer),this.debug&&Zr(this.gl)},e.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(Qr(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&Zr(this.gl)):Jr(this.gl,this.debug,this.framebuffer)},e.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var n=t();return this.unbindTextureToFrameBuffer(),n},e.prototype.setOutputMatrixTextureDriver=function(e,t,n){this.throwIfDisposed();var r=this.gl;Qr(r,this.debug,e,this.framebuffer),this.debug&&Zr(r),this.outputTexture=e,Rr(r,this.debug,(function(){return r.viewport(0,0,t,n)})),Rr(r,this.debug,(function(){return r.scissor(0,0,t,n)}))},e.prototype.setOutputMatrixWriteRegionDriver=function(e,t,n,r){var a=this;this.throwIfDisposed(),Rr(this.gl,this.debug,(function(){return a.gl.scissor(e,t,n,r)}))},e.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},e.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error("No GPU program is currently set.")},e}();function ol(e,t){if(e.length!==t.length)throw Error("Binary was compiled with "+e.length+" inputs, but was executed with "+t.length+" inputs");e.forEach((function(e,n){var r=e.logicalShape,a=t[n],i=a.shape;if(!un(r,i))throw Error("Binary was compiled with different shapes than the current args. Shapes "+r+" and "+i+" must match");if(!e.isUniform||!a.isUniform){var s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!un(s,o))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+s+" and "+o+" must match")}}))}var ul=function(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var r=n.filterWidth,a=n.inChannels,i=n.strideWidth,s=n.strideHeight,o=n.padInfo,u=n.outWidth,l=n.dilationWidth,c=n.dilationHeight,h=n.dataFormat,d=o.left,p=o.top,f=a*r,m=Mo(),g="channelsLast"===h,v=g?0:1,y=g?1:2,b="",x=0;x<=1;x++)for(var w=0;w<=1;w++)b+="\n          blockIndex = rc.y + "+w+";\n          pos = rc.x + "+x+";\n\n          if(blockIndex < "+e[1]+" && pos < "+e[0]+") {\n            offsetY = int(blockIndex / ("+u+")) * "+s+" - "+p+";\n            d0 = offsetY + "+c+" * (pos / "+f+");\n\n            if(d0 < "+t[v]+" && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), "+u+".) * "+i+". - "+d+".);\n              d1 = offsetX + "+l+" * (int(mod(float(pos), "+f+".) / "+a+".));\n\n              if(d1 < "+t[y]+" && d1 >= 0) {\n\n                ch = int(mod(float(pos), "+a+".));\n\n                if ("+g+") {\n                  innerDims = vec2(d1, ch);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ";this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        "+b+"\n\n        "+m.output+" = result;\n      }\n    "},ll=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];var i,s=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -"+s+"; j <= "+s+"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  "+o+") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * "+i+";\n        setOutput(val);\n      }\n    "},cl=function(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < "+this.depth+"; ++d) {\n          int depthBegin = int(max(0.0, float(d - "+t+")));\n          int depthEnd = int(min(float("+this.depth+"),\n              float(d + "+t+" + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = "+this.depth+";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float("+r+") * norm + float("+n+");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float("+r+")\n                * float("+a+")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * "+a+");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    "},hl=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var i,s=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";i=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < "+this.outputShape[3]+";\n        bool hasNextRow = c < "+this.outputShape[2]+";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - "+s+";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - "+s+"; j <= "+s+"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2("+o+"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * "+i+";\n        setOutput(result);\n      }\n    "},dl=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+a+";\n          wR += "+r+") {\n          float dyR = float(dyRCorner + wR) / "+t+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+i+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+n+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = "+u+" - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * "+i+" + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},pl=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode="\n      const ivec3 pads = ivec3("+c+", "+h+", "+d+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+o+";\n           wD += "+a+") {\n          float dyD = float(dyDCorner + wD) / "+t+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+u+";\n              wR += "+i+") {\n            float dyR = float(dyRCorner + wR) / "+n+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+l+";\n                wC += "+s+") {\n              float dyC = float(dyCCorner + wC) / "+r+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = "+p+" -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * "+u+" * "+l+" +\n                  wR * "+l+" + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},fl=function(e,t,n,r,a,i,s){void 0===n&&(n=!1),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===i&&(i=null),void 0===s&&(s=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;var o=n?e[1]:e[2],u=Math.ceil(o/2),l=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",f="";i&&(p=s?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+i+"\n        }":"vec4 activation(vec4 x) {\n          "+i+"\n        }",f="result = activation(result);");var m=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+p+"\n\n      const float sharedDimension = "+u+".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < "+u+"; i++) {\n          vec4 a = getMatrixA(rc.x, "+l+");\n          vec4 b = getMatrixB(rc.x, "+c+");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += ("+h[0]+" * "+d[0]+");\n          result += ("+h[1]+" * "+d[1]+");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        "+m+"\n\n        "+f+"\n\n        setOutput(result);\n      }\n    "},ml=function(){function e(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < "+(t-1)+"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float("+(t-1)+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.seedLoc&&(t.seedLoc=n.getUniformLocation(r,"seed")),n.gl.uniform1f(t.seedLoc,e)}},e}(),gl=function(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float("+r+"), float("+n+"),\n                      float(index == coords.y)));\n      }\n    "},vl=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;var t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var n=Oo("rc",t),r=Xo(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];for(var r="",a=e-2;a<e;a++)r+=n[a]+" >= "+t[a],a<e-1&&(r+="||");return r}(t,e,n),i=function(e,t,n,r){if(1===e)return"";var a=r.slice(-2);return"\n    int r = "+a[0]+";\n    int c = "+a[1]+";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= "+t+";\n    bool rEdge = rp1 >= "+n+";\n  "}(t,e[e.length-1],e[e.length-2],n),s=function(e,t){var n=e.length,r=function(e,t){for(var n=[],r=0;r<=1;r++)for(var a=0;a<=1;a++){for(var i=(0===r?"r":"rp1")+", "+(0===a?"c":"cp1"),s=2;s<e;s++)i=t[t.length-1-s]+","+i;n.push(i)}return n}(n,t);return 1===n?"getA(rc),\n            rc + 1 >= "+e[0]+" ? 0. : getA(rc + 1),\n            0, 0":"getA("+r[0]+"),\n          cEdge ? 0. : getA("+r[1]+"),\n          rEdge ? 0. : getA("+r[2]+"),\n          rEdge || cEdge ? 0. : getA("+r[3]+")"}(e,n);this.userCode="\n        void main() {\n          "+r+" rc = getOutputCoords();\n\n          if("+a+") {\n            setOutput(vec4(0));\n          } else {\n            "+i+"\n\n            setOutput(vec4("+s+"));\n          }\n        }\n      "}},yl=function(e,t,n){this.variableNames=["x"],this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));var r=e.length,a=Xo(r),i=t.map((function(e){return e[0]})).join(","),s=t.map((function(t,n){return t[0]+e[n]})).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      "+a+" start = "+a+"("+i+");\n      "+a+" end = "+a+"("+s+");\n\n      void main() {\n        "+a+" outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float("+n+"));\n        } else {\n          "+a+" coords = outC - start;\n          setOutput(getX("+o+"));\n        }\n      }\n    ":"\n        int start = "+i+";\n        int end = "+s+";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float("+n+"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      "},bl=function(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));for(var r=e.length,a=Xo(r),i=t.map((function(e){return e[0]})).join(","),s=t.map((function(t,n){return t[0]+e[n]})).join(","),o=Oo("rc",r),u=Oo("source",r),l=o[r-1]+" < "+this.outputShape[r-1],c=1===r?"source":"vec2("+u.slice(-2).join()+")",h=[a+" rc = outputLoc;",o[r-1]+" += 1;\n       if("+l+") {\n      ",1===r?"":"}\n       rc = outputLoc;\n       "+o[r-2]+" += 1;\n       if("+o[r-2]+" < "+this.outputShape[r-2]+") {",1===r?"":"  "+o[r-1]+" += 1;\n         if("+l+") {"],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="",f=0,m=1===r?2:4;f<m;f++)p+="\n        "+h[f]+"\n        if ("+d+") {\n          result["+f+"] = float("+n+");\n        } else {\n          "+a+" source = rc - start;\n          result["+f+"] = getChannel(getX("+u.join()+"), "+c+");\n        }\n      ";p+=1===r?"} ":"}}",this.userCode="\n      const "+a+" start = "+a+"("+i+");\n      const "+a+" end = "+a+"("+s+");\n\n      void main() {\n        "+a+" outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        "+p+"\n        setOutput(result);\n      }\n    "},xl=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;var f="avg"===t,m="((batch  * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + d",g="(xR * "+e.inWidth+" + xC) * "+e.inChannels+" + d",v="0.0";if(f||(v="-1.0 / 1e-20"),n)this.userCode="\n        const ivec2 strides = ivec2("+s+", "+o+");\n        const ivec2 pads = ivec2("+d+", "+p+");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < "+c+";\n              wR += "+u+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+h+";\n                wC += "+l+") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = "+(r?a?m:g:"wR * "+h+" + wC")+";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var y=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(y="avgValue / count");var b=4*Math.floor(i/4),x=i%4,w="\n      if ("+f+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec2 strides = ivec2("+s+", "+o+");\n      const ivec2 pads = ivec2("+d+", "+p+");\n      const float initializationValue = "+v+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+v+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < "+c+";\n            wR += "+u+") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+b+"; wC += 4) {\n            int xC = xCCorner + wC * "+l+";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              getValue(batch, xR, xC + 3 * "+l+", d)\n            );\n\n            "+w+"\n          }\n\n          int xC = xCCorner + "+b+";\n          if ("+(1===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(2===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(3===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              initializationValue\n            );\n\n            "+w+"\n          }\n        }\n        setOutput("+y+");\n      }\n    "}},wl=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;var y="avg"===t,b="0.0";if(y||(b="-1.0 / 1e-20"),n)this.userCode="\n        const ivec3 strides =\n            ivec3("+s+", "+o+", "+u+");\n        const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < "+d+";\n              wD += "+l+") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int wR = 0; wR < "+p+";\n                wR += "+c+") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int wC = 0; wC < "+f+";\n                  wC += "+h+") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = "+(r?a?"(((batch * "+e.inDepth+" + xD) * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"((xD * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"wD * "+p+" * "+f+" +\n                      wR * "+f+" + wC")+";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var x=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / count");var w=4*Math.floor(i/4),k=i%4,I="\n      if ("+y+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec3 strides =\n        ivec3("+s+", "+o+", "+u+");\n      const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n      const float initializationValue = "+b+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+b+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < "+d+";\n            wD += "+l+") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+p+";\n            wR += "+c+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+w+"; wC += 4) {\n              int xC = xCCorner + wC * "+h+";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                getValue(batch, xD, xR, xC + 3 * "+h+", ch)\n              );\n\n              "+I+"\n            }\n\n            int xC = xCCorner + "+w+";\n            if ("+(1===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(2===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(3===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                initializationValue\n              );\n\n              "+I+"\n            }\n          }\n          setOutput("+x+");\n        }\n      }\n    "}},kl=function(e,t){this.variableNames=["x"];var n=e.windowSize,r=e.batchSize,a=e.inSize,i=Math.ceil(a/n);this.outputShape=[r,i];var s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");var u=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");var l=4*Math.floor(n/4),c=n%4,h="\n      if ("+("sum"===t)+") {\n        sumValue += dot(values, ones);\n      } else if ("+("prod"===t)+") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = "+o+"(values, minMaxValue);\n      }\n    ",d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");var p="";a%n>0&&(p="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      "),this.userCode="\n      const float initializationValue = "+s+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+p+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+n+";\n\n        vec4 minMaxValue = vec4("+s+");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < "+l+"; i += 4) {\n          int inIdx = inOffset + i;\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+h+"\n        }\n\n        int inIdx = inOffset + "+l+";\n        if ("+(1===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(2===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(3===c)+") {\n          "+d+" values = "+d+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          "+h+"\n        }\n        setOutput("+u+");\n      }\n    "},Il=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var n="",r=0;r<4;r++){var a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+="\n        "+a+"\n        "+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+"\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result["+r+"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        "+(r>0?"}":"")+"\n      "}this.userCode="\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      "+Lo(["r","c","d"],t)+"\n      return ivec3(r, c, d);\n    }\n  \n      "+Po(e)+"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = "+e[1]+";\n        int cols = "+e[2]+";\n\n        "+n+"\n\n        setOutput(result);\n      }\n    "},Cl=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],i=r[2],s=e.shape,o=s[1],u=s[2],l=[n&&o>1?a-1:a,n&&u>1?i-1:i],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],d=l[1]/c[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+d+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), "+(a-1)+".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), "+(i-1)+".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},Sl=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+i+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    "},Nl=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+",\n          "+u[1]/l[1]+");\n      const vec3 inputShapeRC = vec3("+i+".0, "+s+".0,\n                                     "+s+".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < "+(o-1)+";\n        bool hasNextRow = coords.z < "+(n-1)+";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    "},Tl=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],i=r[2],s=e.shape,o=s[1],u=s[2],l=[n&&o>1?a-1:a,n&&u>1?i-1:i],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],d=l[1]/c[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+d+");\n\n        const float invHeightScale = float("+p+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float("+l[0]+") *\n                (float(dyR) / float("+c[0]+"));\n\n            float sourceFracCol =\n                float("+l[1]+") *\n                  (float(dyC) / float("+c[1]+"));\n\n            int sourceNearestRow = int(min(\n                float(int("+a+") - 1),\n                "+n+" ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int("+i+") - 1),\n                "+n+" ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},El=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],i=e[1],s=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?i-1:i,r&&n>1?s-1:s],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+i+".0, "+s+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + "+c+")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    "},Rl=function(e,t){this.variableNames=["x"];var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");if(this.outputShape=e,1!==n){var r=e.map((function(n,r){return function(n){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - coords["+n+"] - 1":"coords["+n+"]"}(r)})).join(","),a=Xo(n);this.userCode="\n      void main() {\n        "+a+" coords = getOutputCoords();\n        setOutput(getX("+r+"));\n      }\n    "}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX("+e[0]+" - coord - 1));\n        }\n      "},Al=function(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");this.outputShape=e;var r=Oo("rc",n),a=r[n-1]+" + 1 < "+this.outputShape[n-1],i=r[n-2]+" + 1 < "+this.outputShape[n-2],s=Xo(n);function o(n){var r=e.map((function(r,a){return function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - "+r[n]+" - 1":""+r[n]}(a,n)}));return"getChannel(getX("+r.join(",")+"), vec2("+r.slice(-2).join(",")+"))"}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX("+e[0]+" - rc - 1),\n            "+e[0]+" - rc - 1);\n          if("+a+"){\n              result.g = getChannel(getX("+e[0]+" - (rc  + 1) - 1),\n                "+e[0]+" - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      ":"\n        void main() {\n          "+s+" rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = "+function(e){return o(e)}(r.slice())+";\n          if("+a+"){\n            result.g = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())+";\n          }\n          if("+i+") {\n            result.b = "+function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            if("+a+") {\n              result.a = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            }\n          }\n          setOutput(result);\n        }\n    "},Dl=function(e,t,n,r,a,i,s){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;var o=Xo(a.length),u=Xo(i.length),l="";1===n?l="i":2===n&&(l="i, j");var c="getIndices("+l+")",h="";1===r?h="i":2===r&&(h="i, coords[1]");var d="getUpdates("+h+")",p=t>1?"strides[j]":"strides";this.userCode="\n        "+o+" strides = "+o+"("+a+");\n\n        void main() {\n          "+u+" coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < "+e+"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < "+t+"; j++) {\n              int index = round("+c+");\n              flattenedIndex += index * "+p+";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += "+d+";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      "},$l=function(e,t){this.variableNames=["x","segmentIds"];var n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];var o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ",c="";a%n>0&&(c="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      ");var h="";a%n>0&&(h="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return -1.0;\n        }\n      "),this.userCode="\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        "+c+"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        "+h+"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          "+i+")) * float("+n+"));\n        int currentSeg = int(mod(float(outIdx), float("+i+")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+o+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          "+l+"\n        }\n\n        int inIdx = inOffset + "+o+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          "+l+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          "+l+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          "+l+"\n        }\n        setOutput(sumValue);\n      }\n    "},Fl=function(e,t,n){var r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank "+n+" is not yet supported");if(1===n)a="resRC",r="resRC";else{for(var i=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[],u=0;u<t.length;u++)o.push(""+i[u]),u<e&&s.push(""+i[u]);r=s.join(),a=o.join()}var l=Xo(n);this.userCode="\n      void main() {\n        "+l+" resRC = getOutputCoords();\n        float cVal = getC("+r+");\n        if (cVal >= 1.0) {\n          setOutput(getA("+a+"));\n        } else {\n          setOutput(getB("+a+"));\n        }\n      }\n    "},_l=function(){function e(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t,n=Xo(this.rank),r="uniform int start["+this.rank+"];",a=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ol.slice(0,e).map((function(e){return"sourceLoc."+e})).join(",");throw Error("Slicing for rank "+e+" is not yet supported")}(this.rank);t="\n        "+n+" sourceLoc;\n        "+n+" coords = getOutputCoords();\n        "+e.map((function(e,t){return"sourceLoc."+Ol[t]+" = start["+t+"] + coords."+Ol[t]+";"})).join("\n")+"\n      ",this.userCode="\n      "+r+"\n      void main() {\n        "+t+"\n        setOutput(getSource("+a+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),Ol=["x","y","z","w","u","v"],Ml=function(){function e(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var t=Xo(this.rank),n=Oo("coords",this.rank),r=Oo("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2("+r.slice(-2).join()+")",i="getChannel(getSource("+r.join()+"), "+a+")",s="\n      result.x = "+i+";\n      if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n        ++"+r[this.rank-1]+";\n        result.y = "+i+";\n        --"+r[this.rank-1]+";\n      }\n    ",o=1===this.rank?"":"\n      --"+n[this.rank-1]+";\n      if (++"+n[this.rank-2]+" < "+e[this.rank-2]+") {\n        ++"+r[this.rank-2]+";\n        result.z = "+i+";\n        if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n          ++"+r[this.rank-1]+";\n          result.w = "+i+";\n        }\n      }\n    ",u=this.rank<=4?"sourceLoc = coords +\n            "+t+"("+e.map((function(e,t){return"start["+t+"]"})).join()+");":e.map((function(e,t){return r[t]+" = "+n[t]+" + start["+t+"];"})).join("\n");this.userCode="\n      uniform int start["+this.rank+"];\n      void main() {\n        "+t+" coords = getOutputCoords();\n        "+t+" sourceLoc;\n        "+u+"\n        vec4 result = vec4(0.);\n        "+s+"\n        "+o+"\n        setOutput(result);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),Ll=function(e,t,n){this.variableNames=["x"],this.outputShape=n;var r=n.length,a=Xo(n.length),i=Xo(n.length),s="";if(1===r)s="coords * strides + begin";else{var o=0;s=n.map((function(e,t){return o++,1===n.length?"coords * strides["+t+"] + begin["+t+"]":"coords["+(o-1)+"] * strides["+t+"] + begin["+t+"]"})).join(",")}this.userCode="\n      "+a+" begin = "+a+"("+e+");\n      "+a+" strides = "+a+"("+t+");\n\n      void main() {\n        "+i+" coords = getOutputCoords();\n        setOutput(getX("+s+"));\n      }\n    "},Pl=function(){function e(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return e.prototype.acquireTexture=function(e,t,n){var r,a=Bl(t,n),i=zl(e,a,n);if(i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]),this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var s=this.freeTextures[i].shift();return this.usedTextures[i].push(s),s}return this.numUsedTextures++,this.log(),a===xr.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===xr.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===xr.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===xr.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===xr.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(r),r},e.prototype.releaseTexture=function(e,t,n,r){if(null!=this.freeTextures){var a=zl(t,Bl(n,r),r);a in this.freeTextures||(this.freeTextures[a]=[]),this.freeTextures[a].push(e),this.numFreeTextures++,this.numUsedTextures--;var i=this.usedTextures[a],s=i.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1),this.log()}},e.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")")}},e.prototype.getNumUsedTextures=function(){return this.numUsedTextures},e.prototype.getNumFreeTextures=function(){return this.numFreeTextures},e.prototype.dispose=function(){var e=this;if(null!=this.freeTextures){for(var t in this.freeTextures)this.freeTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));for(var t in this.usedTextures)this.usedTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},e}();function Bl(e,t){if(e===br.UPLOAD)return xr.PACKED_2X2_FLOAT32;if(e===br.RENDER||null==e)return function(e){return Vt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?xr.PACKED_2X2_FLOAT32:xr.UNPACKED_FLOAT32:e?xr.PACKED_2X2_FLOAT16:xr.UNPACKED_FLOAT16}(t);if(e===br.DOWNLOAD||e===br.PIXELS)return xr.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function zl(e,t,n){return e[0]+"_"+e[1]+"_"+t+"_"+n}var Wl=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;var a=Xo(this.rank),i=function(e){var t=e.length;if(t>5)throw Error("Tile for rank "+t+" is not yet supported");if(1===t)return"imod(resRC, "+e[0]+")";for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[],a=0;a<e.length;a++)r.push("imod("+n[a]+", "+e[a]+")");return r.join()}(e);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+i+"));\n      }\n    "},Vl=1.7580993408473768,Ul=1.0507009873554805,Gl=function(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      float unaryOperation(float x) {\n        "+t+"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},Hl="if (isnan(x)) return x;",jl="return abs(x);",ql=Hl+"\n  return (x < 0.0) ? 0.0 : x;\n",Kl=Hl+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Xl="return (x >= 0.0) ? x : (exp(x) - 1.0);",Yl="\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = "+Vl+";\n  float scale = "+Ul+";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n",Ql="return -x;",Jl="return ceil(x);",Zl="return floor(x);",ec="return exp(x);",tc="return exp(x) - 1.0;",nc=Hl+"\n  return sin(x);\n",rc=Hl+"\n  return cos(x);\n",ac=Hl+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",ic=Hl+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",sc=Hl+"\n  return atan(x);\n",oc=Hl+"return log(x + sqrt(x * x + 1.0));",uc=Hl+"\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",lc=Hl+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",cc="return x;",hc="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",dc="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",pc="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",fc=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        "+t+"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},mc=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;var t=e.length,n=Oo("rc",t),r=Xo(t),a=function(e,t){if(1===e)return"rc";for(var n="",r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":"vec2("+i.join(",")+")";this.userCode="\n      void main() {\n        "+r+" rc = getOutputCoords();\n        vec4 packedInput = getA("+a+");\n\n        setOutput(getChannel(packedInput, "+s+"));\n      }\n    "},gc={};function vc(e,t){if(void 0===t&&(t=!1),"linear"===e)return"return x;";if("relu"===e)return t?hc:ql;if("elu"===e)return t?pc:Xl;if("relu6"===e)return t?dc:Kl;if("prelu"===e)return t?lu:ou;throw new Error("Activation "+e+" has not been implemented for the WebGL backend.")}var yc=function(e){function t(t){var n,r=e.call(this)||this;if(r.pendingRead=new WeakMap,r.pendingDisposal=new WeakSet,r.dataRefCount=new WeakMap,r.numBytesInGPU=0,r.uploadWaitMs=0,r.downloadWaitMs=0,r.warnedAboutMemory=!1,r.pendingDeletes=0,r.disposed=!1,!Vt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){var a=Cr(Vt().getNumber("WEBGL_VERSION"));r.binaryCache=((n=Vt().getNumber("WEBGL_VERSION"))in gc||(gc[n]={}),gc[n]),r.gpgpu=new sl(a),r.canvas=a.canvas,r.gpgpuCreatedLocally=!0}else r.gpgpu=t,r.binaryCache={},r.gpgpuCreatedLocally=!1,r.canvas=t.gl.canvas;return r.textureManager=new Pl(r.gpgpu),r.numMBBeforeWarning=null==Vt().global.screen?1024:Vt().global.screen.height*Vt().global.screen.width*window.devicePixelRatio*600/1024/1024,r.texData=new Ys(r,mr),r}return Pt(t,e),t.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},t.prototype.write=function(e,t,n){if(Vt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:br.UPLOAD}),r},t.prototype.move=function(e,t,n,r){if(Vt().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:br.UPLOAD})},t.prototype.readSync=function(e){var t=this.texData.get(e),n=t.values,r=t.dtype,a=t.complexTensors,i=t.slice,s=t.shape,o=t.isPacked;if(null!=i){var u;u=o?new fc(s,cc):new Gl(s,cc);var l=this.runWebGLProgram(u,[{dataId:e,shape:s,dtype:r}],r),c=this.readSync(l.dataId);return this.disposeData(l.dataId),c}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;var h,d,p=null!=this.activeTimers;return p&&(h=Mn()),d="complex64"===r?mo(a.real.dataSync(),a.imag.dataSync()):this.getValuesFromTexture(e),p&&(this.downloadWaitMs+=Mn()-h),this.convertAndCacheOnCPU(e,d)},t.prototype.read=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k;return zt(this,(function(I){switch(I.label){case 0:if(this.pendingRead.has(e))return t=this.pendingRead.get(e),[2,new Promise((function(e){return t.push(e)}))];if(n=this.texData.get(e),r=n.values,a=n.shape,i=n.slice,s=n.dtype,o=n.complexTensors,u=n.isPacked,null!=i)return void 0,l=u?new fc(a,cc):new Gl(a,cc),c=this.runWebGLProgram(l,[{dataId:e,shape:a,dtype:s}],s),h=this.read(c.dataId),this.disposeData(c.dataId),[2,h];if(null!=r)return[2,this.convertAndCacheOnCPU(e)];if(!Vt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Vt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return d=null,"complex64"!==s&&Vt().get("WEBGL_BUFFER_SUPPORTED")&&(p=this.decode(e),f=this.texData.get(p.dataId),d=(k=this.gpgpu).createBufferFromTexture.apply(k,[f.texture].concat(Nr(a)))),this.pendingRead.set(e,[]),"complex64"===s?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:I.sent(),I.label=2;case 2:return"complex64"!==s?[3,4]:[4,Promise.all([o.real.data(),o.imag.data()])];case 3:return g=I.sent(),v=g[0],y=g[1],m=mo(v,y),[3,5];case 4:null==d?m=this.getValuesFromTexture(e):(b=on(a),m=this.gpgpu.downloadFloat32MatrixFromBuffer(d,b)),I.label=5;case 5:return null!=p&&this.disposeData(p.dataId),x=this.convertAndCacheOnCPU(e,m),w=this.pendingRead.get(e),this.pendingRead.delete(e),w.forEach((function(e){return e(x)})),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),[2,x]}}))}))},t.prototype.checkNumericalProblems=function(e){if(null!=e)for(var t=0;t<e.length;t++){var n=e[t];if(!Ar(n)){if(Vt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value "+n+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value "+n+" cannot be represented on this device.")}}},t.prototype.getValuesFromTexture=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,i=n.isPacked,s=on(r);if(Vt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var o=this.decode(e),u=this.texData.get(o.dataId),l=(t=this.gpgpu).downloadMatrixFromPackedTexture.apply(t,[u.texture].concat(Nr(r))).subarray(0,s);return this.disposeData(o.dataId),l}var c=Vt().getBool("WEBGL_PACK")&&!0===i,h=c?ia(r):r,d=c?new Ou(h):new _u(h),p=this.runWebGLProgram(d,[{shape:h,dtype:a,dataId:e}],"float32"),f=this.texData.get(p.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture,f.texShape[0],f.texShape[1]).subarray(0,s);return this.disposeData(p.dataId),m},t.prototype.time=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r,a,i,s,o;return zt(this,(function(u){switch(u.label){case 0:return t=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e(),a=sn(this.activeTimers.map((function(e){return e.query}))).filter((function(e){return null!=e})),i=sn(this.activeTimers.map((function(e){return e.name}))).filter((function(e){return null!=e})),this.activeTimers=t,r&&(this.programTimersStack=null),s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(a)]:[3,2];case 1:return o=u.sent(),s.kernelMs=tn(o),s.getExtraProfileInfo=function(){return o.map((function(e,t){return{name:i[t],ms:e}})).map((function(e){return e.name+": "+e.ms})).join(", ")},[3,3];case 2:s.kernelMs={error:"WebGL query timers are not supported in this environment."},u.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,s]}}))}))},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Mn(),endMs:null}},t.prototype.endTimer=function(e){return Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Mn(),e)},t.prototype.getQueryTime=function(e){return Bt(this,void 0,void 0,(function(){var t;return zt(this,(function(n){return Vt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]}))}))},t.prototype.disposeData=function(e){if(!this.pendingDisposal.has(e)){if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(this.texData.has(e)){this.releaseGPUData(e);var t=this.texData.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.texData.delete(e)}}},t.prototype.releaseGPUData=function(e){var t=this.texData.get(e),n=t.texture,r=t.dtype,a=t.texShape,i=t.usage,s=t.isPacked,o=t.slice,u=o&&o.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),null!=n&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(n,a,i,s)));var c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null},t.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},t.prototype.getDataInfo=function(e){return this.texData.get(e)},t.prototype.getCPUBackend=function(){return Vt().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=mr.findBackend("cpu")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(e,t){var n=this;return void 0===t&&(t=128),null!=this.getCPUBackend()&&e.every((function(e){return null==n.texData.get(e.dataId).texture&&on(e.shape)<t}))},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.complex=function(e,t){var n=this.makeOutput(e.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:mr.keep(e.clone()),imag:mr.keep(t.clone())},n},t.prototype.real=function(e){return this.texData.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.texData.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.slice(e,t,n);if(0===on(n))return Va([],n,e.dtype);var r=this.texData.get(e.dataId).isPacked,a=Gs(e.shape,t,n);if(r||!a){var i=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ml(n):new _l(n),s=i.getCustomSetupFunc(t);return this.compileAndRun(i,[e],null,s)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)},t.prototype.shallowSlice=function(e,t,n){var r=this.texData.get(e.dataId),a=this.makeOutput(n,e.dtype),i=this.texData.get(a.dataId);Object.assign(i,r),i.shape=n,i.dtype=e.dtype;var s=Hs(t,e.strides);r.slice&&(s+=r.slice.flatOffset),i.slice={flatOffset:s,origDataId:r.slice&&r.slice.origDataId||e.dataId};var o=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,o+1),a},t.prototype.stridedSlice=function(e,t,n,r){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.stridedSlice(e,t,n,r);var a=Ws(t,n,r);if(a.some((function(e){return 0===e})))return Va([],a);var i=new Ll(t,r,a);return this.compileAndRun(i,[e])},t.prototype.reverse=function(e,t){var n=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Al(e.shape,t):new Rl(e.shape,t);return this.compileAndRun(n,[e])},t.prototype.concat=function(e,t){if("complex64"===e[0].dtype){var n=e.map((function(e){return za(e)})),r=e.map((function(e){return Wa(e)}));return Ba(this.concat(n,t),this.concat(r,t))}if(this.shouldExecuteOnCPU(e))return this.cpuBackend.concat(e,t);if(1===e.length)return e[0];if(e.length>Vt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var a=Math.floor(e.length/2),i=this.concat(e.slice(0,a),t),s=this.concat(e.slice(a),t);return this.concat([i,s],t)}if(Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].rank>1){var o=new mu(e.map((function(e){return e.shape})),t);return this.compileAndRun(o,e)}var u=La(e.map((function(e){return e.shape})),t),l=e.map((function(e){return e.as2D(-1,on(e.shape.slice(t)))})),c=new fu(l.map((function(e){return e.shape})));return this.compileAndRun(c,l).reshape(u)},t.prototype.neg=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.neg(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Ql,e.dtype);var t=new Gl(e.shape,Ql);return this.compileAndRun(t,[e])},t.prototype.batchMatMul=function(e,t,n,r){var a=n?e.shape[2]:e.shape[1],i=r?t.shape[1]:t.shape[2],s=n?e.shape[1]:e.shape[2],o=e.shape[0];if((1===a||1===i)&&s>1e3){n&&(e=Xs(e,[0,2,1])),r&&(t=Xs(t,[0,2,1]));var u=1===i?e:e.as3D(o,s,1),l=1===i?2:1,c=1===i?t.as3D(o,1,s):t;return this.multiply(u,c).sum(l,!0)}var h=ur(e.dtype,t.dtype),d=new fl(e.shape,[o,a,i],n,r);return this.compileAndRun(d,[e,t],h)},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=r?t.shape[2]:t.shape[1],l=a?n.shape[1]:n.shape[2],c=t.shape[0],h=ur(t.dtype,n.dtype),d=null!=i,p=null!=o,f=s?vc(s,!0):null,m=new fl(t.shape,[c,u,l],r,a,d,f,p),g=[t,n];return i&&g.push(i),o&&g.push(o),this.compileAndRun(m,g,h)},t.prototype.multiply=function(e,t){if("complex64"===e.dtype){var n=this.texData.get(e.dataId),r=this.texData.get(t.dataId),a=new ru("return areal * breal - aimag * bimag;",e.shape,t.shape),i=new ru("return areal * bimag + aimag * breal;",e.shape,t.shape),s=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag),this.makeComplexComponentTensorInfo(t,r.complexTensors.real),this.makeComplexComponentTensorInfo(t,r.complexTensors.imag)],o=this.compileAndRun(a,s),u=this.compileAndRun(i,s),l=this.complex(o,u);return o.dispose(),u.dispose(),l}if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.multiply(e,t);if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,su,e.dtype);var c=new uu(su,e.shape,t.shape);return this.compileAndRun(c,[e,t],e.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,i){var s=[e,t,n],o=null;null!=i&&(o=i.shape,s.push(i));var u=null;if(null!=a&&(u=a.shape,s.push(a)),Vt().getBool("WEBGL_PACK_NORMALIZATION")){var l=new nu(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(l,s)}var c=new tu(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(c,s)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){var i=Vt().getBool("WEBGL_PACK_NORMALIZATION")?new hl(e.shape,t,n,r,a):new ll(e.shape,t,n,r,a);return this.compileAndRun(i,[e])},t.prototype.LRNGrad=function(e,t,n,r,a,i,s){var o=new cl(t.shape,r,a,i,s);return this.compileAndRun(o,[t,n,e])},t.prototype.tile=function(e,t){if("string"===e.dtype){var n=this.readSync(e.dataId).map((function(e){return Bn(e)}));return Eo(ui(e.shape,e.dtype,n),t)}var r=new Wl(e.shape,t);return this.compileAndRun(r,[e])},t.prototype.pad=function(e,t,n){var r=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bl(e.shape,t,n):new yl(e.shape,t,n);return this.compileAndRun(r,[e])},t.prototype.gather=function(e,t,n){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.gather(e,t,n);var r=new zu(e.shape,t.size,n);return this.compileAndRun(r,[e,t])},t.prototype.batchToSpaceND=function(e,t,n){nn(e.rank<=4,(function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=xi(e.shape,t,r),i=wi(a.length,t.length),s=ki(e.shape,t,r),o=Ii(n,t.length),u=Ci(s,n,t.length);return Xs(e.reshape(a),i).reshape(s).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){nn(e.rank<=4,(function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var i=1+t.length;i<e.shape.length;++i)a.push([0,0]);var s=e.pad(a),o=xi(s.shape,t,r,!1),u=wi(o.length,t.length,!1),l=ki(s.shape,t,r,!1);return Xs(s.reshape(o),u).reshape(l)},t.prototype.reduce=function(e,t,n){var r=e.shape[0],a=e.shape[1],i=Os(a),s=new kl({windowSize:i,inSize:a,batchSize:r},t),o=this.compileAndRun(s,[e],n);return 1===o.shape[1]?o:this.reduce(o,t,n)},t.prototype.argReduce=function(e,t,n){void 0===n&&(n=null);var r=e.shape[0],a=e.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);var i=Os(a),s=new Fo({windowSize:i,inSize:a,batchSize:r},t,null==n),o=[e];null!=n&&o.push(n);var u=this.compileAndRun(s,o,"int32");return 1===u.shape[1]?u:this.argReduce(e,t,u)},t.prototype.argReducePacked=function(e,t,n){void 0===n&&(n=null);var r=null!=n?n.shape:e.shape,a=Os(r[r.length-1]),i=new Jo(r,a,t,null==n),s=null==n?[e]:[e,n],o=this.compileAndRun(i,s,"int32");return o.rank===e.rank?this.argReducePacked(e,t,o):o},t.prototype.sum=function(e,t){$a("sum",t,e.rank);var n=Aa(e.shape,t),r=n[0],a=on(n[1]),i=e.as2D(-1,a),s=lr(e.dtype);return this.reduce(i,"sum",s).reshape(r)},t.prototype.prod=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.prod(e,t);var n=Aa(e.shape,t),r=n[0],a=on(n[1]),i=e.as2D(-1,a),s=lr(e.dtype);return this.reduce(i,"prod",s).reshape(r)},t.prototype.unsortedSegmentSum=function(e,t,n){var r=0,a=Fa([r],e.rank),i=e;null!=a&&(i=Xs(e,a),r=Oa(1,e.rank)[0]);var s=function(e,t,n){for(var r=[],a=e.length,i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}(i.shape,r,n),o=on([i.shape[r]]),u=i.as2D(-1,o),l=lr(e.dtype),c=this.segOpCompute(u,"unsortedSegmentSum",t,l,n).reshape(s);return null!=a&&(c=Xs(c,_a(a))),c},t.prototype.segOpCompute=function(e,t,n,r,a){var i=e.shape[0],s=e.shape[1],o=function(e,t){var n,r=!1;for(e<=30?(n=e,r=!0):n=An(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=An(e,n+1);return n}(s,a),u=new $l({windowSize:o,inSize:s,batchSize:i,numSegments:a}),l=this.compileAndRun(u,[e,n],r);return l.shape[1]===a?l:(n=Za(0,a).tile([s/o]),this.segOpCompute(l,t,n,r,a))},t.prototype.argMinMaxReduce=function(e,t,n){var r=[t];if($a("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!Vt().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){var a=Aa(e.shape,r),i=a[0],s=on(a[1]),o=e.as2D(-1,s);return this.argReduce(o,n).reshape(i)}return this.argReducePacked(e,n)},t.prototype.argMin=function(e,t){return this.argMinMaxReduce(e,t,"min")},t.prototype.argMax=function(e,t){return this.argMinMaxReduce(e,t,"max")},t.prototype.cumsum=function(e,t,n,r){if(t!==e.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(e.rank-1)+" but got axis="+t);var a=new Eu(e.shape,n,r);return this.compileAndRun(a,[e])},t.prototype.equal=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");var n=new uu("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.notEqual=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(notEqual(a, b));\n","bool");var n=new uu("return float(a != b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.less=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.less(e,t);if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");var n=new uu("return float(a < b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.lessEqual=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");var n=new uu("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greater=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.greater(e,t);if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");var n=new uu("return float(a > b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greaterEqual=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");var n=new uu("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalNot=function(e){var t=new Gl(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])},t.prototype.logicalAnd=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");var n=new uu("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalOr=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");var n=new uu("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.select=function(e,t,n){var r=new Fl(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],ur(t.dtype,n.dtype))},t.prototype.where=function(e){Ia("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return Ao(e.shape,t)},t.prototype.topk=function(e,t,n){return Ro(e.dataSync(),e.shape,e.dtype,t)},t.prototype.min=function(e,t){$a("min",t,e.rank);var n=Aa(e.shape,t),r=n[0],a=on(n[1]),i=e.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(r)},t.prototype.minimum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.minimum(e,t);var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new uu("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.mod=function(e,t){var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new uu("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.max=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.max(e,t);$a("max",t,e.rank);var n=Aa(e.shape,t),r=n[0],a=on(n[1]),i=e.as2D(-1,a);return this.reduce(i,"max",i.dtype).reshape(r)},t.prototype.maximum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.maximum(e,t);var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new uu("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.all=function(e,t){$a("all",t,e.rank);var n=Aa(e.shape,t),r=n[0],a=on(n[1]),i=e.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(r)},t.prototype.any=function(e,t){$a("any",t,e.rank);var n=Aa(e.shape,t),r=n[0],a=on(n[1]),i=e.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(r)},t.prototype.floorDiv=function(e,t){if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");var n=new uu("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(n,[e,t],"int32")},t.prototype.add=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,au);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.add(e,t);var n=ur(e.dtype,t.dtype);if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,au,n);var r=new uu(au,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.packedUnaryOp=function(e,t,n){var r=new fc(e.shape,t);return this.compileAndRun(r,[e],n)},t.prototype.packedBinaryOp=function(e,t,n,r,a){void 0===a&&(a=!1);var i=new cu(n,e.shape,t.shape,a);return this.compileAndRun(i,[e,t],r)},t.prototype.complexSeparableBinaryOp=function(e,t,n){var r=this,a=this.texData.get(e.dataId),i=this.texData.get(t.dataId),s=[[a.complexTensors.real,i.complexTensors.real],[a.complexTensors.imag,i.complexTensors.imag]].map((function(a){var i=a[0],s=a[1],o=r.makeComplexComponentTensorInfo(e,i),u=r.makeComplexComponentTensorInfo(t,s),l=new uu(n,e.shape,t.shape);return r.compileAndRun(l,[o,u],ur(i.dtype,s.dtype))})),o=s[0],u=s[1],l=this.complex(o,u);return o.dispose(),u.dispose(),l},t.prototype.makeComplexComponentTensorInfo=function(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}},t.prototype.addN=function(e){if(1===e.length)return e[0];if(e.length>Vt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}var a=e.map((function(e){return e.dtype})).reduce((function(e,t){return ur(e,t)})),i=e.map((function(e){return e.shape})),s=Vt().getBool("WEBGL_PACK")?new $o(e[0].shape,i):new Do(e[0].shape,i);return this.compileAndRun(s,e,a)},t.prototype.subtract=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,iu);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.subtract(e,t);var n=ur(e.dtype,t.dtype);if(Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,iu,e.dtype);var r=new uu(iu,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.pow=function(e,t){var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new uu("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=ur(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)},t.prototype.ceil=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.ceil(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Jl,e.dtype);var t=new Gl(e.shape,Jl);return this.compileAndRun(t,[e])},t.prototype.floor=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.floor(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Zl,e.dtype);var t=new Gl(e.shape,Zl);return this.compileAndRun(t,[e])},t.prototype.sign=function(e){var t=new Gl(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])},t.prototype.isNaN=function(e){var t=new Gl(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isInf=function(e){var t=new Gl(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isFinite=function(e){var t=new Gl(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.round=function(e){var t=new Gl(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])},t.prototype.exp=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.exp(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ec,e.dtype);var t=new Gl(e.shape,ec);return this.compileAndRun(t,[e])},t.prototype.expm1=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.expm1(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,tc,e.dtype);var t=new Gl(e.shape,tc);return this.compileAndRun(t,[e])},t.prototype.softmax=function(e,t){var n=mn([t],e.shape),r=this.max(e,n),a=Da(r.shape,n),i=this.subtract(e,r.reshape(a)),s=this.exp(i),o=this.sum(s,n).reshape(a);return Fs(s,o)},t.prototype.log=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.log(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);var t=new Gl(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])},t.prototype.log1p=function(e){var t=new Gl(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])},t.prototype.sqrt=function(e){var t=new Gl(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])},t.prototype.rsqrt=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.rsqrt(e);var t=new Gl(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])},t.prototype.reciprocal=function(e){var t=new Gl(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])},t.prototype.relu=function(e){var t;return t=Vt().getBool("WEBGL_PACK")?new fc(e.shape,hc):new Gl(e.shape,ql),this.compileAndRun(t,[e])},t.prototype.relu6=function(e){var t;return t=Vt().getBool("WEBGL_PACK")?new fc(e.shape,dc):new Gl(e.shape,Kl),this.compileAndRun(t,[e])},t.prototype.prelu=function(e,t){var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu(lu,e.shape,t.shape):new uu(ou,e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.elu=function(e){if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,pc,e.dtype);var t=new Gl(e.shape,Xl);return this.compileAndRun(t,[e])},t.prototype.eluDer=function(e,t){var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new uu("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.selu=function(e){var t=new Gl(e.shape,Yl);return this.compileAndRun(t,[e])},t.prototype.int=function(e){var t=new Gl(e.shape,"return float(int(x));");return this.compileAndRun(t,[e],"int32")},t.prototype.clip=function(e,t,n){var r,a=(r=Vt().getBool("WEBGL_PACK_CLIP")?new du(e.shape):new hu(e.shape)).getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,a)},t.prototype.abs=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.abs(e);if(Vt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jl,e.dtype);var t=new Gl(e.shape,jl);return this.compileAndRun(t,[e])},t.prototype.complexAbs=function(e){var t=this.texData.get(e.dataId),n=new pu(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensors.real),this.makeComplexComponentTensorInfo(e,t.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(e){var t=new Gl(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])},t.prototype.softplus=function(e){var t=new Gl(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])},t.prototype.sin=function(e){var t=new Gl(e.shape,nc);return this.compileAndRun(t,[e])},t.prototype.cos=function(e){var t=new Gl(e.shape,rc);return this.compileAndRun(t,[e])},t.prototype.tan=function(e){var t=new Gl(e.shape,"return tan(x);");return this.compileAndRun(t,[e])},t.prototype.asin=function(e){var t=new Gl(e.shape,ac);return this.compileAndRun(t,[e])},t.prototype.acos=function(e){var t=new Gl(e.shape,ic);return this.compileAndRun(t,[e])},t.prototype.atan=function(e){var t=new Gl(e.shape,sc);return this.compileAndRun(t,[e])},t.prototype.atan2=function(e,t){var n=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new uu("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.sinh=function(e){var t=new Gl(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.cosh=function(e){var t=new Gl(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.tanh=function(e){var t=new Gl(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])},t.prototype.asinh=function(e){var t=new Gl(e.shape,oc);return this.compileAndRun(t,[e])},t.prototype.acosh=function(e){var t=new Gl(e.shape,uc);return this.compileAndRun(t,[e])},t.prototype.atanh=function(e){var t=new Gl(e.shape,lc);return this.compileAndRun(t,[e])},t.prototype.erf=function(e){var t=new Gl(e.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(t,[e])},t.prototype.step=function(e,t){var n=new Gl(e.shape,function(e){return void 0===e&&(e=0),Hl+"\n    return x > 0.0 ? 1.0 : float("+e+");\n  "}(t));return this.compileAndRun(n,[e])},t.prototype.conv2dByMatMul=function(e,t,n,r,a,i){var s=e.shape,o=this.texData.get(e.dataId),u=n.inChannels,l=s[0]*s[1]*s[2],c=n.outChannels,h="channelsLast"===n.dataFormat,d=(1===l||1===c)&&u>1e3,p=s[2]%2!=0&&!!o.isPacked;if(d||!Vt().getBool("WEBGL_LAZILY_UNPACK")||!Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!p){var f=h?s[0]*s[1]*s[2]:s[0]*s[2]*s[3],m=this.reshape(e,[1,f,n.inChannels]),g=this.reshape(t,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:m,b:g,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),n.outShape)}var v=h?s[0]*s[1]*(s[2]+1):s[0]*s[2]*(s[3]+1),y={dataId:e.dataId,shape:[1,v,n.inChannels],dtype:e.dtype},b=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,nn(ua(o.shape,y.shape),(function(){return"packed reshape "+o.shape+" to "+y.shape+" isn't free"}));var x=this.reshape(t,[1,n.inChannels,n.outChannels]),w=this.fusedBatchMatMul({a:y,b:x,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:i}),k=this.texData.get(w.dataId);return nn(k.isPacked,(function(){return"batchMatMul result is expected to be packed"})),o.shape=b,k.shape=n.outShape,mr.makeTensorFromDataId(w.dataId,n.outShape,w.dtype)},t.prototype.conv2dWithIm2Row=function(e,t,n,r,a,i){var s=n.filterWidth,o=n.filterHeight,u=n.inChannels,l=n.outWidth,c=n.outHeight,h="channelsLast"===n.dataFormat,d=s*o*u,p=c*l,f=[d,p],m=e.squeeze([0]),g=t.reshape([1,d,-1]),v=new ul(f,m.shape,n),y=this.compileAndRun(v,[m]).reshape([1,f[0],f[1]]),b=null!=r,x=null!=i,w=a?vc(a,!0):null,k=new fl(y.shape,[1,p,n.outChannels],!0,!1,b,w,x),I=[y,g];r&&I.push(r),x&&I.push(i);var C=this.compileAndRun(k,I);return h?C.reshape([1,c,l,n.outChannels]):C.reshape([1,n.outChannels,c,l])},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights;if(1===r.filterHeight&&1===r.filterWidth&&1===r.dilationHeight&&1===r.dilationWidth&&1===r.strideHeight&&1===r.strideWidth&&("SAME"===r.padInfo.type||"VALID"===r.padInfo.type))return this.conv2dByMatMul(t,n,r,a,i,s);if(Vt().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,n,r,a,i,s);var o=null!=a,u=null!=s,l=i?vc(i,!1):null,c=new Iu(r,o,l,u),h=[t,n];return a&&h.push(a),s&&h.push(s),this.compileAndRun(c,h)},t.prototype.conv2d=function(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(Vt().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);var r=new Iu(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerInput=function(e,t,n){var r=new yu(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerFilter=function(e,t,n){var r=new vu(n);return this.compileAndRun(r,[e,t])},t.prototype.fusedDepthwiseConv2D=function(e){var t,n=e.input,r=e.filter,a=e.convInfo,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=Vt().getBool("WEBGL_PACK_DEPTHWISECONV")&&a.strideWidth<=2&&a.outChannels/a.inChannels==1,l=s?vc(s,u):null,c=[n,r],h=null!=i,d=null!=o;return h&&c.push(i),d&&c.push(o),u?(t=new Nu(a,h,l,d),this.compileAndRun(t,c)):(t=new Su(a,h,l,d),this.compileAndRun(t,c))},t.prototype.depthwiseConv2D=function(e,t,n){var r;return Vt().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Nu(n),this.compileAndRun(r,[e,t])):(r=new Su(n),this.compileAndRun(r,[e,t]))},t.prototype.depthwiseConv2DDerInput=function(e,t,n){var r=new ku(n);return this.compileAndRun(r,[e,t])},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){var r=new wu(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3d=function(e,t,n){var r=new Cu(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerInput=function(e,t,n){var r=new xu(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerFilter=function(e,t,n){var r=new bu(n);return this.compileAndRun(r,[e,t])},t.prototype.maxPool=function(e,t){var n=new xl(t,"max",!1);return this.compileAndRun(n,[e])},t.prototype.avgPool=function(e,t){var n=new xl(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPoolBackprop=function(e,t,n,r){var a=new xl(r,"max",!0),i=this.compileAndRun(a,[t]),s=new dl(r),o=this.compileAndRun(s,[e,i],t.dtype);return i.dispose(),o},t.prototype.avgPoolBackprop=function(e,t,n){var r=new Zo(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.cast=function(e,t){return ho(e,t,this)},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,i=0;i<e.rank;i++)i!==t&&(r[a++]=e.shape[i]);var s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(i=0;i<u.length;i++)s[t]=i,u[i]=this.slice(e,s,o).reshape(r);return u},t.prototype.avgPool3d=function(e,t){var n=new wl(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.avgPool3dBackprop=function(e,t,n){var r=new eu(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.maxPool3d=function(e,t){var n=new wl(t,"max",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPool3dBackprop=function(e,t,n,r){var a=new wl(r,"max",!0),i=this.compileAndRun(a,[t]),s=new pl(r),o=this.compileAndRun(s,[e,i],t.dtype);return i.dispose(),o},t.prototype.reshape=function(e,t){var n=this.texData.get(e.dataId);if(n.isPacked&&!ua(e.shape,t)&&(null===n.texture||!ua(n.shape,t))){var r=this.packedReshape(e,t);return mr.makeTensorFromDataId(r.dataId,r.shape,r.dtype)}return po(e,t)},t.prototype.resizeBilinear=function(e,t,n,r){var a=Vt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Nl(e.shape,t,n,r):new Sl(e.shape,t,n,r);return this.compileAndRun(a,[e],"float32")},t.prototype.resizeBilinearBackprop=function(e,t,n){var r=new Cl(e,t,n);return this.compileAndRun(r,[e])},t.prototype.resizeNearestNeighbor=function(e,t,n,r){var a=new El(e.shape,t,n,r);return this.compileAndRun(a,[e])},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){var r=new Tl(e,t,n);return this.compileAndRun(r,[e])},t.prototype.multinomial=function(e,t,n,r){var a=t?e:qs(e),i=a.shape[0],s=a.shape[1],o=new ml(i,s,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)},t.prototype.oneHot=function(e,t,n,r){var a=new gl(e.size,t,n,r);return this.compileAndRun(a,[e])},t.prototype.diag=function(e){var t=new Fu(e.size);return this.compileAndRun(t,[e])},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return Ia("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),wo(e.dataSync(),t.dataSync(),n,r,a)},t.prototype.cropAndResize=function(e,t,n,r,a,i){var s=new Tu(e.shape,t.shape,r,a,i);return this.compileAndRun(s,[e,t,n],"float32")},t.prototype.depthToSpace=function(e,t,n){nn(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));var r=e.shape[0],a="NHWC"===n?e.shape[1]:e.shape[2],i="NHWC"===n?e.shape[2]:e.shape[3],s="NHWC"===n?e.shape[3]:e.shape[1],o=a*t,u=i*t,l=s/(t*t),c=new $u("NHWC"===n?[r,o,u,l]:[r,l,o,u],t,n);return this.compileAndRun(c,[e])},t.prototype.split=function(e,t,n){return To(e,t,n)},t.prototype.scatterND=function(e,t,n){var r=Ps(0,e,n),a=r.sliceRank,i=r.numUpdates,s=r.sliceSize,o=r.strides,u=r.outputSize,l=[u/s,s],c=e.reshape([i,a]),h=t.reshape([i,s]);if(0===u)return po(Va([]),n);var d=Ga(0),p=new Dl(i,a,c.rank,h.rank,o,l);return this.compileAndRun(p,[h,c,d]).reshape(n)},t.prototype.sparseToDense=function(e,t,n,r){var a=Ps(0,e,n),i=a.sliceRank,s=a.numUpdates,o=a.strides,u=a.outputSize,l=new Dl(s,i,e.rank,t.rank,o,[u,1]);return this.compileAndRun(l,[t,e,r]).reshape(n)},t.prototype.fft=function(e){return this.fftImpl(e,!1)},t.prototype.ifft=function(e){return this.fftImpl(e,!0)},t.prototype.fftImpl=function(e,t){var n=this.texData.get(e.dataId),r=new Pu("return real * expR - imag * expI;",e.shape,t),a=new Pu("return real * expI + imag * expR;",e.shape,t),i=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag)],s=this.compileAndRun(r,i),o=this.compileAndRun(a,i),u=this.complex(s,o).as2D(e.shape[0],e.shape[1]);return s.dispose(),o.dispose(),u},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=_s(e,t),i=a[0],s=a[1],o=a[2],u=a[3],l=t.reshape([s,r]),c=e.reshape([e.size/o,o]),h=new Wu(r,u,[s,o]);return this.compileAndRun(h,[c,l]).reshape(i)},t.prototype.fill=function(e,t,n){if("string"===(n=n||En(t))){var r=yn(n,on(e));return r.fill(t),mr.makeTensor(r,e,n,this)}var a=new Bu(e,t),i=a.getCustomSetupFunc(t);return this.compileAndRun(a,[],n,i)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)},t.prototype.linspace=function(e,t,n){return fo(e,t,n)},t.prototype.makeTensorInfo=function(e,t){var n=this.write(null,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}},t.prototype.makeOutput=function(e,t){var n=this.makeTensorInfo(e,t).dataId;return mr.makeTensorFromDataId(n,e,t,this)},t.prototype.unpackTensor=function(e){var t=new mc(e.shape);return this.runWebGLProgram(t,[e],e.dtype)},t.prototype.packTensor=function(e){var t=new vl(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)},t.prototype.packedReshape=function(e,t){var n=[ra(e.shape)].concat(aa(e.shape)),r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[ra(t)].concat(aa(t)),i=new Il(a,n),s=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}},t.prototype.decode=function(e){var t,n=this.texData.get(e),r=n.isPacked,a=n.shape,i=n.dtype,s=ia(a);return t=r?new Du(s):new Au(s),{dtype:i,shape:a,dataId:this.runWebGLProgram(t,[{shape:s,dtype:i,dataId:e}],i,null,!0).dataId}},t.prototype.runWebGLProgram=function(e,t,n,r,a){var i=this;void 0===a&&(a=!1);var s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===yr.DENSE){var u=Nr(e.outputShape);o.texShape=u.map((function(e){return 2*e}))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===on(s.shape))return o.values=vn(s.dtype,0),s;var l=[],c=t.map((function(t){if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var n=i.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&on(t.shape)<=Vt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?i.unpackTensor(t):i.packTensor(t),l.push(t),n=i.texData.get(t.dataId);else if(n.isPacked&&!ua(n.shape,t.shape)){var r=t,a=t.shape;t.shape=n.shape,t=i.packedReshape(t,a),l.push(t),n=i.texData.get(t.dataId),r.shape=a}return i.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);var h,d={shape:s.shape,texData:o,isUniform:!1},p=function(e,t,n){var r="";t.concat(n).forEach((function(e){var t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=e.shape+"_"+n+"_"+t}));var a=e.userCode;return e.constructor.name+"_"+r+"_"+a}(e,c,d),f=this.getAndSaveBinary(p,(function(){return function(e,t,n,r){var a=t.userCode,i=n.map((function(e,n){var r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=i.map((function(e){return e.shapeInfo})),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=zo(i,o,a,t.packedInputs),l=e.createProgram(u),c=null,h=e.getUniformLocation(l,"NAN",!1);1===Vt().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));for(var d={},p=0;p<t.variableNames.length;p++){var f=t.variableNames[p];d[f]=e.getUniformLocation(l,f,!1),d["offset"+f]=e.getUniformLocation(l,"offset"+f,!1)}return{program:t,source:u,webGLProgram:l,uniformLocations:d,inShapeInfos:s,outShapeInfo:o,infLoc:c,nanLoc:h}}(i.gpgpu,e,c,d)})),m=null!=this.activeTimers;if(m&&(h=this.startTimer()),function(e,t,n,r,a){ol(t.inShapeInfos,n),ol([t.outShapeInfo],[r]);var i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i,s[0],s[1]):e.setOutputMatrixTexture(i,s[0],s[1]),e.setProgram(t.webGLProgram),1===Vt().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((function(n,r){var a=t.program.variableNames[r],i=t.uniformLocations[a],s=t.uniformLocations["offset"+a];if(null!=i)if(n.isUniform)if(on(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{var o=n.uniformValues;o instanceof Float32Array||(o=new Float32Array(o)),e.gl.uniform1fv(i,o)}else null!=n.texData.slice&&null!=s&&e.gl.uniform1i(s,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,f,c,d,r),l.forEach((function(e){return i.disposeData(e.dataId)})),m&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)})),!Vt().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){var g=this.unpackTensor(s);return this.disposeData(s.dataId),g}return s},t.prototype.compileAndRun=function(e,t,n,r,a){void 0===a&&(a=!1),n=n||t[0].dtype;var i=this.runWebGLProgram(e,t,n,r,a);return mr.makeTensorFromDataId(i.dataId,i.shape,i.dtype)},t.prototype.getAndSaveBinary=function(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){var e=this;this.disposed||(Vt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((function(t){e.gpgpu.deleteProgram(e.binaryCache[t].webGLProgram),delete e.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},t.prototype.floatPrecision=function(){var e=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=wa((function(){if(!Vt().get("WEBGL_RENDER_FLOAT32_ENABLED")){var t=Vt().getBool("DEBUG");Vt().set("DEBUG",!1);var n=e.abs(Ga(1e-8)).dataSync()[0];if(Vt().set("DEBUG",t),n>0)return 32}return 16}))),this.floatPrecisionValue},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.uploadToGPU=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,i=n.values,s=n.texture,o=n.usage,u=n.isPacked;if(null==s){var l,c=null!=this.activeTimers;c&&(l=Mn());var h=n.texShape;if(null==h&&(h=sa(r,u),n.texShape=h),null!=i){var d=ia(r),p=void 0,f=h[1],m=h[0],g=i instanceof Uint8Array;u?(f=(t=Tr(h[0],h[1]))[0],m=t[1],p=new Lu(d,[m,f],g)):p=new Mu(d,[m,f],g);var v=this.makeTensorInfo([m,f],a);this.texData.get(v.dataId).usage=g?br.PIXELS:br.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),f,m,i);var y=this.runWebGLProgram(p,[v],a,null,!0),b=this.texData.get(y.dataId);n.texture=b.texture,n.texShape=b.texShape,n.isPacked=b.isPacked,n.usage=b.usage,this.disposeData(v.dataId),this.texData.delete(y.dataId),n.values=null,c&&(this.uploadWaitMs+=Mn()-l)}else{var x=this.acquireTexture(h,o,a,u);n.texture=x}}},t.prototype.convertAndCacheOnCPU=function(e,t){var n=this.texData.get(e),r=n.dtype;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){for(var n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length),r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values},t.prototype.acquireTexture=function(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,r)},t.prototype.computeBytes=function(e,t){return e[0]*e[1]*In(t)},t}(Qs);function bc(e,t){return e(t={exports:{}},t.exports),t.exports}gr()&&mr.registerBackend("webgl",(function(){return new yc}),2);var xc=bc((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.alea=i}(0,e)})),wc=bc((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xor128=i}(0,e)})),kc=bc((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xorwow=i}(0,e)})),Ic=bc((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xorshift7=i}(0,e)})),Cc=bc((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.xor4096=i}(0,e)})),Sc=bc((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:this.tychei=i}(0,e)})),Nc=bc((function(e){!function(t,n){var r,a=this,i=256,s="random",o=n.pow(i,6),u=n.pow(2,52),l=2*u,c=i-1;function h(e,c,h){var g=[],v=f(function e(t,n){var r,a=[],i=typeof t;if(n&&"object"==i)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==i?t:t+"\0"}((c=1==c?{entropy:!0}:c||{}).entropy?[e,m(t)]:null==e?function(){try{var e;return r&&(e=r.randomBytes)?e=e(i):(e=new Uint8Array(i),(a.crypto||a.msCrypto).getRandomValues(e)),m(e)}catch(e){var n=a.navigator,s=n&&n.plugins;return[+new Date,a,s,a.screen,m(t)]}}():e,3),g),y=new d(g),b=function(){for(var e=y.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=y.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/4294967296},b.double=b,f(m(y.S),t),(c.pass||h||function(e,t,r,a){return a&&(a.S&&p(a,y),e.state=function(){return p(y,{})}),r?(n[s]=e,t):e})(b,v,"global"in c?c.global:this==n,c.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(n["seed"+s]=h,f(n.random(),t),e.exports){e.exports=h;try{r=require("crypto")}catch(e){}}}([],Math)}));Nc.alea=xc,Nc.xor128=wc,Nc.xorwow=kc,Nc.xorshift7=Ic,Nc.xor4096=Cc,Nc.tychei=Sc;var Tc=Nc.alea,Ec=Pa({addN_:function(e){nn(Array.isArray(e),(function(){return"The argument passed to tf.addN() must be a list of tensors"})),nn(e.length>=1,(function(){return"Must pass at least one tensor to tf.addN(), but got "+e.length}));var t=e.map((function(e,t){return Na(e,"tensors"+t,"addN")})),n=t[0];t.forEach((function(e){if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((function(e){if(!un(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));var r=t;return mr.runKernelFunc((function(e,n){return e.addN(t)}),r,null,"AddN")}});function Rc(){xa("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}function Ac(e){return 0===e.rank||1===e.rank?e.as4D(1,1,1,e.size):2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}function Dc(e,t,n,r,a,i){null==i&&(i=.001);var s,o,u=Na(e,"x","batchNorm"),l=Na(t,"mean","batchNorm"),c=Na(n,"variance","batchNorm");null!=a&&(s=Na(a,"scale","batchNorm")),null!=r&&(o=Na(r,"offset","batchNorm")),nn(l.rank===c.rank,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),nn(null==o||l.rank===o.rank,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),nn(null==s||l.rank===s.rank,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var h={x:u,scale:s,offset:o,mean:l,variance:c},d={varianceEpsilon:i};return mr.runKernelFunc((function(e,t){var n=Ac(u),r=e.batchNormalization(n,$c(l),$c(c),i,$c(s),$c(o));return t([u,l,c,s]),r}),h,null,"FusedBatchNorm",d).reshape(u.shape)}function $c(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}var Fc=Pa({batchNormalization_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Rc(),Dc(e,t,n,i,a,r)}}),_c=Pa({batchNorm_:Dc});function Oc(e,t,n,r,a,i){var s,o,u=Na(e,"x","batchNorm"),l=Na(t,"mean","batchNorm"),c=Na(n,"variance","batchNorm");return null!=a&&(s=Na(a,"scale","batchNorm")),null!=r&&(o=Na(r,"offset","batchNorm")),nn(2===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),nn(2===l.rank||1===l.rank,(function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+l.rank+"."})),nn(2===c.rank||1===c.rank,(function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+c.rank+"."})),null!=s&&nn(2===s.rank||1===s.rank,(function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+s.rank+"."})),null!=o&&nn(2===o.rank||1===o.rank,(function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+o.rank+"."})),_c(u,l,c,o,s,i)}var Mc=Pa({batchNormalization2d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Rc(),Oc(e,t,n,i,a,r)}}),Lc=Pa({batchNorm2d_:Oc});function Pc(e,t,n,r,a,i){var s,o,u=Na(e,"x","batchNorm"),l=Na(t,"mean","batchNorm"),c=Na(n,"variance","batchNorm");return null!=a&&(s=Na(a,"scale","batchNorm")),null!=r&&(o=Na(r,"offset","batchNorm")),nn(3===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),nn(3===l.rank||1===l.rank,(function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+l.rank+"."})),nn(3===c.rank||1===c.rank,(function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+c.rank+"."})),null!=s&&nn(3===s.rank||1===s.rank,(function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+s.rank+"."})),null!=o&&nn(3===o.rank||1===o.rank,(function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+o.rank+"."})),_c(u,l,c,o,s,i)}var Bc=Pa({batchNormalization3d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Rc(),Pc(e,t,n,i,a,r)}}),zc=Pa({batchNorm3d_:Pc});function Wc(e,t,n,r,a,i){var s,o,u=Na(e,"x","batchNorm"),l=Na(t,"mean","batchNorm"),c=Na(n,"variance","batchNorm");return null!=a&&(s=Na(a,"scale","batchNorm")),null!=r&&(o=Na(r,"offset","batchNorm")),nn(4===u.rank,(function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."})),nn(4===l.rank||1===l.rank,(function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+l.rank+"."})),nn(4===c.rank||1===c.rank,(function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+c.rank+"."})),null!=s&&nn(4===s.rank||1===s.rank,(function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+s.rank+"."})),null!=o&&nn(4===o.rank||1===o.rank,(function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+o.rank+"."})),_c(u,l,c,o,s,i)}var Vc=Pa({batchNormalization4d_:function(e,t,n,r,a,i){return void 0===r&&(r=.001),Rc(),Wc(e,t,n,i,a,r)}}),Uc=Pa({batchNorm4d_:Wc}),Gc=Pa({broadcastTo_:function(e,t){var n=Na(e,"broadcastTo","x"),r=n.shape;if(t.some((function(e){return!(e>0)||e%1!=0})))throw new Error("broadcastTo(): Invalid broadcast shape ["+t+"].");if(t.length<n.rank)throw new Error("broadcastTo(): shape.length="+t.length+" < input.rank="+n.rank+".");if(t.length>n.rank){for(var a=n.shape.slice();a.length<t.length;)a.unshift(1);n=n.reshape(a)}for(var i=n.shape,s=Array.from(t),o=t.length-1;o>=0;o--)if(i[o]===t[o])s[o]=1;else if(1!==n.shape[o])throw new Error("broadcastTo(): ["+r+"] cannot be broadcast to ["+t+"].");var u=s.map((function(e,t){return e>1?t:-1})).filter((function(e){return e>=0}));if(0===u.length)return n.clone();var l={x:n},c={shape:t,inputShape:i};return mr.runKernelFunc((function(e){return e.tile(n,s)}),l,(function(e){return{x:function(){return e.sum(u,!0)}}}),Ti,c)}}),Hc=Pa({clone_:function(e){var t=Na(e,"x","clone",null);return mr.runKernelFunc((function(){return mr.makeTensorFromDataId(t.dataId,t.shape,t.dtype)}),{x:t},null,Ri)}}),jc=Pa({logicalAnd_:function(e,t){var n=Na(e,"a","logicalAnd","bool"),r=Na(t,"b","logicalAnd","bool");return Oi(n.shape,r.shape),mr.runKernelFunc((function(e){return e.logicalAnd(n,r)}),{a:n,b:r},null,"LogicalAnd")}}),qc=Pa({logicalNot_:function(e){var t=Na(e,"x","logicalNot","bool");return mr.runKernelFunc((function(e){return e.logicalNot(t)}),{$x:t})}}),Kc=Pa({logicalOr_:function(e,t){var n=Na(e,"a","logicalOr","bool"),r=Na(t,"b","logicalOr","bool");return Oi(n.shape,r.shape),mr.runKernelFunc((function(e){return e.logicalOr(n,r)}),{$a:n,$b:r})}}),Xc=Pa({logicalXor_:function(e,t){var n=Na(e,"a","logicalXor","bool"),r=Na(t,"b","logicalXor","bool");return Oi(n.shape,r.shape),Kc(e,t).logicalAnd(jc(e,t).logicalNot())}}),Yc=Pa({where_:function(e,t,n){var r=Na(t,"a","where"),a=Na(n,"b","where"),i=Na(e,"condition","where","bool");return rn(r.shape,a.shape,"Error in where: "),1===i.rank?nn(i.shape[0]===r.shape[0],(function(){return"The first dimension of `a` must match the size of `condition`."})):rn(i.shape,a.shape,"Error in where: "),mr.runKernelFunc((function(e,t){var n=e.select(i,r,a);return t([i]),n}),{$condition:i,$a:r,$b:a},(function(e,t){var n=t[0];return{$condition:function(){return ti(n).toFloat()},$a:function(){return e.mul(n.cast(e.dtype))},$b:function(){return e.mul(n.logicalNot().cast(e.dtype))}}}))}}),Qc=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r;return zt(this,(function(a){switch(a.label){case 0:return[4,(t=Na(e,"condition","whereAsync","bool")).data()];case 1:return n=a.sent(),r=Ao(t.shape,n),e!==t&&t.dispose(),[2,r]}}))}))},Jc=Pa({divNoNan_:function(e,t){var n,r=Na(e,"a","div"),a=Na(t,"b","div");r=(n=cr(r,a))[0],a=n[1];var i=Fs(r,a),s=ti(i),o=a.equal(s);return Yc(o,s,i)}}),Zc=Pa({tile_:function(e,t){var n=Na(e,"x","tile",null);nn(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of reps "+t+"."}));var r=[n],a={x:n},i={reps:t};return mr.runKernelFunc((function(e,r){var a=e.tile(n,t);return r([n]),a}),a,null,Ai,i,r)}}),eh=Pa({eye_:function(e,t,n,r){void 0===r&&(r="float32"),null==t&&(t=e);for(var a=ui([e,t],r),i=e<=t?e:t,s=0;s<i;++s)a.set(1,s,s);var o=a.toTensor().as2D(e,t);if(null==n)return o;if(1===n.length)return Zc(pi(o,0),[n[0],1,1]);if(2===n.length)return Zc(pi(pi(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Zc(pi(pi(pi(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+n.length+"D.")}}),th=Pa({multinomial_:function(e,t,n,r){void 0===r&&(r=!1);var a=Na(e,"logits","multinomial"),i=a.size,s=a.rank;if(i<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+i+".");if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+s);n=n||Math.random();var o=1===s?a.as2D(1,-1):a,u=mr.runKernelFunc((function(e){return e.multinomial(o,r,t,n)}),{logits2D:o});return 1===s?u.as1D():u}}),nh=Pa({oneHot_:function(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);var a=Na(e,"indices","oneHot","int32"),i=a.shape.concat([t]),s={indices:a=a.flatten()},o={depth:t,onValue:n,offValue:r};return mr.runKernelFunc((function(e,i){return i([a]),e.oneHot(a,t,n,r)}),s,null,Ei,o).reshape(i)}}),rh=Pa({pad_:function(e,t,n){void 0===n&&(n=0);var r=Na(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var a={paddings:t,constantValue:n},i={x:r};return mr.runKernelFunc((function(e,a){return a([r]),e.pad(r,t,n)}),i,null,Di,a)}}),ah=Pa({pad1d_:function(e,t,n){return void 0===n&&(n=0),nn(2===t.length,(function(){return"Invalid number of paddings. Must be length of 2."})),rh(e,[t],n)}}),ih=Pa({pad2d_:function(e,t,n){return void 0===n&&(n=0),nn(2===t.length&&2===t[0].length&&2===t[1].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),rh(e,t,n)}}),sh=Pa({pad3d_:function(e,t,n){return void 0===n&&(n=0),nn(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),rh(e,t,n)}}),oh=Pa({pad4d_:function(e,t,n){return void 0===n&&(n=0),nn(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),rh(e,t,n)}}),uh=Pa({rand_:function(e,t,n){var r=on(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(var i=0;i<r;i++)a[i]=t();return mr.makeTensor(a,e,n)}});function lh(){return 32===mr.backend.floatPrecision()?.001:.1}function ch(e,t,n){var r=!0;if((kn(e)||kn(t))&&(r=!1),kn(e)&&kn(t)&&(r=!0),r){var a=e.constructor.name,i=t.constructor.name;if(a!==i)throw new Error("Arrays are of different type. Actual: "+a+". Expected: "+i)}if(Array.isArray(e)&&Array.isArray(t)){var s=Ca(e),o=Ca(t);if(!un(s,o))throw new Error("Arrays have different shapes. Actual: ["+s+"]. Expected: ["+o+"]")}var u=kn(e)?e:sn(e),l=kn(t)?t:sn(t);if(u.length!==l.length)throw new Error("Arrays have different lengths actual: "+u.length+" vs expected: "+l.length+".\nActual:   "+u+".\nExpected: "+l+".");for(var c=0;c<l.length;++c){var h=u[c],d=l[c];if(!n(h,d))throw new Error("Arrays differ: actual["+c+"] = "+h+", expected["+c+"] = "+d+".\nActual:   "+u+".\nExpected: "+l+".")}}function hh(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}Object.freeze({TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=lh()),ch(e,t,(function(e,t){return hh(e,t,n)}))},testEpsilon:lh,expectPromiseToFail:function(e,t){e().then((function(){return t.fail()}),(function(){return t()}))},expectArraysEqual:function(e,t){var n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Sn(e)||Sn(e[0])||Sn(t)||Sn(t[0])?ch(e,n,(function(e,t){return e==t})):ch(e,t,(function(e,t){return hh(e,t,0)}))},expectNumbersClose:function(e,t,n){if(null==n&&(n=lh()),!hh(e,t,n))throw new Error("Numbers differ: actual === "+e+", expected === "+t)},expectValuesInRange:function(e,t,n){for(var r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error("Value out of range:"+e[r]+" low: "+t+", high: "+n)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}});var dh=function(){function e(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var i=a||Math.random();this.random=Tc(i.toString())}return e.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,n,r=!1;!r;){var a=void 0,i=void 0,s=void 0;do{s=(a=2*this.random()-1)*a+(i=2*this.random()-1)*i}while(s>=1||0===s);var o=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*a*o,n=this.mean+this.stdDev*i*o,this.truncated&&!this.isValidTruncated(t)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(t)},e.prototype.convertValue=function(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)},e.prototype.isValidTruncated=function(e){return e<=this.upper&&e>=this.lower},e}(),ph=function(){function e(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;var a=r||Math.random();this.randu=Tc(a.toString()),this.randn=new dh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return e.prototype.nextValue=function(){for(var e,t,n,r,a,i;;){do{r=this.randn.nextValue(),i=1+this.c*r}while(i<=0);if(i*=i*i,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-i+Math.log(i)),(a=this.randu())<t||Math.log(a)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)},e.prototype.convertValue=function(e){return"float32"===this.dtype?e:Math.round(e)},e}(),fh=function(){function e(e,t,n,r){var a=this;if(void 0===e&&(e=0),void 0===t&&(t=1),this.canReturnFloat=function(){return null==a.dtype||"float32"===a.dtype},this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+e+" - "+t+" <= 1 and dtype is not float");this.random=Tc(r)}return e.prototype.convertValue=function(e){return this.canReturnFloat()?e:Math.round(e)},e.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},e}(),mh=Pa({randomGamma_:function(e,t,n,r,a){if(void 0===n&&(n=1),void 0===r&&(r="float32"),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);for(var i=new ph(t,n,r,a),s=ui(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),gh=Pa({randomNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);for(var i=new dh(t,n,r,!1,a),s=ui(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),vh=Pa({randomUniform_:function(e,t,n,r,a){void 0===t&&(t=0),void 0===n&&(n=1),void 0===r&&(r="float32");for(var i=ui(e,r),s=new fh(t,n,null,a),o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),yh=Pa({square_:function(e){var t=Na(e,"x","square"),n=[t];return mr.runKernelFunc((function(e,n){return n([t]),e.square(t)}),{x:t},null,"Square",{},n,[])}}),bh=Pa({squaredDifference_:function(e,t){var n,r=Na(e,"a","squaredDifference"),a=Na(t,"b","squaredDifference");n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape);var i={a:r,b:a},s=[r,a];return mr.runKernelFunc((function(e,t){var n=e.squaredDifference(r,a);return t([r,a]),n}),i,(function(e,t){var n=t[0],r=t[1],a=Ga(2);return{a:function(){return e.mul(n.sub(r).mul(a))},b:function(){return e.mul(r.sub(n).mul(a))}}}),Ni,{},s,[])}}),xh=Pa({truncatedNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");for(var i=new dh(t,n,r,!0,a),s=ui(e,r),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),wh=Pa({equal_:function(e,t){var n,r=Na(e,"a","equal"),a=Na(t,"b","equal");return n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape),mr.runKernelFunc((function(e){return e.equal(r,a)}),{$a:r,$b:a})}}),kh=Pa({equalStrict_:function(e,t){var n=Na(e,"a","equalStrict"),r=Na(t,"b","equalStrict");return rn(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),Ih=Pa({greater_:function(e,t){var n,r=Na(e,"a","greater"),a=Na(t,"b","greater");return n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape),mr.runKernelFunc((function(e){return e.greater(r,a)}),{a:r,b:a},null,"Greater")}}),Ch=Pa({greaterEqual_:function(e,t){var n,r=Na(e,"a","greaterEqual"),a=Na(t,"b","greaterEqual");return n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape),mr.runKernelFunc((function(e,t){var n=e.greaterEqual(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return ti(n)},b:function(){return ti(r)}}}),"GreaterEqual")}}),Sh=Pa({greaterEqualStrict_:function(e,t){var n=Na(e,"a","greaterEqualStrict"),r=Na(t,"b","greaterEqualStrict");return rn(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),Nh=Pa({greaterStrict_:function(e,t){var n=Na(e,"a","greaterStrict"),r=Na(t,"b","greaterStrict");return rn(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),Th=Pa({less_:function(e,t){var n,r=Na(e,"a","less"),a=Na(t,"b","less");return n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape),mr.runKernelFunc((function(e){return e.less(r,a)}),{a:r,b:a},null,"Less")}}),Eh=Pa({lessEqual_:function(e,t){var n,r=Na(e,"a","lessEqual"),a=Na(t,"b","lessEqual");return n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape),mr.runKernelFunc((function(e,t){var n=e.lessEqual(r,a);return t([r,a]),n}),{a:r,b:a},null,"LessEqual")}}),Rh=Pa({lessEqualStrict_:function(e,t){var n=Na(e,"a","lessEqualStrict"),r=Na(t,"b","lessEqualStrict");return rn(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Ah=Pa({lessStrict_:function(e,t){var n=Na(e,"a","lessStrict"),r=Na(t,"b","lessStrict");return rn(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Dh=Pa({notEqual_:function(e,t){var n,r=Na(e,"a","notEqual"),a=Na(t,"b","notEqual");return n=cr(r,a),r=n[0],a=n[1],Oi(r.shape,a.shape),mr.runKernelFunc((function(e){return e.notEqual(r,a)}),{a:r,b:a},null,"NotEqual")}}),$h=Pa({notEqualStrict_:function(e,t){var n=Na(e,"a","notEqualStrict"),r=Na(t,"b","notEqualStrict");return rn(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});function Fh(e,t){for(var n=[],r=e;r<t;++r)n.push(r);return n}function _h(e){for(var t=[],n=0;n<e.length;++n)for(var r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Oh=Pa({gather_:function(e,t,n){void 0===n&&(n=0);var r=Na(e,"x","gather"),a=Na(t,"indices","gather","int32");n=mn(n,r.shape)[0];var i=function(e,t,n){for(var r=e.shape[n],a=[],i=1,s=1,o=0;o<n;o++)a.push(e.shape[o]),i*=e.shape[o];for(o=0;o<t.rank;o++)a.push(t.shape[o]);for(o=n+1;o<e.rank;o++)a.push(e.shape[o]),s*=e.shape[o];return{batchSize:i,sliceSize:s,dimSize:r,outputShape:a}}(r,a,n);return mr.runKernelFunc((function(e,t){var i=e.gather(r,a.flatten(),n);return t([a]),i}),{x:r,indices:a},(function(e,t){var a=t[0];return{x:function(){var t=r.shape,i=a.size,s=t.slice(0,n),o=s.length,u=t.slice(n,t.length).slice(1),l=u.length,c=Fh(0,o),h=Fh(o+1,o+1+l),d=_h([s,[i],u]),p=e.reshape(d),f=a.reshape([i]),m=_h([[o],c,h]),g=p.transpose(m),v=Mh(g,f,r.shape[n]),y=_a(m);return v.transpose(y)},indices:function(){return a}}}),"Gather",{axis:n}).reshape(i.outputShape)}}),Mh=Pa({unsortedSegmentSum_:function(e,t,n){var r=Na(e,"x","unsortedSegmentSum"),a=Na(t,"segmentIds","unsortedSegmentSum","int32");return nn(ln(n),(function(){return"numSegments must be of dtype int"})),mr.runKernelFunc((function(e,t){var i=e.unsortedSegmentSum(r,a,n);return t([a]),i}),{$x:r},(function(e,t){var n=t[0];return{$x:function(){return function(e,t){for(var n=xs(t,ti(t)),r=Oh(e,n),a=Ch(t,Ga(0,"int32")),i=r.rank-a.rank,s=0;s<i;++s)a=pi(a,s+1);a=jc(a,Xa(r.shape,"bool"));var o=ti(r);return Yc(a,r,o)}(e,n)}}}))}});function Lh(e,t,n,r,a,i,s){void 0===i&&(i="NHWC"),nn(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var o=e,u=t,l=!1;3===t.rank&&(l=!0,u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]),o=[1,e[0],e[1],e[2]]),nn(4===o.length,(function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."})),nn(4===u.rank,(function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank})),nn(4===n.rank,(function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank}));var c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];nn(c===n.shape[2],(function(){return"Error in conv2dDerInput: depth of input ("+c+") must match input depth for filter "+n.shape[2]+"."})),nn(h===n.shape[3],(function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+n.shape[3]+"."})),null!=s&&nn(ln(a),(function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var d=co(i),p=to(o,n.shape,r,1,a,s,!1,d),f=mr.runKernelFunc((function(e,t){var r=e.conv2dDerInput(u,n,p);return t([n,u]),r}),{dy4D:u,filter:n},(function(e,t){var n=t[0],o=t[1];return{dy4D:function(){return Wh(e,n,r,a,i,1,s)},filter:function(){return Uh(e,o,n.shape,r,a,i,s)}}}));return l?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function Ph(e){var t=function(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function Bh(e,t,n,r,a){nn(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var i=e,s=t,o=!1;4===t.rank&&(o=!0,s=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]),i=[1,e[0],e[1],e[2],e[3]]);var u=i[4],l=s.shape[4];nn(5===i.length,(function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+i.length+"."})),nn(5===s.rank,(function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+s.rank})),nn(5===n.rank,(function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank})),nn(u===n.shape[3],(function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+n.shape[3]+"."})),nn(l===n.shape[4],(function(){return"Error in conv3dDerInput: depth of output ("+l+") must match output depth for filter "+n.shape[4]+"."}));var c=no(i,n.shape,r,1,a),h=mr.runKernelFunc((function(e){return e.conv3dDerInput(s,n,c)}),{dy5D:s});return o?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var zh=Pa({conv1d_:function(e,t,n,r,a,i,s){void 0===a&&(a="NWC"),void 0===i&&(i=1);var o=Na(e,"x","conv1d"),u=Na(t,"filter","conv1d"),l=o,c=!1;2===o.rank&&(c=!0,l=o.as3D(1,o.shape[0],o.shape[1])),nn(3===l.rank,(function(){return"Error in conv1d: input must be rank 3, but got rank "+l.rank+"."})),nn(3===u.rank,(function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."})),null!=s&&nn(ln(r),(function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."})),nn(l.shape[2]===u.shape[1],(function(){return"Error in conv1d: depth of input ("+l.shape[2]+") must match input depth for filter "+u.shape[1]+"."})),nn(lo(n,i),(function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+n+" and dilation '"+i+"'"})),nn("NWC"===a,(function(){return"Error in conv1d: got dataFormat of "+a+" but only NWC is currently supported."}));var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=l.as4D(l.shape[0],1,l.shape[1],l.shape[2]),p=Wh(d,h,[1,n],r,"NHWC",[1,i],s);return c?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),Wh=Pa({conv2d_:function(e,t,n,r,a,i,s){void 0===a&&(a="NHWC"),void 0===i&&(i=[1,1]);var o=Na(e,"x","conv2d"),u=Na(t,"filter","conv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),nn(4===l.rank,(function(){return"Error in conv2d: input must be rank 4, but got rank "+l.rank+"."})),nn(4===u.rank,(function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."})),null!=s&&nn(ln(r),(function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."}));var h="NHWC"===a?l.shape[3]:l.shape[1];nn(h===u.shape[2],(function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."})),nn(lo(n,i),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"}));var d=co(a),p=to(l.shape,u.shape,n,i,r,s,!1,d),f=[u,l],m=mr.runKernelFunc((function(e,t){var n=e.conv2d(l,u,p);return t([u,l]),n}),{x:l,filter:u},(function(e,t){var s=t,o=s[0],u=s[1];return nn(uo(i),(function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+i+"'"})),{x:function(){return Gh(u.shape,e,o,n,r,a)},filter:function(){return Uh(u,e,o.shape,n,r,a)}}}),"Conv2D",p,f);return c?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Vh=Pa({conv3d_:function(e,t,n,r,a,i){void 0===a&&(a="NDHWC"),void 0===i&&(i=[1,1,1]);var s=Na(e,"x","conv3d"),o=Na(t,"filter","conv3d"),u=s,l=!1;4===s.rank&&(l=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),nn(5===u.rank,(function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."})),nn(5===o.rank,(function(){return"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."})),nn(u.shape[4]===o.shape[3],(function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+o.shape[3]+"."})),nn(function(e,t){return Ph(e)||Ph(t)}(n,i),(function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),nn("NDHWC"===a,(function(){return"Error in conv3d: got dataFormat of "+a+" but only NDHWC is currently supported."}));var c=no(u.shape,o.shape,n,i,r),h=mr.runKernelFunc((function(e,t){var n=e.conv3d(u,o,c);return t([u,o]),n}),{x:u,$filter:o},(function(e,t){nn(Ph(i),(function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+i+"'"}));var a=t[0],s=t[1];return{x:function(){return Bh(a.shape,e,s,n,r)},$filter:function(){return function(e,t,n,r,a){var i=e;4===e.rank&&(i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]));var s=t;4===s.rank&&(s=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3])),nn(5===i.rank,(function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+i.shape+"."})),nn(5===s.rank,(function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+s.shape+"."})),nn(5===n.length,(function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."})),nn(i.shape[4]===n[3],(function(){return"Error in conv3dDerFilter: depth of input "+i.shape[4]+") must match input depth in filter ("+n[3]+"."})),nn(s.shape[4]===n[4],(function(){return"Error in conv3dDerFilter: depth of dy ("+s.shape[4]+") must match output depth for filter ("+n[4]+")."}));var o=no(i.shape,n,r,1,a);return mr.runKernelFunc((function(e){return e.conv3dDerFilter(i,s,o)}),{x5D:i,dy5D:s})}(a,e,s.shape,n,r)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Uh=Pa({conv2dDerFilter_:function(e,t,n,r,a,i,s){void 0===i&&(i="NHWC");var o=e;3===e.rank&&(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var u=t;3===u.rank&&(u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),nn(4===o.rank,(function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."})),nn(4===u.rank,(function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."})),nn(4===n.length,(function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."}));var l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];nn(l===n[2],(function(){return"Error in conv2dDerFilter: depth of input "+l+") must match input depth in filter ("+n[2]+"."})),nn(c===n[3],(function(){return"Error in conv2dDerFilter: depth of dy ("+c+") must match output depth for filter ("+n[3]+")."})),null!=s&&nn(ln(a),(function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var h=co(i),d=to(o.shape,n,r,1,a,s,!1,h);return mr.runKernelFunc((function(e){return e.conv2dDerFilter(o,u,d)}),{x4D:o,dy4D:u})}}),Gh=Pa({conv2dDerInput_:Lh}),Hh=Pa({depthwiseConv2d_:function(e,t,n,r,a,i,s){void 0===i&&(i=[1,1]);var o=Na(e,"x","depthwiseConv2d"),u=Na(t,"filter","depthwiseConv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),nn(4===l.rank,(function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+l.rank+"."})),nn(4===u.rank,(function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."})),nn(l.shape[3]===u.shape[2],(function(){return"Error in depthwiseConv2d: number of input channels ("+l.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."})),null==i&&(i=[1,1]),nn(lo(n,i),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),null!=s&&nn(ln(r),(function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."}));var h=to(l.shape,u.shape,n,i,r,s,!0),d=[l,u],p=mr.runKernelFunc((function(e,t){var n=e.depthwiseConv2D(l,u,h);return t([l,u]),n}),{x:l,filter:u},(function(e,t){nn(uo(i),(function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+i+"'"}));var n=t[0],r=t[1];return{x:function(){return jh(n.shape,e,r,h)},filter:function(){return qh(n,e,r.shape,h)}}}),"DepthwiseConv2dNative",h,d);return c?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),jh=Pa({depthwiseConv2dDerInput_:function(e,t,n,r){var a=t,i=!1;3===t.rank&&(i=!0,a=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var s=mr.runKernelFunc((function(e){return e.depthwiseConv2DDerInput(a,n,r)}),{dy4D:a});return i?s.as3D(s.shape[1],s.shape[2],s.shape[3]):s}}),qh=Pa({depthwiseConv2dDerFilter_:function(e,t,n,r){var a=e;3===e.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var i=t;return 3===i.rank&&(i=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),mr.runKernelFunc((function(e){return e.depthwiseConv2DDerFilter(a,i,r)}),{x4D:a,dy4D:i})}}),Kh=Pa({separableConv2d_:function(e,t,n,r,a,i,s){void 0===i&&(i=[1,1]),void 0===s&&(s="NHWC");var o=Na(e,"x","separableConv2d"),u=Na(t,"depthwiseFilter","separableConv2d"),l=Na(n,"pointwiseFilter","separableConv2d"),c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");nn(4===c.rank,(function(){return"Error in separableConv2d: input must be rank 4, but got rank "+c.rank+"."})),nn(4===u.rank,(function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."})),nn(4===l.rank,(function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."})),nn(1===l.shape[0],(function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+l.shape[0]+"."})),nn(1===l.shape[1],(function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+l.shape[1]+"."}));var d=u.shape[2],p=u.shape[3];nn(l.shape[2]===d*p,(function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+d*p+", but got "+l.shape[2]+"."}));var f=Hh(c,u,r,a,s,i),m=Wh(f,l,1,"valid",s);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Xh=Pa({conv2dTranspose_:function(e,t,n,r,a,i){return Lh(n,Na(e,"x","conv2dTranspose"),Na(t,"filter","conv2dTranspose"),r,a,"NHWC",i)}}),Yh=Pa({conv3dTranspose_:function(e,t,n,r,a){return Bh(n,Na(e,"x","conv3dTranspose"),Na(t,"filter","conv3dTranspose"),r,a)}}),Qh=Pa({matMul_:function(e,t,n,r){var a;void 0===n&&(n=!1),void 0===r&&(r=!1);var i=Na(e,"a","matMul"),s=Na(t,"b","matMul");a=cr(i,s),i=a[0],s=a[1];var o=n?i.shape[i.rank-2]:i.shape[i.rank-1],u=r?s.shape[s.rank-1]:s.shape[s.rank-2],l=n?i.shape[i.rank-1]:i.shape[i.rank-2],c=r?s.shape[s.rank-2]:s.shape[s.rank-1],h=i.shape.slice(0,-2),d=s.shape.slice(0,-2),p=on(h),f=on(d);nn(i.rank>=2&&s.rank>=2&&i.rank===s.rank,(function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+i.rank+" and "+s.rank+"."})),nn(un(h,d),(function(){return"Error in matMul: outer dimensions ("+h+") and ("+d+") of Tensors with shapes "+i.shape+" and "+s.shape+" must match."})),nn(o===u,(function(){return"Error in matMul: inner shapes ("+o+") and ("+u+") of Tensors with shapes "+i.shape+" and "+s.shape+" and transposeA="+n+" and transposeB="+r+" must match."}));var m=i.shape.slice(0,-2).concat([l,c]),g=n?i.as3D(p,o,l):i.as3D(p,l,o),v=r?s.as3D(f,c,u):s.as3D(f,u,c),y={transposeA:n,transposeB:r};return mr.runKernelFunc((function(e,t){var a=e.batchMatMul(g,v,n,r);return t([g,v]),a}),{a:g,b:v},(function(e,t){var a=t,i=a[0],s=a[1];return n||r?!n&&r?{a:function(){return e.matMul(s,!1,!1)},b:function(){return e.matMul(i,!0,!1)}}:n&&!r?{a:function(){return s.matMul(e,!1,!0)},b:function(){return i.matMul(e,!1,!1)}}:{a:function(){return s.matMul(e,!0,!0)},b:function(){return e.matMul(i,!0,!0)}}:{a:function(){return e.matMul(s,!1,!0)},b:function(){return i.matMul(e,!0,!1)}}}),"BatchMatMul",y).reshape(m)}}),Jh=Pa({dot_:function(e,t){var n=Na(e,"t1","dot"),r=Na(t,"t2","dot");nn(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+n.rank+" and "+r.rank+"."}));var a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];return nn(a===i,(function(){return"Error in dot: inner dimensions of inputs must match, but got "+a+" and "+i+"."})),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),Zh=Pa({outerProduct_:function(e,t){var n=Na(e,"v1","outerProduct"),r=Na(t,"v2","outerProduct");return nn(1===n.rank&&1===r.rank,(function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+n.rank+" and "+r.rank+"."})),n.as2D(-1,1).matMul(r.as2D(1,-1))}}),ed=Pa({reverse_:function(e,t){var n=Na(e,"x","reverse");if(0===n.rank)return n.clone();var r=mn(t,n.shape);return mr.runKernelFunc((function(e){return e.reverse(n,r)}),{$x:n},(function(e){return{$x:function(){return e.reverse(r)}}})).reshapeAs(n)}}),td=Pa({reverse1d_:function(e){var t=Na(e,"x","reverse");return nn(1===t.rank,(function(){return"Error in reverse1D: x must be rank 1 but got rank "+t.rank+"."})),ed(t,0)}}),nd=Pa({reverse2d_:function(e,t){var n=Na(e,"x","reverse");return nn(2===n.rank,(function(){return"Error in reverse2D: x must be rank 2 but got rank "+n.rank+"."})),ed(n,t)}}),rd=Pa({reverse3d_:function(e,t){var n=Na(e,"x","reverse");return nn(3===n.rank,(function(){return"Error in reverse3D: x must be rank 3 but got rank "+n.rank+"."})),ed(n,t)}}),ad=Pa({reverse4d_:function(e,t){var n=Na(e,"x","reverse");return nn(4===n.rank,(function(){return"Error in reverse4D: x must be rank 4 but got rank "+n.rank+"."})),ed(n,t)}});function id(e,t,n,r,a,i){var s=Na(e,"x","maxPool"),o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),null==r&&(r=[1,1]),nn(4===o.rank,(function(){return"Error in maxPool: input must be rank 4 but got rank "+o.rank+"."})),nn(lo(n,r),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"})),null!=i&&nn(ln(a),(function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var l=Zs(o.shape,t,n,r,a,i);if(1===l.filterWidth&&1===l.filterHeight&&un(l.inShape,l.outShape))return s.clone();var c=[o],h=mr.runKernelFunc((function(e,t){var n=e.maxPool(o,l);return t([o,n]),n}),{x:o},(function(e,i){var s=i[0],o=i[1];return{x:function(){return function(e,t,n,r,a,i,s,o){var u=Na(e,"dy","maxPoolBackprop"),l=Na(t,"input","maxPoolBackprop"),c=Na(n,"output","maxPoolBackprop");nn(l.rank===u.rank,(function(){return"Rank of input ("+l.rank+") does not match rank of dy ("+u.rank+")"})),null==i&&(i=[1,1]),nn(lo(a,i),(function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'"})),nn(4===u.rank,(function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."})),nn(4===l.rank,(function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."}));var h=Zs(l.shape,r,a,i,s,o);return mr.runKernelFunc((function(e){return e.maxPoolBackprop(u,l,c,h)}),{$dy:u,$input:l})}(e,s,o,t,n,r,a)}}}),"MaxPool",l,c);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function sd(e,t,n,r,a,i){var s=Na(e,"x","avgPool","float32");null==r&&(r=[1,1]),nn(lo(n,r),(function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"}));var o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),nn(4===o.rank,(function(){return"Error in avgPool: x must be rank 4 but got rank "+o.rank+"."})),null!=i&&nn(ln(a),(function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var l=Zs(o.shape,t,n,r,a,i);if(1===l.filterWidth&&1===l.filterHeight&&un(l.inShape,l.outShape))return s.clone();var c=mr.runKernelFunc((function(e){return e.avgPool(o,l)}),{x:o},(function(e){return{x:function(){return function(e,t,n,r,a,i){var s=Na(e,"dy","avgPoolBackprop"),o=Na(t,"input","avgPoolBackprop");nn(o.rank===s.rank,(function(){return"Rank of input ("+o.rank+") does not match rank of dy ("+s.rank+")"})),null==a&&(a=[1,1]),nn(lo(r,a),(function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"}));var u=o,l=s,c=!1;3===o.rank&&(c=!0,u=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]),l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),nn(4===l.rank,(function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."})),nn(4===u.rank,(function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+"."}));var h=Zs(u.shape,n,r,a,i),d=mr.runKernelFunc((function(e){return e.avgPoolBackprop(l,u,h)}),{dy4D:l,input4D:u});return c?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}(e,o,t,n,r,a)}}}),"AvgPool",l);return c=c.cast(s.dtype),u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}var od=Pa({maxPool_:function(e,t,n,r,a){return id(e,t,n,1,r,a)}}),ud=Pa({avgPool_:function(e,t,n,r,a){return sd(e,t,n,1,r,a)}}),ld=Pa({pool_:function(e,t,n,r,a,i){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");var s=Na(e,"x","maxPool"),o=s,u=!1;3===s.rank&&(u=!0,o=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),nn(lo(i,a),(function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+i+" and dilations '"+a+"'"}));var l,c=Zs(o.shape,t,i,a,r),h=[c.dilationHeight,c.dilationWidth];l="same"===r?function(e,t){var n=e.map((function(e,n){return e+(e-1)*(t[n]-1)})).map((function(e){return e-1})),r=n.map((function(e){return Math.floor(e/2)})),a=n.map((function(e,t){return e-r[t]}));return n.map((function(e,t){return[r[t],a[t]]}))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];var d=1===h[0]&&1===h[1],p=function(e,t,n){var r=n.map((function(e){return e[0]})),a=n.map((function(e){return e[1]})),i=e.concat(r,a),s=t.map((function(e,t){return(e-i[t]%e)%e})),o=a.map((function(e,t){return e+s[t]}));return[t.map((function(e,t){return[r[t],o[t]]})),t.map((function(e,t){return[0,s[t]]}))]}([c.inHeight,c.inWidth],h,l),f=p[0],m=p[1],g=d?r:"valid",v=d?o:mi(o,h,f),y=("avg"===n?function(){return sd(v,t,i,1,g)}:function(){return id(v,t,i,1,g)})(),b=d?y:li(y,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),cd=Pa({maxPool3d_:function(e,t,n,r,a,i,s){void 0===i&&(i="NDHWC");var o=Na(e,"x","maxPool3d"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==s&&(s=[1,1,1]),nn(5===u.rank,(function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."})),nn("NDHWC"===i,(function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+i})),nn(lo(n,s),(function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=a&&nn(ln(r),(function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=eo(u.shape,t,n,s,r,a,i),h=mr.runKernelFunc((function(e,t){var n=e.maxPool3d(u,c);return t([u,n]),n}),{x:u},(function(e,i){var o=i[0],u=i[1];return{x:function(){return function(e,t,n,r,a,i,s,o){var u=Na(e,"dy","maxPool3dBackprop"),l=Na(t,"input","maxPool3dBackprop"),c=Na(n,"output","maxPool3dBackprop"),h=u,d=l,p=c,f=!1;4===l.rank&&(f=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),d=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),p=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3])),nn(5===h.rank,(function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."})),nn(5===d.rank,(function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+d.rank+"."})),nn(5===p.rank,(function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+p.rank+"."})),null==i&&(i=[1,1,1]),nn(lo(a,i),(function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+i+"'"})),null!=o&&nn(ln(s),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."}));var m=eo(d.shape,r,a,i,s,o),g=mr.runKernelFunc((function(e){return e.maxPool3dBackprop(h,d,p,m)}),{dy5D:h,input5D:d});return f?g.as4D(g.shape[1],g.shape[2],g.shape[3],g.shape[4]):g}(e,o,u,t,n,s,r,a)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),hd=Pa({avgPool3d_:function(e,t,n,r,a,i,s){void 0===i&&(i="NDHWC");var o=Na(e,"x","avgPool3d","float32"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==s&&(s=[1,1,1]),nn(5===u.rank,(function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."})),nn("NDHWC"===i,(function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+i})),nn(lo(n,s),(function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=a&&nn(ln(r),(function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=eo(u.shape,t,n,s,r,a,i),h=mr.runKernelFunc((function(e){return e.avgPool3d(u,c)}),{x:u},(function(e){return{x:function(){return function(e,t,n,r,a,i,s){var o=Na(e,"dy","avgPool3dBackprop"),u=Na(t,"input","avgPool3dBackprop"),l=o,c=u,h=!1;4===u.rank&&(h=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),nn(5===l.rank,(function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."})),nn(5===c.rank,(function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."})),null==a&&(a=[1,1,1]),nn(lo(r,a),(function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"})),null!=s&&nn(ln(i),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+i+"."}));var d=eo(c.shape,n,r,a,i,s),p=mr.runKernelFunc((function(e){return e.avgPool3dBackprop(l,c,d)}),{dy5D:l,input5D:c});return h?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}(e,u,t,n,s,r,a)}}}));return h=h.cast(u.dtype),l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),dd=Pa({maxPoolWithArgmax_:function(e,t,n,r,a){void 0===a&&(a=!1);var i=Na(e,"x","maxPoolWithArgmax"),s={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=mr.runKernel("MaxPoolWithArgmax",{x:i},s);return{result:o[0],indexes:o[1]}}}),pd=Pa({slice_:function(e,t,n){var r,a,i=Na(e,"x","slice");if(0===i.rank)throw new Error("Slicing scalar is not possible");(r="number"==typeof t?[t].concat(new Array(i.rank-1).fill(0)):t.length<i.rank?t.concat(new Array(i.rank-t.length).fill(0)):t.slice()).forEach((function(e){nn(-1!==e,(function(){return"slice() does not support negative begin indexing."}))})),a=(a=null==n?new Array(i.rank).fill(-1):"number"==typeof n?[n].concat(new Array(i.rank-1).fill(-1)):n.length<i.rank?n.concat(new Array(i.rank-n.length).fill(-1)):n).map((function(e,t){return e>=0?e:(nn(-1===e,(function(){return"Negative size values should be exactly -1 but got "+e+" for the slice() size at index "+t+"."})),i.shape[t]-r[t])})),Bs(i,r,a);var s=i.shape,o={begin:r,size:a};return mr.runKernelFunc((function(e){return e.slice(i,r,a)}),{x:i},(function(e){for(var t=[],n=0;n<e.rank;n++)t.push([r[n],s[n]-r[n]-a[n]]);return{x:function(){return rh(e,t)}}}),"Slice",o)}}),fd=Pa({slice1d_:function(e,t,n){var r=Na(e,"x","slice1d");return nn(1===r.rank,(function(){return"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"})),pd(r,[t],[n])}}),md=Pa({slice2d_:function(e,t,n){var r=Na(e,"x","slice2d");return nn(2===r.rank,(function(){return"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"})),pd(r,t,n)}}),gd=Pa({slice3d_:function(e,t,n){var r=Na(e,"x","slice3d");return nn(3===r.rank,(function(){return"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"})),pd(r,t,n)}}),vd=Pa({slice4d_:function(e,t,n){var r=Na(e,"x","slice4d");return nn(4===r.rank,(function(){return"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"})),pd(r,t,n)}});function yd(e,t,n,r,a){return t.rank<n.rank&&(t=t.reshape(Da(t.shape,r))),e.rank<n.rank&&(e=e.reshape(Da(e.shape,r))),{x:function(){var r=e.mul(n.equal(t).cast(e.dtype));return null==a?r:r.transpose(a)}}}var bd=Pa({all_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","all","bool"),a=mn(t,r.shape),i=a,s=Fa(i,r.rank);null!=s&&(r=r.transpose(s),i=Oa(i.length,r.rank));var o=mr.runKernelFunc((function(e){return e.all(r,i)}),{$x:r});if(n){var u=Da(o.shape,a);return o.reshape(u)}return o}}),xd=Pa({any_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","any","bool"),a=mn(t,r.shape),i=a,s=Fa(i,r.rank);null!=s&&(r=r.transpose(s),i=Oa(i.length,r.rank));var o=mr.runKernelFunc((function(e){return e.any(r,i)}),{$x:r});if(n){var u=Da(o.shape,a);return o.reshape(u)}return o}}),wd=Pa({argMax_:function(e,t){void 0===t&&(t=0);var n=Na(e,"x","argMax");null==t&&(t=0);var r=mn(t,n.shape),a=Fa(r,n.rank);null!=a&&(n=n.transpose(a),r=Oa(r.length,n.rank));var i={axis:r[0]},s=[n];return mr.runKernelFunc((function(e,t){var a=e.argMax(n,r[0]);return t([n]),a}),{x:n},(function(e,t){var n=t[0];return{x:function(){return ti(n)}}}),"ArgMax",i,s)}}),kd=Pa({argMin_:function(e,t){void 0===t&&(t=0);var n=Na(e,"x","argMin");null==t&&(t=0);var r=mn(t,n.shape),a=Fa(r,n.rank);return null!=a&&(n=n.transpose(a),r=Oa(r.length,n.rank)),mr.runKernelFunc((function(e,t){var a=e.argMin(n,r[0]);return t([n]),a}),{$x:n},(function(e,t){var n=t[0];return{$x:function(){return ti(n)}}}))}}),Id=Pa({logSumExp_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","logSumExp"),a=mn(t,r.shape),i=r.max(a,!0),s=r.sub(i).exp().sum(a).log(),o=i.reshape(s.shape).add(s);if(n){var u=Da(o.shape,a);return o.reshape(u)}return o}}),Cd=Pa({max_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","max"),a=r,i=mn(t,r.shape),s=i,o=Fa(s,r.rank);null!=o&&(r=r.transpose(o),s=Oa(s.length,r.rank));var u=[r],l=mr.runKernelFunc((function(e,t){var n=e.max(r,s);return t([a,n]),n}),{x:r},(function(e,t){return yd(e,t[1],t[0],i,o)}),"Max",{axes:s},u,[!0]);if(n){var c=Da(l.shape,i);l=l.reshape(c)}return l}}),Sd=Pa({mean_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","mean"),a=mn(t,r.shape),i=on(Aa(r.shape,a)[1]);return js((function(e){var r=Ga(i);return{value:(r.dtype===e.dtype?e:e.cast(r.dtype)).div(r).sum(t,n),gradFunc:function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(Xa(e.shape,"float32")).div(i)}}}))(r)}}),Nd=Pa({min_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","min"),a=r,i=mn(t,r.shape),s=i,o=Fa(s,r.rank);null!=o&&(r=r.transpose(o),s=Oa(s.length,r.rank));var u=[r],l=mr.runKernelFunc((function(e,t){var n=e.min(r,s);return t([a,n]),n}),{x:r},(function(e,t){return yd(e,t[1],t[0],i,o)}),"Min",{axes:s},u,[!0]);if(n){var c=Da(l.shape,i);l=l.reshape(c)}return l}}),Td=Pa({moments_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=mn(t,(e=Na(e,"x","moments")).shape),a=e.mean(r,n),i=a.shape;n||(i=Da(a.shape,r));var s=e.toFloat().sub(a.reshape(i)).square();return{mean:a,variance:s.mean(r,n)}}}),Ed=Pa({sum_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","sum");"bool"===r.dtype&&(r=r.toInt());var a=mn(t,r.shape);return js((function(e){var t=Fa(a,e.rank),r=a,i=e;null!=t&&(i=e.transpose(t),r=Oa(r.length,e.rank));var s=function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(Xa(e.shape,"float32"))},o={axes:r},u=mr.runKernelFunc((function(e){return e.sum(i,r)}),{x:i},(function(e){return{x:function(){return s(e)}}}),"Sum",o);if(n){var l=Da(u.shape,a);u=u.reshape(l)}return{value:u,gradFunc:s}}))(r)}}),Rd=Pa({prod_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=Na(e,"x","prod");"bool"===r.dtype&&(r=r.toInt());var a=mn(t,r.shape),i=Fa(a,r.rank),s=a,o=r;null!=i&&(o=r.transpose(i),s=Oa(s.length,r.rank));var u=mr.runKernelFunc((function(e){return e.prod(o,s)}),{permutedX:o});if(n){var l=Da(u.shape,a);u=u.reshape(l)}return u}}),Ad=Pa({elu_:function(e){var t=Na(e,"x","elu");return mr.runKernelFunc((function(e,n){var r=e.elu(t);return n([r]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return mr.runKernelFunc((function(t){return t.eluDer(e,n)}),{dy:e,y:n})}}}))}}),Dd=Pa({leakyRelu_:function(e,t){void 0===t&&(t=.2);var n=Na(e,"x","leakyRelu");return xs(Ga(t).mul(n),n)}}),$d=Pa({prelu_:function(e,t){var n=Na(e,"x","prelu"),r=Na(t,"alpha","prelu");return mr.runKernelFunc((function(e,t){var a=e.prelu(n,r);return t([n,r]),a}),{x:n,alpha:r},(function(e,t){var n=t[0],r=t[1],a=n.greater(0);return{x:function(){return Yc(a,e,e.mul(r))},alpha:function(){var t=Yc(a,ti(e),e.mul(n)),i=_i(r.shape,e.shape);return i.length>0&&(t=t.sum(i)),t.reshape(r.shape)}}}),"Prelu")}}),Fd=Pa({relu_:function(e){var t=Na(e,"x","relu");return"bool"===t.dtype?t.toInt():mr.runKernelFunc((function(e,n){var r=e.relu(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mulStrict(n.step().toFloat())}}}),"Relu")}}),_d=Pa({relu6_:function(e){var t=Na(e,"x","relu6");return"bool"===t.dtype?t.toInt():mr.runKernelFunc((function(e,n){var r=e.relu6(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0],r=n.lessEqual(6).mul(n.step());return{x:function(){return e.mulStrict(r.toFloat())}}}),"Relu6")}}),Od=Pa({selu_:function(e){var t=Na(e,"x","selu");return mr.runKernelFunc((function(e,n){var r=e.selu(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){var t=n.greater(Ga(0)),r=Ga(Vl),a=Ga(Ul),i=e.mul(a),s=e.mul(r).mul(n.toFloat().exp());return Yc(t,i,s)}}}))}}),Md=Pa({localResponseNormalization_:function(e,t,n,r,a){void 0===t&&(t=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===a&&(a=.5);var i=Na(e,"x","localResponseNormalization");nn(4===i.rank||3===i.rank,(function(){return"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank "+i.rank+"."})),nn(ln(t),(function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+t+"."}));var s=i,o=!1;3===i.rank&&(o=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2]));var u=mr.runKernelFunc((function(e,i){var o=e.localResponseNormalization4D(s,t,n,r,a);return i([s,o]),o}),{x4D:s},(function(e,i){var s=i[0],o=i[1];return{x4D:function(){return mr.runKernelFunc((function(i){return i.LRNGrad(e,s,o,t,n,r,a)}),{})}}}));return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Ld=Pa({norm_:function(e,t,n,r){void 0===t&&(t="euclidean"),void 0===n&&(n=null),void 0===r&&(r=!1);var a=function e(t,n,r){if(void 0===r&&(r=null),0===t.rank)return t.abs();if(1!==t.rank&&null===r)return e(t.reshape([-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return t.abs().sum(r);if(n===1/0)return t.abs().max(r);if(n===-1/0)return t.abs().min(r);if("euclidean"===n||2===n)return t.abs().pow(Ga(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return t.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return t.abs().sum(r[1]).max(r[0]);if(n===-1/0)return t.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return t.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Na(e,"x","norm"),t,n),i=a.shape;if(r){var s=mn(n,e.shape);i=Da(a.shape,s)}return a.reshape(i)}}),Pd=Pa({basicLSTMCell_:function(e,t,n,r,a,i){var s=Na(e,"forgetBias","basicLSTMCell"),o=Na(t,"lstmKernel","basicLSTMCell"),u=Na(n,"lstmBias","basicLSTMCell"),l=Na(r,"data","basicLSTMCell"),c=Na(a,"c","basicLSTMCell"),h=Na(i,"h","basicLSTMCell"),d=l.concat(h,1).matMul(o).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),v=d.slice([0,f],m),y=d.slice([0,2*f],m),b=d.slice([0,3*f],m),x=g.sigmoid().mulStrict(v.tanh()).addStrict(c.mulStrict(s.add(y).sigmoid())),w=x.tanh().mulStrict(b.sigmoid());return[x,w]}}),Bd=Pa({multiRNNCell_:function(e,t,n,r){for(var a=Na(t,"data","multiRNNCell"),i=Ta(n,"c","multiRNNCell"),s=Ta(r,"h","multiRNNCell"),o=a,u=[],l=0;l<e.length;l++){var c=e[l](o,i[l],s[l]);u.push(c[0]),u.push(c[1]),o=c[1]}var h=[],d=[];for(l=0;l<u.length;l+=2)h.push(u[l]),d.push(u[l+1]);return[h,d]}}),zd=Pa({movingAverage_:function(e,t,n,r,a){void 0===a&&(a=!0);var i=Na(e,"v","movingAverage"),s=Na(t,"x","movingAverage"),o=Na(n,"decay","movingAverage");hr(i,s),nn(un(i.shape,s.shape),(function(){return"Shape mismatch in v and x"}));var u=Ga(1),l=u.sub(o),c=s.sub(i).mul(l);if(a){nn(null!=r,(function(){return"When using zeroDebias: true, step is required."}));var h=Na(r,"step","movingAverage");c=c.div(u.sub(Es(o,h)))}return i.add(c)}}),Wd=Pa({stridedSlice_:function(e,t,n,r,a,i,s,o,u){if(void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===o&&(o=0),void 0===u&&(u=0),null==r&&(r=new Array(t.length)),0!==s)throw new Error("ellipsis mask is not yet supported");var l=Na(e,"x","stridedSlice"),c=zs(o),h=l.shape.slice();c.forEach((function(e){t[e]=0,n[e]=1,h.splice(e,0,1)})),l=l.reshape(h);for(var d=0;d<l.rank;d++)t[d]=Vs(a,t,r,l.shape,d),n[d]=Us(i,n,r,l.shape,d),r[d]=r[d]||1;var p=zs(u);p.forEach((function(e){n[e]=t[e]+1,r[e]=1}));var f=Ws(t,n,r),m=f.filter((function(e,t){return-1===p.indexOf(t)}));return r.every((function(e){return 1===e}))?pd(l,t,f).reshape(m):mr.runKernelFunc((function(e){return e.stridedSlice(l,t,n,r)}),{$x:l}).reshape(m)}}),Vd=Pa({topk_:function(e,t,n){void 0===t&&(t=1),void 0===n&&(n=!0);var r=Na(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");var a=r.shape[r.shape.length-1];if(t>a)throw new Error("'k' passed to topk() must be <= the last dimension ("+a+") but got "+t);var i=mr.runKernelFunc((function(e){return e.topk(r,t,n)}),{$x:r});return{values:i[0],indices:i[1]}}}),Ud=Pa({scatterND_:function(e,t,n){var r=Na(e,"indices","scatterND","int32"),a=Na(t,"updates","scatterND");return Ls(a,r,n),mr.runKernelFunc((function(e){return e.scatterND(r,a,n)}),{indices:r,updates:a},null,"ScatterNd",{shape:n})}}),Gd=Pa({fft_:function(e){nn("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return mr.runKernelFunc((function(e){return e.fft(r)}),{input:e}).reshape(e.shape)}}),Hd=Pa({ifft_:function(e){nn("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return mr.runKernelFunc((function(e){return e.ifft(r)}),{input:e}).reshape(e.shape)}}),jd=Pa({rfft_:function(e,t){nn("float32"===e.dtype,(function(){return"The dtype for rfft() must be real value but got "+e.dtype}));var n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){var i=e.shape.map((function(e){return 0})),s=e.shape.map((function(e){return e}));s[e.shape.length-1]=t,n=e.slice(i,s),r=t}else if(null!=t&&t>r){var o=e.shape.map((function(e){return e}));o[e.shape.length-1]=t-r,n=e.concat(Ya(o),e.shape.length-1),r=t}else n=e;var u=n.zerosLike(),l=Ba(n,u).as2D(a,r),c=Gd(l),h=Math.floor(r/2)+1,d=za(c),p=Wa(c),f=d.split([h,r-h],d.shape.length-1),m=p.split([h,r-h],p.shape.length-1),g=n.shape.slice();return g[n.shape.length-1]=h,Ba(f[0],m[0]).reshape(g)}}),qd=Pa({irfft_:function(e){var t=e.shape[e.shape.length-1],n=e.size/t;if(t<=2){var r=e.as2D(n,t),a=Hd(r);return za(a)}var i=[n,2*(t-1)],s=za(e).as2D(n,t),o=Wa(e).as2D(n,t),u=s.slice([0,1],[n,t-2]).reverse(1),l=o.slice([0,1],[n,t-2]).reverse(1).mul(Ga(-1)),c=s.concat(u,1),h=o.concat(l,1);return r=Ba(c,h).as2D(i[0],i[1]),a=Hd(r),za(a)}}),Kd=Object.freeze({fft:Gd,ifft:Hd,rfft:jd,irfft:qd}),Xd=Pa({sparseToDense_:function(e,t,n,r){void 0===r&&(r=0);var a=Na(e,"sparseIndices","sparseToDense","int32"),i=Na(t,"sparseValues","sparseToDense"),s=Na(r,"defaultValue","sparseToDense",i.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+e.shape+".");var a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error("outputShape has incorrect number of elements:, "+n.length+", should be: "+i+".");var s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error("sparseValues has incorrect shape "+t.shape+", should be [] or ["+a+"]");if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,n,s),mr.runKernelFunc((function(e){return e.sparseToDense(a,i,n,s)}),{$sparseIndices:a,$sparseValues:i,$defaultValue:s})}}),Yd=Pa({gatherND_:function(e,t){var n=Na(t,"indices","gatherND","int32"),r=Na(e,"x","gatherND");return mr.runKernelFunc((function(e){return e.gatherND(r,n)}),{x:r,indices:n},null,"GatherNd")}}),Qd=Pa({diag_:function(e){var t=Na(e,"x","diag").flatten(),n=e.shape.concat(e.shape);return mr.runKernelFunc((function(e){return e.diag(t)}),{$x:t}).reshape(n)}}),Jd=Pa({dropout_:function(e,t,n,r){var a=Na(e,"x","dropout");if(nn("float32"===a.dtype,(function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+a.dtype+" tensor instead."})),nn(t>=0&&t<1,(function(){return"rate must be a float in the range [0, 1), but got "+t+"."})),0===t)return e instanceof Zn?a.clone():a;var i=function(e,t){if(null==t)return e.shape.slice();if(un(e.shape,t))return t;if(e.shape.length===t.length){for(var n=[],r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=vh(i,0,1,"float32",r).add(s).floor().div(s);return a.mul(o)}});function Zd(e,t,n){for(var r=1-e%2,a=new Float32Array(e),i=0;i<e;++i){var s=2*Math.PI*i/(e+r-1);a[i]=t-n*Math.cos(s)}return Ha(a,"float32")}var ep,tp=Pa({hannWindow_:function(e){return Zd(e,.5,.5)}}),np=Pa({hammingWindow_:function(e){return Zd(e,.54,.46)}}),rp=Pa({frame_:function(e,t,n,r,a){void 0===r&&(r=!1),void 0===a&&(a=0);for(var i=0,s=[];i+t<=e.size;)s.push(pd(e,i,t)),i+=n;if(r)for(;i<e.size;){var o=i+t-e.size,u=ni([pd(e,i,t-o),Qa([o],a)]);s.push(u),i+=n}return 0===s.length?ja([],[0,t]):ni(s).as2D(s.length,t)}}),ap=Pa({stft_:function(e,t,n,r,a){var i;void 0===a&&(a=tp),null==r&&(i=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));for(var s=rp(e,t,n),o=Ns(s,a(t)),u=[],l=0;l<s.shape[0];l++)u.push(jd(o.slice([l,0],[1,t]),r));return ni(u)}}),ip=Object.freeze({hannWindow:tp,hammingWindow:np,frame:rp,stft:ap});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ep||(ep={}));var sp=Pa({absoluteDifference_:function(e,t,n,r){void 0===r&&(r=ep.SUM_BY_NONZERO_WEIGHTS);var a=Na(e,"labels","absoluteDifference"),i=Na(t,"predictions","absoluteDifference"),s=null;null!=n&&(s=Na(n,"weights","absoluteDifference")),rn(a.shape,i.shape,"Error in absoluteDifference: ");var o=a.sub(i).abs();return op(o,s,r)}}),op=Pa({computeWeightedLoss_:function(e,t,n){void 0===n&&(n=ep.SUM_BY_NONZERO_WEIGHTS);var r=Na(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=Na(t,"weights","computeWeightedLoss"));var i=null==a?r:r.mul(a);if(n===ep.NONE)return i;if(n===ep.SUM)return i.sum();if(n===ep.MEAN){if(null==a)return i.mean();var s=r.size/a.size,o=i.sum().div(a.sum());return s>1?o.div(Ga(s)):o}if(n===ep.SUM_BY_NONZERO_WEIGHTS){if(null==a)return i.sum().div(Ga(r.size));var u=a.mul(Xa(r.shape)).notEqual(Ga(0)).sum().toFloat();return i.sum().div(u)}throw Error("Unknown reduction: "+n)}}),up=Pa({cosineDistance_:function(e,t,n,r,a){void 0===a&&(a=ep.SUM_BY_NONZERO_WEIGHTS);var i=Na(e,"labels","cosineDistance"),s=Na(t,"predictions","cosineDistance"),o=null;null!=r&&(o=Na(r,"weights","cosineDistance")),rn(i.shape,s.shape,"Error in cosineDistance: ");var u=Ga(1).sub(i.mul(s).sum(n,!0));return op(u,o,a)}}),lp=Pa({hingeLoss_:function(e,t,n,r){void 0===r&&(r=ep.SUM_BY_NONZERO_WEIGHTS);var a=Na(e,"labels","hingeLoss"),i=Na(t,"predictions","hingeLoss"),s=null;null!=n&&(s=Na(n,"weights","hingeLoss")),rn(a.shape,i.shape,"Error in hingeLoss: ");var o=Ga(1);a=Ga(2).mul(a).sub(o);var u=o.sub(a.mul(i)).relu();return op(u,s,r)}}),cp=Pa({huberLoss_:function(e,t,n,r,a){void 0===r&&(r=1),void 0===a&&(a=ep.SUM_BY_NONZERO_WEIGHTS);var i=Na(e,"labels","huberLoss"),s=Na(t,"predictions","huberLoss"),o=null;null!=n&&(o=Na(n,"weights","huberLoss")),rn(i.shape,s.shape,"Error in huberLoss: ");var u=Ga(r),l=s.sub(i).abs(),c=ks(l,u),h=l.sub(c),d=Ga(.5).mul(c.square()).add(u.mul(h));return op(d,o,a)}}),hp=Pa({logLoss_:function(e,t,n,r,a){void 0===r&&(r=1e-7),void 0===a&&(a=ep.SUM_BY_NONZERO_WEIGHTS);var i=Na(e,"labels","logLoss"),s=Na(t,"predictions","logLoss"),o=null;null!=n&&(o=Na(n,"weights","logLoss")),rn(i.shape,s.shape,"Error in logLoss: ");var u=Ga(1),l=Ga(r),c=i.mul(s.add(l).log()).neg().sub(u.sub(i).mul(u.sub(s).add(l).log()));return op(c,o,a)}}),dp=Pa({meanSquaredError_:function(e,t,n,r){void 0===r&&(r=ep.SUM_BY_NONZERO_WEIGHTS);var a=Na(e,"labels","meanSquaredError"),i=Na(t,"predictions","meanSquaredError"),s=null;null!=n&&(s=Na(n,"weights","meanSquaredError")),rn(a.shape,i.shape,"Error in meanSquaredError: ");var o=a.squaredDifference(i);return op(o,s,r)}}),pp=Pa({sigmoidCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=ep.SUM_BY_NONZERO_WEIGHTS);var i=Na(e,"multiClassLabels","sigmoidCrossEntropy"),s=Na(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Na(n,"weights","sigmoidCrossEntropy")),rn(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=Ga(r),l=Ga(1),c=Ga(.5);i=i.mul(l.sub(u)).add(c.mul(u))}var h=function(e,t){var n=Na(e,"labels","sigmoidCrossEntropyWithLogits"),r=Na(t,"logits","sigmoidCrossEntropyWithLogits");rn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");var a=r.relu(),i=r.mul(n),s=r.abs().neg().exp().log1p();return a.sub(i).add(s)}(i,s);return op(h,o,a)}}),fp=Pa({softmaxCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=ep.SUM_BY_NONZERO_WEIGHTS);var i=Na(e,"onehotLabels","softmaxCrossEntropy"),s=Na(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Na(n,"weights","softmaxCrossEntropy")),rn(i.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){var u=Ga(r),l=Ga(1),c=Ga(i.shape[1]);i=i.mul(l.sub(u)).add(u.div(c))}var h=function(e,t,n){if(void 0===n&&(n=-1),-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+t.rank+" and dim was "+n);return js((function(e,t,r){var a=t.logSumExp([n],!0),i=t.toFloat().sub(a);return r([e,i]),{value:i.mul(e).neg().sum([n]),gradFunc:function(e,t){var r=t[0],a=t[1],i=Da(e.shape,[n]);return[e.reshape(i).mul(r.toFloat().sub(a.exp())),e.reshape(i).mul(a.exp().sub(r.toFloat()))]}}}))(e,t)}(i,s);return op(h,o,a)}}),mp=Object.freeze({get Reduction(){return ep},absoluteDifference:sp,computeWeightedLoss:op,cosineDistance:up,hingeLoss:lp,huberLoss:cp,logLoss:hp,meanSquaredError:dp,sigmoidCrossEntropy:pp,softmaxCrossEntropy:fp});function gp(e,t){return void 0===t&&(t=!1),mr.tidy((function(){if(2!==e.shape.length)throw new Error("qr2d() requires a 2D Tensor, but got a "+e.shape.length+"D Tensor.");for(var n=e.shape[0],r=e.shape[1],a=eh(n),i=e.clone(),s=ja([[1]],[1,1]),o=s.clone(),u=n>=r?r:n,l=function(e){var t,u=i,l=o,c=a;t=mr.tidy((function(){var t=i.slice([e,e],[n-e,1]),u=t.norm(),l=i.slice([e,e],[1,1]),c=ja([[-1]]).where(l.greater(0),ja([[1]])),h=l.sub(c.mul(u)),d=t.div(h);o=1===d.shape[0]?s.clone():s.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);var p=c.matMul(h).div(u).neg(),f=i.slice([e,0],[n-e,r]),m=p.mul(o),g=o.transpose();if(0===e)i=f.sub(m.matMul(g.matMul(f)));else{var v=f.sub(m.matMul(g.matMul(f)));i=i.slice([0,0],[e,r]).concat(v,0)}var y=m.transpose(),b=a.slice([0,e],[n,a.shape[1]-e]);if(0===e)a=b.sub(b.matMul(o).matMul(y));else{var x=b.sub(b.matMul(o).matMul(y));a=a.slice([0,0],[n,e]).concat(x,1)}return[o,i,a]})),o=t[0],i=t[1],a=t[2],ka([u,l,c])},c=0;c<u;++c)l(c);return!t&&n>r&&(a=a.slice([0,0],[n,r]),i=i.slice([0,0],[r,r])),[a,i]}))}var vp=Pa({bandPart_:function(e,t,n){if(t%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+t+".");if(n%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+n+".");var r=Na(e,"a","bandPart");if(r.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+r.rank+".");var a=r.shape,i=r.shape.slice(-2),s=i[0],o=i[1];if(!(t<=s))throw new Error("bandPart(): numLower ("+t+") must not be greater than the number of rows ("+s+").");if(!(n<=o))throw new Error("bandPart(): numUpper ("+n+") must not be greater than the number of columns ("+o+").");t<0&&(t=s),n<0&&(n=o);var u=Za(0,s,1,"int32").reshape([-1,1]),l=Za(0,o,1,"int32"),c=Ds(u,l),h=jc(c.lessEqual(Ga(+t,"int32")),c.greaterEqual(Ga(-n,"int32"))),d=Ya([s,o],r.dtype);return vi(yi(r.reshape([-1,s,o])).map((function(e){return Yc(h,e,d)}))).reshape(a)}}),yp=Pa({gramSchmidt_:function(e){var t;if(Array.isArray(e)){t=!1,nn(null!=e&&e.length>0,(function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"}));for(var n=e[0].shape[0],r=function(t){nn(e[t].shape[0]===n,(function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+e[t].shape[0]+" vs. "+n+")"}))},a=1;a<e.length;++a)r(a)}else t=!0,e=oi(e,e.shape[0],0).map((function(e){return gi(e,[0])}));nn(e.length<=e[0].shape[0],(function(){return"Gram-Schmidt: Number of vectors ("+e.length+") exceeds number of dimensions ("+e[0].shape[0]+")."}));var i=[],s=e,o=function(e){i.push(mr.tidy((function(){var t=s[e];if(e>0)for(var n=0;n<e;++n){var r=Ed(i[n].mulStrict(t)).mul(i[n]);t=t.sub(r)}return t.div(Ld(t,"euclidean"))})))};for(a=0;a<e.length;++a)o(a);return t?vi(i,0):i}}),bp=Pa({qr_:function(e,t){if(void 0===t&&(t=!1),e.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+e.rank);if(2===e.rank)return gp(e,t);var n=e.shape.slice(0,e.shape.length-2).reduce((function(e,t){return e*t})),r=yi(e.reshape([n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];return r.forEach((function(e){var n=gp(e,t),r=n[0],s=n[1];a.push(r),i.push(s)})),[vi(a,0).reshape(e.shape),vi(i,0).reshape(e.shape)]}}),xp=Object.freeze({bandPart:vp,gramSchmidt:yp,qr:bp});function wp(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);var s=e.shape[0];return n=Math.min(n,s),nn(0<=r&&r<=1,(function(){return"iouThreshold must be in [0, 1], but was '"+r+"'"})),nn(2===e.rank,(function(){return"boxes must be a 2D tensor, but was of rank '"+e.rank+"'"})),nn(4===e.shape[1],(function(){return"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]})),nn(1===t.rank,(function(){return"scores must be a 1D tensor"})),nn(t.shape[0]===s,(function(){return"scores has incompatible shape with boxes. Expected "+s+", but was "+t.shape[0]})),nn(0<=i&&i<=1,(function(){return"softNmsSigma must be in [0, 1], but was '"+i+"'"})),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}var kp=Pa({resizeBilinear_:function(e,t,n){void 0===n&&(n=!1);var r=Na(e,"images","resizeBilinear");nn(3===r.rank||4===r.rank,(function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."})),nn(2===t.length,(function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."}));var a=r,i=!1;3===r.rank&&(i=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var s=t[0],o=t[1],u=mr.runKernelFunc((function(e,t){return t([a]),e.resizeBilinear(a,s,o,n)}),{x:a},(function(e,t){return{x:function(){return mr.runKernelFunc((function(r){return r.resizeBilinearBackprop(e,t[0],n)}),{})}}}),"ResizeBilinear",{alignCorners:n,newHeight:s,newWidth:o});return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Ip=Pa({resizeNearestNeighbor_:function(e,t,n){void 0===n&&(n=!1);var r=Na(e,"images","resizeNearestNeighbor");nn(3===r.rank||4===r.rank,(function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."})),nn(2===t.length,(function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."})),nn("float32"===r.dtype||"int32"===r.dtype,(function(){return"`images` must have `int32` or `float32` as dtype"}));var a=r,i=!1;3===r.rank&&(i=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var s=t[0],o=t[1],u=mr.runKernelFunc((function(e,t){return t([a]),e.resizeNearestNeighbor(a,s,o,n)}),{batchImages:a},(function(e,t){return{batchImages:function(){return mr.runKernelFunc((function(r){return r.resizeNearestNeighborBackprop(e,t[0],n)}),{})}}}));return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Cp=Pa({nonMaxSuppression_:function(e,t,n,r,a){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY);var i=Na(e,"boxes","nonMaxSuppression"),s=Na(t,"scores","nonMaxSuppression"),o=wp(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;var u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return mr.runKernelFunc((function(e){return e.nonMaxSuppression(i,s,n,r,a)}),{boxes:i,scores:s},null,"NonMaxSuppressionV3",u)}}),Sp=Pa({nonMaxSuppressionWithScore_:function(e,t,n,r,a,i){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===i&&(i=0);var s=Na(e,"boxes","nonMaxSuppression"),o=Na(t,"scores","nonMaxSuppression"),u=wp(s,o,n,r,a,i),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},c=mr.runKernel("NonMaxSuppressionV5",{boxes:s,scores:o},l);return{selectedIndices:c[0],selectedScores:c[1]}}}),Np=Pa({cropAndResize_:function(e,t,n,r,a,i){var s=Na(e,"image","cropAndResize"),o=Na(t,"boxes","cropAndResize","float32"),u=Na(n,"boxInd","cropAndResize","int32");a=a||"bilinear",i=i||0;var l=o.shape[0];return nn(4===s.rank,(function(){return"Error in cropAndResize: image must be rank 4,but got rank "+s.rank+"."})),nn(2===o.rank&&4===o.shape[1],(function(){return"Error in cropAndResize: boxes must be have size ["+l+",4] but had shape "+o.shape+"."})),nn(1===u.rank&&u.shape[0]===l,(function(){return"Error in cropAndResize: boxInd must be have size ["+l+"] but had shape "+o.shape+"."})),nn(2===r.length,(function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."})),nn(r[0]>=1&&r[1]>=1,(function(){return"cropSize must be atleast [1,1], but was "+r})),nn("bilinear"===a||"nearest"===a,(function(){return"method must be bilinear or nearest, but was "+a})),mr.runKernelFunc((function(e,t){return e.cropAndResize(s,o,u,r,a,i)}),{images:s,boxes:o,boxInd:u},null,"CropAndResize",{method:a,extrapolationValue:i,cropSize:r})}}),Tp=Object.freeze({resizeBilinear:kp,resizeNearestNeighbor:Ip,nonMaxSuppression:Cp,nonMaxSuppressionAsync:function(e,t,n,r,a){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),Bt(this,void 0,void 0,(function(){var i,s,o,u,l,c,h;return zt(this,(function(d){switch(d.label){case 0:return i=Na(e,"boxes","nonMaxSuppressionAsync"),s=Na(t,"scores","nonMaxSuppressionAsync"),o=wp(i,s,n,r,a),n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold,[4,Promise.all([i.data(),s.data()])];case 1:return u=d.sent(),l=u[0],c=u[1],h=wo(l,c,n,r,a),i!==e&&i.dispose(),s!==t&&s.dispose(),[2,h]}}))}))},nonMaxSuppressionWithScore:Sp,nonMaxSuppressionWithScoreAsync:function(e,t,n,r,a,i){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===i&&(i=0),Bt(this,void 0,void 0,(function(){var s,o,u,l,c,h,d;return zt(this,(function(p){switch(p.label){case 0:return s=Na(e,"boxes","nonMaxSuppressionAsync"),o=Na(t,"scores","nonMaxSuppressionAsync"),u=wp(s,o,n,r,a,i),n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma,[4,Promise.all([s.data(),o.data()])];case 1:return l=p.sent(),c=l[0],h=l[1],d=ko(c,h,n,r,a,i),s!==e&&s.dispose(),o!==t&&o.dispose(),[2,d]}}))}))},cropAndResize:Np}),Ep=function(e,t){return!(e>0)||"linear"===t},Rp=function(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return e.mul(t.step());throw new Error("Gradient for activation "+n+" has not been implemented yet.")},Ap=function(e,t){var n=t,r=_i(e.shape,t.shape);return r.length>0&&(n=n.sum(r)),n.reshape(e.shape)},Dp=function(e,t,n){if("linear"===t)return e;if("relu"===t)return Fd(e);if("elu"===t)return Ad(e);if("relu6"===t)return _d(e);if("prelu"===t)return $d(e,n);throw new Error("Unknown fused activation "+t+".")},$p=Pa({fusedMatMul_:function(e){var t,n=e.a,r=e.b,a=e.transposeA,i=void 0!==a&&a,s=e.transposeB,o=void 0!==s&&s,u=e.bias,l=e.activation,c=void 0===l?"linear":l,h=e.preluActivationWeights;if(!1===Ep(mr.state.gradientDepth,c)){var d=Qh(n,r,i,o);return null!=u&&(d=$i(d,u)),Dp(d,c,h)}var p=Na(n,"a","fused matMul"),f=Na(r,"b","fused matMul");t=cr(p,f),p=t[0],f=t[1];var m=i?p.shape[p.rank-2]:p.shape[p.rank-1],g=o?f.shape[f.rank-1]:f.shape[f.rank-2],v=i?p.shape[p.rank-1]:p.shape[p.rank-2],y=o?f.shape[f.rank-2]:f.shape[f.rank-1],b=p.shape.slice(0,-2),x=f.shape.slice(0,-2),w=on(b),k=on(x);nn(p.rank>=2&&f.rank>=2&&p.rank===f.rank,(function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+p.rank+" and "+f.rank+"."})),nn(un(b,x),(function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+x+") of Tensors with shapes "+p.shape+" and "+f.shape+" must match."})),nn(m===g,(function(){return"Error in fused matMul: inner shapes ("+m+") and ("+g+") of Tensors with shapes "+p.shape+" and "+f.shape+" and transposeA="+i+" and transposeB="+o+" must match."}));var I,C,S=p.shape.slice(0,-2).concat([v,y]),N=i?p.as3D(w,m,v):p.as3D(w,v,m),T=o?f.as3D(k,y,g):f.as3D(k,g,y);null!=u&&Oi(S,(I=cr(I=Na(u,"bias","fused matMul"),p)[0]).shape),null!=h&&(C=Na(h,"prelu weights","fused matMul"));var E={a:N,b:T};null!=u&&(E.bias=I),null!=h&&(E.preluActivationWeights=C);var R=[N,T];return mr.runKernelFunc((function(e,t){var n=e.fusedBatchMatMul({a:N,b:T,transposeA:i,transposeB:o,bias:I,activation:c,preluActivationWeights:C});return t([N,T,n]),n}),E,(function(e,t){var n=t[0],r=t[1],a=t[2],s=Rp(e,a,c),l={};return null!=u&&(l={bias:function(){return Ap(I,s)}}),i||o?!i&&o?Object.assign({a:function(){return s.matMul(r,!1,!1)},b:function(){return s.matMul(n,!0,!1)}},l):i&&!o?Object.assign({a:function(){return r.matMul(s,!1,!0)},b:function(){return n.matMul(s,!1,!1)}},l):Object.assign({a:function(){return r.matMul(s,!0,!0)},b:function(){return s.matMul(n,!0,!0)}},l):Object.assign({a:function(){return s.matMul(r,!1,!0)},b:function(){return n.matMul(s,!0,!1)}},l)}),"_FusedMatMul",{transposeA:i,transposeB:o,activation:c},R,[!0]).reshape(S)}}),Fp=Pa({fusedConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,i=e.dataFormat,s=void 0===i?"NHWC":i,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,d=void 0===h?"linear":h,p=e.preluActivationWeights;if(d=d||"linear",!1===Ep(mr.state.gradientDepth,d)){var f=Wh(t,n,r,a,s,u,l);return null!=c&&(f=$i(f,c)),Dp(f,d,p)}var m=Na(t,"x","conv2d"),g=Na(n,"filter","conv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),nn(4===v.rank,(function(){return"Error in fused conv2d: input must be rank 4, but got rank "+v.rank+"."})),nn(4===g.rank,(function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+g.rank+"."})),null!=l&&nn(ln(a),(function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+l+" but got pad "+a+"."})),nn(v.shape[3]===g.shape[2],(function(){return"Error in conv2d: depth of input ("+v.shape[3]+") must match input depth for filter "+g.shape[2]+"."})),nn(lo(r,u),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),nn("NHWC"===s,(function(){return"Error in conv2d: got dataFormat of "+s+" but only NHWC is currently supported."}));var b,x,w=to(v.shape,g.shape,r,u,a,l);null!=c&&(b=cr(b=Na(c,"bias","fused conv2d"),m)[0],Oi(w.outShape,b.shape)),null!=p&&(x=Na(p,"prelu weights","fused conv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=p&&(k.preluActivationWeights=x);var I=[g,v],C=mr.runKernelFunc((function(e,t){var n=e.fusedConv2d({input:v,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){var n=t,i=n[0],s=n[1],o=n[2],l=Rp(e,o,d);nn(uo(u),(function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"}));var h={};return null!=c&&(h={bias:function(){return Ap(b,l)}}),Object.assign({x:function(){return Gh(s.shape,l,i,r,a)},filter:function(){return Uh(s,l,i.shape,r,a)}},h)}),"FusedConv2D",{convInfo:w,activation:d},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),_p=Pa({fusedDepthwiseConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,i=e.dataFormat,s=void 0===i?"NHWC":i,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,d=void 0===h?"linear":h,p=e.preluActivationWeights;if(!1===Ep(mr.state.gradientDepth,d)){var f=Hh(t,n,r,a,s,u,l);return null!=c&&(f=$i(f,c)),Dp(f,d,p)}var m=Na(t,"x","depthwiseConv2d"),g=Na(n,"filter","depthwiseConv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),nn(4===v.rank,(function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+v.rank+"."})),nn(4===g.rank,(function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+g.rank+"."})),nn(v.shape[3]===g.shape[2],(function(){return"Error in fused depthwiseConv2d: number of input channels ("+v.shape[3]+") must match the inChannels dimension in filter "+g.shape[2]+"."})),null==u&&(u=[1,1]),nn(lo(r,u),(function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),null!=l&&nn(ln(a),(function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+l+" but got pad "+a+"."}));var b,x,w=to(v.shape,g.shape,r,u,a,l,!0);null!=c&&(b=cr(b=Na(c,"bias","fused conv2d"),m)[0],Oi(w.outShape,b.shape)),null!=p&&(x=Na(p,"prelu weights","fused depthwiseConv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=p&&(k.preluActivationWeights=x);var I=[g,v],C=mr.runKernelFunc((function(e,t){var n=e.fusedDepthwiseConv2D({input:v,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){nn(uo(u),(function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"}));var n=t[0],r=t[1],a=t[2],i=Rp(e,a,d),s={};return null!=c&&(s={bias:function(){return Ap(b,i)}}),Object.assign({x:function(){return jh(r.shape,i,n,w)},filter:function(){return qh(r,i,n.shape,w)}},s)}),"FusedDepthwiseConv2D",{convInfo:w,activation:d},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),Op=Object.freeze({matMul:$p,conv2d:Fp,depthwiseConv2d:_p}),Mp=Object.freeze({image:Tp,linalg:xp,losses:mp,spectral:Kd,fused:Op,signal:ip,add:$i,addN:Ec,batchNorm:_c,batchNormalization:Fc,batchNorm2d:Lc,batchNormalization2d:Mc,batchNorm3d:zc,batchNormalization3d:Bc,batchNorm4d:Uc,batchNormalization4d:Vc,broadcastTo:Gc,clone:Hc,div:Fs,divNoNan:Jc,eye:eh,multinomial:th,oneHot:nh,pad:rh,pad1d:ah,pad2d:ih,pad3d:sh,pad4d:oh,rand:uh,randomGamma:mh,randomNormal:gh,randomUniform:vh,square:yh,squaredDifference:bh,tile:Zc,truncatedNormal:xh,conv1d:zh,conv2d:Wh,conv3d:Vh,depthwiseConv2d:Hh,separableConv2d:Kh,conv2dTranspose:Xh,conv3dTranspose:Yh,op:Pa,booleanMaskAsync:function(e,t,n){return Bt(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m;return zt(this,(function(g){switch(g.label){case 0:for(r=Na(e,"tensor","boolMask"),a=Na(t,"mask","boolMask","bool"),i=null==n?0:n,s=a.rank,o=r.shape,nn(s>0,(function(){return"mask cannot be scalar"})),rn(o.slice(i,i+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,"),u=1,l=i;l<i+s;l++)u*=o[l];return c=o.slice(0,i).concat([u],o.slice(i+s)),h=r.reshape(c),d=a.reshape([-1]),[4,Qc(d)];case 1:return p=g.sent(),f=p.squeeze([1]),m=Oh(h,f,i),e!==r&&r.dispose(),t!==a&&a.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,m]}}))}))},complex:Ba,real:za,imag:Wa,concat:ni,concat1d:ri,concat2d:ai,concat3d:ii,concat4d:si,split:oi,matMul:Qh,dot:Jh,outerProduct:Zh,reverse:ed,reverse1d:td,reverse2d:nd,reverse3d:rd,reverse4d:ad,maxPool:od,avgPool:ud,pool:ld,maxPool3d:cd,avgPool3d:hd,maxPoolWithArgmax:dd,slice:pd,slice1d:fd,slice2d:md,slice3d:gd,slice4d:vd,abs:Mi,acos:Li,acosh:Pi,asin:Bi,asinh:zi,atan:Wi,atanh:Vi,ceil:Ui,clipByValue:Gi,cos:Hi,cosh:ji,erf:qi,exp:Ki,expm1:Xi,floor:Yi,log:Qi,log1p:Ji,logSigmoid:Zi,neg:es,reciprocal:ts,round:ns,rsqrt:rs,sigmoid:as,sign:is,isNaN:ss,isInf:os,isFinite:us,sin:ls,sinh:cs,softplus:hs,sqrt:ds,step:ps,tan:fs,tanh:ms,all:bd,any:xd,argMax:wd,argMin:kd,logSumExp:Id,max:Cd,mean:Sd,min:Nd,moments:Td,sum:Ed,prod:Rd,equal:wh,equalStrict:kh,greater:Ih,greaterEqual:Ch,greaterEqualStrict:Sh,greaterStrict:Nh,less:Th,lessEqual:Eh,lessEqualStrict:Rh,lessStrict:Ah,notEqual:Dh,notEqualStrict:$h,addStrict:gs,atan2:vs,divStrict:ys,floorDiv:bs,maximum:xs,maximumStrict:ws,minimum:ks,minimumStrict:Is,mod:Cs,modStrict:Ss,mul:Ns,mulStrict:Ts,pow:Es,powStrict:Rs,squaredDifferenceStrict:As,sub:Ds,subStrict:$s,elu:Ad,leakyRelu:Dd,prelu:$d,relu:Fd,relu6:_d,selu:Od,logicalAnd:jc,logicalNot:qc,logicalOr:Kc,logicalXor:Xc,where:Yc,whereAsync:Qc,buffer:ui,print:function(e,t){void 0===t&&(t=!1),console.log(e.toString(t))},batchToSpaceND:li,cast:ci,cumsum:hi,depthToSpace:di,expandDims:pi,reshape:fi,spaceToBatchND:mi,squeeze:gi,stack:vi,unstack:yi,setdiff1dAsync:bi,fill:Qa,linspace:Ja,ones:Xa,range:Za,scalar:Ga,tensor:Va,tensor1d:Ha,tensor2d:ja,tensor3d:qa,tensor4d:Ka,tensor5d:function(e,t,n){if(an(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");var r=Ca(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ua(e,t,r,n)},tensor6d:function(e,t,n){if(an(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");var r=Ca(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ua(e,t=t||r,r,n)},variable:function(e,t,n,r){return void 0===t&&(t=!0),mr.makeVariable(e,t,n,r)},zeros:Ya,onesLike:ei,zerosLike:ti,transpose:Xs,softmax:qs,logSoftmax:Ks,localResponseNormalization:Md,norm:Ld,gather:Oh,unsortedSegmentSum:Mh,basicLSTMCell:Pd,multiRNNCell:Bd,movingAverage:zd,stridedSlice:Wd,topk:Vd,scatterND:Ud,fft:Gd,ifft:Hd,rfft:jd,irfft:qd,sparseToDense:Xd,gatherND:Yd,diag:Qd,dropout:Jd,hannWindow:tp,hammingWindow:np,frame:rp,stft:ap,inTopKAsync:function(e,t,n){return void 0===n&&(n=1),Bt(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g;return zt(this,(function(v){switch(v.label){case 0:return r=Na(e,"predictions","inTopK"),a=Na(t,"targets","inTopK"),nn(r.rank>1,(function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank})),nn(r.rank-1===a.rank,(function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+a.rank})),rn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),i=r.shape[r.shape.length-1],nn(n>0&&n<=i,(function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+i+"), but got "+n})),[4,r.data()];case 1:return s=v.sent(),[4,a.data()];case 2:for(o=v.sent(),u=[s.length/i,i],c=u[1],h=vn("bool",l=u[0]),d=0;d<l;d++){for(p=d*c,f=s.subarray(p,p+c),m=[],g=0;g<f.length;g++)m.push({value:f[g],index:g});for(m.sort((function(e,t){return t.value-e.value})),h[d]=0,g=0;g<n;g++)if(m[g].index===o[d]){h[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),[2,Va(h,a.shape,"bool")]}}))}))}});function Lp(e,t){Array.isArray(e)||(e=[e]),e.forEach((function(e){null!=e&&nn("complex64"!==e.dtype,(function(){return t+" does not support complex64 tensors."}))}))}function Pp(e,t,n,r,a,i){for(var s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ui(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3],x=0;x<a.batchSize;++x)for(var w=x*v,k=x*r[0],I=0;I<a.inChannels;++I)for(var C=0;C<a.outHeight;++C)for(var S=C*s-d,N=Math.max(0,S),T=Math.min(a.inHeight,c+S),E=w+C*y,R=0;R<a.outWidth;++R){for(var A=R*o-p,D=Math.max(0,A),$=Math.min(a.inWidth,h+A),F=f,_=0,O=0,M=N;M<T;M+=u){for(var L=k+M*r[1],P=D;P<$;P+=l){var B=e[L+P*r[2]+I];"max"===i&&B>F?F=B:"avg"===i&&(_+=B,O++)}if(isNaN(F))break}g[E+R*b+I]="avg"===i?_/O:F}return m}function Bp(e,t,n,r,a,i){void 0===a&&(a=!1),void 0===i&&(i=!1);for(var s=ui(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=ui(t,n,e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.outHeight;++y){for(var b=y*o-p,x=b;x<0;)x+=l;for(var w=Math.min(r.inHeight,h+b),k=0;k<r.outWidth;++k){for(var I=k*u-f,C=I;C<0;)C+=c;for(var S=Math.min(r.inWidth,d+I),N=Number.NEGATIVE_INFINITY,T=-1,E=x;E<w;E+=l)for(var R=E-b,A=C;A<S;A+=c){var D=A-I,$=m.get(g,E,A,v);$>N&&(N=$,T=a?i?((g*r.inHeight+E)*r.inWidth+A)*r.inChannels+v:(E*r.inWidth+A)*r.inChannels+v:R*d+D)}s.set(T,g,y,k,v)}}return s}function zp(e,t,n,r){if("linear"===n)return e.linear(t);if("relu"===n)return e.relu(t);if("elu"===n)return e.elu(t);if("relu6"===n)return e.relu6(t);if("prelu"===n)return e.prelu(t,r);throw new Error("Activation "+n+" has not been implemented for the CPU backend.")}var Wp=function(e){function t(){var t=e.call(this)||this;return t.blockSize=48,t.firstUse=!0,t.data=new Ys(t,mr),t}return Pt(t,e),t.prototype.write=function(e,t,n){this.firstUse&&(this.firstUse=!1,Vt().get("IS_NODE")&&Ia("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var r={};return this.data.set(r,{values:e,dtype:n}),r},t.prototype.move=function(e,t,n,r){this.data.set(e,{values:t,dtype:r})},t.prototype.numDataIds=function(){return this.data.numDataIds()},t.prototype.read=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(t){return[2,this.readSync(e)]}))}))},t.prototype.readSync=function(e){var t=this.data.get(e),n=t.dtype,r=t.complexTensors;return"complex64"===n?mo(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(e).values},t.prototype.bufferSync=function(e){var t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((function(e){return Bn(e)}))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ui(e.shape,e.dtype,n)},t.prototype.makeOutput=function(e,t,n){var r=this.write(e,t,n);return mr.makeTensorFromDataId(r,t,n,this)},t.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.data.delete(e)}},t.prototype.time=function(e){return Bt(this,void 0,void 0,(function(){var t;return zt(this,(function(n){return t=Mn(),e(),[2,{kernelMs:Mn()-t}]}))}))},t.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},t.prototype.complex=function(e,t){var n=this.makeOutput(null,e.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:mr.keep(e.clone()),imag:mr.keep(t.clone())},n},t.prototype.real=function(e){return this.data.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.data.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(Lp(e,"slice"),Gs(e.shape,t,n)){var r=Hs(t,e.strides),a=on(n);return Va(this.readSync(e.dataId).subarray(r,r+a),n,e.dtype)}for(var i=ui(n,e.dtype),s=this.bufferSync(e),o=0;o<i.size;++o){var u=i.indexToLoc(o).map((function(e,n){return e+t[n]}));i.values[o]=s.get.apply(s,u)}return i.toTensor()},t.prototype.stridedSlice=function(e,t,n,r){Lp(e,"stridedSlice");var a=Ws(t,n,r);if(a.some((function(e){return 0===e})))return Va([],a);for(var i=ui(a,e.dtype),s=this.bufferSync(e),o=0;o<i.size;o++){for(var u=i.indexToLoc(o),l=new Array(u.length),c=0;c<l.length;c++)l[c]=u[c]*r[c]+t[c];i.set.apply(i,[s.get.apply(s,l)].concat(u))}return i.toTensor()},t.prototype.diag=function(e){for(var t=this.readSync(e.dataId),n=ui([e.size,e.size],e.dtype),r=n.values,a=0;a<t.length;a++)r[a*e.size+a]=t[a];return n.toTensor()},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,i=0;i<e.rank;i++)i!==t&&(r[a++]=e.shape[i]);var s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(i=0;i<u.length;i++)s[t]=i,u[i]=this.slice(e,s,o).reshape(r);return u},t.prototype.reverse=function(e,t){Lp(e,"reverse");for(var n=ui(e.shape,e.dtype),r=this.bufferSync(e),a=function(a){var i=n.indexToLoc(a),s=i.slice();t.forEach((function(t){return s[t]=e.shape[t]-1-s[t]})),n.set.apply(n,[r.get.apply(r,s)].concat(i))},i=0;i<n.size;i++)a(i);return n.toTensor()},t.prototype.concat=function(e,t){var n=this;if("complex64"===e[0].dtype){var r=e.map((function(e){return za(e)})),a=e.map((function(e){return Wa(e)}));return Ba(this.concat(r,t),this.concat(a,t))}var i=e.map((function(e){var n=on(e.shape.slice(t));return e.as2D(-1,n)})),s=La(i.map((function(e){return e.shape})),1),o=ui(s,e[0].dtype).values;if(1===i[0].shape[0]){var u=0;i.forEach((function(e){o.set(n.readSync(e.dataId),u),u+=e.size}))}else{var l=0;i.forEach((function(e){for(var t=n.readSync(e.dataId),r=0,a=0;a<e.shape[0];++a)for(var i=a*s[1]+l,u=0;u<e.shape[1];++u)o[i+u]=t[r++];l+=e.shape[1]}))}var c=La(e.map((function(e){return e.shape})),t);return Va(o,c,e[0].dtype)},t.prototype.neg=function(e){return Lp(e,"neg"),this.multiply(Ga(-1),e)},t.prototype.add=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e+n,imag:t+r}})):this.broadcastedBinaryOp(e,t,ur(e.dtype,t.dtype),(function(e,t){return e+t}))},t.prototype.addN=function(e){var t=this;Lp(e,"addN");for(var n=e.map((function(e){return t.readSync(e.dataId)})),r=ui(e[0].shape,e[0].dtype),a=r.values,i=0;i<e.length;i++)for(var s=n[i],o=0;o<a.length;o++)a[o]+=s[o];return r.toTensor()},t.prototype.softmax=function(e,t){var n=mn([t],e.shape),r=this.max(e,n),a=Da(r.shape,n),i=this.subtract(e,r.reshape(a)),s=this.exp(i),o=this.sum(s,n).reshape(a);return Fs(s,o)},t.prototype.subtract=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e-n,imag:t-r}})):this.broadcastedBinaryOp(e,t,ur(e.dtype,t.dtype),(function(e,t){return e-t}))},t.prototype.pow=function(e,t){return Lp([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.pow(e,t)}))},t.prototype.batchMatMul=function(e,t,n,r){Lp([e,t],"matMul");for(var a=n?e.shape[1]:e.shape[2],i=n?e.shape[2]:e.shape[1],s=r?t.shape[1]:t.shape[2],o=e.shape[0],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=n?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],h=c[0],d=c[1],p=c[2],f=r?[1,t.strides[1],t.strides[0]]:[t.strides[1],1,t.strides[0]],m=f[0],g=f[1],v=f[2],y=i*s,b=ui([o,i,s],e.dtype),x=b.values,w=this.blockSize,k=0;k<o;k++)for(var I=0;I<i;I+=w)for(var C=0;C<s;C+=w)for(var S=0;S<a;S+=w)for(var N=Math.min(I+w,i),T=Math.min(C+w,s),E=Math.min(S+w,a),R=I;R<N;R++)for(var A=C;A<T;A++){for(var D=0,$=S;$<E;$++)D+=u[k*h+R*d+$*p]*l[$*m+A*g+k*v];x[k*y+(R*s+A)]+=D}return b.toTensor()},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,i=e.bias,s=e.activation,o=e.preluActivationWeights,u=this.batchMatMul(t,n,r,a);return i&&(u=this.add(u,i)),s&&(u=zp(this,u,s,o)),u},t.prototype.multiply=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e*n-t*r,imag:e*r+t*n}})):this.broadcastedBinaryOp(e,t,ur(e.dtype,t.dtype),(function(e,t){return e*t}))},t.prototype.floorDiv=function(e,t){return Lp([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",(function(e,t){return Math.floor(e/t)}))},t.prototype.sum=function(e,t){Lp(e,"sum"),$a("sum",t,e.rank);for(var n=Aa(e.shape,t),r=n[0],a=n[1],i=Ya(r,ur(e.dtype,"int32")),s=on(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=0,d=0;d<s;++d)h+=u[c+d];o[l]=h}return i},t.prototype.prod=function(e,t){Lp(e,"sum");for(var n=Aa(e.shape,t),r=n[0],a=n[1],i=Ya(r,ur(e.dtype,"int32")),s=on(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=1,d=0;d<s;++d)h*=u[c+d];o[l]=h}return i},t.prototype.unsortedSegmentSum=function(e,t,n){Lp(e,"unsortedSegmentSum");for(var r=[],a=e.rank-t.rank,i=0;i<a;++i)t=t.expandDims(i+1);for(i=0;i<n;++i){var s=Ga(i,"int32"),o=wh(s,t).asType("float32").mul(e).sum(0);r.push(o)}return vi(r)},t.prototype.argMin=function(e,t){Lp(e,"argMin");var n=[t];$a("argMin",n,e.rank);for(var r=Aa(e.shape,n),a=r[0],i=r[1],s=Ya(a,"int32"),o=on(i),u=this.readSync(s.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,d=l[h],p=0,f=0;f<o;++f){var m=l[h+f];m<d&&(d=m,p=f)}u[c]=p}return s},t.prototype.argMax=function(e,t){Lp(e,"argMax");var n=[t];$a("argMax",n,e.rank);for(var r=Aa(e.shape,n),a=r[0],i=r[1],s=Ya(a,"int32"),o=on(i),u=this.readSync(s.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,d=l[h],p=0,f=0;f<o;++f){var m=l[h+f];m>d&&(d=m,p=f)}u[c]=p}return s},t.prototype.cumsum=function(e,t,n,r){if(Lp(e,"cumsum"),t!==e.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(e.rank-1)+" but got axis="+t);for(var a=ur(e.dtype,"int32"),i=Ya(e.shape,a),s=this.readSync(i.dataId),o=this.readSync(e.dataId),u=e.shape[e.rank-1],l=r?function(e,t){return e+u-t-1}:function(e,t){return e+t},c=0;c<o.length;c+=u)for(var h=0;h<u;h++){var d=l(c,h);if(0===h)s[d]=n?0:o[d];else{var p=l(c,h-1);s[d]=n?o[p]+s[p]:o[d]+s[p]}}return i},t.prototype.equal=function(e,t){return Lp([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e===t?1:0}))},t.prototype.notEqual=function(e,t){return Lp([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e!==t?1:0}))},t.prototype.less=function(e,t){return Lp([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<t?1:0}))},t.prototype.lessEqual=function(e,t){return Lp([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<=t?1:0}))},t.prototype.greater=function(e,t){return Lp([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>t?1:0}))},t.prototype.greaterEqual=function(e,t){return Lp([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>=t?1:0}))},t.prototype.logicalNot=function(e){Lp(e,"logicalNot");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t[r]?0:1;return this.makeOutput(n,e.shape,"bool")},t.prototype.logicalAnd=function(e,t){return Lp([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e&&t}))},t.prototype.logicalOr=function(e,t){return Lp([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e||t}))},t.prototype.select=function(e,t,n){Lp([e,t,n],"select");for(var r=this.readSync(e.dataId),a=this.readSync(t.dataId),i=this.readSync(n.dataId),s=Ya(t.shape,ur(t.dtype,n.dtype)),o=this.readSync(s.dataId),u=0,l=0===e.rank||e.rank>1||1===t.rank?1:on(t.shape.slice(1)),c=0;c<r.length;c++)for(var h=0;h<l;h++)1===r[c]?o[u++]=a[c]:o[u++]=i[c];return s},t.prototype.where=function(e){Lp([e],"where");var t=this.readSync(e.dataId);return Ao(e.shape,t)},t.prototype.topk=function(e,t,n){return Lp(e,"topk"),Ro(this.readSync(e.dataId),e.shape,e.dtype,t)},t.prototype.min=function(e,t){Lp(e,"min"),$a("min",t,e.rank);for(var n=Aa(e.shape,t),r=n[0],a=n[1],i=Ya(r,e.dtype),s=on(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];p<h&&(h=p)}o[l]=h}return i},t.prototype.minimum=function(e,t){return Lp([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.min(e,t)}))},t.prototype.mod=function(e,t){return Lp([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))},t.prototype.max=function(e,t){Lp(e,"max"),$a("max",t,e.rank);for(var n=Aa(e.shape,t),r=n[0],a=n[1],i=Ya(r,e.dtype),s=on(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];p>h&&(h=p)}o[l]=h}return i},t.prototype.maximum=function(e,t){return Lp([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.max(e,t)}))},t.prototype.all=function(e,t){Lp(e,"all"),$a("all",t,e.rank);for(var n=Aa(e.shape,t),r=n[0],a=n[1],i=Ya(r,e.dtype),s=on(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];h=h&&p}o[l]=h}return i},t.prototype.any=function(e,t){Lp(e,"any"),$a("any",t,e.rank);for(var n=Aa(e.shape,t),r=n[0],a=n[1],i=Ya(r,e.dtype),s=on(a),o=this.readSync(i.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*s,h=u[c],d=0;d<s;++d){var p=u[c+d];h=h||p}o[l]=h}return i},t.prototype.squaredDifference=function(e,t){return Lp([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e-t;return n*n}))},t.prototype.ceil=function(e){Lp(e,"ceil");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.ceil(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.floor=function(e){Lp(e,"floor");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.floor(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.sign=function(e){Lp(e,"x");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)t[r]<0?n[r]=-1:t[r]>0?n[r]=1:n[r]=0;return this.makeOutput(n,e.shape,"float32")},t.prototype.isNaN=function(e){Lp(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isNaN(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isInf=function(e){Lp(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Math.abs(t[r])===1/0&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isFinite=function(e){Lp(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isFinite(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.round=function(e){Lp(e,"round");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=Math.floor(t[r]);t[r]-a<.5?n[r]=Math.floor(t[r]):t[r]-a>.5?n[r]=Math.ceil(t[r]):n[r]=a%2==0?a:a+1}return this.makeOutput(n,e.shape,"float32")},t.prototype.exp=function(e){Lp(e,"exp");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.exp(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.expm1=function(e){Lp(e,"expm1");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.expm1(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.log=function(e){Lp(e,"log");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.log1p=function(e){Lp(e,"log1p");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log1p(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.sqrt=function(e){Lp(e,"sqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.rsqrt=function(e){Lp(e,"rsqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=1/Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.reciprocal=function(e){Lp(e,"reciprocal");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=1/t[r];return this.makeOutput(n,e.shape,"float32")},t.prototype.linear=function(e){return e},t.prototype.relu=function(e){Lp(e,"relu");for(var t=Ya(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.max(0,r[a]);return t},t.prototype.relu6=function(e){Lp(e,"relu");for(var t=Ya(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.min(Math.max(0,r[a]),6);return t},t.prototype.prelu=function(e,t){return Lp([e,t],"prelu"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return e<0?t*e:e}))},t.prototype.elu=function(e){Lp(e,"elu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?a:Math.exp(a)-1}return this.makeOutput(t,e.shape,"float32")},t.prototype.eluDer=function(e,t){Lp([e,t],"eluDer");for(var n=new Float32Array(t.size),r=this.readSync(t.dataId),a=this.readSync(e.dataId),i=0;i<r.length;++i){var s=r[i];n[i]=s>=1?a[i]:a[i]*(s+1)}return this.makeOutput(n,t.shape,"float32")},t.prototype.selu=function(e){Lp(e,"selu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?1.0507009873554805*a:1.7580993408473768*(Math.exp(a)-1)}return this.makeOutput(t,e.shape,"float32")},t.prototype.clip=function(e,t,n){Lp(e,"clip");for(var r=new Float32Array(e.size),a=this.readSync(e.dataId),i=0;i<a.length;++i){var s=a[i];r[i]=s>n?n:s<t?t:s}return this.makeOutput(r,e.shape,"float32")},t.prototype.abs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.abs(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.complexAbs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<e.size;++r){var a=n[2*r],i=n[2*r+1];t[r]=Math.hypot(a,i)}return this.makeOutput(t,e.shape,"float32")},t.prototype.int=function(e){Lp(e,"int");for(var t=new Int32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=n[r];return this.makeOutput(t,e.shape,"int32")},t.prototype.sigmoid=function(e){Lp(e,"sigmoid");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=1/(1+Math.exp(-n[r]));return this.makeOutput(t,e.shape,"float32")},t.prototype.softplus=function(e){Lp(e,"softplus");for(var t=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var i,s=r[a]>-t,o=r[a]<t,u=Math.exp(r[a]);i=o?u:s?r[a]:Math.log(1+u),n[a]=i}return this.makeOutput(n,e.shape,"float32")},t.prototype.sin=function(e){Lp(e,"sin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cos=function(e){Lp(e,"cos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tan=function(e){Lp(e,"tan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.tan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asin=function(e){Lp(e,"asin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acos=function(e){Lp(e,"acos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan=function(e){Lp(e,"atan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan2=function(e,t){return Lp([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.atan2(e,t)}))},t.prototype.sinh=function(e){Lp(e,"sinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cosh=function(e){Lp(e,"cosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tanh=function(e){Lp(e,"tanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=cn(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asinh=function(e){Lp(e,"asinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acosh=function(e){Lp(e,"acosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atanh=function(e){Lp(e,"atanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atanh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.erf=function(e){Lp(e,"erf");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=Math.sign(n[r]),i=Math.abs(n[r]),s=1/(1+.3275911*i);t[r]=a*(1-((((1.061405429*s-1.453152027)*s+1.421413741)*s-.284496736)*s+.254829592)*s*Math.exp(-i*i))}return this.makeOutput(t,e.shape,"float32")},t.prototype.step=function(e,t){void 0===t&&(t=0),Lp(e,"step");for(var n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var i=r[a];isNaN(i)?n[a]=NaN:n[a]=i>0?1:t}return this.makeOutput(n,e.shape,"float32")},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights,o=this.conv2d(t,n,r);return a&&(o=this.add(o,a)),i&&(o=zp(this,o,i,s)),o},t.prototype.conv2d=function(e,t,n){Lp([e,t],"conv2d");for(var r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,s=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l="channelsLast"===n.dataFormat,c=ui(n.outShape,e.dtype),h=e.strides[0],d=l?e.strides[1]:e.strides[2],p=l?e.strides[2]:1,f=l?1:e.strides[1],m=c.strides[0],g=l?c.strides[1]:c.strides[2],v=l?c.strides[2]:1,y=l?1:c.strides[1],b=this.readSync(e.dataId),x=this.readSync(t.dataId),w=c.values,k=0;k<n.batchSize;++k)for(var I=k*h,C=k*m,S=0;S<n.outHeight;++S)for(var N=C+S*g,T=S*n.strideHeight-u,E=0;E<r;E++){var R=T+E*i;if(!(R<0||R>=n.inHeight))for(var A=E*t.strides[0],D=I+R*d,$=0;$<n.outWidth;++$)for(var F=N+$*v,_=$*n.strideWidth-o,O=0;O<a;O++){var M=_+O*s;if(!(M<0||M>=n.inWidth))for(var L=D+M*p,P=A+O*t.strides[1],B=0;B<n.inChannels;++B){for(var z=b[L+B*f],W=0;W<n.outChannels;++W)w[F+W*y]+=z*x[P+W];P+=n.outChannels}}}return c.toTensor()},t.prototype.conv3d=function(e,t,n){for(var r=n.filterDepth,a=n.filterHeight,i=n.filterWidth,s=n.dilationDepth,o=n.dilationHeight,u=n.dilationWidth,l=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,d=ui(n.outShape,e.dtype),p=this.readSync(e.dataId),f=this.readSync(t.dataId),m=d.values,g=0;g<n.batchSize;++g)for(var v=g*e.strides[0],y=g*d.strides[0],b=0;b<n.outDepth;++b)for(var x=y+b*d.strides[1],w=b*n.strideDepth-l,k=0;k<r;k++){var I=w+k*s;if(!(I<0||I>=n.inDepth))for(var C=k*t.strides[0],S=v+I*e.strides[1],N=0;N<n.outHeight;++N)for(var T=x+N*d.strides[2],E=N*n.strideHeight-h,R=0;R<a;R++){var A=E+R*o;if(!(A<0||A>=n.inHeight))for(var D=C+R*t.strides[1],$=S+A*e.strides[2],F=0;F<n.outWidth;++F)for(var _=T+F*n.outChannels,O=F*n.strideWidth-c,M=0;M<i;M++){var L=O+M*u;if(!(L<0||L>=n.inWidth))for(var P=D+M*t.strides[2],B=$+L*n.inChannels,z=P,W=0;W<n.inChannels;++W){for(var V=p[B+W],U=0;U<n.outChannels;++U)m[_+U]+=V*f[z+U];z+=n.outChannels}}}}return d.toTensor()},t.prototype.conv2dDerInput=function(e,t,n){Lp([e,t],"conv2dDerInput");for(var r=ui(n.inShape,"float32"),a=r.values,i=this.readSync(e.dataId),s=this.readSync(t.dataId),o=t.strides,u=o[0],l=o[1],c=o[2],h=n.batchSize,d=n.filterHeight,p=n.filterWidth,f=n.inChannels,m=n.inHeight,g=n.inWidth,v=n.outChannels,y=n.outHeight,b=n.outWidth,x=n.strideHeight,w=n.strideWidth,k=n.dataFormat,I=d-1-n.padInfo.top,C=p-1-n.padInfo.left,S="channelsLast"===k,N=r.strides[0],T=S?r.strides[1]:r.strides[2],E=S?r.strides[2]:1,R=S?1:r.strides[1],A=e.strides[0],D=S?e.strides[1]:e.strides[2],$=S?e.strides[2]:1,F=S?1:e.strides[1],_=0;_<h;++_)for(var O=0;O<f;++O)for(var M=0;M<m;++M)for(var L=M-I,P=Math.max(0,Math.ceil(L/x)),B=Math.min(y,(d+L)/x),z=0;z<g;++z){for(var W=z-C,V=Math.max(0,Math.ceil(W/w)),U=Math.min(b,(p+W)/w),G=0,H=P;H<B;++H)for(var j=H*x-L,q=V;q<U;++q)for(var K=A*_+D*H+$*q,X=u*(d-1-j)+l*(p-1-(q*w-W))+c*O,Y=0;Y<v;++Y)G+=i[K+F*Y]*s[X+Y];a[N*_+T*M+E*z+R*O]=G}return r.toTensor()},t.prototype.conv3dDerInput=function(e,t,n){for(var r=ui(n.inShape,"float32"),a=r.values,i=r.strides,s=i[0],o=i[1],u=i[2],l=i[3],c=this.readSync(e.dataId),h=e.strides,d=h[0],p=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=n.batchSize,I=n.filterDepth,C=n.filterHeight,S=n.filterWidth,N=n.inChannels,T=n.inDepth,E=n.inHeight,R=n.inWidth,A=n.outChannels,D=n.outDepth,$=n.outHeight,F=n.outWidth,_=n.strideDepth,O=n.strideHeight,M=n.strideWidth,L=I-1-n.padInfo.front,P=C-1-n.padInfo.top,B=S-1-n.padInfo.left,z=0;z<k;++z)for(var W=0;W<N;++W)for(var V=0;V<T;++V)for(var U=V-L,G=Math.max(0,Math.ceil(U/_)),H=Math.min(D,(I+U)/_),j=0;j<E;++j)for(var q=j-P,K=Math.max(0,Math.ceil(q/O)),X=Math.min($,(C+q)/O),Y=0;Y<R;++Y){for(var Q=Y-B,J=Math.max(0,Math.ceil(Q/M)),Z=Math.min(F,(S+Q)/M),ee=0,te=G;te<H;++te)for(var ne=te*_-U,re=K;re<X;++re)for(var ae=re*O-q,ie=J;ie<Z;++ie)for(var se=d*z+p*te+f*re+m*ie,oe=y*(I-1-ne)+b*(C-1-ae)+x*(S-1-(ie*M-Q))+w*W,ue=0;ue<A;++ue)ee+=c[se+ue]*g[oe+ue];a[s*z+o*V+u*j+l*Y+W]=ee}return r.toTensor()},t.prototype.conv2dDerFilter=function(e,t,n){Lp([e,t],"conv2dDerFilter");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o="channelsLast"===n.dataFormat,u=ui(n.filterShape,"float32"),l=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(e),d=this.bufferSync(t),p=0;p<i;++p)for(var f=Math.max(0,Math.ceil((c-p)/r)),m=Math.min(n.outHeight,(n.inHeight+c-p)/r),g=0;g<s;++g)for(var v=Math.max(0,Math.ceil((l-g)/a)),y=Math.min(n.outWidth,(n.inWidth+l-g)/a),b=0;b<n.inChannels;++b)for(var x=0;x<n.outChannels;++x){for(var w=0,k=0;k<n.batchSize;++k)for(var I=f;I<m;++I)for(var C=p+I*r-c,S=v;S<y;++S){var N=g+S*a-l;w+=o?h.get(k,C,N,b)*d.get(k,I,S,x):h.get(k,b,C,N)*d.get(k,x,I,S)}u.set(w,p,g,b,x)}return u.toTensor()},t.prototype.conv3dDerFilter=function(e,t,n){for(var r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,s=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=ui(n.filterShape,"float32"),c=l.values,h=l.strides,d=h[0],p=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=this.readSync(e.dataId),I=e.strides,C=I[0],S=I[1],N=I[2],T=I[3],E=n.padInfo.front,R=n.padInfo.left,A=n.padInfo.top,D=0;D<s;++D)for(var $=Math.max(0,Math.ceil((E-D)/r)),F=Math.min(n.outDepth,(n.inDepth+E-D)/r),_=D*d,O=0;O<o;++O)for(var M=Math.max(0,Math.ceil((A-O)/a)),L=Math.min(n.outHeight,(n.inHeight+A-O)/a),P=O*p+_,B=0;B<u;++B)for(var z=Math.max(0,Math.ceil((R-B)/i)),W=Math.min(n.outWidth,(n.inWidth+R-B)/i),V=B*f+P,U=0;U<n.inChannels;++U)for(var G=U*m+V,H=0;H<n.outChannels;++H){for(var j=0,q=0;q<n.batchSize;++q)for(var K=q*C,X=q*y,Y=$;Y<F;++Y)for(var Q=(D+Y*r-E)*S+K,J=Y*b+X,Z=M;Z<L;++Z)for(var ee=(O+Z*a-A)*N+Q,te=Z*x+J,ne=z;ne<W;++ne){var re=ne*w+te;j+=k[(B+ne*i-R)*T+ee+U]*g[re+H]}c[G+H]=j}return l.toTensor()},t.prototype.fusedDepthwiseConv2D=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,i=e.activation,s=e.preluActivationWeights,o=this.depthwiseConv2D(t,n,r);return a&&(o=this.add(o,a)),i&&(o=zp(this,o,i,s)),o},t.prototype.depthwiseConv2D=function(e,t,n){Lp([e,t],"depthwiseConv2D");for(var r=n.filterHeight,a=n.filterWidth,i=n.dilationHeight,s=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l=n.outChannels/n.inChannels,c=ui(n.outShape,e.dtype),h=this.readSync(e.dataId),d=this.readSync(t.dataId),p=c.values,f=0;f<n.batchSize;++f)for(var m=f*e.strides[0],g=f*c.strides[0],v=0;v<n.outHeight;++v)for(var y=g+v*c.strides[1],b=v*n.strideHeight-o,x=0;x<r;++x){var w=b+x*i;if(!(w<0||w>=n.inHeight))for(var k=x*t.strides[0],I=m+w*e.strides[1],C=0;C<n.outWidth;++C)for(var S=y+C*c.strides[2],N=C*n.strideWidth-u,T=0;T<a;++T){var E=N+T*s;if(!(E<0||E>=n.inWidth))for(var R=k+T*t.strides[1],A=I+E*n.inChannels,D=S,$=R,F=0;F<n.inChannels;++F){for(var _=h[A+F],O=0;O<l;++O)p[D+O]+=_*d[$+O];D+=l,$+=l}}}return c.toTensor()},t.prototype.depthwiseConv2DDerInput=function(e,t,n){Lp([e,t],"depthwiseConv2DDerInput");for(var r=ui(n.inShape,"float32"),a=r.values,i=r.strides,s=i[0],o=i[1],u=i[2],l=this.readSync(e.dataId),c=e.strides,h=c[0],d=c[1],p=c[2],f=this.readSync(t.dataId),m=t.strides,g=m[0],v=m[1],y=m[2],b=n.batchSize,x=n.filterHeight,w=n.filterWidth,k=n.inChannels,I=n.inHeight,C=n.inWidth,S=n.outChannels,N=n.outHeight,T=n.outWidth,E=n.strideHeight,R=n.strideWidth,A=x-1-n.padInfo.top,D=w-1-n.padInfo.left,$=S/k,F=0;F<b;++F)for(var _=0;_<k;++_)for(var O=0;O<I;++O)for(var M=O-A,L=Math.max(0,Math.ceil(M/E)),P=Math.min(N,(x+M)/E),B=0;B<C;++B){for(var z=B-D,W=Math.max(0,Math.ceil(z/R)),V=Math.min(T,(w+z)/R),U=0,G=L;G<P;++G)for(var H=G*E-M,j=W;j<V;++j)for(var q=h*F+d*G+p*j,K=g*(x-1-H)+v*(w-1-(j*R-z))+y*_,X=0;X<$;++X)U+=l[q+(_*$+X)]*f[K+X];a[s*F+o*O+u*B+_]=U}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){Lp([e,t],"depthwiseConv2DDerFilter");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o=ui(n.filterShape,"float32"),u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(e),d=this.bufferSync(t),p=0;p<i;++p)for(var f=Math.max(0,Math.ceil((l-p)/r)),m=Math.min(n.outHeight,(n.inHeight+l-p)/r),g=0;g<s;++g)for(var v=Math.max(0,Math.ceil((u-g)/a)),y=Math.min(n.outWidth,(n.inWidth+u-g)/a),b=0;b<n.outChannels;++b){for(var x=Math.trunc(b/c),w=b%c,k=0,I=0;I<n.batchSize;++I)for(var C=f;C<m;++C)for(var S=p+C*r-l,N=v;N<y;++N){var T=g+N*a-u;k+=h.get(I,S,T,x)*d.get(I,C,N,b)}o.set(k,p,g,x,w)}return o.toTensor()},t.prototype.tile=function(e,t){return Lp(e,"tile"),Eo(this.bufferSync(e),t)},t.prototype.pad=function(e,t,n){Lp(e,"pad");var r=t.map((function(t,n){return t[0]+e.shape[n]+t[1]})),a=t.map((function(e){return e[0]})),i=this.bufferSync(e),s=ui(r,e.dtype);0!==n&&s.values.fill(n);for(var o=0;o<e.size;o++){var u=i.indexToLoc(o),l=u.map((function(e,t){return e+a[t]}));s.set.apply(s,[i.get.apply(i,u)].concat(l))}return s.toTensor()},t.prototype.gather=function(e,t,n){Lp([e,t],"gather");var r=e.shape.slice(),a=this.readSync(t.dataId);r[n]=a.length;for(var i=ui(r,e.dtype),s=this.bufferSync(e),o=0;o<i.size;++o){var u=i.indexToLoc(o),l=u.slice();l[n]=a[u[n]];var c=s.locToIndex(l);i.values[o]=s.values[c]}return i.toTensor()},t.prototype.batchToSpaceND=function(e,t,n){Lp([e],"batchToSpaceND");var r=t.reduce((function(e,t){return e*t})),a=xi(e.shape,t,r),i=wi(a.length,t.length),s=ki(e.shape,t,r),o=Ii(n,t.length),u=Ci(s,n,t.length);return Xs(e.reshape(a),i).reshape(s).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){Lp([e],"spaceToBatchND");var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var i=1+t.length;i<e.shape.length;++i)a.push([0,0]);var s=e.pad(a),o=xi(s.shape,t,r,!1),u=wi(o.length,t.length,!1),l=ki(s.shape,t,r,!1);return Xs(s.reshape(o),u).reshape(l)},t.prototype.maxPool=function(e,t){return Lp(e,"maxPool"),Pp(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"max").toTensor()},t.prototype.maxPoolBackprop=function(e,t,n,r){Lp([t,n],"maxPoolBackprop");for(var a=this.readSync(t.dataId),i=ui(r.outShape,t.dtype,Bp(a,t.shape,t.dtype,r).values),s=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=h-1-r.padInfo.left,p=c-1-r.padInfo.top,f=ui(t.shape,"float32"),m=this.bufferSync(e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.inHeight;++y)for(var b=0;b<r.inWidth;++b){for(var x=y-p,w=b-d,k=0,I=0;I<c;I+=u){var C=(x+I)/s;if(!(C<0||C>=r.outHeight||Math.floor(C)!==C))for(var S=0;S<h;S+=l){var N=(w+S)/o;if(!(N<0||N>=r.outWidth||Math.floor(N)!==N)){var T=c*h-1-i.get(g,C,N,v)===I*h+S?1:0;0!==T&&(k+=m.get(g,C,N,v)*T)}}}f.set(k,g,y,b,v)}return f.toTensor()},t.prototype.avgPoolBackprop=function(e,t,n){Lp([e,t],"avgPoolBackprop");for(var r=n.strideHeight,a=n.strideWidth,i=n.filterHeight,s=n.filterWidth,o=n.dilationHeight,u=n.dilationWidth,l=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,d=l-1-n.padInfo.top,p=ui(t.shape,"float32"),f=1/(i*s),m=this.bufferSync(e),g=0;g<n.batchSize;++g)for(var v=0;v<n.inChannels;++v)for(var y=0;y<n.inHeight;++y)for(var b=0;b<n.inWidth;++b){for(var x=y-d,w=b-h,k=0,I=0;I<l;I+=o){var C=(x+I)/r;if(!(C<0||C>=n.outHeight||Math.floor(C)!==C))for(var S=0;S<c;S+=u){var N=(w+S)/a;N<0||N>=n.outWidth||Math.floor(N)!==N||(k+=m.get(g,C,N,v))}}p.set(k*f,g,y,b,v)}return p.toTensor()},t.prototype.pool3d=function(e,t,n){Lp(e,"pool3d");for(var r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(e.dataId),v=ui(t.outShape,e.dtype),y=v.values,b=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],x=t.outShape[2]*t.outShape[3]*t.outShape[4],w=t.outShape[3]*t.outShape[4],k=t.outShape[4],I=0;I<t.batchSize;++I)for(var C=I*b,S=I*e.strides[0],N=0;N<t.inChannels;++N)for(var T=0;T<t.outDepth;++T){for(var E=T*r-d,R=E;R<0;)R+=s;for(var A=Math.min(t.inDepth,l+E),D=C+T*x,$=0;$<t.outHeight;++$){for(var F=$*a-p,_=F;_<0;)_+=o;for(var O=Math.min(t.inHeight,c+F),M=D+$*w,L=0;L<t.outWidth;++L){for(var P=L*i-f,B=P;B<0;)B+=u;for(var z=Math.min(t.inWidth,h+P),W=M+L*k,V=m,U=0,G=0,H=R;H<A;H+=s){for(var j=S+H*e.strides[1],q=_;q<O;q+=o){for(var K=j+q*e.strides[2],X=B;X<z;X+=u){var Y=g[K+X*e.strides[3]+N];if("max"===n&&Y>V?V=Y:"avg"===n&&(U+=Y,G++),isNaN(V))break}if(isNaN(V))break}if(isNaN(V))break}y[W+N]="avg"===n?U/G:V}}}return v.toTensor()},t.prototype.avgPool3d=function(e,t){return Lp(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()},t.prototype.avgPool3dBackprop=function(e,t,n){Lp([e,t],"avgPool3dBackprop");for(var r=n.strideDepth,a=n.strideHeight,i=n.strideWidth,s=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=d-1-n.padInfo.front,g=f-1-n.padInfo.left,v=p-1-n.padInfo.top,y=ui(t.shape,"float32"),b=1/(s*o*u),x=this.bufferSync(e),w=0;w<n.batchSize;++w)for(var k=0;k<n.inChannels;++k)for(var I=0;I<n.inDepth;++I)for(var C=0;C<n.inHeight;++C)for(var S=0;S<n.inWidth;++S){for(var N=I-m,T=C-v,E=S-g,R=0,A=0;A<d;A+=l){var D=(N+A)/r;if(!(D<0||D>=n.outDepth||Math.floor(D)!==D))for(var $=0;$<p;$+=c){var F=(T+$)/a;if(!(F<0||F>=n.outHeight||Math.floor(F)!==F))for(var _=0;_<f;_+=h){var O=(E+_)/i;O<0||O>=n.outWidth||Math.floor(O)!==O||(R+=x.get(w,D,F,O,k))}}}y.set(R*b,w,I,C,S,k)}return y.toTensor()},t.prototype.maxPool3d=function(e,t){return Lp(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()},t.prototype.maxPool3dPositions=function(e,t){for(var n=ui(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left,m=this.bufferSync(e),g=0;g<t.batchSize;++g)for(var v=0;v<t.inChannels;++v)for(var y=0;y<t.outDepth;++y){for(var b=y*r-d,x=b;x<0;)x+=s;for(var w=Math.min(t.inDepth,l+b),k=0;k<t.outHeight;++k){for(var I=k*a-p,C=I;C<0;)C+=o;for(var S=Math.min(t.inHeight,c+I),N=0;N<t.outWidth;++N){for(var T=N*i-f,E=T;E<0;)E+=u;for(var R=Math.min(t.inWidth,h+T),A=Number.NEGATIVE_INFINITY,D=-1,$=x;$<w;$+=s)for(var F=$-b,_=C;_<S;_+=o)for(var O=_-I,M=E;M<R;M+=u){var L=M-T,P=m.get(g,$,_,M,v);P>=A&&(A=P,D=F*c*h+O*c+L)}n.set(D,g,y,k,N,v)}}}return n.toTensor()},t.prototype.maxPool3dBackprop=function(e,t,n,r){Lp([t,n],"maxPool3dBackprop");for(var a=this.maxPool3dPositions(t,r),i=r.strideDepth,s=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=p-1-r.padInfo.left,g=d-1-r.padInfo.top,v=ui(t.shape,"float32"),y=this.bufferSync(a),b=this.bufferSync(e),x=0;x<r.batchSize;++x)for(var w=0;w<r.inChannels;++w)for(var k=0;k<r.inDepth;++k)for(var I=0;I<r.inHeight;++I)for(var C=0;C<r.inWidth;++C){for(var S=k-f,N=I-g,T=C-m,E=0,R=0;R<h;R+=u){var A=(S+R)/i;if(!(A<0||A>=r.outDepth||Math.floor(A)!==A))for(var D=0;D<d;D+=l){var $=(N+D)/s;if(!($<0||$>=r.outHeight||Math.floor($)!==$))for(var F=0;F<p;F+=c){var _=(T+F)/o;if(!(_<0||_>=r.outWidth||Math.floor(_)!==_)){var O=h*d*p-1-y.get(x,A,$,_,w)===R*d*p+D*p+F?1:0;0!==O&&(E+=b.get(x,A,$,_,w)*O)}}}}v.set(E,x,k,I,C,w)}return v.toTensor()},t.prototype.cast=function(e,t){return ho(e,t,this)},t.prototype.reshape=function(e,t){return po(e,t)},t.prototype.avgPool=function(e,t){return Lp(e,"avgPool"),Lp(e,"maxPool"),Pp(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"avg").toTensor().toFloat()},t.prototype.resizeBilinear=function(e,t,n,r){Lp(e,"resizeBilinear");for(var a=e.shape,i=a[0],s=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(on([i,t,n,u])),h=[r&&t>1?s-1:s,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=0,f=h[0]/d[0],m=h[1]/d[1],g=0;g<i;g++)for(var v=0;v<t;v++)for(var y=f*v,b=Math.floor(y),x=y-b,w=Math.min(s-1,Math.ceil(y)),k=g*e.strides[0]+b*e.strides[1],I=g*e.strides[0]+w*e.strides[1],C=0;C<n;C++)for(var S=m*C,N=Math.floor(S),T=S-N,E=Math.min(o-1,Math.ceil(S)),R=k+N*e.strides[2],A=I+N*e.strides[2],D=k+E*e.strides[2],$=I+E*e.strides[2],F=0;F<u;F++){var _=l[R+F],O=l[A+F],M=_+(l[D+F]-_)*T,L=M+(O+(l[$+F]-O)*T-M)*x;c[p++]=L}return Va(c,[i,t,n,u])},t.prototype.resizeBilinearBackprop=function(e,t,n){Lp([e,t],"resizeBilinearBackprop");for(var r=t.shape,a=r[0],i=r[1],s=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*i*s*o),d=[n&&l>1?i-1:i,n&&c>1?s-1:s],p=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=d[0]/p[0],m=d[1]/p[1],g=this.readSync(e.dataId),v=0,y=0;y<a;y++)for(var b=y*t.strides[0],x=0;x<l;x++)for(var w=x*f,k=Math.floor(w),I=Math.min(Math.ceil(w),i-1),C=b+k*t.strides[1],S=b+I*t.strides[1],N=w-k,T=1-N,E=0;E<c;E++)for(var R=E*m,A=Math.floor(R),D=Math.min(Math.ceil(R),s-1),$=R-A,F=1-$,_=C+A*t.strides[2],O=C+D*t.strides[2],M=S+A*t.strides[2],L=S+D*t.strides[2],P=T*F,B=T*$,z=N*F,W=N*$,V=0;V<o;V++){var U=g[v++];h[_+V]+=U*P,h[O+V]+=U*B,h[M+V]+=U*z,h[L+V]+=U*W}return Ka(h,[a,s,i,o],t.dtype)},t.prototype.resizeNearestNeighbor=function(e,t,n,r){Lp(e,"resizeNearestNeighbor");for(var a=e.shape,i=a[0],s=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(i*t*n*u),h=[r&&t>1?s-1:s,r&&n>1?o-1:o],d=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=h[0]/d[0],f=h[1]/d[1],m=0,g=0;g<i;g++)for(var v=g*e.strides[0],y=0;y<t;y++)for(var b=p*y,x=v+Math.min(s-1,r?Math.round(b):Math.floor(b))*e.strides[1],w=0;w<n;w++)for(var k=f*w,I=x+Math.min(o-1,r?Math.round(k):Math.floor(k))*e.strides[2],C=0;C<u;C++){var S=l[I+C];c[m++]=S}return Va(c,[i,t,n,u],e.dtype)},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){Lp([e,t],"resizeNearestNeighborBackprop");for(var r=t.shape,a=r[0],i=r[1],s=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*i*s*o),d=this.readSync(e.dataId),p=[n&&l>1?i-1:i,n&&c>1?s-1:s],f=[n&&l>1?l-1:l,n&&c>1?c-1:c],m=p[0]/f[0],g=p[1]/f[1],v=1/m,y=1/g,b=2*Math.ceil(v)+2,x=2*Math.ceil(y)+2,w=0;w<a;w++)for(var k=w*t.strides[0],I=0;I<i;I++)for(var C=k+I*t.strides[1],S=Math.floor(I*v),N=Math.floor(S-b/2),T=0;T<s;T++)for(var E=C+T*t.strides[2],R=Math.floor(T*y),A=Math.floor(R-x/2),D=0;D<o;D++){for(var $=0,F=0;F<b;F++){var _=F+N;if(!(_<0||_>=l)){var O=k+_*e.strides[1],M=_*m;if(I===Math.min(i-1,n?Math.round(M):Math.floor(M)))for(var L=0;L<x;L++){var P=L+A;if(!(P<0||P>=c)){var B=O+P*e.strides[2],z=P*g;T===Math.min(s-1,n?Math.round(z):Math.floor(z))&&($+=d[B+D])}}}}h[E+D]=$}return Ka(h,t.shape,t.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,i){Lp([e,t,n,a,i],"batchNorm");for(var s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=this.readSync(n.dataId),l=a?this.readSync(a.dataId):new Float32Array([1]),c=i?this.readSync(i.dataId):new Float32Array([0]),h=new Float32Array(s.length),d=c.length,p=l.length,f=u.length,m=o.length,g=0,v=0,y=0,b=0,x=0;x<s.length;++x)h[x]=c[g++]+(s[x]-o[v++])*l[y++]/Math.sqrt(u[b++]+r),g>=d&&(g=0),v>=m&&(v=0),y>=p&&(y=0),b>=f&&(b=0);return Ka(h,e.shape)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){Lp(e,"localResponseNormalization4D");var i=e.shape[3],s=i-1,o=this.readSync(e.dataId),u=e.size,l=new Float32Array(u);function c(e){for(var n=e%i,r=e-n+Math.max(0,n-t),a=e-n+Math.min(n+t,s),u=0;r<=a;r++){var l=o[r];u+=l*l}return u}for(var h=0;h<u;h++){var d=c(h),p=o[h]*Math.pow(n+r*d,-a);l[h]=p}return Ka(l,e.shape)},t.prototype.LRNGrad=function(e,t,n,r,a,i,s){Lp(e,"LRNGrad");for(var o=e.shape[3],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=this.readSync(n.dataId),h=new Float32Array(e.size),d=e.size,p=0;p<d;p++){for(var f=p%o,m=p-f+Math.max(0,f-r),g=p-f+Math.min(o,f+r+1),v=0,y=m;y<g;y++)v+=Math.pow(l[y],2);for(v=i*v+a,y=m;y<g;y++){var b=-2*i*s*l[y]*c[p]/v;p===y&&(b+=Math.pow(v,-s)),b*=u[p],h[y]+=b}}return Ka(h,e.shape)},t.prototype.multinomial=function(e,t,n,r){Lp(e,"multinomial");for(var a=t?e:qs(e),i=a.shape[0],s=a.shape[1],o=Ya([i,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(a.dataId),c=0;c<i;++c){var h=c*s,d=new Float32Array(s-1);d[0]=l[h];for(var p=1;p<d.length;++p)d[p]=d[p-1]+l[h+p];for(var f=Tc(r.toString()),m=c*n,g=0;g<n;++g){var v=f();u[m+g]=d.length;for(var y=0;y<d.length;y++)if(v<d[y]){u[m+g]=y;break}}}return o},t.prototype.oneHot=function(e,t,n,r){Lp(e,"oneHot");var a=new Float32Array(e.size*t);a.fill(r);for(var i=this.readSync(e.dataId),s=0;s<e.size;++s)i[s]>=0&&i[s]<t&&(a[s*t+i[s]]=n);return ja(a,[e.size,t],"int32")},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return Lp(e,"nonMaxSuppression"),wo(this.readSync(e.dataId),this.readSync(t.dataId),n,r,a)},t.prototype.fft=function(e){return this.fftBatch(e,!1)},t.prototype.ifft=function(e){return this.fftBatch(e,!0)},t.prototype.fftBatch=function(e,t){for(var n=e.shape[0],r=e.shape[1],a=ui(e.shape,"float32"),i=ui(e.shape,"float32"),s=za(e).as2D(n,r),o=Wa(e).as2D(n,r),u=0;u<n;u++)for(var l=s.slice([u,0],[1,r]),c=o.slice([u,0],[1,r]),h=Ba(l,c),d=this.readSync(this.fftImpl(h,t).dataId),p=0;p<r;p++){var f=go(d,p);a.values[u*r+p]=f.real,i.values[u*r+p]=f.imag}return Ba(a.toTensor(),i.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(e,t){var n=e.as1D(),r=n.size;if(this.isExponentOf2(r)){var a=this.fftRadix2(n,r,t).as2D(e.shape[0],e.shape[1]);return t&&(a=Ba(za(a).div(Ga(r)),Wa(a).div(Ga(r)))),a}var i=this.readSync(e.dataId),s=function(e){for(var t=new Float32Array(e.length/2),n=new Float32Array(e.length/2),r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}(this.fourierTransformByMatmul(i,r,t));return Ba(s.real,s.imag).as2D(e.shape[0],e.shape[1])},t.prototype.isExponentOf2=function(e){return 0==(e&e-1)},t.prototype.fftRadix2=function(e,t,n){if(1===t)return e;var r=this.readSync(e.dataId),a=t/2,i=function(e){for(var t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),s=Ba(i.real,i.imag).as1D(),o=function(e){for(var t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),u=Ba(o.real,o.imag).as1D();s=this.fftRadix2(s,a,n),u=this.fftRadix2(u,a,n);var l=function(e,t){for(var n=new Float32Array(e/2),r=new Float32Array(e/2),a=0;a<Math.ceil(e/2);a++){var i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}(t,n),c=Ba(l.real,l.imag).mul(u),h=s.add(c),d=s.sub(c),p=za(h).concat(za(d)),f=Wa(h).concat(Wa(d));return Ba(p,f).as1D()},t.prototype.fourierTransformByMatmul=function(e,t,n){for(var r=new Float32Array(2*t),a=0;a<t;a++){for(var i=0,s=0,o=0;o<t;o++){var u=yo(a*o,t,n),l=go(e,o);i+=l.real*u.real-l.imag*u.imag,s+=l.real*u.imag+l.imag*u.real}n&&(i/=t,s/=t),vo(r,i,s,a)}return r},t.prototype.depthToSpace=function(e,t,n){nn("NHWC"===n,(function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n})),nn(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));for(var r=e.shape[0],a=e.shape[1],i=e.shape[2],s=e.shape[3],o=a*t,u=i*t,l=s/(t*t),c=this.readSync(e.dataId),h=new Float32Array(r*o*u*l),d=0,p=0;p<r;++p)for(var f=0;f<o;++f)for(var m=Math.floor(f/t),g=f%t,v=0;v<u;++v)for(var y=Math.floor(v/t),b=(g*t+v%t)*l,x=0;x<l;++x){var w=x+b+s*(y+i*(m+a*p));h[d++]=c[w]}return Ka(h,[r,o,u,l])},t.prototype.broadcastedBinaryOp=function(e,t,n,r){var a=Oi(e.shape,t.shape),i=ui(a,n),s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Fi(e.shape,a),l=Fi(t.shape,a),c=i.values;if(u.length+l.length===0)for(var h=0;h<c.length;++h)c[h]=r(s[h%s.length],o[h%o.length]);else{var d=this.bufferSync(e),p=this.bufferSync(t),f=function(n){var a=i.indexToLoc(n),h=a.slice(-e.rank);u.forEach((function(e){return h[e]=0}));var f=d.locToIndex(h),m=a.slice(-t.rank);l.forEach((function(e){return m[e]=0}));var g=p.locToIndex(m);c[n]=r(s[f],o[g])};for(h=0;h<c.length;++h)f(h)}return i.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(e,t,n){var r=Oi(e.shape,t.shape),a=ui(r,"float32"),i=ui(r,"float32"),s=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Fi(e.shape,r),l=Fi(t.shape,r),c=a.values,h=i.values;if(u.length+l.length===0)for(var d=0;d<c.length;d++){var p=d%s.length,f=d%o.length,m=n(s[2*p],s[2*p+1],o[2*f],o[2*f+1]);c[d]=m.real,h[d]=m.imag}else{var g=this.bufferSync(this.data.get(e.dataId).complexTensors.real),v=this.bufferSync(this.data.get(t.dataId).complexTensors.real),y=function(r){var i=a.indexToLoc(r),d=i.slice(-e.rank);u.forEach((function(e){return d[e]=0}));var p=g.locToIndex(d),f=i.slice(-t.rank);l.forEach((function(e){return f[e]=0}));var m=v.locToIndex(f),y=n(s[2*p],s[2*p+1],o[2*m],o[2*m+1]);c[r]=y.real,h[r]=y.imag};for(d=0;d<c.length;d++)y(d)}return this.complex(a.toTensor(),i.toTensor())},t.prototype.split=function(e,t,n){return To(e,t,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.epsilon=function(){return 1e-7},t.prototype.cropAndResize=function(e,t,n,r,a,i){for(var s=e.shape,o=s[0],u=s[1],l=s[2],c=s[3],h=t.shape[0],d=r[0],p=r[1],f=ui([h,d,p,c],"float32"),m=this.readSync(t.dataId),g=this.readSync(n.dataId),v=this.readSync(e.dataId),y=e.strides,b=f.strides,x=0;x<h;x++){var w=4*x,k=m[w],I=m[w+1],C=m[w+2],S=m[w+3],N=g[x];if(!(N>=o))for(var T=d>1?(C-k)*(u-1)/(d-1):0,E=p>1?(S-I)*(l-1)/(p-1):0,R=0;R<d;R++){var A=d>1?k*(u-1)+R*T:.5*(k+C)*(u-1);if(A<0||A>u-1)for(var D=0;D<p;D++)for(var $=0;$<c;$++){var F=$+D*b[2]+R*b[1]+x*b[0];f.values[F]=i}else if("bilinear"===a){var _=Math.floor(A),O=Math.ceil(A),M=A-_;for(D=0;D<p;D++)if((H=p>1?I*(l-1)+D*E:.5*(I+S)*(l-1))<0||H>l-1)for($=0;$<c;$++)F=$+D*b[2]+R*b[1]+x*b[0],f.values[F]=i;else{var L=Math.floor(H),P=Math.ceil(H),B=H-L;for($=0;$<c;$++){var z=v[F=$+L*y[2]+_*y[1]+N*y[0]],W=v[F=$+P*y[2]+_*y[1]+N*y[0]],V=v[F=$+L*y[2]+O*y[1]+N*y[0]],U=z+(W-z)*B,G=V+(v[F=$+P*y[2]+O*y[1]+N*y[0]]-V)*B;F=$+D*b[2]+R*b[1]+x*b[0],f.values[F]=U+(G-U)*M}}}else for(D=0;D<p;++D){var H;if((H=p>1?I*(l-1)+D*E:.5*(I+S)*(l-1))<0||H>l-1)for($=0;$<c;$++)F=$+D*b[2]+R*b[1]+x*b[0],f.values[F]=i;else{var j=Math.round(H),q=Math.round(A);for($=0;$<c;$++){var K=$+j*y[2]+q*y[1]+N*y[0],X=$+D*b[2]+R*b[1]+x*b[0];f.values[X]=v[K]}}}}}return f.toTensor()},t.prototype.sparseToDense=function(e,t,n,r){var a=Ps(0,e,n),i=a.sliceRank,s=a.numUpdates,o=a.sliceSize,u=a.strides,l=a.outputSize;return this.scatter(e,t,n,l,o,s,i,u,r,!1)},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=_s(e,t),i=a[0],s=a[1],o=a[2],u=a[3];if(0===s)return Va([],i,e.dtype);for(var l=new Xn([s,o],e.dtype),c=this.readSync(t.dataId),h=this.readSync(e.dataId),d=0;d<s;d++){for(var p=[],f=0,m=0;m<r;m++){var g=c[d*r+m];f+=g*u[m],p.push(g)}if(f<0||f>=e.size/o)throw new Error("Invalid indices: "+p+" does not index into "+e.shape);for(var v=0;v<o;v++)l.values[d*o+v]=h[f*o+v]}return l.toTensor().reshape(i)},t.prototype.scatterND=function(e,t,n){var r=Ps(0,e,n),a=r.sliceRank,i=r.numUpdates,s=r.sliceSize,o=r.strides,u=r.outputSize,l=Ga(0);return this.scatter(e,t,n,u,s,i,a,o,l,!0)},t.prototype.fill=function(e,t,n){var r=yn(n=n||En(t),on(e));return r.fill(t),mr.makeTensor(r,e,n,this)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){var t=yn(e.dtype,on(e.shape));return this.makeOutput(t,e.shape,e.dtype)},t.prototype.linspace=function(e,t,n){return fo(e,t,n)},t.prototype.scatter=function(e,t,n,r,a,i,s,o,u,l){var c=[r/a,a],h=this.readSync(e.dataId),d=this.readSync(t.dataId);if(0===r)return Va([],n,t.dtype);var p=new Xn(c,t.dtype);p.values.fill(this.readSync(u.dataId)[0]);for(var f=0;f<i;f++){for(var m=[],g=0,v=0;v<s;v++){var y=h[f*s+v];m.push(y),g+=y*o[v]}if(g<0||g>=r/a)throw new Error("Invalid indices: "+m+" does not index into "+n);for(var b=0;b<a;b++)l?p.values[g*a+b]+=d[f*a+b]:p.values[g*a+b]=0===t.rank?d[0]:d[f*a+b]}return p.toTensor().reshape(n)},t}(Qs);function Vp(e,t){return{kernelName:e,backendName:"cpu",kernelFunc:function(n){var r=n.inputs,a=n.backend,i=r,s=i.a,o=i.b,u=a;Lp([s,o],e);var l=u.data.get(s.dataId).values,c=u.data.get(o.dataId).values,h=t(s.shape,o.shape,l,c,s.dtype),d=h[0],p=h[1];return{dataId:u.write(d,p,s.dtype),shape:p,dtype:s.dtype}}}}function Up(e){return function(t,n,r,a,i){var s=Oi(t,n),o=s.length,u=Dn(s),l=vn(i,on(s)),c=t.length,h=n.length,d=Dn(t),p=Dn(n),f=Fi(t,s),m=Fi(n,s);if(f.length+m.length===0)for(var g=0;g<l.length;++g)l[g]=e(r[g%r.length],a[g%a.length]);else{var v=function(t){var n=Wn(t,o,u),i=n.slice(-c);f.forEach((function(e){return i[e]=0}));var s=zn(i,c,d),g=n.slice(-h);m.forEach((function(e){return g[e]=0}));var v=zn(g,h,p);l[t]=e(r[s],a[v])};for(g=0;g<l.length;++g)v(g)}return[l,s]}}mr.registerBackend("cpu",(function(){return new Wp}),1);var Gp=Up((function(e,t){return e/t})),Hp=Vp(Si,Gp),jp={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n,s=i.filterSize,o=i.strides,u=i.pad,l=i.includeBatchInIndex,c=r;Lp(a,"MaxPoolWithArgmax");var h=c.data.get(a.dataId).values,d=Zs(a.shape,s,o,[1,1],u),p=function(e,t,n,r,a){var i=Pp(e,0,n,Dn(t),a,"max"),s=Bp(e,t,n,a,!0,r);return[i.values,s.values]}(h,a.shape,a.dtype,l,d),f=p[0],m=p[1],g=c.write(f,d.outShape,a.dtype),v=c.write(m,d.outShape,a.dtype);return[{dataId:g,shape:d.outShape,dtype:a.dtype},{dataId:v,shape:d.outShape,dtype:"int32"}]}},qp={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t,i=a.boxes,s=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,d=n;Lp(i,"NonMaxSuppressionWithScore");var p=ko(d.data.get(i.dataId).values,d.data.get(s.dataId).values,u,l,c,h);return[p.selectedIndices,p.selectedScores]}},Kp={kernelName:"Square",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n;Lp(r,"square");for(var i=a.data.get(r.dataId).values,s=new Float32Array(i.length),o=0;o<i.length;++o){var u=i[o];s[o]=u*u}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Xp=Up((function(e,t){var n=e-t;return n*n}));function Yp(e,t,n,r,a){for(var i=on(t),s=t.length,o=Dn(t),u=Dn(a),l=vn(n,on(a)),c=0;c<i;++c){for(var h=Wn(c,s,o),d=new Array(h.length),p=0;p<d.length;p++)d[p]=h[r[p]];l[zn(d,s,u)]=e[c]}return l}for(var Qp=0,Jp=[qp,Kp,Vp(Ni,Xp),Hp,{kernelName:"Transpose",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n.perm,s=r;Lp(a,"transpose");for(var o=a.shape.length,u=new Array(o),l=0;l<u.length;l++)u[l]=a.shape[i[l]];var c=Yp(s.data.get(a.dataId).values,a.shape,a.dtype,i,u);return{dataId:s.write(c,u,a.dtype),shape:u,dtype:a.dtype}}},jp];Qp<Jp.length;Qp++)Xt(Jp[Qp]);for(var Zp,ef=function(e){this.variableNames=["A"];var t=Mo(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+r+".0, "+n+".0);\n\n        vec4 values = "+t.texture2D+"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    "},tf=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=Mo(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2("+r+".0, "+n+".0);\n            vec4 values = "+t.texture2D+"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        "+t.output+" = result;\n      }\n    "},nf=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;var a=Xo(this.rank),i=function(e){var t=e.length;if(t>6)throw Error("Transpose for rank "+t+" is not yet supported");for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t),a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode="\n    void main() {\n      "+a+" resRC = getOutputCoords();\n      setOutput(getA("+i+"));\n    }\n    "},rf=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var a=Xo(this.rank),i=_o("rc",this.rank),s=new Array(this.rank);for(r=0;r<t.length;r++)s[t[r]]=i[r];var o="vec2("+s.slice(-2).join()+")",u="++"+i[this.rank-1]+" < "+n[this.rank-1],l="getChannel(getA("+s.join()+"), "+o+")";this.userCode="\n    void main() {\n      "+a+" rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = "+l+";\n      if("+u+") {\n        result[1] = "+l+";\n      }\n      --"+i[this.rank-1]+";\n      if(++"+i[this.rank-2]+" < "+n[this.rank-2]+") {\n        result[2] = "+l+";\n        if("+u+") {\n          result[3] = "+l+";\n        }\n      }\n      setOutput(result);\n    }\n    "},af=0,sf=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t.pixels,i=r.numChannels,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,u=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=u[0],c=u[1],h=[c,l],d=[c,l,i];(o||s)&&(null==Zp&&(Zp=document.createElement("canvas").getContext("2d")),Zp.canvas.width=l,Zp.canvas.height=c,Zp.drawImage(a,0,0,l,c),a=Zp.canvas);var p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=br.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);var f=Vt().getBool("WEBGL_PACK")?new tf(d):new ef(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}},{kernelName:Si,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t;return function(e,t,n){var r=new uu("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",e.shape,t.shape);return Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new cu("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",e.shape,t.shape,!0)),n.runWebGLProgram(r,[e,t],"float32")}(r.a,r.b,n)}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs;Ia("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var a=t,i=a.boxes,s=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,d=n,p=ko(d.readSync(i.dataId),d.readSync(s.dataId),u,l,c,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n,i=new Gl(r.shape,"return x * x;");return a.runWebGLProgram(i,[r],r.dtype)}},{kernelName:Ni,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t,a=r.a,i=r.b,s=n,o=Vt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new cu("return (a - b) * (a - b);",a.shape,i.shape):new uu("return (a - b) * (a - b);",a.shape,i.shape);return s.compileAndRun(o,[a,i])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:function(e){for(var t,n=e.inputs,r=e.attrs,a=e.backend,i=n.x,s=r.perm,o=a,u=i.shape.length,l=new Array(u),c=0;c<l.length;c++)l[c]=i.shape[s[c]];if(o.shouldExecuteOnCPU([i])){var h=Yp(o.texData.get(i.dataId).values,i.shape,i.dtype,s,l);t=o.makeTensorInfo(l,i.dtype),o.texData.get(t.dataId).values=h}else t=function(e,t,n){var r=Vt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rf(e.shape,t):new nf(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}(i,s,o);return t}},{kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,i=n,s=i.filterSize,o=i.strides,u=i.pad,l=i.includeBatchInIndex,c=r;nn(4===a.shape.length,(function(){return"Error in maxPool: input must be rank 4 but got rank "+a.shape.length+"."}));var h=[1,1];nn(lo(o,h),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+o+" and dilations '"+h+"'"}));var d=Zs(a.shape,s,o,h,u),p=function(e,t,n,r){var a=new xl(n,"max",!1),i=r.runWebGLProgram(a,[e],"float32");return a=new xl(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(a,l,d,c);return[p[0],p[1]]}}];af<sf.length;af++)Xt(sf[af]);for(var of=0,uf=[{kernelName:"Add",inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Oi(n.shape,r.shape);return{a:function(){var t=e,r=_i(n.shape,a);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},b:function(){var t=e,n=_i(r.shape,a);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)}}}},{kernelName:"AddN",saveAllInputs:!0,gradFunc:function(e,t){var n={};return t.forEach((function(t,r){n[r]=function(){return e.clone()}})),n}},{kernelName:Ti,gradFunc:function(e,t,n){for(var r=n,a=r.inputShape,i=r.shape,s=Array.from(i),o=a.length-1;o>=0;o--)if(a[o]===i[o])s[o]=1;else if(1!==a[o])throw new Error("broadcastTo(): ["+a+"] cannot be broadcast to ["+i+"].");var u=[];for(o=0;o<s.length;o++)s[o]>1&&u.push(o);return{x:function(){return e.sum(u,!0)}}}},{kernelName:Si,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Oi(n.shape,r.shape);return{a:function(){var t=Fs(e,r.toFloat()),i=_i(n.shape,a);return i.length>0?Ed(t,i).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),i=_i(r.shape,a);i.length>0&&(t=Ed(t,i).reshape(r.shape));var s=yh(r);return es(Fs(t,s.toFloat()))}}}},{kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:function(e,t,n){var r=n.varianceEpsilon,a=t[0],i=t[1],s=t[2],o=t[3],u=Ac(a),l=null==o?Ga(1):o,c=_i(i.shape,u.shape),h=[];if(1===i.rank){for(var d=0;d<u.shape.length-1;++d)h.push(u.shape[d]);h.push(1)}var p=Ds(a,i),f=Ns(e,l),m=rs($i(s,Ga(r))),g=Ns(Ns(Ns(m,m),m),Ga(-.5));return{x:function(){return 1===i.rank?fi(Ns(Ns(e,Zc(m.as4D(1,1,1,i.shape[0]),h)),l),a.shape):fi(Ns(Ns(e,m),l),a.shape)},mean:function(){var e=Ns(Ns(m,Ga(-1)),f);return 1===i.rank&&(e=Ed(e,c)),fi(e,i.shape)},variance:function(){var e=Ns(Ns(g,p),f);return 1===i.rank&&(e=Ed(e,c)),fi(e,i.shape)},scale:function(){var t=Ns(p,m),n=Ns(e,t);return 1===i.rank&&(n=Ed(n,c)),fi(n,i.shape)},offset:function(){var t=e;return 1===i.rank&&(t=Ed(t,c)),fi(t,i.shape)}}}},{kernelName:Ri,gradFunc:function(e){return{x:function(){return e.toFloat()}}}},{kernelName:Ei,inputsToSave:["indices"],gradFunc:function(e,t){var n=t[0];return{indices:function(){return Ya(n.shape,"float32")}}}},{kernelName:Di,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.paddings.map((function(e){return e[0]}));return{x:function(){return e.slice(a,r.shape)}}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().mul(2))}}}},{kernelName:Ni,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Ga(2);return{a:function(){return Ns(e,Ns(a,Ds(n,r)))},b:function(){return Ns(e,Ns(a,Ds(r,n)))}}}},{kernelName:Ai,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.reps;return{x:function(){var t=ti(r);if(1===r.rank)for(var n=0;n<a[0];++n)t=t.add(e.slice([n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(n=0;n<a[0];++n)for(var i=0;i<a[1];++i)t=t.add(e.slice([n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(n=0;n<a[0];++n)for(i=0;i<a[1];++i)for(var s=0;s<a[2];++s)t=t.add(e.slice([n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(n=0;n<a[0];++n)for(i=0;i<a[1];++i)for(s=0;s<a[2];++s)for(var o=0;o<a[3];++o)t=t.add(e.slice([n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:function(e,t,n){var r=_a(n.perm);return{x:function(){return Xs(e,r)}}}}];of<uf.length;of++)Yt(uf[of]);var lf=function(){function e(){}return e.prototype.fetch=function(e,t){return fetch(e,t)},e.prototype.now=function(){return performance.now()},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return new TextDecoder(t).decode(e)},e}();Vt().get("IS_BROWSER")&&Vt().setPlatform("browser",new lf);var cf,hf=function(){function e(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}return e.prototype.fetch=function(e,t){return null!=Vt().global.fetch?Vt().global.fetch(e,t):(null==cf&&(cf=require("node-fetch")),cf(e,t))},e.prototype.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)},e}();Vt().get("IS_NODE")&&Vt().setPlatform("node",new hf);var df={float32:4,int32:4,uint16:2,uint8:1,bool:1},pf=4;function ff(e,t){for(var n={},r=0,a=function(t){var a=t.name,i=t.dtype,s=t.shape,o=on(s),u=void 0;if("quantization"in t){var l=t.quantization;if("uint8"!==l.dtype&&"uint16"!==l.dtype)throw new Error("Weight "+t.name+" has unknown quantization dtype "+l.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var c=df[l.dtype],h=e.slice(r,r+o*c),d="uint8"===l.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===i)u=Float32Array.from(d,(function(e){return e*l.scale+l.min}));else{if("int32"!==i)throw new Error("Unsupported dtype in weight '"+a+"': "+i);u=Int32Array.from(d,(function(e){return Math.round(e*l.scale+l.min)}))}r+=o*c}else if("string"===i){var p=on(t.shape);u=[];for(var f=0;f<p;f++){var m=new Uint32Array(e.slice(r,r+pf))[0];r+=pf;var g=new Uint8Array(e.slice(r,r+m));u.push(g),r+=m}}else{var v=df[i];if(h=e.slice(r,r+o*v),"float32"===i)u=new Float32Array(h);else if("int32"===i)u=new Int32Array(h);else{if("bool"!==i)throw new Error("Unsupported dtype in weight '"+a+"': "+i);u=new Uint8Array(h)}r+=o*v}n[a]=Va(u,s,i)},i=0,s=t;i<s.length;i++)a(s[i]);return n}function mf(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));var t=0,n=[];e.forEach((function(e){if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));var r=new Uint8Array(t),a=0;return n.forEach((function(e){r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var gf="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function vf(e){return gf?Buffer.byteLength(e):new Blob([e]).size}function yf(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function bf(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);var t=e.split("/");return t[t.length-1]}function xf(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:vf(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:vf(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}var wf=function(){function e(){this.saveRouters=[],this.loadRouters=[]}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerSaveRouter=function(t){e.getInstance().saveRouters.push(t)},e.registerLoadRouter=function(t){e.getInstance().loadRouters.push(t)},e.getSaveHandlers=function(t){return e.getHandlers(t,"save")},e.getLoadHandlers=function(t,n){return e.getHandlers(t,"load",n)},e.getHandlers=function(t,n,r){var a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach((function(e){var n=e(t,r);null!==n&&a.push(n)})),a},e}(),kf="://",If=function(){function e(){this.managers={}}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerManager=function(t,n){nn(null!=t,(function(){return"scheme must not be undefined or null."})),t.endsWith(kf)&&(t=t.slice(0,t.indexOf(kf))),nn(t.length>0,(function(){return"scheme must not be an empty string."}));var r=e.getInstance();nn(null==r.managers[t],(function(){return"A model store manager is already registered for scheme '"+t+"'."})),r.managers[t]=n},e.getManager=function(e){var t=this.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '"+e+"'");return t},e.getSchemes=function(){return Object.keys(this.getInstance().managers)},e}();function Cf(e){if(-1===e.indexOf(kf))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+If.getSchemes().join(","));return{scheme:e.split(kf)[0],path:e.split(kf)[1]}}function Sf(e,t,n){return void 0===n&&(n=!1),Bt(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h;return zt(this,(function(d){switch(d.label){case 0:return nn(e!==t,(function(){return"Old path and new path are the same: '"+e+"'"})),nn((r=wf.getLoadHandlers(e)).length>0,(function(){return"Copying failed because no load handler is found for source URL "+e+"."})),nn(r.length<2,(function(){return"Copying failed because more than one ("+r.length+") load handlers for source URL "+e+"."})),a=r[0],nn((i=wf.getSaveHandlers(t)).length>0,(function(){return"Copying failed because no save handler is found for destination URL "+t+"."})),nn(i.length<2,(function(){return"Copying failed because more than one ("+r.length+") save handlers for destination URL "+t+"."})),s=i[0],o=Cf(e).scheme,u=Cf(e).path,l=o===Cf(e).scheme,[4,a.load()];case 1:return c=d.sent(),n&&l?[4,If.getManager(o).removeModel(u)]:[3,3];case 2:d.sent(),d.label=3;case 3:return[4,s.save(c)];case 4:return h=d.sent(),!n||l?[3,6]:[4,If.getManager(o).removeModel(u)];case 5:d.sent(),d.label=6;case 6:return[2,h.modelArtifactsInfo]}}))}))}var Nf="models_store",Tf="model_info_store";function Ef(){if(!Vt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var e=window||self,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Rf(e){var t=e.result;t.createObjectStore(Nf,{keyPath:"modelPath"}),t.createObjectStore(Tf,{keyPath:"modelPath"})}var Af=function(){function e(e){if(this.indexedDB=Ef(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}return e.prototype.save=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,e)]}))}))},e.prototype.load=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){return[2,this.databaseAction(this.modelPath)]}))}))},e.prototype.databaseAction=function(e,t){var n=this;return new Promise((function(e,r){var a=n.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return Rf(a)},a.onsuccess=function(){var i=a.result;if(null==t){var s=i.transaction(Nf,"readonly"),o=s.objectStore(Nf).get(n.modelPath);o.onsuccess=function(){if(null==o.result)return i.close(),r(new Error("Cannot find model with path '"+n.modelPath+"' in IndexedDB."));e(o.result.modelArtifacts)},o.onerror=function(e){return i.close(),r(o.error)},s.oncomplete=function(){return i.close()}}else{var u,l=xf(t),c=i.transaction(Tf,"readwrite"),h=c.objectStore(Tf),d=h.put({modelPath:n.modelPath,modelArtifactsInfo:l});d.onsuccess=function(){var a=(u=i.transaction(Nf,"readwrite")).objectStore(Nf).put({modelPath:n.modelPath,modelArtifacts:t,modelArtifactsInfo:l});a.onsuccess=function(){return e({modelArtifactsInfo:l})},a.onerror=function(e){var t=(h=c.objectStore(Tf)).delete(n.modelPath);t.onsuccess=function(){return i.close(),r(a.error)},t.onerror=function(e){return i.close(),r(a.error)}}},d.onerror=function(e){return i.close(),r(d.error)},c.oncomplete=function(){null==u?i.close():u.oncomplete=function(){return i.close()}}}},a.onerror=function(e){return r(a.error)}}))},e.URL_SCHEME="indexeddb://",e}(),Df=function(e){return Vt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Af.URL_SCHEME)?(t=e.slice(Af.URL_SCHEME.length),new Af(t)):null;var t};wf.registerSaveRouter(Df),wf.registerLoadRouter(Df);var $f=function(){function e(){this.indexedDB=Ef()}return e.prototype.listModels=function(){return Bt(this,void 0,void 0,(function(){var e=this;return zt(this,(function(t){return[2,new Promise((function(t,n){var r=e.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=function(){return Rf(r)},r.onsuccess=function(){var e=r.result,a=e.transaction(Tf,"readonly"),i=a.objectStore(Tf).getAll();i.onsuccess=function(){for(var e={},n=0,r=i.result;n<r.length;n++){var a=r[n];e[a.modelPath]=a.modelArtifactsInfo}t(e)},i.onerror=function(t){return e.close(),n(i.error)},a.oncomplete=function(){return e.close()}},r.onerror=function(e){return n(r.error)}}))]}))}))},e.prototype.removeModel=function(e){return Bt(this,void 0,void 0,(function(){var t=this;return zt(this,(function(n){var r;return e=(r=e).startsWith(Af.URL_SCHEME)?r.slice(Af.URL_SCHEME.length):r,[2,new Promise((function(n,r){var a=t.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return Rf(a)},a.onsuccess=function(){var t,i=a.result,s=i.transaction(Tf,"readwrite"),o=s.objectStore(Tf),u=o.get(e);u.onsuccess=function(){if(null==u.result)return i.close(),r(new Error("Cannot find model with path '"+e+"' in IndexedDB."));var a=o.delete(e),s=function(){var a=(t=i.transaction(Nf,"readwrite")).objectStore(Nf).delete(e);a.onsuccess=function(){return n(u.result.modelArtifactsInfo)},a.onerror=function(e){return r(u.error)}};a.onsuccess=s,a.onerror=function(e){return s(),i.close(),r(u.error)}},u.onerror=function(e){return i.close(),r(u.error)},s.oncomplete=function(){null==t?i.close():t.oncomplete=function(){return i.close()}}},a.onerror=function(e){return r(a.error)}}))]}))}))},e}();if(Vt().getBool("IS_BROWSER"))try{If.registerManager(Af.URL_SCHEME,new $f)}catch(Lt){}var Ff="/",_f="tensorflowjs_models",Of="info",Mf="model_topology",Lf="weight_specs",Pf="weight_data",Bf="model_metadata";function zf(e){return{info:[_f,e,Of].join(Ff),topology:[_f,e,Mf].join(Ff),weightSpecs:[_f,e,Lf].join(Ff),weightData:[_f,e,Pf].join(Ff),modelMetadata:[_f,e,Bf].join(Ff)}}function Wf(e){var t=e.split(Ff);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Ff)}var Vf=function(){function e(e){if(!Vt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=zf(this.modelPath)}return e.prototype.save=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r;return zt(this,(function(a){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=xf(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(gf)return Buffer.from(e).toString("base64");for(var t=new Uint8Array(e),n="",r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),[2,{modelArtifactsInfo:r}]}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+r.modelTopologyBytes+", weightSpecsBytes="+r.weightSpecsBytes+", weightDataBytes="+r.weightDataBytes+".")}return[2]}))}))},e.prototype.load=function(){return Bt(this,void 0,void 0,(function(){var e,t,n,r,a,i,s;return zt(this,(function(o){if(null==(e=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(t={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(t.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(t.weightSpecs=r,null!=(a=this.LS.getItem(this.keys.modelMetadata))&&(i=JSON.parse(a),t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,t.userDefinedMetadata=i.userDefinedMetadata),null==(s=this.LS.getItem(this.keys.weightData)))throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return t.weightData=function(e){if(gf){var t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}for(var n=atob(e),r=new Uint8Array(n.length),a=0;a<n.length;++a)r.set([n.charCodeAt(a)],a);return r.buffer}(s),[2,t]}))}))},e.URL_SCHEME="localstorage://",e}(),Uf=function(e){return Vt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Vf.URL_SCHEME)?(t=e.slice(Vf.URL_SCHEME.length),new Vf(t)):null;var t};wf.registerSaveRouter(Uf),wf.registerLoadRouter(Uf);var Gf=function(){function e(){nn(Vt().getBool("IS_BROWSER"),(function(){return"Current environment is not a web browser"})),nn("undefined"==typeof window||void 0!==window.localStorage,(function(){return"Current browser does not appear to support localStorage"})),this.LS=window.localStorage}return e.prototype.listModels=function(){return Bt(this,void 0,void 0,(function(){var e,t,n,r,a,i;return zt(this,(function(s){for(e={},t=_f+Ff,n=Ff+Of,r=0;r<this.LS.length;++r)(a=this.LS.key(r)).startsWith(t)&&a.endsWith(n)&&(i=Wf(a),e[i]=JSON.parse(this.LS.getItem(a)));return[2,e]}))}))},e.prototype.removeModel=function(e){return Bt(this,void 0,void 0,(function(){var t,n;return zt(this,(function(r){var a;if(e=(a=e).startsWith(Vf.URL_SCHEME)?a.slice(Vf.URL_SCHEME.length):a,t=zf(e),null==this.LS.getItem(t.info))throw new Error("Cannot find model at path '"+e+"'");return n=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,n]}))}))},e}();if(Vt().getBool("IS_BROWSER"))try{If.registerManager(Vf.URL_SCHEME,new Gf)}catch(Lt){}function Hf(e){return new Promise((function(e){return setTimeout(e)})).then(e)}var jf=function(){function e(t){if(!Vt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}return e.prototype.save=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r,a,i,s;return zt(this,(function(o){switch(o.label){case 0:if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),(i=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,i.href=a,[4,Hf((function(){return i.dispatchEvent(new MouseEvent("click"))}))];case 2:return o.sent(),null==e.weightData?[3,4]:((s=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,s.href=t,[4,Hf((function(){return s.dispatchEvent(new MouseEvent("click"))}))]);case 3:o.sent(),o.label=4;case 4:return[2,{modelArtifactsInfo:xf(e)}]}}))}))},e.URL_SCHEME="downloads://",e}(),qf=function(){function e(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}return e.prototype.load=function(){return Bt(this,void 0,void 0,(function(){var e,t,n=this;return zt(this,(function(r){return e=this.files[0],t=this.files.slice(1),[2,new Promise((function(r,a){var i=new FileReader;i.onload=function(i){var s=JSON.parse(i.target.result),o=s.modelTopology;if(null!=o){0===t.length&&r({modelTopology:o});var u=s.weightsManifest;if(null!=u){var l;try{l=n.checkManifestAndWeightFiles(u,t)}catch(e){return void a(e)}var c=[],h=[],d=[];u.forEach((function(e){e.paths.forEach((function(e){h.push(e),d.push(null)})),c.push.apply(c,e.weights)})),u.forEach((function(e){e.paths.forEach((function(e){var t=new FileReader;t.onload=function(t){var n=t.target.result,a=h.indexOf(e);d[a]=n,-1===d.indexOf(null)&&r({modelTopology:o,weightSpecs:c,weightData:yf(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,userDefinedMetadata:s.userDefinedMetadata})},t.onerror=function(t){return a("Failed to weights data from file of path '"+e+"'.")},t.readAsArrayBuffer(l[e])}))}))}else a(new Error("weightManifest field is missing from file "+e.name))}else a(new Error("modelTopology field is missing from file "+e.name))},i.onerror=function(t){return a("Failed to read model topology and weights manifest JSON from file '"+e.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},i.readAsText(e)}))]}))}))},e.prototype.checkManifestAndWeightFiles=function(e,t){for(var n=[],r=t.map((function(e){return bf(e.name)})),a={},i=0,s=e;i<s.length;i++)s[i].paths.forEach((function(e){var i=bf(e);if(-1!==n.indexOf(i))throw new Error("Duplicate file basename found in weights manifest: '"+i+"'");if(n.push(i),-1===r.indexOf(i))throw new Error("Weight file with basename '"+i+"' is not provided.");a[e]=t[r.indexOf(i)]}));if(n.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest ("+n.length+") and the number of weight files provided ("+t.length+").");return a},e}();function Kf(e,t,n,r){!function(e){nn(null!=e&&Array.isArray(e)&&e.length>0,(function(){return"promises must be a none empty array"}))}(e),function(e,t){nn(e>=0&&e<=1,(function(){return"Progress fraction must be in range [0, 1], but got startFraction "+e})),nn(t>=0&&t<=1,(function(){return"Progress fraction must be in range [0, 1], but got endFraction "+t})),nn(t>=e,(function(){return"startFraction must be no more than endFraction, but got startFraction "+e+" and endFraction "+t}))}(n=null==n?0:n,r=null==r?1:r);var a=0;return Promise.all(e.map((function(i){return i.then((function(i){var s=n+ ++a/e.length*(r-n);return t(s),i})),i})))}function Xf(e,t){return Bt(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c;return zt(this,(function(h){switch(h.label){case 0:return null==t&&(t={}),n=null==t.fetchFunc?Vt().platform.fetch:t.fetchFunc,r=e.map((function(e){return n(e,t.requestInit,{isBinary:!0})})),a=0,i=.5,null!=t.onProgress?[3,2]:[4,Promise.all(r)];case 1:return s=h.sent(),[3,4];case 2:return[4,Kf(r,t.onProgress,a,i)];case 3:s=h.sent(),h.label=4;case 4:return o=s.map((function(e){return e.arrayBuffer()})),u=.5,l=1,null!=t.onProgress?[3,6]:[4,Promise.all(o)];case 5:return c=h.sent(),[3,8];case 6:return[4,Kf(o,t.onProgress,u,l)];case 7:c=h.sent(),h.label=8;case 8:return[2,c]}}))}))}function Yf(e){var t=this;return function(n,r,a){return void 0===r&&(r=""),Bt(t,void 0,void 0,(function(){var t,i,s,o,u,l,c,h,d,p;return zt(this,(function(f){switch(f.label){case 0:if(t=n.map((function(){return!1})),i={},s=null!=a?a.map((function(){return!1})):[],o=[],n.forEach((function(e,n){var r=0;e.weights.forEach((function(e){var u="quantization"in e?e.quantization.dtype:e.dtype,l=df[u]*on(e.shape),c=function(){t[n]=!0,null==i[n]&&(i[n]=[]),i[n].push({manifestEntry:e,groupOffset:r,sizeBytes:l})};null!=a?a.forEach((function(t,n){t===e.name&&(c(),s[n]=!0)})):c(),o.push(e.name),r+=l}))})),!s.every((function(e){return e})))throw u=a.filter((function(e,t){return!s[t]})),new Error("Could not find weights in manifest with names: "+u.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".");return l=t.reduce((function(e,t,n){return t&&e.push(n),e}),[]),c=[],l.forEach((function(e){n[e].paths.forEach((function(e){var t=r+(r.endsWith("/")?"":"/")+e;c.push(t)}))})),[4,e(c)];case 1:return h=f.sent(),d={},p=0,l.forEach((function(e){for(var t=n[e].paths.length,r=0,a=0;a<t;a++)r+=h[p+a].byteLength;for(var s=new ArrayBuffer(r),o=new Uint8Array(s),u=0,l=0;l<t;l++){var c=new Uint8Array(h[p+l]);o.set(c,u),u+=c.byteLength}i[e].forEach((function(e){var t=ff(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(var n in t)d[n]=t[n]})),p+=t})),[2,d]}}))}))}}wf.registerSaveRouter((function(e){return Vt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(jf.URL_SCHEME)?function(e){return void 0===e&&(e="model"),new jf(e)}(e.slice(jf.URL_SCHEME.length)):null}));var Qf=function(){function e(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(nn("function"==typeof t.fetchFunc,(function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"})),this.fetch=t.fetchFunc):this.fetch=Vt().platform.fetch,nn(null!=e&&e.length>0,(function(){return"URL path for http must not be null, undefined or empty."})),Array.isArray(e)&&nn(2===e.length,(function(){return"URL paths for http must have a length of 2, (actual length is "+e.length+")."})),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}return e.prototype.save=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r,a;return zt(this,(function(i){switch(i.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n},t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,t)];case 1:if((a=i.sent()).ok)return[2,{modelArtifactsInfo:xf(e),responses:[a]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}}))}))},e.prototype.load=function(){return Bt(this,void 0,void 0,(function(){var e,t,n,r,a,i,s,o,u,l,c,h;return zt(this,(function(d){switch(d.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(e=d.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+e.status+". Please verify this URL points to the model JSON of the model to load.");d.label=2;case 2:return d.trys.push([2,4,,5]),[4,e.json()];case 3:return t=d.sent(),[3,5];case 4:throw d.sent(),n="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?n+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":n+=" Please make sure the server is serving valid JSON for this request.",new Error(n);case 5:if(r=t.modelTopology,a=t.weightsManifest,i=t.generatedBy,s=t.convertedBy,o=t.format,u=t.userDefinedMetadata,null==r&&null==a)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return null==a?[3,7]:[4,this.loadWeights(a)];case 6:h=d.sent(),l=h[0],c=h[1],d.label=7;case 7:return[2,{modelTopology:r,weightSpecs:l,weightData:c,userDefinedMetadata:u,generatedBy:i,convertedBy:s,format:o}]}}))}))},e.prototype.loadWeights=function(e){return Bt(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u,l,c,h;return zt(this,(function(d){switch(d.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,n=function(e){var t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=n[0],a=n[1],i=this.weightPathPrefix||r,s=[],o=0,u=e;o<u.length;o++)l=u[o],s.push.apply(s,l.weights);return c=[],e.forEach((function(e){e.paths.forEach((function(e){c.push(i+e+a)}))})),[4,Xf(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return h=d.sent(),[2,[s,yf(h)]]}}))}))},e.URL_SCHEME_REGEX=/^https?:\/\//,e}();function Jf(e){return null!=e.match(Qf.URL_SCHEME_REGEX)}var Zf=function(e,t){return"undefined"==typeof fetch?null:(Array.isArray(e)?e.every((function(e){return Jf(e)})):Jf(e))?em(e,{onProgress:t}):null};function em(e,t){return new Qf(e,t)}wf.registerSaveRouter(Zf),wf.registerLoadRouter(Zf);var tm,nm=function(){function e(e){this.modelArtifacts=e}return e.prototype.load=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){return[2,this.modelArtifacts]}))}))},e}(),rm=function(){function e(e){this.saveHandler=e}return e.prototype.save=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(t){return[2,this.saveHandler(e)]}))}))},e}(),am=Object.freeze({browserFiles:function(e){return new qf(e)},browserHTTPRequest:function(e,t){return em(e,t)},concatenateArrayBuffers:yf,decodeWeights:ff,encodeWeights:function(e,t){return Bt(this,void 0,void 0,(function(){var n,r,a,i,s,o=this;return zt(this,(function(u){switch(u.label){case 0:for(n=[],r=[],a=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e),i=function(i){var s=a[i],u=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==u.dtype&&"int32"!==u.dtype&&"bool"!==u.dtype&&"string"!==u.dtype)throw new Error("Unsupported dtype in weight '"+s+"': "+u.dtype);var l={name:s,shape:u.shape,dtype:u.dtype};if("string"===u.dtype){var c=new Promise((function(e){return Bt(o,void 0,void 0,(function(){var t,n,r,a,i,s,o;return zt(this,(function(l){switch(l.label){case 0:return[4,u.bytes()];case 1:for(t=l.sent(),n=t.reduce((function(e,t){return e+t.length}),0)+pf*t.length,r=new Uint8Array(n),a=0,i=0;i<t.length;i++)s=t[i],o=new Uint8Array(new Uint32Array([s.length]).buffer),r.set(o,a),a+=pf,r.set(s,a),a+=s.length;return e(r),[2]}}))}))}));r.push(c)}else r.push(u.data());null!=t&&(l.group=t),n.push(l)},s=0;s<a.length;++s)i(s);return[4,Promise.all(r)];case 1:return[2,{data:mf(u.sent()),specs:n}]}}))}))},fromMemory:function(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new nm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new nm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new nm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))},getLoadHandlers:function(e,t){return wf.getLoadHandlers(e,t)},getModelArtifactsInfoForJSON:xf,getSaveHandlers:function(e){return wf.getSaveHandlers(e)},http:em,isHTTPScheme:Jf,loadWeights:function(e,t,n,r){return void 0===t&&(t=""),Bt(this,void 0,void 0,(function(){return zt(this,(function(a){return[2,Yf((function(e){return Xf(e,{requestInit:r})}))(e,t,n)]}))}))},registerLoadRouter:function(e){return wf.registerLoadRouter(e)},registerSaveRouter:function(e){return wf.registerSaveRouter(e)},weightsLoaderFactory:Yf,withSaveHandler:function(e){return new rm(e)},copyModel:function(e,t){return Bt(this,void 0,void 0,(function(){return zt(this,(function(n){return[2,Sf(e,t,!1)]}))}))},listModels:function(){return Bt(this,void 0,void 0,(function(){var e,t,n,r,a,i,s;return zt(this,(function(o){switch(o.label){case 0:e=If.getSchemes(),t={},n=0,r=e,o.label=1;case 1:return n<r.length?(a=r[n],[4,If.getManager(a).listModels()]):[3,4];case 2:for(s in i=o.sent())t[a+kf+s]=i[s];o.label=3;case 3:return n++,[3,1];case 4:return[2,t]}}))}))},moveModel:function(e,t){return Bt(this,void 0,void 0,(function(){return zt(this,(function(n){return[2,Sf(e,t,!0)]}))}))},removeModel:function(e){return Bt(this,void 0,void 0,(function(){var t;return zt(this,(function(n){return t=Cf(e),[2,If.getManager(t.scheme).removeModel(t.path)]}))}))}}),im=Pa({confusionMatrix_:function(e,t,n){var r=Na(e,"labels","confusionMatrix"),a=Na(t,"predictions","confusionMatrix");nn(null==n||n>0&&Number.isInteger(n),(function(){return"If provided, numClasses must be a positive integer, but got "+n})),nn(1===r.rank,(function(){return"Expected the rank of labels to be 1, but got "+r.rank})),nn(1===a.rank,(function(){return"Expected the rank of predictions to be 1, but got "+a.rank})),nn(r.shape[0]===a.shape[0],(function(){return"Mismatch in the number of examples: "+r.shape[0]+" vs. "+a.shape[0]+". Labels and predictions should have the same number of elements."})),nn(n>0&&Number.isInteger(n),(function(){return"numClasses is required to be a positive integer, but got "+n}));var i=nh(r.asType("int32"),n),s=nh(a.asType("int32"),n);return i.transpose().matMul(s).asType("int32")}});Object.freeze({confusionMatrix:im});var sm=Pa({fromPixels_:function(e,t){if(void 0===t&&(t=3),t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var n=!1,r=!1,a=!1,i=!1,s=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);s=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=jt("FromPixels",mr.backendName))return mr.runKernel("FromPixels",{pixels:e},{numChannels:t});var o,u,l=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],c=l[0],h=l[1];if(s?o=e.getContext("2d").getImageData(0,0,c,h).data:r||n?o=e.data:(i||a)&&(null==tm&&(tm=document.createElement("canvas").getContext("2d")),tm.canvas.width=c,tm.canvas.height=h,tm.drawImage(e,0,0,c,h),o=tm.getImageData(0,0,c,h).data),4===t)u=new Int32Array(o);else{var d=c*h;u=new Int32Array(d*t);for(var p=0;p<d;p++)for(var f=0;f<t;++f)u[p*t+f]=o[4*p+f]}return qa(u,[h,c,t],"int32")}});Object.freeze({toPixels:function(e,t){return Bt(this,void 0,void 0,(function(){var n,r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k,I,C;return zt(this,(function(S){switch(S.label){case 0:if(n=Na(e,"img","toPixels"),e instanceof Zn||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank "+n.rank+".");if(r=n.shape.slice(0,2),a=r[0],i=r[1],(s=2===n.rank?1:n.shape[2])>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);return[4,n.data()];case 1:return o=S.sent(),u=n.min(),l=n.max(),[4,Promise.all([u.data(),l.data()])];case 2:if(c=S.sent(),h=c[0],d=c[1],p=h[0],f=d[0],u.dispose(),l.dispose(),"float32"===n.dtype){if(p<0||f>1)throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range ["+p+" - "+f+"].")}else{if("int32"!==n.dtype)throw new Error("Unsupported type for toPixels: "+n.dtype+". Please use float32 or int32 tensors.");if(p<0||f>255)throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range ["+p+" - "+f+"].")}for(m="float32"===n.dtype?255:1,g=new Uint8ClampedArray(i*a*4),v=0;v<a*i;++v)y=void 0,b=void 0,x=void 0,w=void 0,1===s?(y=o[v]*m,b=o[v]*m,x=o[v]*m,w=255):3===s?(y=o[3*v]*m,b=o[3*v+1]*m,x=o[3*v+2]*m,w=255):4===s&&(y=o[4*v]*m,b=o[4*v+1]*m,x=o[4*v+2]*m,w=o[4*v+3]*m),g[0+(k=4*v)]=Math.round(y),g[k+1]=Math.round(b),g[k+2]=Math.round(x),g[k+3]=Math.round(w);return null!=t&&(t.width=i,t.height=a,I=t.getContext("2d"),C=new ImageData(g,i,a),I.putImageData(C,0,0)),n!==e&&n.dispose(),[2,g]}}))}))},fromPixels:sm});var om=function(){function e(){}return e.prototype.getClassName=function(){return this.constructor.className},e.fromConfig=function(e,t){return new e(t)},e}(),um=function(){function e(){this.classNameMap={}}return e.getMap=function(){return null==e.instance&&(e.instance=new e),e.instance},e.register=function(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]},e}();function lm(e){nn(null!=e.className,(function(){return"Class being registered does not have the static className property defined."})),nn("string"==typeof e.className,(function(){return"className is required to be a string, but got type "+typeof e.className})),nn(e.className.length>0,(function(){return"Class being registered has an empty-string as its className, which is disallowed."})),um.register(e)}Object.freeze({Serializable:om,SerializationMap:um,registerClass:lm}),Object.freeze({gpgpu_util:il,webgl_util:ya,forceHalfFloat:function(){Vt().set("WEBGL_FORCE_F16_TEXTURES",!0)},MathBackendWebGL:yc,setWebGLContext:Ir,GPGPUContext:sl});var cm=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return Pt(t,e),t.prototype.minimize=function(e,t,n){void 0===t&&(t=!1);var r=this.computeGradients(e,n),a=r.value,i=r.grads;if(null!=n){var s=n.map((function(e){return{name:e.name,tensor:i[e.name]}}));this.applyGradients(s)}else this.applyGradients(i);return ka(i),t?a:(a.dispose(),null)},Object.defineProperty(t.prototype,"iterations",{get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),t.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},t.prototype.computeGradients=function(e,t){return function(e,t){nn(Rn(e),(function(){return"The f passed in variableGrads(f) must be a function"})),nn(null==t||Array.isArray(t)&&t.every((function(e){return e instanceof ir})),(function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"}));var n=null!=t;if(!n)for(var r in t=[],mr.registeredVariables)t.push(mr.registeredVariables[r]);var a=n?t.filter((function(e){return!e.trainable})):null,i=t.length;nn((t=t.filter((function(e){return e.trainable}))).length>0,(function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+i+" variables is trainable."}));var s=mr.gradients(e,t,null,!0),o=s.value,u=s.grads;nn(u.some((function(e){return null!=e})),(function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."})),nn(0===o.rank,(function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+o.rank+" tensor"}));var l={};return t.forEach((function(e,t){null!=u[t]&&(l[e.name]=u[t])})),null!=a&&a.forEach((function(e){return l[e.name]=null})),{value:o,grads:l}}(e,t)},t.prototype.dispose=function(){null!=this.iterations_&&ka(this.iterations_)},t.prototype.saveIterations=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){return null==this.iterations_&&(this.iterations_=0),[2,{name:"iter",tensor:Ga(this.iterations_,"int32")}]}))}))},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){throw new Error("getWeights() is not implemented for this optimizer yet.")}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}))}))},t.prototype.extractIterations=function(e){return Bt(this,void 0,void 0,(function(){var t;return zt(this,(function(n){switch(n.label){case 0:return t=this,[4,e[0].tensor.data()];case 1:return t.iterations_=n.sent()[0],[2,e.slice(1)]}}))}))},t}(om);Object.defineProperty(cm,Symbol.hasInstance,{value:function(e){return null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients}});var hm=function(e){function t(t,n,r){void 0===r&&(r=null);var a=e.call(this)||this;return a.learningRate=t,a.rho=n,a.epsilon=r,a.accumulatedGrads=[],a.accumulatedUpdates=[],null==r&&(a.epsilon=mr.backend.epsilon()),a}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=mr.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accum_grad",variable:wa((function(){return ti(a).variable(!1)}))}),null==t.accumulatedUpdates[r]&&(t.accumulatedUpdates[r]={originalName:n+"/accum_var",variable:wa((function(){return ti(a).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedGrads[r].variable,o=t.accumulatedUpdates[r].variable;wa((function(){var e=s.mul(t.rho).add(i.square().mul(1-t.rho)),n=o.add(t.epsilon).sqrt().div(s.add(t.epsilon).sqrt()).mul(i),r=o.mul(t.rho).add(n.square().mul(1-t.rho));s.assign(e),o.assign(r);var u=n.mul(-t.learningRate).add(a);a.assign(u)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedUpdates&&(ka(this.accumulatedGrads.map((function(e){return e.variable}))),ka(this.accumulatedUpdates.map((function(e){return e.variable}))))},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){var e;return zt(this,(function(t){switch(t.label){case 0:return e=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){var t;return zt(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=e.length/2,this.accumulatedGrads=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedUpdates=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.rho,t.epsilon)},t.className="Adadelta",t}(cm);lm(hm);var dm=function(e){function t(t,n){void 0===n&&(n=.1);var r=e.call(this)||this;return r.learningRate=t,r.initialAccumulatorValue=n,r.accumulatedGrads=[],r}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=mr.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accumulator",variable:wa((function(){return Qa(a.shape,t.initialAccumulatorValue).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedGrads[r].variable;wa((function(){var e=s.add(i.square());s.assign(e);var n=i.div(e.add(mr.backend.epsilon()).sqrt()).mul(-t.learningRate).add(a);a.assign(n)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedGrads&&ka(this.accumulatedGrads.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulatedGrads.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulatedGrads=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},t.fromConfig=function(e,t){return new e(t.learningRate,t.initialAccumulatorValue)},t.className="Adagrad",t}(cm);lm(dm);var pm=function(e){function t(t,n,r,a){void 0===a&&(a=null);var i=e.call(this)||this;return i.learningRate=t,i.beta1=n,i.beta2=r,i.epsilon=a,i.accumulatedFirstMoment=[],i.accumulatedSecondMoment=[],wa((function(){i.accBeta1=Ga(n).variable(),i.accBeta2=Ga(r).variable()})),null==a&&(i.epsilon=mr.backend.epsilon()),i}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);wa((function(){var r=Ds(1,t.accBeta1),a=Ds(1,t.accBeta2);n.forEach((function(n,i){var s=mr.registeredVariables[n];null==t.accumulatedFirstMoment[i]&&(t.accumulatedFirstMoment[i]={originalName:n+"/m",variable:wa((function(){return ti(s).variable(!1)}))}),null==t.accumulatedSecondMoment[i]&&(t.accumulatedSecondMoment[i]={originalName:n+"/v",variable:wa((function(){return ti(s).variable(!1)}))});var o=Array.isArray(e)?e[i].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[i].variable,l=t.accumulatedSecondMoment[i].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2).add(o.square().mul(1-t.beta2)),d=c.div(r),p=h.div(a);u.assign(c),l.assign(h);var f=d.div(p.sqrt().add(t.epsilon)).mul(-t.learningRate).add(s);s.assign(f)}})),t.accBeta1.assign(t.accBeta1.mul(t.beta1)),t.accBeta2.assign(t.accBeta2.mul(t.beta2))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ka(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedSecondMoment&&ka(this.accumulatedSecondMoment.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){var e;return zt(this,(function(t){switch(t.label){case 0:return e=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){var t,n=this;return zt(this,(function(r){switch(r.label){case 0:return[4,this.extractIterations(e)];case 1:return e=r.sent(),wa((function(){n.accBeta1.assign(Es(n.beta1,n.iterations_+1)),n.accBeta2.assign(Es(n.beta2,n.iterations_+1))})),t=e.length/2,this.accumulatedFirstMoment=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedSecondMoment=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)},t.className="Adam",t}(cm);lm(pm);var fm=function(e){function t(t,n,r,a,i){void 0===a&&(a=null),void 0===i&&(i=0);var s=e.call(this)||this;return s.learningRate=t,s.beta1=n,s.beta2=r,s.epsilon=a,s.decay=i,s.accumulatedFirstMoment=[],s.accumulatedWeightedInfNorm=[],wa((function(){s.iteration=Ga(0).variable(),s.accBeta1=Ga(n).variable()})),null==a&&(s.epsilon=mr.backend.epsilon()),s}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);wa((function(){var r=Ds(1,t.accBeta1),a=Fs(-t.learningRate,t.iteration.mul(t.decay).add(1));n.forEach((function(n,i){var s=mr.registeredVariables[n];null==t.accumulatedFirstMoment[i]&&(t.accumulatedFirstMoment[i]={originalName:n+"/m",variable:ti(s).variable(!1)}),null==t.accumulatedWeightedInfNorm[i]&&(t.accumulatedWeightedInfNorm[i]={originalName:n+"/v",variable:ti(s).variable(!1)});var o=Array.isArray(e)?e[i].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[i].variable,l=t.accumulatedWeightedInfNorm[i].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2),d=o.abs(),p=h.maximum(d);u.assign(c),l.assign(p);var f=a.div(r).mul(c.div(p.add(t.epsilon))).add(s);s.assign(f)}})),t.iteration.assign(t.iteration.add(1)),t.accBeta1.assign(t.accBeta1.mul(t.beta1))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ka(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedWeightedInfNorm&&ka(this.accumulatedWeightedInfNorm.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){throw new Error("getWeights() is not implemented for Adamax yet.")}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){throw new Error("setWeights() is not implemented for Adamax yet.")}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)},t.className="Adamax",t}(cm);lm(fm);var mm=function(e){function t(t){var n=e.call(this)||this;return n.learningRate=t,n.setLearningRate(t),n}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Array.isArray(e)?e[r].tensor:e[n];if(null!=a){var i=mr.registeredVariables[n];wa((function(){var e=t.c.mul(a).add(i);i.assign(e)}))}})),this.incrementIterations()},t.prototype.setLearningRate=function(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=function(e){return mr.keep(e)}(Ga(-e))},t.prototype.dispose=function(){this.c.dispose()},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()]]}}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:if(0!==(e=t.sent()).length)throw new Error("SGD optimizer does not have settable weights.");return[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate}},t.fromConfig=function(e,t){return new e(t.learningRate)},t.className="SGD",t}(cm);lm(mm);var gm=function(e){function t(t,n,r){void 0===r&&(r=!1);var a=e.call(this,t)||this;return a.learningRate=t,a.momentum=n,a.useNesterov=r,a.accumulations=[],a.m=Ga(a.momentum),a}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=mr.registeredVariables[n];null==t.accumulations[r]&&(t.accumulations[r]={originalName:n+"/momentum",variable:wa((function(){return ti(a).variable(!1)}))});var i=t.accumulations[r].variable,s=Array.isArray(e)?e[r].tensor:e[n];null!=s&&wa((function(){var e,n=t.m.mul(i).add(s);e=t.useNesterov?t.c.mul(s.add(n.mul(t.m))).add(a):t.c.mul(n).add(a),i.assign(n),a.assign(e)}))})),this.incrementIterations()},t.prototype.dispose=function(){this.m.dispose(),null!=this.accumulations&&ka(this.accumulations.map((function(e){return e.variable})))},t.prototype.setMomentum=function(e){this.momentum=e},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){return zt(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulations.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){return zt(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulations=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},t.fromConfig=function(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)},t.className="Momentum",t}(mm);lm(gm);var vm=function(e){function t(t,n,r,a,i){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===a&&(a=null),void 0===i&&(i=!1);var s=e.call(this)||this;if(s.learningRate=t,s.decay=n,s.momentum=r,s.epsilon=a,s.accumulatedMeanSquares=[],s.accumulatedMoments=[],s.accumulatedMeanGrads=[],s.centered=i,null==a&&(s.epsilon=mr.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.");return s}return Pt(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=mr.registeredVariables[n];null==t.accumulatedMeanSquares[r]&&(t.accumulatedMeanSquares[r]={originalName:n+"/rms",variable:wa((function(){return ti(a).variable(!1)}))}),null==t.accumulatedMoments[r]&&(t.accumulatedMoments[r]={originalName:n+"/momentum",variable:wa((function(){return ti(a).variable(!1)}))}),null==t.accumulatedMeanGrads[r]&&t.centered&&(t.accumulatedMeanGrads[r]={originalName:n+"/mg",variable:wa((function(){return ti(a).variable(!1)}))});var i=Array.isArray(e)?e[r].tensor:e[n];if(null!=i){var s=t.accumulatedMeanSquares[r].variable,o=t.accumulatedMoments[r].variable;wa((function(){var e=s.mul(t.decay).add(i.square().mul(1-t.decay));if(t.centered){var n=t.accumulatedMeanGrads[r].variable,u=n.mul(t.decay).add(i.mul(1-t.decay)),l=o.mul(t.momentum).add(i.mul(t.learningRate).div(e.sub(u.square().add(t.epsilon)).sqrt()));s.assign(e),n.assign(u),o.assign(l);var c=a.sub(l);a.assign(c)}else{var h=s.mul(t.decay).add(i.square().mul(1-t.decay));l=o.mul(t.momentum).add(i.mul(t.learningRate).div(h.add(t.epsilon).sqrt())),s.assign(h),o.assign(l),c=a.sub(l),a.assign(c)}}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedMeanSquares&&ka(this.accumulatedMeanSquares.map((function(e){return e.variable}))),null!=this.accumulatedMeanGrads&&this.centered&&ka(this.accumulatedMeanGrads.map((function(e){return e.variable}))),null!=this.accumulatedMoments&&ka(this.accumulatedMoments.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return Bt(this,void 0,void 0,(function(){var e;return zt(this,(function(t){switch(t.label){case 0:return e=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&e.push.apply(e,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return Bt(this,void 0,void 0,(function(){var t;return zt(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=this.centered?e.length/3:e.length/2,this.accumulatedMeanSquares=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedMoments=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}}))),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},t.fromConfig=function(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)},t.className="RMSProp",t}(cm);lm(vm),"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate&&setImmediate,Zn.prototype.add=function(e){return $i(this,e)},Zn.prototype.broadcastTo=function(e){return Gc(this,e)},Zn.prototype.div=function(e){return Fs(this,e)},Zn.prototype.divNoNan=function(e){return Jc(this,e)},Zn.prototype.squaredDifference=function(e){return bh(this,e)},Zn.prototype.tile=function(e){return Zc(this,e)},Zn.prototype.oneHot=function(e,t,n){return void 0===t&&(t=1),void 0===n&&(n=0),nh(this,e,t,n)},Zn.prototype.transpose=function(e){return Xs(this,e)},Zn.prototype.pad=function(e,t){return rh(this,e,t)},Zn.prototype.batchNorm=function(e,t,n,r,a){return _c(this,e,t,n,r,a)},Qn=Mp;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var ym,bm,xm=function(){return(xm=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function wm(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function km(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(ym||(ym={})),function(e){!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(bm||(bm={}));var Im={};function Cm(e){return Im[e]}function Sm(e,t,n,r){var a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){var i=a.inputIndexStart,s=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?i+1:a.inputIndexEnd;if("tensor"===a.type)return Nm(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type)return t.inputNames.slice(i,s).map((function(e){return Nm(e,n,r)}));var o=Array.prototype.slice.call(Nm(t.inputNames.slice(i)[0],n,r).dataSync());return"number"===a.type?o[0]:o}var u=t.attrParams[e];return u&&u.value}function Nm(e,t,n){var r=Rm(e),a=r[0],i=r[1],s=n.currentContextIds.find((function(e){return!!t[Em(a,e)]}));return void 0!==s?t[Em(a,s)][i]:void 0}function Tm(e,t){var n=Rm(e),r=n[0],a=n[1];return[Em(r,t&&t.currentContextId),a]}function Em(e,t){return t?e+"-"+t:e}function Rm(e){var t=e.lastIndexOf(":");return-1===t?[e,0]:[e.substring(0,t),Number(e.substring(t+1))]}function Am(e,t){for(var n=[],r=0;r<e.length;r+=t)n.push(e.slice(r,r+t));return n}var Dm=Object.freeze({json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),$m=Object.freeze({json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Fm=Object.freeze({json:[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}]}),_m=Object.freeze({json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}]}),Om=Object.freeze({json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),Mm=Object.freeze({json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Lm=Object.freeze({json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]}),Pm=Object.freeze({json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),Bm=Object.freeze({json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]}),zm=Object.freeze({json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Wm=Object.freeze({json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),Vm=Object.freeze({json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]}),Um=Object.freeze({json:[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}]}),Gm=Object.freeze({json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]}),Hm=Object.freeze({json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),jm=Object.freeze({json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}]}),qm=function(){function e(){var e=[Dm,$m,Fm,_m,Om,Mm,Lm,zm,Bm,Pm,Wm,Vm,Um,Gm,Hm,jm],t=[].concat.apply([],e.map((function(e){return e.json})));this.opMappers=t.reduce((function(e,t){return e[t.tfOpName]=t,e}),{})}return Object.defineProperty(e,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.transformGraph=function(e,t){var n=this;void 0===t&&(t={});var r=[],a=[],i=e.node.reduce((function(e,t){return e[t.name]=n.mapNode(t),t.op.startsWith("Placeholder")&&r.push(e[t.name]),"Const"===t.op&&a.push(e[t.name]),e}),{}),s=[],o=[],u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));var c=Object.keys(i);return c.forEach((function(e){var t=i[e];t.inputNames.forEach((function(e){var n=Tm(e)[0];t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(l).length?c.forEach((function(e){var t=i[e];0===t.children.length&&o.push(t)})):Object.keys(l).forEach((function(e){var t=Tm(e)[0],n=i[t];null!=n&&(n.signatureKey=l[e],o.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((function(e){var t=Tm(e)[0],n=i[t];n&&(n.signatureKey=u[e],s.push(n))})):s=r,{nodes:i,inputs:s,outputs:o,weights:a,placeholders:r,signature:t}},e.prototype.mapSignatureEntries=function(e){return Object.keys(e||{}).reduce((function(t,n){return t[e[n].name]=n,t}),{})},e.prototype.mapNode=function(e){var t=Cm(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});var n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((function(e){return e.startsWith("^")?e.substr(1):e})),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((function(e,t){return e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e}),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((function(t,n){var r=n.type,a=void 0;switch(n.type){case"string":void 0===(a=Xm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=Xm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(a=ag(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=ag(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(a=Qm(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(a=Qm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(a=rg(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=rg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(a=Ym(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=Ym(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(a=sg(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=sg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(a=ng(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=ng(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(a=ig(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=ig(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(a=Zm(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=Zm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(a=eg(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=eg(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+n.type+" for op: "+e.op)}return t[n.name]={value:a,type:r},t}),{})),n},e}();function Km(e,t){var n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){var t=Vt().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Xm(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return null!=a?Km(a.s,r):n}function Ym(e,t,n){var r=e[t];return r?r.b:n}function Qm(e,t,n){var r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Jm(e){switch("string"==typeof e&&(e=ym[e]),e){case ym.DT_FLOAT:return"float32";case ym.DT_INT32:case ym.DT_INT64:case ym.DT_INT8:case ym.DT_UINT8:return"int32";case ym.DT_BOOL:return"bool";case ym.DT_DOUBLE:return"float32";case ym.DT_STRING:return"string";default:return null}}function Zm(e,t,n){var r=e[t];return r&&r.type?Jm(r.type):n}function eg(e,t,n){var r=e[t];return r&&r.list&&r.list.type?r.list.type.map((function(e){return Jm(e)})):n}function tg(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((function(e){return"number"==typeof e.size?e.size:parseInt(e.size,10)})):[]}function ng(e,t,n){var r=e[t];return r&&r.shape?tg(r.shape):n}function rg(e,t,n){var r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((function(e){return"number"==typeof e?e:parseInt(e,10)})):n}function ag(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return a&&a.list&&a.list.s?a.list.s.map((function(e){return Km(e,r)})):n}function ig(e,t,n){var r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((function(e){return tg(e)})):n}function sg(e,t,n){var r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var og=function(){function e(e,t,n){var r=this;this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((function(e){return r.getInput(e)})),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((function(e,t){return e[t]=r.getAttr(t),e}),{}))}return e.prototype.getInput=function(e){return Nm(e,this.tensorMap,this.context)},e.prototype.getAttr=function(e,t){var n=this.node.rawAttrs[e];if(null!=n.tensor)return Nm(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Qm(this.node.rawAttrs,e,t);if(null!=n.s)return Xm(this.node.rawAttrs,e,t);if(null!=n.b)return Ym(this.node.rawAttrs,e,t);if(null!=n.shape)return ng(this.node.rawAttrs,e,t);if(null!=n.type)return Zm(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return rg(this.node.rawAttrs,e,t);if(null!=n.list.s)return ag(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ig(this.node.rawAttrs,e,t);if(null!=n.list.b)return sg(this.node.rawAttrs,e,t);if(null!=n.list.type)return eg(this.node.rawAttrs,e,t)}return t},e}(),ug=function(){function e(t,n,r,a,i,s,o){this.name=t,this.dtype=n,this.maxSize=r,this.elementShape=a,this.identicalElementShapes=i,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.id=e.nextId++}return Object.defineProperty(e.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),e.prototype.clearAndClose=function(){this.tensors.forEach((function(e){return e.tensor.dispose()})),this.tensors=[],this.closed_=!0},e.prototype.size=function(){return this.tensors.length},e.prototype.read=function(e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||e>=this.tensors.length)throw new Error("Tried to read from index "+e+", but array size is: "+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+e+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},e.prototype.readMany=function(e){var t=this;return e.map((function(e){return t.read(e)}))},e.prototype.write=function(e,t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index "+e+", but array is not resizeable and size is: "+this.maxSize);var n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+",\n          because the value dtype is "+t.dtype+", but TensorArray dtype is "+this.dtype+".");if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+e+"."),n&&n.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been read.");if(n&&n.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been written.");n.tensor=t,n.written=!0,this.tensors[e]=n},e.prototype.writeMany=function(e,t){var n=this;if(e.length!==t.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+e.length+" is not the same as tensors size: "+t.length+".");e.forEach((function(e,r){return n.write(e,t[r])}))},e.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+t);if(!e){e=[];for(var n=0;n<this.size();n++)e.push(n)}if(0===e.length)return Va([],[0].concat(this.elementShape));var r=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),vi(r,0)},e.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+e);if(0===this.size())return Va([],[0].concat(this.elementShape));for(var t=[],n=0;n<this.size();n++)t.push(n);var r=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+r[0].shape+")"),ni(r,0)},e.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+e.length+" vs. "+t.shape[0]);var n=Math.max.apply(Math,e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size ("+n+"  vs. "+this.maxSize+")");this.writeMany(e,yi(t,0))},e.prototype.split=function(e,t){var n=this;if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);var r=0,a=e.map((function(e){return r+=e}));if(r!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        "+r+", and tensor's shape is: "+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+e.length+"), and the TensorArray is not marked as dynamically resizeable");var i=0===r?0:t.size/r,s=[];wa((function(){t=t.reshape([1,r,i]);for(var o=0;o<e.length;++o){var u=[0,0===o?0:a[o-1],0],l=[1,e[o],i];s[o]=pd(t,u,l).reshape(n.elementShape)}return s}));for(var o=[],u=0;u<e.length;u++)o[u]=u;this.writeMany(o,s)},e.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,n){void 0===n&&(n=""),Vn.assert(this.shapesEqualAllowUndefinedSize(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))},e.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0},e.nextId=0,e}();function lg(e,t,n){var r=function(e,t,n){switch(e.category){case"arithmetic":return wa((function(){return function(e,t,n){switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[$i(Sm("a",e,t,n),Sm("b",e,t,n))];case"AddN":return[Ec(Sm("tensors",e,t,n))];case"FloorMod":case"Mod":return[Cs(Sm("a",e,t,n),Sm("b",e,t,n))];case"Mul":return[Ns(Sm("a",e,t,n),Sm("b",e,t,n))];case"RealDiv":case"Div":return[Fs(Sm("a",e,t,n),Sm("b",e,t,n))];case"DivNoNan":return[Jc(Sm("a",e,t,n),Sm("b",e,t,n))];case"FloorDiv":return[bs(Sm("a",e,t,n),Sm("b",e,t,n))];case"Sub":return[Ds(Sm("a",e,t,n),Sm("b",e,t,n))];case"Minimum":return[ks(Sm("a",e,t,n),Sm("b",e,t,n))];case"Maximum":return[xs(Sm("a",e,t,n),Sm("b",e,t,n))];case"Pow":return[Es(Sm("a",e,t,n),Sm("b",e,t,n))];case"SquaredDifference":return[bh(Sm("a",e,t,n),Sm("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"basic_math":return wa((function(){return function(e,t,n){switch(e.op){case"Abs":case"ComplexAbs":return[Mi(Sm("x",e,t,n))];case"Acos":return[Li(Sm("x",e,t,n))];case"Acosh":return[Pi(Sm("x",e,t,n))];case"Asin":return[Bi(Sm("x",e,t,n))];case"Asinh":return[zi(Sm("x",e,t,n))];case"Atan":return[Wi(Sm("x",e,t,n))];case"Atan2":return[vs(Sm("x",e,t,n),Sm("y",e,t,n))];case"Atanh":return[Vi(Sm("x",e,t,n))];case"Ceil":return[Ui(Sm("x",e,t,n))];case"Complex":return[Ba(Sm("real",e,t,n),Sm("imag",e,t,n))];case"Cos":return[Hi(Sm("x",e,t,n))];case"Cosh":return[ji(Sm("x",e,t,n))];case"Elu":return[Ad(Sm("x",e,t,n))];case"Erf":return[qi(Sm("x",e,t,n))];case"Exp":return[Ki(Sm("x",e,t,n))];case"Expm1":return[Xi(Sm("x",e,t,n))];case"Floor":return[Yi(Sm("x",e,t,n))];case"Log":return[Qi(Sm("x",e,t,n))];case"Log1p":return[Ji(Sm("x",e,t,n))];case"Imag":return[Wa(Sm("x",e,t,n))];case"Neg":return[es(Sm("x",e,t,n))];case"Reciprocal":return[ts(Sm("x",e,t,n))];case"Real":return[za(Sm("x",e,t,n))];case"Relu":return[Fd(Sm("x",e,t,n))];case"Round":return[ns(Sm("x",e,t,n))];case"Selu":return[Od(Sm("x",e,t,n))];case"Sigmoid":return[as(Sm("x",e,t,n))];case"Sin":return[ls(Sm("x",e,t,n))];case"Sign":return[is(Sm("x",e,t,n))];case"Sinh":return[cs(Sm("x",e,t,n))];case"Softplus":return[hs(Sm("x",e,t,n))];case"Sqrt":return[ds(Sm("x",e,t,n))];case"Square":return[yh(Sm("x",e,t,n))];case"Tanh":return[ms(Sm("x",e,t,n))];case"Tan":return[fs(Sm("x",e,t,n))];case"Relu6":case"ClipByValue":return[Gi(Sm("x",e,t,n),Sm("clipValueMin",e,t,n),Sm("clipValueMax",e,t,n))];case"Rsqrt":return[rs(Nm(e.inputNames[0],t,n))];case"Prod":return[Rd(Sm("x",e,t,n),Sm("axes",e,t,n))];case"LeakyRelu":return[Dd(Sm("x",e,t,n),Sm("alpha",e,t,n))];case"Prelu":return[$d(Sm("x",e,t,n),Sm("alpha",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"control":return function(e,t,n){return wm(void 0,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b,x,w,k,I,C,S,N,T,E,R,A,D,$,F,_,O,M;return km(this,(function(L){switch(L.label){case 0:switch(e.op){case"LoopCond":return[3,1];case"Switch":return[3,2];case"Merge":return[3,4];case"Enter":return[3,5];case"Exit":return[3,6];case"NextIteration":return[3,7];case"TensorArrayV3":return[3,8];case"TensorArrayWriteV3":return[3,9];case"TensorArrayReadV3":return[3,10];case"TensorArrayGatherV3":return[3,11];case"TensorArrayScatterV3":return[3,12];case"TensorArrayConcatV3":return[3,13];case"TensorArraySplitV3":return[3,14];case"TensorArraySizeV3":return[3,15];case"TensorArrayCloseV3":return[3,16]}return[3,17];case 1:return[2,[Sm("pred",e,t,n).clone()]];case 2:return r=Sm("pred",e,t,n),a=Sm("data",e,t,n),[4,r.data()];case 3:return[2,L.sent()[0]?[void 0,a.clone()]:[a.clone(),void 0]];case 4:return[2,(i=e.inputNames.find((function(e){return void 0!==Nm(e,t,n)})))?[Nm(i,t,n).clone()]:void 0];case 5:return s=Sm("frameName",e,t,n),o=Sm("tensor",e,t,n),n.enterFrame(s),[2,[o.clone()]];case 6:return u=Sm("tensor",e,t,n),n.exitFrame(),[2,[u.clone()]];case 7:return l=Sm("tensor",e,t,n),n.nextIteration(),[2,[l.clone()]];case 8:return c=Sm("size",e,t,n),h=Sm("dtype",e,t,n),d=Sm("elementShape",e,t,n),p=Sm("dynamicSize",e,t,n),f=Sm("clearAfterRead",e,t,n),m=Sm("identicalElementShapes",e,t,n),g=Sm("name",e,t,n),v=new ug(g,h,c,d,m,p,f),n.addTensorArray(v),[2,[Ga(v.id),Ga(1)]];case 9:return y=Sm("tensorArrayId",e,t,n),b=Sm("index",e,t,n),x=Sm("tensor",e,t,n),n.getTensorArray(y).write(b,x),[2,[Ga(1)]];case 10:return w=Sm("tensorArrayId",e,t,n),k=Sm("index",e,t,n),[2,[n.getTensorArray(w).read(k)]];case 11:return I=Sm("tensorArrayId",e,t,n),C=Sm("indices",e,t,n),S=Sm("dtype",e,t,n),[2,[n.getTensorArray(I).gather(C,S)]];case 12:return N=Sm("tensorArrayId",e,t,n),T=Sm("indices",e,t,n),E=Sm("tensor",e,t,n),n.getTensorArray(N).scatter(T,E),[2,[Ga(1)]];case 13:return R=Sm("tensorArrayId",e,t,n),A=n.getTensorArray(R),D=Sm("dtype",e,t,n),[2,[A.concat(D)]];case 14:return $=Sm("tensorArrayId",e,t,n),F=Sm("tensor",e,t,n),_=Sm("lengths",e,t,n),n.getTensorArray($).split(_,F),[2,[Ga(1)]];case 15:return O=Sm("tensorArrayId",e,t,n),[2,[Ga(n.getTensorArray(O).size(),"int32")]];case 16:return M=Sm("tensorArrayId",e,t,n),n.getTensorArray(M).clearAndClose(),[2,[Ga(0)]];case 17:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"convolution":return wa((function(){return function(e,t,n){switch(e.op){case"Conv1D":var r=Sm("stride",e,t,n),a=Sm("pad",e,t,n),i=Sm("dataFormat",e,t,n).toUpperCase(),s=Sm("dilation",e,t,n);return[zh(Sm("x",e,t,n),Sm("filter",e,t,n),r,a,i,s)];case"Conv2D":r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),i=Sm("dataFormat",e,t,n).toUpperCase();var o=Sm("dilations",e,t,n);return[Wh(Sm("x",e,t,n),Sm("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])];case"_FusedConv2D":case"FusedDepthwiseConv2dNative":var u=Sm("fusedOps",e,t,n),l=u[0],c=u[1],h="biasadd"===l,d="prelu"===c,p="fusedbatchnorm"===l,f=Sm("numArgs",e,t,n);if(h){if(d&&2!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&1!==f)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),i=Sm("dataFormat",e,t,n).toUpperCase(),o=Sm("dilations",e,t,n);var m=Sm("args",e,t,n),g=m[0],v=m[1];return[("_FusedConv2D"===e.op?Op.conv2d:Op.depthwiseConv2d)({x:Sm("x",e,t,n),filter:Sm("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:g,activation:c,preluActivationWeights:v})];case"Conv2DBackpropInput":case"Conv2dTranspose":var y=Sm("outputShape",e,t,n);return r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),[Xh(Sm("x",e,t,n),Sm("filter",e,t,n),y,[r[1],r[2]],a)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":return r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),o=Sm("dilations",e,t,n),i=Sm("dataFormat",e,t,n).toUpperCase(),[Hh(Sm("input",e,t,n),Sm("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])];case"Conv3D":return r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),i=Sm("dataFormat",e,t,n).toUpperCase(),o=Sm("dilations",e,t,n),[Vh(Sm("x",e,t,n),Sm("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])];case"AvgPool":r=Sm("strides",e,t,n),a=Sm("pad",e,t,n);var b=Sm("kernelSize",e,t,n);return[ud(Sm("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a)];case"MaxPool":return r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),b=Sm("kernelSize",e,t,n),[od(Sm("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a)];case"MaxPoolWithArgmax":r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),b=Sm("kernelSize",e,t,n);var x=Sm("includeBatchInIndex",e,t,n),w=dd(Sm("x",e,t,n),[b[1],b[2]],[r[1],r[2]],a,x);return[w.result,w.indexes];case"AvgPool3D":return r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),b=Sm("kernelSize",e,t,n),[hd(Sm("x",e,t,n),[b[1],b[2],b[3]],[r[1],r[2],r[3]],a)];case"MaxPool3D":return r=Sm("strides",e,t,n),a=Sm("pad",e,t,n),b=Sm("kernelSize",e,t,n),[cd(Sm("x",e,t,n),[b[1],b[2],b[3]],[r[1],r[2],r[3]],a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"creation":return wa((function(){return function(e,t,n){switch(e.op){case"Fill":var r=Sm("shape",e,t,n),a=Sm("dtype",e,t,n);return[Qa(r,Sm("value",e,t,n),a)];case"LinSpace":var i=Sm("start",e,t,n);return[Ja(i,Sm("stop",e,t,n),Sm("num",e,t,n))];case"Multinomial":var s=Sm("logits",e,t,n),o=Sm("numSamples",e,t,n),u=Sm("seed",e,t,n);return[th(s,o,u)];case"OneHot":var l=Sm("indices",e,t,n),c=Sm("depth",e,t,n),h=Sm("onValue",e,t,n),d=Sm("offValue",e,t,n);return[nh(l,c,h,d)];case"Ones":return[Xa(Sm("shape",e,t,n),Sm("dtype",e,t,n))];case"OnesLike":return[ei(Sm("x",e,t,n))];case"RandomUniform":return[vh(Sm("shape",e,t,n),Sm("minval",e,t,n),Sm("maxval",e,t,n),Sm("dtype",e,t,n))];case"Range":return[Za(i=Sm("start",e,t,n),Sm("stop",e,t,n),Sm("step",e,t,n),Sm("dtype",e,t,n))];case"TruncatedNormal":r=Sm("shape",e,t,n);var p=Sm("mean",e,t,n),f=Sm("stdDev",e,t,n);return u=Sm("seed",e,t,n),[xh(r,p,f,Sm("dtype",e,t,n),u)];case"Zeros":return[Ya(Sm("shape",e,t,n),Sm("dtype",e,t,n))];case"ZerosLike":return[ti(Sm("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"dynamic":return function(e,t,n){return wm(void 0,void 0,void 0,(function(){var r,a,i,s,o,u,l,c;return km(this,(function(h){switch(h.label){case 0:switch(e.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":return[3,1];case"Where":return[3,5];case"ListDiff":return[3,7]}return[3,8];case 1:return r=Sm("boxes",e,t,n),a=Sm("scores",e,t,n),i=Sm("maxOutputSize",e,t,n),s=Sm("iouThreshold",e,t,n),o=Sm("scoreThreshold",e,t,n),"NonMaxSuppressionV5"!==e.op?[3,3]:(u=Sm("softNmsSigma",e,t,n),[4,Tp.nonMaxSuppressionWithScoreAsync(r,a,i,s,o,u)]);case 2:return[2,[(c=h.sent()).selectedIndices,c.selectedScores]];case 3:return[4,Tp.nonMaxSuppressionAsync(r,a,i,s,o)];case 4:return[2,[h.sent()]];case 5:return l=Sm("condition",e,t,n).asType("bool"),[4,Qc(l)];case 6:return c=[h.sent()],l.dispose(),[2,c];case 7:return[2,bi(Sm("x",e,t,n),Sm("y",e,t,n))];case 8:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"evaluation":return wa((function(){return function(e,t,n){if("TopKV2"===e.op){var r=Sm("x",e,t,n),a=Sm("k",e,t,n),i=Sm("sorted",e,t,n),s=Vd(r,a,i);return[s.values,s.indices]}throw TypeError("Node type "+e.op+" is not implemented")}(e,t,n)}));case"image":return wa((function(){return function(e,t,n){switch(e.op){case"ResizeBilinear":var r=Sm("images",e,t,n),a=Sm("size",e,t,n),i=Sm("alignCorners",e,t,n);return[Tp.resizeBilinear(r,[a[0],a[1]],i)];case"ResizeNearestNeighbor":return r=Sm("images",e,t,n),a=Sm("size",e,t,n),i=Sm("alignCorners",e,t,n),[Tp.resizeNearestNeighbor(r,[a[0],a[1]],i)];case"CropAndResize":var s=Sm("image",e,t,n),o=Sm("boxes",e,t,n),u=Sm("boxInd",e,t,n),l=Sm("cropSize",e,t,n),c=Sm("method",e,t,n),h=Sm("extrapolationValue",e,t,n);return[Tp.cropAndResize(s,o,u,l,c,h)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"graph":return wa((function(){return function(e,t,n){switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":var r=Sm("default",e,t,n);return[Nm(e.name,t,n)||r];case"Placeholder":return[Nm(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Sm("x",e,t,n).clone()];case"IdentityN":return Sm("x",e,t,n).map((function(e){return e.clone()}));case"Shape":return[Ha(Sm("x",e,t,n).shape,"int32")];case"ShapeN":return Sm("x",e,t,n).map((function(e){return Ha(e.shape)}));case"Size":return[Ga(Sm("x",e,t,n).size,"int32")];case"Rank":return[Ga(Sm("x",e,t,n).rank,"int32")];case"NoOp":return[Ga(1)];case"Print":var a=Sm("x",e,t,n),i=Sm("data",e,t,n),s=Sm("message",e,t,n),o=Sm("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(var u=0;u<i.length;u++)console.log(Array.prototype.slice.call(i[u].dataSync()).slice(0,o));return[a];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"logical":return wa((function(){return function(e,t,n){switch(e.op){case"Equal":return[wh(Sm("a",e,t,n),Sm("b",e,t,n))];case"NotEqual":return[Dh(Sm("a",e,t,n),Sm("b",e,t,n))];case"Greater":return[Ih(Sm("a",e,t,n),Sm("b",e,t,n))];case"GreaterEqual":return[Ch(Sm("a",e,t,n),Sm("b",e,t,n))];case"Less":return[Th(Sm("a",e,t,n),Sm("b",e,t,n))];case"LessEqual":return[Eh(Sm("a",e,t,n),Sm("b",e,t,n))];case"LogicalAnd":return[jc(Sm("a",e,t,n),Sm("b",e,t,n))];case"LogicalNot":return[qc(Sm("a",e,t,n))];case"LogicalOr":return[Kc(Sm("a",e,t,n),Sm("b",e,t,n))];case"Select":case"SelectV2":return[Yc(Sm("condition",e,t,n),Sm("a",e,t,n),Sm("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"matrices":return wa((function(){return function(e,t,n){switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Qh(Sm("a",e,t,n),Sm("b",e,t,n),Sm("transposeA",e,t,n),Sm("transposeB",e,t,n))];case"Transpose":return[Xs(Sm("x",e,t,n),Sm("perm",e,t,n))];case"_FusedMatMul":var r=Sm("fusedOps",e,t,n),a=r[0],i=r[1],s="biasadd"===a,o="prelu"===i,u=Sm("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var l=Sm("args",e,t,n),c=l[0],h=l[1];return[Op.matMul({a:Sm("a",e,t,n),b:Sm("b",e,t,n),transposeA:Sm("transposeA",e,t,n),transposeB:Sm("transposeB",e,t,n),bias:c,activation:i,preluActivationWeights:h})];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"normalization":return wa((function(){return function(e,t,n){switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[_c(Sm("x",e,t,n),Sm("mean",e,t,n),Sm("variance",e,t,n),Sm("offset",e,t,n),Sm("scale",e,t,n),Sm("epsilon",e,t,n))];case"LRN":return[Md(Sm("x",e,t,n),Sm("radius",e,t,n),Sm("bias",e,t,n),Sm("alpha",e,t,n),Sm("beta",e,t,n))];case"Softmax":return[qs(Sm("x",e,t,n))];case"LogSoftmax":return[Ks(Sm("x",e,t,n))];case"SparseToDense":return[Xd(Sm("sparseIndices",e,t,n),Sm("outputShape",e,t,n),Sm("sparseValues",e,t,n),Sm("defaultValue",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"reduction":return wa((function(){return function(e,t,n){switch(e.op){case"Max":var r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n);return[Cd(Sm("x",e,t,n),r,a)];case"Mean":return r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n),[Sd(Sm("x",e,t,n),r,a)];case"Min":return r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n),[Nd(Sm("x",e,t,n),r,a)];case"Sum":return r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n),[Ed(Sm("x",e,t,n),r,a)];case"All":return r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n),[bd(Sm("x",e,t,n),r,a)];case"Any":return r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n),[xd(Sm("x",e,t,n),r,a)];case"ArgMax":return r=Sm("axis",e,t,n),[wd(Sm("x",e,t,n),r)];case"ArgMin":return r=Sm("axis",e,t,n),[kd(Sm("x",e,t,n),r)];case"Prod":return r=Sm("axis",e,t,n),a=Sm("keepDims",e,t,n),[Rd(Sm("x",e,t,n),r,a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"slice_join":return wa((function(){return function(e,t,n){switch(e.op){case"ConcatV2":case"Concat":var r=Sm("n",e,t,n),a=Sm("axis",e,t,n),i=Sm("tensors",e,t,n);return i=i.slice(0,r),[ni(i,a)];case"GatherV2":case"Gather":a=Sm("axis",e,t,n);var s=Sm("x",e,t,n),o=Sm("indices",e,t,n);return[Oh(s,o.asType("int32"),a)];case"ReverseV2":case"Reverse":return a=Sm("axis",e,t,n),s=Sm("x",e,t,n),[ed(s,a)];case"Slice":var u=Sm("begin",e,t,n),l=Sm("size",e,t,n);return[pd(Sm("x",e,t,n),u,l)];case"StridedSlice":u=Sm("begin",e,t,n);var c=Sm("end",e,t,n),h=Sm("strides",e,t,n),d=Sm("beginMask",e,t,n),p=Sm("endMask",e,t,n),f=Sm("ellipsisMask",e,t,n),m=Sm("newAxisMask",e,t,n),g=Sm("shrinkAxisMask",e,t,n),v=Sm("x",e,t,n);if(1===u.length&&v.shape.length>1)for(var y=1;y<v.shape.length;y++)u.push(0),c.push(v.shape[y]),h.push(h[0]);return[Wd(v,u,c,h,d,p,f,m,g)];case"Pack":return wa((function(){var r=Sm("axis",e,t,n),a=Sm("tensors",e,t,n),i=a[0].shape,s=a[0].squeeze().shape,o=a.map((function(e){var t=Vn.arraysEqual(e.shape,i);if(!t&&!Vn.arraysEqual(e.squeeze().shape,s))throw new Error("the input tensors shape does not match");return t?e:e.reshape(i)}));return[vi(o,r)]}));case"Unpack":return wa((function(){var r=Sm("axis",e,t,n),a=Sm("tensor",e,t,n);return yi(a,r)}));case"Tile":var b=Sm("reps",e,t,n);return[Zc(Sm("x",e,t,n),b)];case"Split":case"SplitV":a=Sm("axis",e,t,n);var x=Sm("numOrSizeSplits",e,t,n);return oi(Sm("x",e,t,n),x,a);case"ScatterNd":o=Sm("indices",e,t,n);var w=Sm("values",e,t,n),k=Sm("shape",e,t,n);return[Ud(o,w,k)];case"GatherNd":var I=Sm("x",e,t,n);return o=Sm("indices",e,t,n),[Yd(I,o)];case"SparseToDense":o=Sm("sparseIndices",e,t,n),k=Sm("outputShape",e,t,n);var C=Sm("sparseValues",e,t,n),S=Sm("defaultValue",e,t,n);return[Xd(o,C,k,C.dtype===S.dtype?S:S.asType(C.dtype))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"spectral":return wa((function(){return function(e,t,n){switch(e.op){case"FFT":return[Gd(Sm("x",e,t,n))];case"IFFT":return[Hd(Sm("x",e,t,n))];case"RFFT":return[jd(Sm("x",e,t,n))];case"IRFFT":return[qd(Sm("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"transformation":return wa((function(){return function(e,t,n){switch(e.op){case"Cast":return[ci(Sm("x",e,t,n),Sm("dtype",e,t,n))];case"ExpandDims":var r=Sm("axis",e,t,n);return[pi(Sm("x",e,t,n),r)];case"Squeeze":return r=Sm("axis",e,t,n),[gi(Sm("x",e,t,n),r)];case"Reshape":return[fi(Sm("x",e,t,n),Sm("shape",e,t,n))];case"PadV2":case"Pad":return[rh(Sm("x",e,t,n),Am(Sm("padding",e,t,n),2),Sm("constantValue",e,t,n))];case"SpaceToBatchND":var a=Sm("blockShape",e,t,n),i=Am(Sm("paddings",e,t,n),2);return[mi(Sm("x",e,t,n),a,i)];case"BatchToSpaceND":a=Sm("blockShape",e,t,n);var s=Am(Sm("crops",e,t,n),2);return[li(Sm("x",e,t,n),a,s)];case"DepthToSpace":var o=Sm("blockSize",e,t,n),u=Sm("dataFormat",e,t,n).toUpperCase();return[di(Sm("x",e,t,n),o,u)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"custom":var r=Cm(e.op);if(r&&r.customExecutor)return r.customExecutor(new og(e,t,n));throw TypeError("Custom op "+e.op+" is not registered.");default:throw TypeError("Unknown op '"+e.op+"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(e,t,n);return r instanceof Promise?r.then((function(e){return[].concat(e)})):[].concat(r)}var cg=function(){function e(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return e.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(e.prototype,"currentContext",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),e.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e},e.prototype.contextIdforContexts=function(e){return e?e.map((function(e){return 0===e.id&&0===e.iterationId?"":e.frameName+"-"+e.iterationId})).join("/"):""},e.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},e.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},e.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},e.prototype.getWeight=function(e){return this.weightMap[e]},e.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},e.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},e}();function hg(e,t,n){for(var r=new Set,a=[],i=null,s=null,o=new Set,u=Object.keys(e).map((function(e){return Rm(e)[0]})),l=t.slice();l.length>0;){var c=l.pop();(fg(c)||mg(c))&&null==i&&(s=(i=c).children.map((function(e){return e.name})).filter((function(e){return r.has(e)}))),r.add(c.name),null==n[c.name]&&-1===u.indexOf(c.name)&&(0!==c.inputs.length?c.inputs.forEach((function(e){o.has(e.name)||(o.add(e.name),l.push(e))})):a.push(c.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:s}}var dg=["Switch","Merge","Enter","Exit","NextIteration"],pg=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function fg(e){return dg.indexOf(e.op)>=0}function mg(e){return pg.indexOf(e.op)>=0}var gg=function(){function e(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature}return Object.defineProperty(e.prototype,"weightMap",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map((function(t){return e[t].map((function(e){return e.id}))}));this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this._inputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this._outputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this._inputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this._outputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),e.prototype.getCompilationKey=function(e,t){var n=e.map((function(e){return e.name})).sort(),r=t.map((function(e){return e.name})).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)},e.prototype.compile=function(e,t){var n=hg(e,t,this.weightMap),r=n.missingInputs,a=n.dynamicNode,i=n.syncInputs;if(null!=a)throw new Error("This execution contains the node '"+a.name+"', which has the dynamic op '"+a.op+"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs ["+i+"]");if(r.length>0){var s=t.map((function(e){return e.name})),o=Object.keys(e);throw new Error("Cannot compute the outputs ["+s+"] from the provided inputs ["+o+"]. Missing the following inputs: ["+r+"]")}return function(e,t,n){var r=n.usedNodes,a=n.inputs,i=[];Object.keys(a).map((function(e){return Rm(e)[0]})).map((function(t){return e.nodes[t]})).forEach((function(e){r.has(e.name)&&i.push(e)})),e.weights.forEach((function(e){r.has(e.name)&&i.push(e)}));for(var s=new Set,o=[];i.length>0;){var u=i.pop();s.add(u.name),t[u.name]||o.push(u),u.children.forEach((function(e){!s.has(e.name)&&r.has(e.name)&&e.inputs.every((function(e){return s.has(e.name)}))&&i.push(e)}))}return o}(this.graph,this.weightMap,n)},e.prototype.execute=function(e,t){var n=this;e=this.mapInputs(e);var r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);var a=r.map((function(e){return n.graph.nodes[Rm(e)[0]]})),i=t.map((function(e){return n.graph.nodes[Rm(e)[0]]})),s=this.getCompilationKey(a,i),o=this.compiledMap.get(s);null==o&&(o=this.compile(e,i),this.compiledMap.set(s,o));var u={};return wa((function(){var r=new cg(n._weightMap,u),a=xm({},n.weightMap);Object.keys(e).forEach((function(t){var n=Rm(t),r=n[0],i=[];i[n[1]]=e[t],a[r]=i}));for(var i=n.getFrozenTensorIds(a),s={},l=0;l<o.length;l++){var c=o[l];if(!a[c.name]){var h=lg(c,a,r);if(h instanceof Promise)throw new Error("The execution of the op '"+c.op+"' returned a promise. Please use model.executeAsync() instead.");a[c.name]=h,n.checkTensorForDisposal(c.name,c,a,r,i,t,s)}}return t.map((function(e){return Nm(e,a,r)}))}))},e.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map((function(t){return e[t]})).map((function(e){return e.map((function(e){return e.id}))})));return new Set(t)},e.prototype.checkTensorForDisposal=function(e,t,n,r,a,i,s){"control"!==t.category&&-1===i.indexOf(e)&&(n[e].forEach((function(e){null!=e&&(s[e.id]=(s[e.id]||0)+t.children.length)})),t.inputs.forEach((function(e){if("control"!==e.category){var t=function(e,t,n){return t[Em(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((function(e){if(e&&!a.has(e.id)){var t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}))}})))},e.prototype.executeAsync=function(e,t){return wm(this,void 0,void 0,(function(){var n,r,a,i,s,o,u=this;return km(this,(function(l){switch(l.label){case 0:return e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t),n={},r=new cg(this._weightMap,n),[4,this.executeWithControlFlow(e,r,t)];case 1:return a=l.sent(),i=t.map((function(e){return Nm(e,a,r)})),s=new Set(i.map((function(e){return e.id}))),o=new Set(Object.keys(e).map((function(t){return e[t].id}))),Object.keys(a).forEach((function(e){a[e].forEach((function(e){!e||e.isDisposed||s.has(e.id)||o.has(e.id)||-1!==u.weightIds.indexOf(e.id)||e.dispose()}))})),[2,i]}}))}))},e.prototype.executeWithControlFlow=function(e,t,n){return wm(this,void 0,void 0,(function(){var r,a,i,s,o,u,l,c,h,d,p,f,m,g,v,y,b=this;return km(this,(function(x){switch(x.label){case 0:r=Object.keys(e),a=r.map((function(e){return b.graph.nodes[Rm(e)[0]]})),i=n.map((function(e){return b.graph.nodes[Rm(e)[0]]})),s=hg(e,i,this.weightMap),o=s.usedNodes,u=s.missingInputs,l=s.dynamicNode,c=s.syncInputs,h=a.concat(this.graph.weights).map((function(e){return{node:e,contexts:t.currentContext}})),d=xm({},this.weightMap),Object.keys(e).forEach((function(t){var n=Rm(t),r=n[0],a=[];a[n[1]]=e[t],d[r]=a})),p={},f=this.getFrozenTensorIds(d),m={},x.label=1;case 1:return h.length>0?(g=this.processStack(a,h,t,d,m,f,n,p,o),[4,Promise.all(g)]):[3,3];case 2:return x.sent(),[3,1];case 3:if(null==l&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),(v=i.filter((function(e){return!fg(e)&&!Nm(e.name,d,t)})).map((function(e){return e.name}))).length>0)throw y="",null!=l&&(y="Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs ["+c+"]"),new Error("Cannot compute the outputs ["+v+"] from the provided inputs ["+r+"]. Consider providing the following inputs: ["+u+"]. "+y);return[2,d]}}))}))},e.prototype.processStack=function(e,t,n,r,a,i,s,o,u){for(var l=this,c=[],h=function(){var h=t.pop();n.currentContext=h.contexts;var p="";if("Enter"===h.node.op&&Sm("isConstant",h.node,r,n)&&(p=Tm(h.node.name,n)[0]),-1===e.indexOf(h.node)){var f=lg(h.node,r,n);p||(p=Tm(h.node.name,n)[0]);var m=n.currentContext;f instanceof Promise?c.push(f.then((function(e){return r[p]=e,n.currentContext=m,l.checkTensorForDisposal(p,h.node,r,n,i,s,o),l.processChildNodes(h.node,t,n,r,a,u),e}))):(r[p]=f,d.checkTensorForDisposal(p,h.node,r,n,i,s,o),d.processChildNodes(h.node,t,n,r,a,u))}else d.processChildNodes(h.node,t,n,r,a,u)},d=this;t.length>0;)h();return c},e.prototype.processChildNodes=function(e,t,n,r,a,i){e.children.forEach((function(e){var s=Tm(e.name,n)[0];!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some((function(e){return!!Nm(e,r,n)}))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((function(e){return!!Nm(e,r,n)}))&&(a[s]=!0,t.push({contexts:n.currentContext,node:e})))}))},e.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach((function(t){return e.weightMap[t].forEach((function(e){return e.dispose()}))}))},e.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach((function(n){var r=e[n],a=Rm(n)[0],i=t.graph.nodes[a];if(i.attrParams.shape&&i.attrParams.shape.value){var s=i.attrParams.shape.value,o=s.length===r.shape.length&&r.shape.every((function(e,t){return-1===s[t]||s[t]===e}));Vn.assert(o,(function(){return"The shape of dict['"+i.name+"'] provided in model.execute(dict) must be ["+s+"], but was ["+r.shape+"]"}))}i.attrParams.dtype&&i.attrParams.dtype.value&&Vn.assert(r.dtype===i.attrParams.dtype.value,(function(){return"The dtype of dict['"+i.name+"'] provided in model.execute(dict) must be "+i.attrParams.dtype.value+", but was "+r.dtype}))}))},e.prototype.mapInputs=function(e){var t={};for(var n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t},e.prototype.checkInputs=function(e){var t=this,n=Object.keys(e).filter((function(e){var n=Rm(e)[0];return null==t.graph.nodes[n]}));if(n.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+n+"] that are not part of graph")},e.prototype.mapOutputs=function(e){var t=this;return e.map((function(e){return null!=t._signature&&null!=t._signature.outputs&&null!=t._signature.outputs[e]?t._signature.outputs[e].name:e}),{})},e.prototype.checkOutputs=function(e){var t=this;e.forEach((function(e){var n=Rm(e)[0];if(!t.graph.nodes[n])throw new Error("The output '"+e+"' is not found in the graph")}))},e}(),vg=function(){function e(e,t){void 0===t&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}return Object.defineProperty(e.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),e.prototype.findIOHandler=function(){var e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=am.browserHTTPRequest(e,this.loadOptions);else{var t=am.getLoadHandlers(e,this.loadOptions.onProgress);if(0===t.length)t.push(am.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one ("+t.length+") load handlers for URL '"+[e]+"'");this.handler=t[0]}},e.prototype.load=function(){return wm(this,void 0,void 0,(function(){var e,t,n,r;return km(this,(function(a){switch(a.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return e=this,[4,this.handler.load()];case 1:return e.artifacts=a.sent(),t=this.artifacts.modelTopology,n={},null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=t.versions.producer+"."+t.versions.minConsumer,r=am.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs),this.executor=new gg(qm.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),[2,!0]}}))}))},e.prototype.save=function(e,t){return wm(this,void 0,void 0,(function(){var t;return km(this,(function(n){if("string"==typeof e){if(0===(t=am.getSaveHandlers(e)).length)throw new Error("Cannot find any save handlers for URL '"+e+"'");if(t.length>1)throw new Error("Found more than one ("+t.length+") save handlers for URL '"+e+"'");e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[2,e.save(this.artifacts)]}))}))},e.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},e.prototype.normalizeInputs=function(e){if(!(e instanceof Zn||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the graph model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce((function(t,n,r){return t[n]=e[r],t}),{})},e.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},e.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var n=this.executor.execute(e,t);return n.length>1?n:n[0]},e.prototype.executeAsync=function(e,t){return wm(this,void 0,void 0,(function(){var n;return km(this,(function(r){switch(r.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(n=r.sent()).length>1?n:n[0]]}}))}))},e.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce((function(t,n){return t[n]=[e[n]],t}),{})},e.prototype.dispose=function(){this.executor.dispose()},e}();function yg(e,t){return void 0===t&&(t={}),wm(this,void 0,void 0,(function(){var n;return km(this,(function(r){switch(r.label){case 0:if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");return null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file"),[4,(n=new vg(e,t)).load()];case 1:return r.sent(),[2,n]}}))}))
/**
    * @license
    * Copyright 2019 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */}function bg(e,t,n,r){return new(n||(n=Promise))((function(a,i){function s(e){try{u(r.next(e))}catch(e){i(e)}}function o(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(s,o)}u((r=r.apply(e,t||[])).next())}))}function xg(e,t){var n,r,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&i[0]?r.return:i[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,i[1])).done)return a;switch(r=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,r=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],r=0}finally{n=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}var wg=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var a=r[n];t.push(a)}return t},kg=function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]},Ig=function(){function e(){this.root=new kg}return e.prototype.insert=function(e,t,n){for(var r=this.root,a=wg(e),i=0;i<a.length;i++)r.children[a[i]]||(r.children[a[i]]=new kg,r.children[a[i]].parent=r,r.children[a[i]].word[0]=r.word[0].concat(a[i])),r=r.children[a[i]],i===a.length-1&&(r.end=!0,r.word[1]=t,r.word[2]=n)},e.prototype.commonPrefixSearch=function(e){for(var t=[],n=this.root.children[e[0]],r=0;r<e.length&&n;r++)n.end&&t.push(n.word),n=n.children[e[r+1]];return t.length||t.push([[e[0]],0,0]),t},e}();var Cg=function(){function e(e){this.vocabulary=e,this.trie=new Ig;for(var t=6;t<this.vocabulary.length;t++)this.trie.insert(this.vocabulary[t][0],this.vocabulary[t][1],t)}return e.prototype.encode=function(e){var t=[],n=[],r=[];e=function(e){return"▁"+e.normalize("NFKC").replace(/ /g,"▁")}(e);for(var a=wg(e),i=0;i<=a.length;i++)t.push({}),n.push(0),r.push(0);for(i=0;i<a.length;i++)for(var s=this.trie.commonPrefixSearch(a.slice(i)),o=0;o<s.length;o++){var u=s[o],l={key:u[0],score:u[1],index:u[2]};null==t[i+(c=u[0].length)][i]&&(t[i+c][i]=[]),t[i+c][i].push(l)}for(var c=0;c<=a.length;c++)for(var h in t[c]){var d=t[c][h];for(o=0;o<d.length;o++){var p=d[o],f=p.score+r[c-p.key.length];(0===r[c]||f>=r[c])&&(r[c]=f,n[c]=d[o].index)}}for(var m=[],g=n.length-1;g>0;)m.push(n[g]),g-=this.vocabulary[n[g]][0].length;var v=[],y=!1;for(i=0;i<m.length;i++){var b=m[i];y&&0===b||v.push(b),y=0===b}return v.reverse()},e}();function Sg(){return bg(this,void 0,void 0,(function(){var e;return xg(this,(function(t){switch(t.label){case 0:return[4,(e=new Tg).load()];case 1:return t.sent(),[2,e]}}))}))}function Ng(e){return void 0===e&&(e="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/vocab.json"),bg(this,void 0,void 0,(function(){return xg(this,(function(t){switch(t.label){case 0:return[4,Vn.fetch(e)];case 1:return[2,t.sent().json()]}}))}))}var Tg=function(){function e(){}return e.prototype.loadModel=function(){return bg(this,void 0,void 0,(function(){return xg(this,(function(e){return[2,yg("https://tfhub.dev/tensorflow/tfjs-model/universal-sentence-encoder-lite/1/default/1",{fromTFHub:!0})]}))}))},e.prototype.load=function(){return bg(this,void 0,void 0,(function(){var e,t,n;return xg(this,(function(r){switch(r.label){case 0:return[4,Promise.all([this.loadModel(),Ng()])];case 1:return e=r.sent(),t=e[0],n=e[1],this.model=t,this.tokenizer=new Cg(n),[2]}}))}))},e.prototype.embed=function(e){return bg(this,void 0,void 0,(function(){var t,n,r,a,i,s,o,u=this;return xg(this,(function(l){switch(l.label){case 0:for("string"==typeof e&&(e=[e]),t=e.map((function(e){return u.tokenizer.encode(e)})),n=t.map((function(e,t){return e.map((function(e,n){return[t,n]}))})),r=[],a=0;a<n.length;a++)r=r.concat(n[a]);return i=ja(r,[r.length,2],"int32"),s=Ha(Vn.flatten(t),"int32"),[4,this.model.executeAsync({indices:i,values:s})];case 1:return o=l.sent(),i.dispose(),s.dispose(),[2,o]}}))}))},e}();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eg{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Rg{refCount(e){return Ag("refCount")}incRef(e){return Ag("incRef")}timerAvailable(){return!0}time(e){return Ag("time")}read(e){return Ag("read")}readSync(e){return Ag("readSync")}readToGPU(e,t){return Ag("readToGPU")}numDataIds(){return Ag("numDataIds")}disposeData(e,t){return Ag("disposeData")}write(e,t,n){return Ag("write")}move(e,t,n,r,a){return Ag("move")}createTensorFromGPUData(e,t,n){return Ag("createTensorFromGPUData")}memory(){return Ag("memory")}floatPrecision(){return Ag("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Ag("dispose")}}function Ag(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dg(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,_g(e,t,n)}function $g(e,t,n){return Math.max(e,Math.min(t,n))}function Fg(e){return e%2==0?e:e+1}function _g(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Og(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Mg(e,t,n=""){Og(Bg(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Lg(e){Og(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Pg(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Bg(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function zg(e){return e%1==0}function Wg(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Vg(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Ug(e,t=(e=>0),n,r){return new Promise(((a,i)=>{let s=0;const o=()=>{if(e())return void a();s++;const u=t(s);null!=n&&s>=n?i():null!=r?r(o,u):setTimeout(o,u)};o()}))}function Gg(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function Hg(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),Og(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Og(e.every((e=>zg(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function jg(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:Hg(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function qg(e,t){return Kg(e,t)}function Kg(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Xg(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Yg(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Qg(e){return"string"==typeof e||e instanceof String}function Jg(e){return"number"==typeof e}function Zg(e){return Array.isArray(e)?Zg(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Jg(e)?"float32":Qg(e)?"string":"boolean"==typeof e?"bool":"float32"}function ev(e){return!!(e&&e.constructor&&e.call&&e.apply)}function tv(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function nv(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function rv(e,t,n,r=!1){const a=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)a[t]=n[e+t]}else{const i=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)a[t]=rv(e+t*o,s,n,r)}return a}function av(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return rv(0,e,t,n)}function iv(e,t){const n=sv(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function sv(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ov(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return av(e,new Float32Array(n));if("int32"===t)return av(e,new Int32Array(n));if("bool"===t)return av(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function uv(e){e.forEach((t=>{Og(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function lv(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function cv(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function hv(e){return e&&e.then&&"function"==typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dv="tfjsflags";class pv{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=fv,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(mv().getBool("IS_TEST")||mv().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];mv().getBool("IS_TEST")||mv().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(hv(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(dv in e){e[dv].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function fv(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function mv(){return vv}let gv,vv=null;function yv(){if(null==gv){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}gv=e}return gv}function bv(e,t){const n=function(){const e=yv();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const xv="Abs",wv="Acos",kv="Acosh",Iv="Add",Cv="AddN",Sv="All",Nv="Any",Tv="ArgMax",Ev="ArgMin",Rv="Asin",Av="Asinh",Dv="Atan",$v="Atanh",Fv="Atan2",_v="AvgPool",Ov="AvgPoolGrad",Mv="AvgPool3D",Lv="AvgPool3DGrad",Pv="BatchMatMul",Bv="BatchToSpaceND",zv="Bincount",Wv="BitwiseAnd",Vv="BroadcastArgs",Uv="Cast",Gv="Ceil",Hv="ClipByValue",jv="Complex",qv="ComplexAbs",Kv="Concat",Xv="Conv2D",Yv="Conv2DBackpropFilter",Qv="Conv2DBackpropInput",Jv="Conv3D",Zv="Conv3DBackpropFilterV2",ey="Conv3DBackpropInputV2",ty="Cos",ny="Cosh",ry="Cumprod",ay="Cumsum",iy="CropAndResize",sy="DenseBincount",oy="DepthToSpace",uy="DepthwiseConv2dNative",ly="DepthwiseConv2dNativeBackpropFilter",cy="DepthwiseConv2dNativeBackpropInput",hy="Diag",dy="Dilation2D",py="Dilation2DBackpropInput",fy="Dilation2DBackpropFilter",my="RealDiv",gy="Einsum",vy="Elu",yy="EluGrad",by="Erf",xy="Equal",wy="Exp",ky="ExpandDims",Iy="Expm1",Cy="FFT",Sy="Fill",Ny="FlipLeftRight",Ty="Floor",Ey="FloorDiv",Ry="FusedBatchNorm",Ay="GatherV2",Dy="GatherNd",$y="Greater",Fy="GreaterEqual",_y="Identity",Oy="IFFT",My="Imag",Ly="IsFinite",Py="IsInf",By="IsNan",zy="LeakyRelu",Wy="Less",Vy="LessEqual",Uy="LinSpace",Gy="Log",Hy="Log1p",jy="LogicalAnd",qy="LogicalNot",Ky="LogicalOr",Xy="LRN",Yy="LRNGrad",Qy="Max",Jy="Maximum",Zy="MaxPool",eb="MaxPoolGrad",tb="MaxPool3D",nb="MaxPool3DGrad",rb="MaxPoolWithArgmax",ab="Mean",ib="Min",sb="Minimum",ob="MirrorPad",ub="Mod",lb="Multinomial",cb="Multiply",hb="Neg",db="NotEqual",pb="NonMaxSuppressionV3",fb="NonMaxSuppressionV4",mb="NonMaxSuppressionV5",gb="OnesLike",vb="OneHot",yb="Pack",bb="PadV2",xb="Pow",wb="Prelu",kb="Prod",Ib="RaggedGather",Cb="RaggedRange",Sb="RaggedTensorToTensor",Nb="Range",Tb="Real",Eb="Reciprocal",Rb="Relu",Ab="Reshape",Db="ResizeNearestNeighbor",$b="ResizeNearestNeighborGrad",Fb="ResizeBilinear",_b="ResizeBilinearGrad",Ob="Relu6",Mb="Reverse",Lb="Round",Pb="Rsqrt",Bb="ScatterNd",zb="TensorScatterUpdate",Wb="SearchSorted",Vb="Select",Ub="Selu",Gb="Slice",Hb="Sin",jb="Sinh",qb="Sign",Kb="Sigmoid",Xb="Softplus",Yb="Sqrt",Qb="Sum",Jb="SpaceToBatchND",Zb="SplitV",ex="Softmax",tx="SparseFillEmptyRows",nx="SparseReshape",rx="SparseSegmentMean",ax="SparseSegmentSum",ix="SparseToDense",sx="SquaredDifference",ox="Square",ux="StaticRegexReplace",lx="StridedSlice",cx="StringNGrams",hx="StringSplit",dx="StringToHashBucketFast",px="Sub",fx="Tan",mx="Tanh",gx="Tile",vx="TopK",yx="Transform",bx="Transpose",xx="Unique",wx="Unpack",kx="UnsortedSegmentSum",Ix="ZerosLike",Cx="Step",Sx="RotateWithOffset",Nx="_FusedMatMul",Tx="FusedConv2D",Ex="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rx(...e){mv().getBool("IS_TEST")||mv().getBool("PROD")||console.warn(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ax=bv("kernelRegistry",(()=>new Map)),Dx=bv("gradRegistry",(()=>new Map));function $x(e,t){const n=Lx(e,t);return Ax.get(n)}function Fx(e){return Dx.get(e)}function _x(e){const t=Ax.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[i,s]=a,[o]=i.split("_");o===e&&n.push(s)}return n}function Ox(e){const{kernelName:t,backendName:n}=e,r=Lx(t,n);Ax.has(r)&&Rx(`The kernel '${t}' for backend '${n}' is already registered`),Ax.set(r,e)}function Mx(e){const{kernelName:t}=e;Dx.has(t)&&mv().getBool("DEBUG")&&Rx(`Overriding the gradient for '${t}'`),Dx.set(t,e)}function Lx(e,t){return`${t}_${e}`}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Px(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Bx=Wx,zx=null;try{zx=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(Pt){}function Wx(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function Vx(e){return!0===(e&&e.__isLong__)}Wx.prototype.__isLong__,Object.defineProperty(Wx.prototype,"__isLong__",{value:!0}),Wx.isLong=Vx;var Ux={},Gx={};function Hx(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=Gx[e])?r:(n=qx(e,(0|e)<0?-1:0,!0),a&&(Gx[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=Ux[e])?r:(n=qx(e,e<0?-1:0,!1),a&&(Ux[e]=n),n)}function jx(e,t){if(isNaN(e))return t?nw:tw;if(t){if(e<0)return nw;if(e>=Jx)return ow}else{if(e<=-Zx)return uw;if(e+1>=Zx)return sw}return e<0?jx(-e,t).neg():qx(e%Qx|0,e/Qx|0,t)}function qx(e,t,n){return new Wx(e,t,n)}Wx.fromInt=Hx,Wx.fromNumber=jx,Wx.fromBits=qx;var Kx=Math.pow;function Xx(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return tw;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return Xx(e.substring(1),t,n).neg();for(var a=jx(Kx(n,8)),i=tw,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),n);if(o<8){var l=jx(Kx(n,o));i=i.mul(l).add(jx(u))}else i=(i=i.mul(a)).add(jx(u))}return i.unsigned=t,i}function Yx(e,t){return"number"==typeof e?jx(e,t):"string"==typeof e?Xx(e,t):qx(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}Wx.fromString=Xx,Wx.fromValue=Yx;var Qx=4294967296,Jx=Qx*Qx,Zx=Jx/2,ew=Hx(1<<24),tw=Hx(0);Wx.ZERO=tw;var nw=Hx(0,!0);Wx.UZERO=nw;var rw=Hx(1);Wx.ONE=rw;var aw=Hx(1,!0);Wx.UONE=aw;var iw=Hx(-1);Wx.NEG_ONE=iw;var sw=qx(-1,2147483647,!1);Wx.MAX_VALUE=sw;var ow=qx(-1,-1,!0);Wx.MAX_UNSIGNED_VALUE=ow;var uw=qx(0,-2147483648,!1);Wx.MIN_VALUE=uw;var lw=Wx.prototype;lw.toInt=function(){return this.unsigned?this.low>>>0:this.low},lw.toNumber=function(){return this.unsigned?(this.high>>>0)*Qx+(this.low>>>0):this.high*Qx+(this.low>>>0)},lw.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(uw)){var t=jx(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=jx(Kx(e,6),this.unsigned),i=this,s="";;){var o=i.div(a),u=(i.sub(o.mul(a)).toInt()>>>0).toString(e);if((i=o).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},lw.getHighBits=function(){return this.high},lw.getHighBitsUnsigned=function(){return this.high>>>0},lw.getLowBits=function(){return this.low},lw.getLowBitsUnsigned=function(){return this.low>>>0},lw.getNumBitsAbs=function(){if(this.isNegative())return this.eq(uw)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},lw.isZero=function(){return 0===this.high&&0===this.low},lw.eqz=lw.isZero,lw.isNegative=function(){return!this.unsigned&&this.high<0},lw.isPositive=function(){return this.unsigned||this.high>=0},lw.isOdd=function(){return 1==(1&this.low)},lw.isEven=function(){return 0==(1&this.low)},lw.equals=function(e){return Vx(e)||(e=Yx(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},lw.eq=lw.equals,lw.notEquals=function(e){return!this.eq(e)},lw.neq=lw.notEquals,lw.ne=lw.notEquals,lw.lessThan=function(e){return this.comp(e)<0},lw.lt=lw.lessThan,lw.lessThanOrEqual=function(e){return this.comp(e)<=0},lw.lte=lw.lessThanOrEqual,lw.le=lw.lessThanOrEqual,lw.greaterThan=function(e){return this.comp(e)>0},lw.gt=lw.greaterThan,lw.greaterThanOrEqual=function(e){return this.comp(e)>=0},lw.gte=lw.greaterThanOrEqual,lw.ge=lw.greaterThanOrEqual,lw.compare=function(e){if(Vx(e)||(e=Yx(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},lw.comp=lw.compare,lw.negate=function(){return!this.unsigned&&this.eq(uw)?uw:this.not().add(rw)},lw.neg=lw.negate,lw.add=function(e){Vx(e)||(e=Yx(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,o=e.low>>>16,u=0,l=0,c=0,h=0;return c+=(h+=a+(65535&e.low))>>>16,l+=(c+=r+o)>>>16,u+=(l+=n+s)>>>16,u+=t+i,qx((c&=65535)<<16|(h&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},lw.subtract=function(e){return Vx(e)||(e=Yx(e)),this.add(e.neg())},lw.sub=lw.subtract,lw.multiply=function(e){if(this.isZero())return tw;if(Vx(e)||(e=Yx(e)),zx)return qx(zx.mul(this.low,this.high,e.low,e.high),zx.get_high(),this.unsigned);if(e.isZero())return tw;if(this.eq(uw))return e.isOdd()?uw:tw;if(e.eq(uw))return this.isOdd()?uw:tw;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ew)&&e.lt(ew))return jx(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,s=65535&e.high,o=e.low>>>16,u=65535&e.low,l=0,c=0,h=0,d=0;return h+=(d+=a*u)>>>16,c+=(h+=r*u)>>>16,h&=65535,c+=(h+=a*o)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*o)>>>16,c&=65535,l+=(c+=a*s)>>>16,l+=t*u+n*o+r*s+a*i,qx((h&=65535)<<16|(d&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},lw.mul=lw.multiply,lw.divide=function(e){if(Vx(e)||(e=Yx(e)),e.isZero())throw Error("division by zero");var t,n,r;if(zx)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?qx((this.unsigned?zx.div_u:zx.div_s)(this.low,this.high,e.low,e.high),zx.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?nw:tw;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return nw;if(e.gt(this.shru(1)))return aw;r=nw}else{if(this.eq(uw))return e.eq(rw)||e.eq(iw)?uw:e.eq(uw)?rw:(t=this.shr(1).div(e).shl(1)).eq(tw)?e.isNegative()?rw:iw:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(uw))return this.unsigned?nw:tw;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=tw}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),i=a<=48?1:Kx(2,a-48),s=jx(t),o=s.mul(e);o.isNegative()||o.gt(n);)o=(s=jx(t-=i,this.unsigned)).mul(e);s.isZero()&&(s=rw),r=r.add(s),n=n.sub(o)}return r},lw.div=lw.divide,lw.modulo=function(e){return Vx(e)||(e=Yx(e)),zx?qx((this.unsigned?zx.rem_u:zx.rem_s)(this.low,this.high,e.low,e.high),zx.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},lw.mod=lw.modulo,lw.rem=lw.modulo,lw.not=function(){return qx(~this.low,~this.high,this.unsigned)},lw.and=function(e){return Vx(e)||(e=Yx(e)),qx(this.low&e.low,this.high&e.high,this.unsigned)},lw.or=function(e){return Vx(e)||(e=Yx(e)),qx(this.low|e.low,this.high|e.high,this.unsigned)},lw.xor=function(e){return Vx(e)||(e=Yx(e)),qx(this.low^e.low,this.high^e.high,this.unsigned)},lw.shiftLeft=function(e){return Vx(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?qx(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):qx(0,this.low<<e-32,this.unsigned)},lw.shl=lw.shiftLeft,lw.shiftRight=function(e){return Vx(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?qx(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):qx(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},lw.shr=lw.shiftRight,lw.shiftRightUnsigned=function(e){if(Vx(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?qx(this.low>>>e|t<<32-e,t>>>e,this.unsigned):qx(32===e?t:t>>>e-32,0,this.unsigned)},lw.shru=lw.shiftRightUnsigned,lw.shr_u=lw.shiftRightUnsigned,lw.toSigned=function(){return this.unsigned?qx(this.low,this.high,!1):this},lw.toUnsigned=function(){return this.unsigned?this:qx(this.low,this.high,!0)},lw.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},lw.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},lw.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},Wx.fromBytes=function(e,t,n){return n?Wx.fromBytesLE(e,t):Wx.fromBytesBE(e,t)},Wx.fromBytesLE=function(e,t){return new Wx(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Wx.fromBytesBE=function(e,t){return new Wx(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const cw=Bx||n({__proto__:null,default:Bx},[Bx]);function hw(e){return cw.fromString(e,!0,16)}const dw=hw("c3a5c85c97cb3127"),pw=hw("b492b66fbe98f273"),fw=hw("9ae16a3b2f90404f");function mw(e){return e.xor(e.shru(47))}function gw(e,t,n){const r=e.slice(t,t+n);return cw.fromBytes(Array.from(r),!0,!0)}function vw(e,t){return gw(e,t,8)}function yw(e,t){return gw(e,t,4)}function bw(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function xw(e,t,n=hw("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function ww(e,t,n,r){return function(e,t,n,r,a,i){a=a.add(e),i=bw(i.add(a).add(r),21);const s=a;return a=(a=a.add(t)).add(n),i=i.add(bw(a,44)),[a.add(r),i.add(s)]}(vw(e,t),vw(e,t+8),vw(e,t+16),vw(e,t+24),n,r)}function kw(e,t=e.length){const n=cw.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=fw.add(2*t),r=vw(e,0).add(fw),a=vw(e,t-8);return xw(bw(a,37).mul(n).add(r),bw(r,25).add(a).mul(n),n)}if(t>=4){const n=fw.add(2*t);return xw(yw(e,0).shl(3).add(t),yw(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return mw(fw.mul(n).xor(dw.mul(r))).mul(fw)}return fw}(e,t):function(e,t=e.length){const n=fw.add(2*t),r=vw(e,0).mul(pw),a=vw(e,8),i=vw(e,t-8).mul(n),s=vw(e,t-16).mul(fw);return xw(bw(r.add(a),43).add(bw(i,30)).add(s),r.add(bw(a.add(fw),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=fw.add(2*t),r=vw(e,0).mul(fw),a=vw(e,8),i=vw(e,t-8).mul(n),s=vw(e,t-16).mul(fw),o=bw(r.add(a),43).add(bw(i,30)).add(s),u=xw(o,r.add(bw(a.add(fw),18)).add(i),n),l=vw(e,16).mul(n),c=vw(e,24),h=o.add(vw(e,t-32)).mul(n),d=u.add(vw(e,t-24)).mul(n);return xw(bw(l.add(c),43).add(bw(h,30)).add(d),l.add(bw(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(pw).add(113),i=mw(a.mul(fw).add(113)).mul(fw),s=[cw.UZERO,cw.UZERO],o=[cw.UZERO,cw.UZERO];r=r.mul(fw).add(vw(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=bw(r.add(a).add(s[0]).add(vw(e,u+8)),37).mul(pw),a=bw(a.add(s[1]).add(vw(e,u+48)),42).mul(pw),r=r.xor(o[1]),a=a.add(s[0]).add(vw(e,u+40)),i=bw(i.add(o[0]),33).mul(pw),s=ww(e,u,s[1].mul(pw),r.add(o[0])),o=ww(e,u+32,i.add(o[1]),a.add(vw(e,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=pw.add(i.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),r=bw(r.add(a).add(s[0]).add(vw(e,u+8)),37).mul(h),a=bw(a.add(s[1]).add(vw(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(s[0].mul(9).add(vw(e,u+40))),i=bw(i.add(o[0]),33).mul(h),s=ww(e,u,s[1].mul(h),r.add(o[0])),o=ww(e,u+32,i.add(o[1]),a.add(vw(e,u+16))),[i,r]=[r,i],xw(xw(s[0],o[0],h).add(mw(a).mul(dw)).add(i),xw(s[1],o[1],h).add(r),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(e,t){return"string"===t?Nw(e):Cw([e],t)}function Cw(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Rw(e)),mv().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Sw(){return mv().platform.now()}function Nw(e,t="utf-8"){return t=t||"utf-8",mv().platform.encode(e,t)}function Tw(e,t="utf-8"){return t=t||"utf-8",mv().platform.decode(e,t)}function Ew(e){return null!=mv().platform.isTypedArray?mv().platform.isTypedArray(e):Px(e)}function Rw(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||hv(e)||null==e||Ew(e)&&n)t.push(e);else if(Array.isArray(e)||Ew(e))for(let r=0;r<e.length;++r)Rw(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)Rw(e[a],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aw{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new $w)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const s=Sw();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:Sw()-s})}if(mv().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Dw(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Dw(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class $w{logKernelProfile(e,t,n,r,a,i){const s="number"==typeof r?Vg(`${r}ms`,9):r.error,o=Vg(e,25),u=t.rank,l=t.size,c=Vg(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${s}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Fw=20,_w=3,Ow=7;function Mw(e,t,n,r){const a=nv(t),i=function(e,t,n,r){const a=Pg(t),i=r[r.length-1],s=new Array(i).fill(0),o=t.length,u="complex64"===n?zw(e):e;if(o>1)for(let e=0;e<a/i;e++){const t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],Lw(u[t+e],0,n).length)}return s}(e,t,n,a),s=t.length,o=Bw(e,t,n,a,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${s}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Lw(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Ow))} + ${parseFloat(e[1].toFixed(Ow))}j`:Qg(e)?`'${e}'`:"bool"===n?Pw(e):parseFloat(e.toFixed(Ow)).toString(),Vg(r,t)}function Pw(e){return 0===e?"false":"true"}function Bw(e,t,n,r,a,i=!0){const s="complex64"===n?2:1,o=t[0],u=t.length;if(0===u){if("complex64"===n){return[Lw(zw(e)[0],0,n)]}return"bool"===n?[Pw(e[0])]:[e[0].toString()]}if(1===u){if(o>Fw){const t=_w*s;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-_w)*s,o*s));return"complex64"===n&&(r=zw(r),i=zw(i)),["["+r.map(((e,t)=>Lw(e,a[t],n))).join(", ")+", ..., "+i.map(((e,t)=>Lw(e,a[o-_w+t],n))).join(", ")+"]"]}return["["+("complex64"===n?zw(e):Array.from(e)).map(((e,t)=>Lw(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*s,d=[];if(o>Fw){for(let t=0;t<_w;t++){const r=t*h,i=r+h;d.push(...Bw(e.slice(r,i),l,n,c,a,!1))}d.push("...");for(let t=o-_w;t<o;t++){const r=t*h,i=r+h;d.push(...Bw(e.slice(r,i),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,i=r+h;d.push(...Bw(e.slice(r,i),l,n,c,a,t===o-1))}const p=2===u?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function zw(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ww{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Pg(e),null!=n){const e=n.length;Og(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Kg(t,this.size),this.strides=nv(e)}set(e,...t){0===t.length&&(t=[0]),Og(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Vw().makeTensor(this.values,this.shape,this.dtype)}}let Vw=null,Uw=null;class Gw{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Pg(e),this.strides=nv(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Uw.buffer(this.shape,this.dtype,e)}bufferSync(){return Uw.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return av(this.shape,e,"complex64"===this.dtype)}arraySync(){return av(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Vw().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Tw(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Vw().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Vw().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Tw(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Vw().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Vw().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Uw.print(this,e)}clone(){return this.throwIfDisposed(),Uw.clone(this)}toString(e=!1){return Mw(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Uw.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Vw().makeVariable(this,e,t,n)}}function Hw(){return bv("Tensor",(()=>Gw))}Object.defineProperty(Gw,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Hw();class jw extends Gw{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Bg(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Vw().disposeTensor(this),this.dataId=e.dataId,Vw().incRef(this,null)}dispose(){Vw().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var qw,Kw,Xw,Yw,Qw;Object.defineProperty(jw,Symbol.hasInstance,{value:e=>e instanceof Gw&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(qw||(qw={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Kw||(Kw={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Xw||(Xw={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Yw||(Yw={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Qw||(Qw={}));const Jw={float32:Yw,int32:Kw,bool:Xw,complex64:Qw};function Zw(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Jw[e][t]}function ek(e){return Zw(e,"int32")}function tk(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function nk(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(e,t){if(e.dtype===t.dtype)return[e,t];const n=Zw(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ak(e){const t=[];return ik(e,t,new Set),t}function ik(e,t,n){if(null==e)return;if(e instanceof Gw)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),ik(r,t,n))}}function sk(e){return null!=e.kernelName}class ok{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class uk{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ok}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Rx(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Aw(this.backendInstance),!0}setupRegisteredKernels(){_x(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){_x(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Rg||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Rx(`Initialization of backend ${e} failed`),Rx(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Rx(`Initialization of backend ${e} failed`),Rx(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return uk.nextTensorId++}nextVariableId(){return uk.nextVariableId++}clone(e){const t=ck.runKernel(_y,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ck.runKernel(Uv,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=$x(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let s,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=sk(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(sk(e)){const{kernelName:t,inputs:a,attrs:i}=e;null==this.backendName&&this.backend;const u=$x(t,this.backendName);Og(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),s=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:i,backend:this.backend});const s=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const l=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=sk(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=s()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Fx(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(Og(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const s=n.filter(((e,t)=>a[t]));return i.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Qg(e[0])&&(a=e.map((e=>Nw(e))));const i=r.write(a,t,n),s=new Gw(t,n,i,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,i=new Gw(r,a,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new jw(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Yg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof jw||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Yg(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,i){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Fx(e);null!=o&&(r=o.gradFunc),null!=r&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=sv(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ak(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Og(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Og(a instanceof Gw,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],s=i.inputs;for(const e in s){const n=s[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,s[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=iv(Pg(e),"float32");return ck.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const i=t[a],s=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(s);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=i.inputs[t];if(!Bg(a.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),hk);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Og(ev(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Og(t.every((e=>e instanceof Gw)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Og(n.value instanceof Gw,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Og(ev(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),i=Array.isArray(a)?a:[a];Og(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Og(i.every((e=>e instanceof Gw)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return i.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Sw(),n=await this.backend.time(e);return n.wallMs=Sw()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ok;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function lk(){const e=yv();if(null==e._tfengine){const t=new pv(e);e._tfengine=new uk(t)}var t;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */return t=e._tfengine.ENV,vv=t,Vw=()=>e._tfengine,e._tfengine}uk.nextTensorId=0,uk.nextVariableId=0;const ck=lk();function hk(e,t){const n={a:e,b:t};return ck.runKernel(Iv,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function pk(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=mv();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mk(e,t){let n=e;if(Ew(e))return"string"===t?[]:[e.length];if(tk(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(nk(e))return[e.buffer.size/(null==t?4:Yg(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Ew(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&mv().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&gk(e,r,[]),r}function gk(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ew(e))return void Og(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Og(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Og(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)gk(e[t],r,n.concat(t))}function vk(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function yk(e,t,n,r="numeric"){if(e instanceof Hw())return vk(r,e.dtype,t,n),e;let a=Zg(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),vk(r,a,t,n),null==e||!Ew(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=mk(e,a);Ew(e)||Array.isArray(e)||(e=[e]);const s="string"!==a?Cw(e,a):Rw(e,[],!0);return ck.makeTensor(s,i,a)}function bk(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>yk(e,`${t}[${a}]`,n,r)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */fk.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),fk.registerFlag("IS_BROWSER",(()=>pk())),fk.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),fk.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),fk.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),fk.registerFlag("PROD",(()=>!1)),fk.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>fk.getBool("DEBUG"))),fk.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),fk.registerFlag("IS_TEST",(()=>!1)),fk.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>fk.getBool("DEBUG"))),fk.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),fk.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),fk.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));function xk(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{ck.startScope(n);try{const t=r(...e);return hv(t)&&console.error("Cannot return a Promise inside of tidy."),ck.endScope(t),t}catch(e){throw ck.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=xk({complex_:function(e,t){const n=yk(e,"real","complex"),r=yk(t,"imag","complex");Mg(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return ck.runKernel(jv,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kk(e,t,n,r){if(null==r)r=Zg(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(nk(e)||tk(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return ck.backend.createTensorFromGPUData(e,t||n,r)}if(!Ew(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){uv(t);const e=Pg(t),r=Pg(n);Og(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==Pg(t.slice(e));Og(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Ew(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Cw(e,r):Rw(e,[],!0),ck.makeTensor(e,t,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(e,t,n){return kk(e,t,mk(e,n),n)}class Ck{static join(e){return new Ck(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Ew(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let i=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],s=e+i-n.start,o=i,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,s,u-s);if(a.set(l,o),i+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,i=t(e[a]);if(0===i)return a;i<0?r=a:n=a+1}return-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}async function Sk(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<a.length;++i){const s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);const u={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Nk(await Promise.all(r)),specs:n}}function Nk(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Tk="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ek(e){return Tk?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Rk(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ak(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}function Dk(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ek(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ek(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ck(e.weightData).byteLength}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $k{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==$k.instance&&($k.instance=new $k),$k.instance}static registerSaveRouter(e){$k.getInstance().saveRouters.push(e)}static registerLoadRouter(e){$k.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return $k.getHandlers(e,"save")}static getLoadHandlers(e,t){return $k.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?$k.getInstance().loadRouters:$k.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Fk="tensorflowjs",_k="models_store",Ok="model_info_store";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(){if(!mv().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Lk(e){const t=e.result;t.createObjectStore(_k,{keyPath:"modelPath"}),t.createObjectStore(Ok,{keyPath:"modelPath"})}class Pk{constructor(e){if(this.indexedDB=Mk(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Fk,1);r.onupgradeneeded=()=>Lk(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(_k,"readonly"),r=t.objectStore(_k).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=Ck.join(t.weightData);const r=Dk(t),i=a.transaction(Ok,"readwrite");let s,o,u=i.objectStore(Ok);try{s=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}s.onsuccess=()=>{o=a.transaction(_k,"readwrite");const s=o.objectStore(_k);let l;try{l=s.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=i.objectStore(Ok);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},s.onerror=e=>(a.close(),n(s.error)),i.oncomplete=()=>{null==o?a.close():o.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}Pk.URL_SCHEME="indexeddb://";const Bk=e=>{return mv().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Pk.URL_SCHEME)?(t=e.slice(Pk.URL_SCHEME.length),new Pk(t)):null;var t};$k.registerSaveRouter(Bk),$k.registerLoadRouter(Bk);class zk{constructor(){this.indexedDB=Mk()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Fk,1);n.onupgradeneeded=()=>Lk(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Ok,"readonly"),i=a.objectStore(Ok).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Pk.URL_SCHEME)?t.slice(Pk.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Fk,1);r.onupgradeneeded=()=>Lk(r),r.onsuccess=()=>{const a=r.result,i=a.transaction(Ok,"readwrite"),s=i.objectStore(Ok),o=s.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),i=()=>{u=a.transaction(_k,"readwrite");const r=u.objectStore(_k).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),i.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wk="/",Vk="tensorflowjs_models",Uk="info",Gk="model_topology",Hk="weight_specs",jk="weight_data",qk="model_metadata";function Kk(e){return{info:[Vk,e,Uk].join(Wk),topology:[Vk,e,Gk].join(Wk),weightSpecs:[Vk,e,Hk].join(Wk),weightData:[Vk,e,jk].join(Wk),modelMetadata:[Vk,e,qk].join(Wk)}}function Xk(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Yk(e){const t=e.split(Wk);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Wk)}class Qk{constructor(e){if(!mv().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Kk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Dk(e),a=Ck.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Tk)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch(e){throw Xk(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Tk){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}Qk.URL_SCHEME="localstorage://";const Jk=e=>{return mv().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qk.URL_SCHEME)?(t=e.slice(Qk.URL_SCHEME.length),new Qk(t)):null;var t};$k.registerSaveRouter(Jk),$k.registerLoadRouter(Jk);class Zk{constructor(){Og(mv().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Og("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Vk+Wk,n=Wk+Uk;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[Yk(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=Kk(e=(t=e).startsWith(Qk.URL_SCHEME)?t.slice(Qk.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Xk(n),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eI{constructor(){this.managers={}}static getInstance(){return null==eI.instance&&(eI.instance=new eI),eI.instance}static registerManager(e,t){Og(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Og(e.length>0,(()=>"scheme must not be an empty string."));const n=eI.getInstance();Og(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=eI.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(eI.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tI{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&mv().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Px(e)}}if(mv().get("IS_BROWSER")){mv().setPlatform("browser",new tI);try{eI.registerManager(Qk.URL_SCHEME,new Zk)}catch(e){}try{eI.registerManager(Pk.URL_SCHEME,new zk)}catch(e){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nI=()=>require("node-fetch");let rI;class aI{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=mv().global.fetch?mv().global.fetch(e,t):(null==rI&&(rI=nI()),rI(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iI(e,t="float32",n){return t=t||"float32",uv(e),new Ww(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mv().get("IS_NODE")&&!mv().get("IS_BROWSER")&&mv().setPlatform("node",new aI);const sI=xk({cast_:function(e,t){const n=yk(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return ck.runKernel(Uv,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oI=xk({clone_:function(e){const t={x:yk(e,"x","clone","string_or_numeric")};return ck.runKernel(_y,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
lk();const uI={buffer:iI,cast:sI,clone:oI,print:function(e,t=!1){console.log(e.toString(t))}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lI(){return ck}function cI(){return ck.memory()}function hI(e,t){return ck.tidy(e,t)}function dI(e){ak(e).forEach((e=>e.dispose()))}function pI(e){return ck.keep(e)}function fI(e,t,n=1){return ck.registerBackend(e,t,n)}Uw=uI;const mI=xk({add_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=yk(e,"a","add"),r=yk(t,"b","add");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(Iv,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI=xk({floorDiv_:function(e,t){let n=yk(e,"a","floorDiv"),r=yk(t,"b","floorDiv");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(Ey,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI=xk({div_:function(e,t){let n=yk(e,"a","div"),r=yk(t,"b","div");if([n,r]=rk(n,r),"int32"===n.dtype&&"int32"===r.dtype)return gI(n,r);const a={a:n,b:r};return ck.runKernel(my,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI=xk({mul_:function(e,t){let n=yk(e,"a","mul"),r=yk(t,"b","mul");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(cb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI=xk({abs_:function(e){const t=yk(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ck.runKernel(qv,e)}{const e={x:t};return ck.runKernel(xv,e)}}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xI=xk({acos_:function(e){const t={x:yk(e,"x","acos")};return ck.runKernel(wv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wI=xk({acosh_:function(e){const t={x:yk(e,"x","acosh")};return ck.runKernel(kv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kI=xk({all_:function(e,t=null,n=!1){const r={x:yk(e,"x","all","bool")},a={axis:t,keepDims:n};return ck.runKernel(Sv,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const II=xk({any_:function(e,t=null,n=!1){const r={x:yk(e,"x","any","bool")},a={axis:t,keepDims:n};return ck.runKernel(Nv,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=xk({argMax_:function(e,t=0){const n={x:yk(e,"x","argMax")},r={axis:t};return ck.runKernel(Tv,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI=xk({argMin_:function(e,t=0){const n={x:yk(e,"x","argMin")},r={axis:t};return ck.runKernel(Ev,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=xk({asin_:function(e){const t={x:yk(e,"x","asin")};return ck.runKernel(Rv,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI=xk({asinh_:function(e){const t={x:yk(e,"x","asinh")};return ck.runKernel(Av,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI=xk({atan_:function(e){const t={x:yk(e,"x","atan")};return ck.runKernel(Dv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI=xk({atan2_:function(e,t){let n=yk(e,"a","atan2"),r=yk(t,"b","atan2");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(Fv,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=xk({atanh_:function(e){const t={x:yk(e,"x","atanh")};return ck.runKernel($v,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(e,t,n,r,a="NHWC",i){return _I(e,[...t,e[3]],n,i,r,null,null,GI(a))}function $I(e,t,n,r,a,i,s="channelsLast"){const[o,u]=LI(t);let l;if("channelsLast"===s)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);l=[o,u,e[1],e[1]]}return _I(e,l,n,r,a,i,!1,s)}function FI(e,t,n,r,a,i,s="NDHWC"){const[o,u,l]=PI(t);let c,h;if("NDHWC"===s)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return OI(e,c,n,r,a,!1,h,i)}function _I(e,t,n,r,a,i,s=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=LI(n),[v,y]=LI(r),b=BI(d,v),x=BI(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,i,s,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=MI(e,t,n));const i=e[0],s=e[1],o=zI((i-t+2*r)/n+1,a),u=zI((s-t+2*r)/n+1,a);return[o,u]}([t,n],i,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*a+s-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=zI((t-i+d+p)/r+1,o),h=zI((n-s+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,b,x,i,o),C=s?f*h:f;let S;return"channelsFirst"===o?S=[u,C,k,I]:"channelsLast"===o&&(S=[u,k,I,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:v,dilationWidth:y,inShape:e,outShape:S,filterShape:t}}function OI(e,t,n,r,a,i=!1,s="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,l,c,h,d]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[v,y,b]=PI(n),[x,w,k]=PI(r),I=BI(p,x),C=BI(f,w),S=BI(m,k),{padInfo:N,outDepth:T,outHeight:E,outWidth:R}=function(e,t,n,r,a,i,s,o,u,l,c){let h,d,p,f;"valid"===e&&(e=0);if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,a,i){null==a&&(a=MI(e,t[0],r[0]));const s=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(s[n]=zI((e[n]-t[n]+2*a)/r[n]+1,i));return s}([t,n,r,1],[o,u,l],1,[a,i,s],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/a),p=Math.ceil(n/i),f=Math.ceil(r/s);const e=(d-1)*a+o-t,c=(p-1)*i+u-n,m=(f-1)*s+l-r,g=Math.floor(e/2),v=e-g,y=Math.floor(c/2),b=c-y,x=Math.floor(m/2);h={top:y,bottom:b,left:x,right:m-x,front:g,back:v,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(a,l,c,h,v,y,b,I,C,S,o),A=i?g*d:g;let D;return"channelsFirst"===s?D=[u,A,T,E,R]:"channelsLast"===s&&(D=[u,T,E,R,A]),{batchSize:u,dataFormat:s,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:T,outHeight:E,outWidth:R,outChannels:A,padInfo:N,strideDepth:v,strideHeight:y,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:D,filterShape:t}}function MI(e,t,n,r=1){const a=BI(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function LI(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function PI(e){return"number"==typeof e?[e,e,e]:e}function BI(e,t){return t<=1?e:e+(e-1)*(t-1)}function zI(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function WI(e){const[t,n,r]=LI(e);return 1===t&&1===n&&1===r}function VI(e,t){return WI(e)||WI(t)}function UI(e){return LI(e).every((e=>e>0))}function GI(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function HI(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Og(zg(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Og(zg(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI=xk({reshape_:function(e,t){const n={x:yk(e,"x","reshape","string_or_numeric")},r={shape:t};return ck.runKernel(Ab,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI=xk({avgPool_:function(e,t,n,r,a){const i=yk(e,"x","avgPool","float32");Og(VI(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let s=i,o=!1;3===i.rank&&(o=!0,s=jI(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Og(4===s.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`)),HI("avgPool",r,a);const u={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=ck.runKernel(_v,u,l);return c=sI(c,i.dtype),o?jI(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI=xk({avgPool3d_:function(e,t,n,r,a,i="NDHWC"){const s=yk(e,"x","avgPool3d","float32");let o=s,u=!1;4===s.rank&&(u=!0,o=jI(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Og(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Og("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Og("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),HI("avgPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i};let h=ck.runKernel(Mv,l,c);return h=sI(h,o.dtype),u?jI(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI=xk({concat_:function(e,t=0){Og(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=bk(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return oI(n[0]);const r=n,a={axis:t};return ck.runKernel(Kv,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI=xk({matMul_:function(e,t,n=!1,r=!1){let a=yk(e,"a","matMul"),i=yk(t,"b","matMul");[a,i]=rk(a,i);const s={a:a,b:i},o={transposeA:n,transposeB:r};return ck.runKernel(Pv,s,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI=xk({sigmoid_:function(e){const t={x:yk(e,"x","sigmoid","float32")};return ck.runKernel(Kb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI=xk({slice_:function(e,t,n){const r=yk(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},i={begin:t,size:n};return ck.runKernel(Gb,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI=xk({tanh_:function(e){const t={x:yk(e,"x","tanh","float32")};return ck.runKernel(mx,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eC=xk({batchToSpaceND_:function(e,t,n){const r=yk(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Og(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Og(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Og(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const i={x:r},s={blockShape:t,crops:n};return ck.runKernel(Bv,i,s)}});const tC=xk({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){null==i&&(i=.001);const s=yk(e,"x","batchNorm"),o=yk(t,"mean","batchNorm"),u=yk(n,"variance","batchNorm");let l,c;null!=a&&(l=yk(a,"scale","batchNorm")),null!=r&&(c=yk(r,"offset","batchNorm")),Og(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Og(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Og(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?jI(e,[1,1,1,e.size]):2===e.rank?jI(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?jI(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:i},f=ck.runKernel(Ry,d,p);return jI(f,s.shape)}});const nC=xk({batchNorm2d_:function(e,t,n,r,a,i){const s=yk(e,"x","batchNorm"),o=yk(t,"mean","batchNorm"),u=yk(n,"variance","batchNorm");let l,c;return null!=a&&(l=yk(a,"scale","batchNorm")),null!=r&&(c=yk(r,"offset","batchNorm")),Og(2===s.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${s.rank}.`)),Og(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Og(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&Og(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&Og(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),tC(s,o,u,c,l,i)}});const rC=xk({batchNorm3d_:function(e,t,n,r,a,i){const s=yk(e,"x","batchNorm"),o=yk(t,"mean","batchNorm"),u=yk(n,"variance","batchNorm");let l,c;return null!=a&&(l=yk(a,"scale","batchNorm")),null!=r&&(c=yk(r,"offset","batchNorm")),Og(3===s.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${s.rank}.`)),Og(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Og(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&Og(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&Og(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),tC(s,o,u,c,l,i)}});const aC=xk({batchNorm4d_:function(e,t,n,r,a,i){const s=yk(e,"x","batchNorm"),o=yk(t,"mean","batchNorm"),u=yk(n,"variance","batchNorm");let l,c;return null!=a&&(l=yk(a,"scale","batchNorm")),null!=r&&(c=yk(r,"offset","batchNorm")),Og(4===s.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${s.rank}.`)),Og(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Og(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&Og(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&Og(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),tC(s,o,u,c,l,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iC=xk({bincount_:function(e,t,n){const r=yk(e,"x","bincount"),a=yk(t,"weights","bincount");Og("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Og(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Og(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},s={size:n};return ck.runKernel(zv,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC=xk({broadcastTo_:function(e,t){let n=yk(e,"broadcastTo","x");const r=n.shape;if(uv(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=jI(n,e)}const a=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const s=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===s.length)return oI(n);const o={x:n},u={reps:i};return ck.runKernel(gx,o,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oC=xk({ceil_:function(e){const t={x:yk(e,"x","ceil","float32")};return ck.runKernel(Gv,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(e,t,n){uv(e);const r={shape:e,value:t,dtype:n=n||Zg(t)};return ck.runKernel(Sy,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lC=xk({clipByValue_:function(e,t,n){const r=yk(e,"x","clipByValue");if(Og(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return uC(r.shape,t,r.dtype);const a={x:r},i={clipValueMin:t,clipValueMax:n};return ck.runKernel(Hv,a,i)}});const cC=xk({concat1d_:function(e){return XI(e,0)}});const hC=xk({concat2d_:function(e,t){return XI(e,t)}});const dC=xk({concat3d_:function(e,t){return XI(e,t)}});const pC=xk({concat4d_:function(e,t){return XI(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fC=xk({conv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=yk(e,"x","conv2d","float32"),u=yk(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=jI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Og(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),Og(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),HI("conv2d",r,s);const h="NHWC"===a?l.shape[3]:l.shape[1];Og(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),Og(VI(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Og(UI(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),Og(UI(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=ck.runKernel(Xv,d,p);return c?jI(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const mC=xk({conv1d_:function(e,t,n,r,a="NWC",i=1,s){const o=yk(e,"x","conv1d"),u=yk(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=jI(o,[1,o.shape[0],o.shape[1]])),Og(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),Og(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),HI("conv1d",r,s),Og(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),Og(VI(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),Og(UI(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),Og(UI(n),(()=>"Error in conv1D: Stride should be larger than 0.")),Og("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=jI(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=jI(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=fC(d,h,[1,n],r,"NHWC",[1,i],s);return jI(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gC=xk({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",s){Og(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=jI(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Og(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Og(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),Og(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];Og(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Og(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),HI("conv2dDerInput",a,s);const d={dy:u,filter:n},p={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,inputShape:o},f=ck.runKernel(Qv,d,p);return l?jI(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const vC=xk({conv2dTranspose_:function(e,t,n,r,a,i){const s=yk(e,"x","conv2dTranspose"),o=yk(t,"filter","conv2dTranspose");return gC(n,s,o,r,a,"NHWC",i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=xk({conv3d_:function(e,t,n,r,a="NDHWC",i=[1,1,1]){const s=yk(e,"x","conv3d"),o=yk(t,"filter","conv3d");let u=s,l=!1;4===s.rank&&(l=!0,u=jI(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Og(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),Og(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Og(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Og(VI(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Og("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),Og(UI(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),Og(UI(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:i},d=ck.runKernel(Jv,c,h);return l?jI(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bC=xk({conv3DBackpropInput_:function(e,t,n,r,a){Og(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=jI(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=s.shape[4];Og(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),Og(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),Og(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Og(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),Og(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:s,filter:n},h={pad:a,strides:r,inputShape:i},d=ck.runKernel(ey,c,h);return o?jI(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const xC=xk({conv3dTranspose_:function(e,t,n,r,a){const i=yk(e,"x","conv3dTranspose"),s=yk(t,"filter","conv3dTranspose");return bC(n,i,s,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC=xk({cos_:function(e){const t={x:yk(e,"x","cos","float32")};return ck.runKernel(ty,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kC=xk({cosh_:function(e){const t={x:yk(e,"x","cosh","float32")};return ck.runKernel(ny,t)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC=xk({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:yk(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return ck.runKernel(ry,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=xk({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:yk(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return ck.runKernel(ay,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SC=xk({denseBincount_:function(e,t,n,r=!1){const a=yk(e,"x","denseBincount"),i=yk(t,"weights","denseBincount");Og("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Og(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Og(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Og(i.size===a.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`));const s={x:a,weights:i},o={size:n,binaryOutput:r};return ck.runKernel(sy,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NC=xk({depthToSpace_:function(e,t,n="NHWC"){const r=yk(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];Og(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Og(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Og(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Og(s%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return ck.runKernel(oy,o,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=xk({depthwiseConv2d_:function(e,t,n,r,a="NHWC",i=[1,1],s){const o=yk(e,"x","depthwiseConv2d","float32"),u=yk(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=jI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Og(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),Og(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];Og(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),HI("depthwiseConv2d",r,s);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s},f=ck.runKernel(uy,d,p);return c?jI(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EC=xk({dilation2d_:function(e,t,n,r,a=[1,1],i="NHWC"){const s=yk(e,"x","dilation2d"),o=yk(t,"filter","dilation2d");Og(3===s.rank||4===s.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`)),Og(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Og("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=s,l=!1;3===s.rank&&(u=jI(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0),Og(u.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`));const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},d=ck.runKernel(dy,c,h);return l?jI(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RC(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}function AC(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],i=t.length-r-1,s=t[i];(null==a||1===a&&s>1)&&n.unshift(i)}return n}function DC(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let i=e[e.length-a-1];null==i&&(i=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===i)r[n-a-1]=s;else if(1===s)r[n-a-1]=i;else{if(i!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=i}}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $C=xk({equal_:function(e,t){let n=yk(e,"a","equal","string_or_numeric"),r=yk(t,"b","equal","string_or_numeric");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(xy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FC=xk({where_:function(e,t,n){const r=yk(t,"a","where"),a=yk(n,"b","where"),i=yk(e,"condition","where","bool"),s=DC(DC(i.shape,r.shape),a.shape),o={condition:sC(i,s),t:sC(r,s),e:sC(a,s)};return ck.runKernel(Vb,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=xk({zerosLike_:function(e){const t={x:yk(e,"x","zerosLike")};return ck.runKernel(Ix,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC=xk({divNoNan_:function(e,t){let n=yk(e,"a","div"),r=yk(t,"b","div");[n,r]=rk(n,r);const a=vI(n,r),i=_C(a),s=$C(r,i);return FC(s,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MC=xk({dot_:function(e,t){const n=yk(e,"t1","dot"),r=yk(t,"t2","dot");Og(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(Og(a===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${i}.`)),1===n.rank&&1===r.rank){const e=jI(n,[1,-1]),t=jI(r,[-1,1]),a=YI(e,t);return jI(a,[])}if(1===n.rank&&2===r.rank){const e=jI(n,[1,-1]),t=jI(r,[r.shape[0],r.shape[1]]),a=YI(e,t);return jI(a,[a.size])}if(2===n.rank&&1===r.rank){const e=jI(r,[-1,1]),t=YI(n,e);return jI(t,[t.size])}{const e=jI(r,[r.shape[0],r.shape[1]]);return YI(n,e)}}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC=xk({einsum_:function(e,...t){const n=t.map(((e,t)=>yk(e,`tensors${t}`,"einsum"))),r={equation:e};return ck.runKernel(gy,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC=xk({elu_:function(e){const t={x:yk(e,"x","elu","float32")};return ck.runKernel(vy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=xk({erf_:function(e){let t=yk(e,"x","erf");Og("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=sI(t,"float32"));const n={x:t};return ck.runKernel(by,n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zC(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function WC(e,t,n){const r=e.length+t.length,a=[];let i=0,s=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function VC(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function UC(e,t){return WC(e,t.map((e=>1)),t)}function GC(e,t,n){Og(zC(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function HC(e,t){if(zC(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function jC(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function qC(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KC=xk({max_:function(e,t=null,n=!1){const r={x:yk(e,"x","max")},a={reductionIndices:t,keepDims:n};return ck.runKernel(Qy,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XC=xk({min_:function(e,t=null,n=!1){const r={x:yk(e,"x","min")},a={axis:t,keepDims:n};return ck.runKernel(ib,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YC=xk({pow_:function(e,t){let n=yk(e,"base","pow"),r=yk(t,"exp","pow");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(xb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(e,t){if((Ew(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ew(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return kk(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC=xk({sqrt_:function(e){const t={x:yk(e,"x","sqrt","float32")};return ck.runKernel(Yb,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZC=xk({square_:function(e){const t=yk(e,"x","square");return ck.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eS=xk({sum_:function(e,t=null,n=!1){let r=yk(e,"x","sum");"bool"===r.dtype&&(r=sI(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return ck.runKernel(Qb,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(e,t,n=null){if(0===e.rank)return bI(e);if(1!==e.rank&&null===n)return tS(jI(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return eS(bI(e),n);if(t===1/0)return KC(bI(e),n);if(t===-1/0)return XC(bI(e),n);if("euclidean"===t||2===t)return JC(eS(YC(bI(e),QC(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return KC(eS(bI(e),n[0]),n[1]-1);if(t===1/0)return KC(eS(bI(e),n[1]),n[0]);if(t===-1/0)return XC(eS(bI(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return JC(eS(ZC(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const nS=xk({norm_:function(e,t="euclidean",n=null,r=!1){const a=tS(e=yk(e,"x","norm"),t,n);let i=a.shape;if(r){const t=Hg(n,e.shape);i=UC(a.shape,t)}return jI(a,i)}});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rS=xk({euclideanNorm_:function(e,t=null,n=!1){return nS(e,"euclidean",t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aS=xk({exp_:function(e){const t={x:yk(e,"x","exp")};return ck.runKernel(wy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iS=xk({expandDims_:function(e,t=0){const n=yk(e,"x","expandDims","string_or_numeric");Og(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return ck.runKernel(ky,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sS=xk({expm1_:function(e){const t={x:yk(e,"x","expm1")};return ck.runKernel(Iy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oS=xk({tile_:function(e,t){const n=yk(e,"x","tile","string_or_numeric");Og(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return ck.runKernel(gx,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uS=xk({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=iI([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)a.set(1,e,e);const s=jI(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return oS(iS(s,0),[n[0],1,1]);if(2===n.length)return oS(iS(iS(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return oS(iS(iS(iS(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lS=xk({floor_:function(e){const t={x:yk(e,"x","floor","float32")};return ck.runKernel(Ty,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cS=xk({gather_:function(e,t,n=0,r=0){const a={x:yk(e,"x","gather"),indices:yk(t,"indices","gather","int32")},i={axis:n,batchDims:r};return ck.runKernel(Ay,a,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS=xk({greater_:function(e,t){let n=yk(e,"a","greater","string_or_numeric"),r=yk(t,"b","greater","string_or_numeric");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel($y,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dS=xk({greaterEqual_:function(e,t){let n=yk(e,"a","greaterEqual","string_or_numeric"),r=yk(t,"b","greaterEqual","string_or_numeric");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(Fy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pS=xk({imag_:function(e){const t={input:yk(e,"input","imag")};return ck.runKernel(My,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fS=xk({isFinite_:function(e){const t={x:yk(e,"x","isFinite")};return ck.runKernel(Ly,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mS=xk({isInf_:function(e){const t={x:yk(e,"x","isInf")};return ck.runKernel(Py,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gS=xk({isNaN_:function(e){const t={x:yk(e,"x","isNaN")};return ck.runKernel(By,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS=xk({leakyRelu_:function(e,t=.2){const n={x:yk(e,"x","leakyRelu")},r={alpha:t};return ck.runKernel(zy,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS=xk({less_:function(e,t){let n=yk(e,"a","less","string_or_numeric"),r=yk(t,"b","less","string_or_numeric");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(Wy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS=xk({lessEqual_:function(e,t){let n=yk(e,"a","lessEqual","string_or_numeric"),r=yk(t,"b","lessEqual","string_or_numeric");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(Vy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xS=xk({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const i=yk(e,"x","localResponseNormalization");Og(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),Og(zg(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let s=i,o=!1;3===i.rank&&(o=!0,s=jI(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:s},l={depthRadius:t,bias:n,alpha:r,beta:a},c=ck.runKernel(Xy,u,l);return o?jI(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS=xk({log_:function(e){const t={x:yk(e,"x","log","float32")};return ck.runKernel(Gy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kS=xk({log1p_:function(e){const t={x:yk(e,"x","log1p")};return ck.runKernel(Hy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(e){return ck.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CS=xk({neg_:function(e){const t={x:yk(e,"x","neg")};return ck.runKernel(hb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS=xk({softplus_:function(e){const t={x:yk(e,"x","softplus")};return ck.runKernel(Xb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NS=xk({logSigmoid_:function(e){const t=yk(e,"x","logSigmoid"),n=IS((e=>({value:CS(SS(CS(e))),gradFunc:t=>yI(t,QI(CS(e)))})));return n(t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TS=xk({sub_:function(e,t){let n=yk(e,"a","sub"),r=yk(t,"b","sub");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(px,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ES=xk({logSoftmax_:function(e,t=-1){const n=yk(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=IS(((e,n)=>{const r=KC(e,t,!0),a=TS(e,r),i=TS(sI(a,"float32"),wS(eS(aS(a),t,!0)));n([i]);return{value:i,gradFunc:(e,n)=>{const[r]=n,a=aS(r);return TS(e,yI(eS(e,t,!0),a))}}}));return r(n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RS=xk({logSumExp_:function(e,t=null,n=!1){const r=yk(e,"x","logSumExp"),a=Hg(t,r.shape),i=KC(r,a,!0),s=TS(r,i),o=aS(s),u=eS(o,a),l=wS(u),c=mI(jI(i,l.shape),l);if(n){const e=UC(c.shape,a);return jI(c,e)}return c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AS=xk({logicalAnd_:function(e,t){const n=yk(e,"a","logicalAnd","bool"),r=yk(t,"b","logicalAnd","bool");DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(jy,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS=xk({logicalNot_:function(e){const t={x:yk(e,"x","logicalNot","bool")};return ck.runKernel(qy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $S=xk({logicalOr_:function(e,t){const n=yk(e,"a","logicalOr","bool"),r=yk(t,"b","logicalOr","bool");DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(Ky,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS=xk({logicalXor_:function(e,t){const n=yk(e,"a","logicalXor","bool"),r=yk(t,"b","logicalXor","bool");return DC(n.shape,r.shape),AS($S(e,t),DS(AS(e,t)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _S=xk({maxPool_:function(e,t,n,r,a){const i=yk(e,"x","maxPool");let s=i,o=!1;3===i.rank&&(o=!0,s=jI(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Og(4===s.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`)),Og(VI(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),HI("maxPool",r,a);const u={x:s},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=ck.runKernel(Zy,u,l);return o?jI(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS=xk({maxPool3d_:function(e,t=[1,1,1],n,r,a,i="NDHWC"){const s=yk(e,"x","maxPool3d");let o=s,u=!1;4===s.rank&&(u=!0,o=jI(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Og(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Og("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),HI("maxPool3d",r,a);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:i},h=ck.runKernel(tb,l,c);return u?jI(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MS=xk({maximum_:function(e,t){let n=yk(e,"a","maximum"),r=yk(t,"b","maximum");[n,r]=rk(n,r),"bool"===n.dtype&&(n=sI(n,"int32"),r=sI(r,"int32")),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(Jy,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS=xk({mean_:function(e,t=null,n=!1){const r={x:yk(e,"x","mean")},a={axis:t,keepDims:n};return ck.runKernel(ab,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(e,t="float32"){if(uv(e),"complex64"===t){const t=PS(e,"float32"),n=PS(e,"float32");return wk(t,n)}const n=sv(Pg(e),t);return ck.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(e,t="float32"){if(uv(e),"complex64"===t){const t=BS(e,"float32"),n=PS(e,"float32");return wk(t,n)}const n=iv(Pg(e),t);return ck.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zS=xk({minimum_:function(e,t){let n=yk(e,"a","minimum"),r=yk(t,"b","minimum");[n,r]=rk(n,r),"bool"===n.dtype&&(n=sI(n,"int32"),r=sI(r,"int32")),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(sb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS=xk({mirrorPad_:function(e,t,n){Og("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=yk(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Og(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Og(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Og(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},s={x:r};return ck.runKernel(ob,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VS=xk({mod_:function(e,t){let n=yk(e,"a","mod"),r=yk(t,"b","mod");[n,r]=rk(n,r);const a={a:n,b:r};return ck.runKernel(ub,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const US=xk({moments_:function(e,t=null,n=!1){const r=Hg(t,(e=yk(e,"x","moments")).shape),a=LS(e,r,n);let i=a.shape;n||(i=UC(a.shape,r));const s=ZC(TS(sI(e,"float32"),jI(a,i)));return{mean:a,variance:LS(s,r,n)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GS=xk({notEqual_:function(e,t){let n=yk(e,"a","notEqual","string_or_numeric"),r=yk(t,"b","notEqual","string_or_numeric");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(db,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=xk({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:yk(e,"indices","oneHot","int32")},s={dtype:a,depth:t,onValue:n,offValue:r};return ck.runKernel(vb,i,s)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jS=xk({onesLike_:function(e){const t={x:yk(e,"x","onesLike")};return ck.runKernel(gb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS=xk({pad_:function(e,t,n=0){const r=yk(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},i={x:r};return ck.runKernel(bb,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KS=xk({spaceToBatchND_:function(e,t,n){const r=yk(e,"x","spaceToBatchND");Og(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Og(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Og(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},i={blockShape:t,paddings:n};return ck.runKernel(Jb,a,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XS=xk({pool_:function(e,t,n,r,a,i,s){null==a&&(a=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=yk(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=jI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Og(VI(i,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${a}'`));const c=$I(u.shape,t,i,a,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],i[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),i=e.concat(r,a),s=t.map(((e,t)=>(e-i[t]%e)%e)),o=a.map(((e,t)=>e+s[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,s[t]]));return[u,l]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",v=p?u:KS(u,h,f),y=("avg"===n?()=>qI(v,t,i,g,s):()=>_S(v,t,i,g,s))(),b=p?y:eC(y,h,m);return l?jI(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YS=xk({prelu_:function(e,t){const n={x:yk(e,"x","prelu"),alpha:yk(t,"alpha","prelu")};return ck.runKernel(wb,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QS=xk({prod_:function(e,t=null,n=!1){let r=yk(e,"x","prod");"bool"===r.dtype&&(r=sI(r,"int32"));const a={x:r},i={axis:t,keepDims:n};return ck.runKernel(kb,a,i)}});var JS={};(function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new r(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.alea=i})(0,{get exports(){return JS},set exports(e){JS=e}},!1);var ZS={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor128=i}(0,e,!1)}({get exports(){return ZS},set exports(e){ZS=e}});var eN={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorwow=i}(0,e,!1)}({get exports(){return eN},set exports(e){eN=e}});var tN={};!function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xorshift7=i}(0,e,!1)}({get exports(){return tN},set exports(e){tN=e}});var nN={};!function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,i=t.i;return t.w=r=r+1640531527|0,n=a[i+34&127],e=a[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,a,i,s,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(s=s+1640531527|0,a=0==(n=o[127&i]^=r+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.xor4096=i}(0,e,!1)}({get exports(){return nN},set exports(e){nN=e}});var rN={};!function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new r(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&a(i,n),s.state=function(){return a(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n((function(){return i})):this.tychei=i}(0,e,!1)}({get exports(){return rN},set exports(e){rN=e}});var aN={},iN={get exports(){return aN},set exports(e){aN=e}},sN=rt(Object.freeze({__proto__:null,default:{}}));!function(e){!function(t,n,r){var a,i=256,s="random",o=r.pow(i,6),u=r.pow(2,52),l=2*u,c=i-1;function h(e,c,h){var v=[],y=m(f((c=1==c?{entropy:!0}:c||{}).entropy?[e,g(n)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(i):(e=new Uint8Array(i),(t.crypto||t.msCrypto).getRandomValues(e)),g(e)}catch(e){var r=t.navigator,s=r&&r.plugins;return[+new Date,t,s,t.screen,g(n)]}}():e,3),v),b=new d(v),x=function(){for(var e=b.g(6),t=o,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,m(g(b.S),n),(c.pass||h||function(e,t,n,a){return a&&(a.S&&p(a,b),e.state=function(){return p(b,{})}),n?(r[s]=e,t):e})(x,y,"global"in c?c.global:this==r,c.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(f(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),n),e.exports){e.exports=h;try{a=sN}catch(e){}}else r["seed"+s]=h}("undefined"!=typeof self?self:nt,[],Math)}(iN);var oN=JS,uN=ZS,lN=eN,cN=tN,hN=nN,dN=rN,pN=aN;pN.alea=oN,pN.xor128=uN,pN.xorwow=lN,pN.xorshift7=cN,pN.xor4096=hN,pN.tychei=dN;var fN=pN;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mN{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=fN.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,i;do{r=2*this.random()-1,a=2*this.random()-1,i=r*r+a*a}while(i>=1||0===i);const s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class gN{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=fN.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN=xk({randomNormal_:function(e,t=0,n=1,r,a){if(uv(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new mN(t,n,r,!1,a),s=iI(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN=xk({randomUniform_:function(e,t=0,n=1,r="float32",a){uv(e);const i=iI(e,r),s=new gN(t,n,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return ck.runKernel(Nb,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xN=xk({real_:function(e){const t={input:yk(e,"input","real")};return ck.runKernel(Tb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wN=xk({reciprocal_:function(e){const t={x:yk(e,"x","reciprocal")};return ck.runKernel(Eb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN=xk({relu_:function(e){const t={x:yk(e,"x","relu")};return ck.runKernel(Rb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IN=xk({relu6_:function(e){const t={x:yk(e,"x","relu6")};return ck.runKernel(Ob,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN=xk({reverse_:function(e,t){const n={x:yk(e,"x","reverse")},r={dims:t};return ck.runKernel(Mb,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SN=xk({round_:function(e){const t={x:yk(e,"x","round")};return ck.runKernel(Lb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN=xk({rsqrt_:function(e){const t={x:yk(e,"x","rsqrt","float32")};return ck.runKernel(Pb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN=xk({selu_:function(e){const t={x:yk(e,"x","selu")};return ck.runKernel(Ub,t)}});const EN=xk({separableConv2d_:function(e,t,n,r,a,i=[1,1],s="NHWC"){const o=yk(e,"x","separableConv2d"),u=yk(t,"depthwiseFilter","separableConv2d"),l=yk(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=jI(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Og(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Og(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),Og(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),Og(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),Og(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];Og(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const f=TC(c,u,r,a,s,i),m=fC(f,l,1,"valid",s);return h?jI(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN=xk({sign_:function(e){const t={x:yk(e,"x","sign")};return ck.runKernel(qb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN=xk({sin_:function(e){const t={x:yk(e,"x","sin","float32")};return ck.runKernel(Hb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN=xk({sinh_:function(e){const t={x:yk(e,"x","sinh")};return ck.runKernel(jb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N=xk({slice1d_:function(e,t,n){const r=yk(e,"x","slice1d");return Og(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),JI(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN=xk({slice2d_:function(e,t,n){const r=yk(e,"x","slice2d");return Og(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),JI(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _N=xk({slice3d_:function(e,t,n){const r=yk(e,"x","slice3d");return Og(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),JI(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ON=xk({slice4d_:function(e,t,n){const r=yk(e,"x","slice4d");return Og(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),JI(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN=xk({softmax_:function(e,t=-1){const n=yk(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ck.runKernel(ex,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN=xk({fft_:function(e){Og("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ck.runKernel(Cy,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PN=xk({ifft_:function(e){Og("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ck.runKernel(Oy,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN=xk({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=jI(e,[n,t]);r=PN(a)}else{const a=[n,2*(t-1)],i=jI(xN(e),[n,t]),s=jI(pS(e),[n,t]),o=CN(JI(i,[0,1],[n,t-2]),1),u=yI(CN(JI(s,[0,1],[n,t-2]),1),QC(-1)),l=XI([i,o],1),c=XI([s,u],1),h=jI(wk(l,c),[a[0],a[1]]);r=PN(h)}if(r=xN(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=jI(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN=xk({split_:function(e,t,n=0){const r={x:yk(e,"x","split")},a={numOrSizeSplits:t,axis:n};return ck.runKernel(Zb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WN=xk({rfft_:function(e,t){Og("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,a=JI(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=XI([e,PS(r)],e.shape.length-1),n=t}else a=e;const i=_C(a),s=jI(wk(a,i),[r,n]),o=LN(s),u=Math.floor(n/2)+1,l=xN(o),c=pS(o),h=zN(l,[u,n-u],l.shape.length-1),d=zN(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,jI(wk(h[0],d[0]),p)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VN=xk({squaredDifference_:function(e,t){let n=yk(e,"a","squaredDifference"),r=yk(t,"b","squaredDifference");[n,r]=rk(n,r),DC(n.shape,r.shape);const a={a:n,b:r};return ck.runKernel(sx,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UN=xk({squeeze_:function(e,t){const n=yk(e,"x","squeeze","string_or_numeric");return jI(n,jg(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN=xk({stack_:function(e,t=0){const n=bk(e,"tensors","stack","string_or_numeric");Og(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Og(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return ck.runKernel(yb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN=xk({step_:function(e,t=0){const n={x:yk(e,"x","step")},r={alpha:t};return ck.runKernel(Cx,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN=xk({stridedSlice_:function(e,t,n,r,a=0,i=0,s=0,o=0,u=0){const l={x:yk(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};return ck.runKernel(lx,l,c)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qN=xk({tan_:function(e){const t={x:yk(e,"x","tan","float32")};return ck.runKernel(fx,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(e,t){Lg(e);const n=mk(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return kk(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(e,t,n){if(Lg(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=mk(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return kk(e,t,r,n)}function YN(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(i+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(i+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(i+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(i+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function QN(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let s=1;for(let e=a;e<i;++e)s*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:Pg(t.shape)/o,sliceSize:s,strides:[...nv(n.slice(0,a)),1],outputSize:Pg(n)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN=xk({topk_:function(e,t=1,n=!0){const r=yk(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const i={x:r},s={k:t,sorted:n},[o,u]=ck.runKernel(vx,i,s);return{values:o,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN=xk({truncatedNormal_:function(e,t=0,n=1,r,a){if(uv(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new mN(t,n,r,!0,a),s=iI(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eT=xk({unique_:function(e,t=0){const n=yk(e,"x","unique","string_or_numeric");Og(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[i,s]=ck.runKernel(xx,r,a);return{values:i,indices:s}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tT=xk({unsortedSegmentSum_:function(e,t,n){const r=yk(e,"x","unsortedSegmentSum"),a=yk(t,"segmentIds","unsortedSegmentSum","int32");Og(zg(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:a},s={numSegments:n};return ck.runKernel(kx,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nT=xk({unstack_:function(e,t=0){const n=yk(e,"x","unstack","string_or_numeric");Og(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return ck.runKernel(wx,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rT(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=iI(e,"int32"),a=iI([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),s=t*e.length;a.values.set(i,s)}return a.toTensor()}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aT=xk({transpose_:function(e,t,n){const r=yk(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Og(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Og(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},i={perm:t};return"complex64"===r.dtype?hI((()=>{let e=xN(r),t=pS(r);return e=ck.runKernel(bx,{x:e},i),t=ck.runKernel(bx,{x:t},i),n&&(t=CS(t)),wk(e,t)})):ck.runKernel(bx,a,i)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iT=xk({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=yk(e,"x","dropout");if(Og("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Og(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Gw?a.clone():a;const i=function(e,t){if(null==t)return e.shape.slice();if(Bg(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,o=vI(lS(mI(yN(i,0,1,"float32",r),s)),s);return yI(a,o)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sT=xk({conv2DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i="NHWC",s){let o=e;3===e.rank&&(o=jI(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=jI(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Og(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Og(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),Og(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];Og(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),Og(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),HI("conv2dDerFilter",a,s);const h={x:o,dy:u},d={strides:r,pad:a,dataFormat:i,dimRoundingMode:s,filterShape:n};return ck.runKernel(Yv,h,d)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return yI(e,HN(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function uT(e,t){let n=t;const r=AC(e.shape,t.shape);return r.length>0&&(n=eS(n,r)),jI(n,e.shape)}function lT(e,t,n,r){if("linear"===t)return e;if("relu"===t)return kN(e);if("elu"===t)return PC(e);if("relu6"===t)return IN(e);if("prelu"===t)return YS(e,n);if("leakyrelu"===t)return vS(e,r);if("sigmoid"===t)return QI(e);throw new Error(`Unknown fused activation ${t}.`)}const cT=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hT=xk({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===cT(ck.state.gradientDepth,u)){Og("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=fC(e,t,n,r,a,i,s);return null!=o&&(h=mI(h,o)),lT(h,u,l,c)}const h=yk(e,"x","conv2d","float32"),d=yk(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=jI(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Og(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),Og(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),HI("fused conv2d",r,s);const m="NHWC"===a?p.shape[3]:p.shape[1];Og(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),Og(VI(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const g=_I(p.shape,d.shape,n,i,r,s);let v,y;if(null!=o&&(v=yk(o,"bias","fused conv2d"),[v]=rk(v,h),"NHWC"===a?DC(g.outShape,v.shape):(Og(v.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`)),Og(0===v.shape.length||v.shape[0]===g.outChannels||1===v.shape[0],(()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(Og(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Og(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{DC(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=yk(l,"prelu weights","fused conv2d")}const b=(e,t)=>{Og("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[s,o,l,c]=t,h=oT(e,l,u);Og(WI(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[gC(o.shape,h,s,n,r),sT(o,h,s.shape,n,r)];if(null!=c){const e=uT(c,h);d.push(e)}return d},x={x:p,filter:d,bias:v,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:c};if(null==o){const e=IS(((e,t,n)=>{let r=ck.runKernel(Tx,x,w);return n([t,e,r]),f&&(r=jI(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(p,d)}{const e=IS(((e,t,n,r)=>{let a=ck.runKernel(Tx,x,w);return r([t,e,a,n]),f&&(a=jI(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(p,d,v)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dT=xk({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],s){let o=e;3===e.rank&&(o=jI(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=jI(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:s,dilations:i,filterShape:n};return ck.runKernel(ly,l,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT=xk({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],s){let o=t,u=!1;3===t.rank&&(u=!0,o=jI(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:s,dilations:i,inputShape:e},h=ck.runKernel(cy,l,c);return u?jI(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT=xk({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){if(!1===cT(ck.state.gradientDepth,i)){let u=YI(e,t,n,r);return null!=a&&(u=mI(u,a)),lT(u,i,s,o)}let u=yk(e,"a","fused matMul"),l=yk(t,"b","fused matMul");[u,l]=rk(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=Pg(f),v=Pg(m);Og(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=DC(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),b=jI(u,n?[g,c,d]:[g,d,c]),x=jI(l,r?[v,p,h]:[v,h,p]);let w,k;null!=a&&(w=yk(a,"bias","fused matMul"),[w]=rk(w,u),DC(y,w.shape)),null!=s&&(k=yk(s,"prelu weights","fused matMul"));const I=(e,t)=>{const[s,o,u,l]=t,c=oT(jI(e,u.shape),u,i);let h,d;if(n||r?!n&&r?(h=YI(c,o,!1,!1),d=YI(c,s,!0,!1)):n&&!r?(h=YI(o,c,!1,!0),d=YI(s,c,!1,!1)):(h=YI(o,c,!0,!0),d=YI(c,s,!0,!0)):(h=YI(c,o,!1,!0),d=YI(s,c,!0,!1)),null!=a){return[h,d,uT(l,c)]}return[h,d]},C={a:b,b:x,bias:w,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==a){const e=IS(((e,t,n)=>{const r=ck.runKernel(Nx,C,S);return n([e,t,r]),{value:jI(r,y),gradFunc:I}}));return e(b,x)}{const e=IS(((e,t,n,r)=>{const a=ck.runKernel(Nx,C,S);return r([e,t,a,n]),{value:jI(a,y),gradFunc:I}}));return e(b,x,w)}}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mT=xk({cropAndResize_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a="bilinear",i=0){const s=yk(e,"image","cropAndResize"),o=yk(t,"boxes","cropAndResize","float32"),u=yk(n,"boxInd","cropAndResize","int32"),l=o.shape[0];Og(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),Og(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),Og(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),Og(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Og(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Og("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:s,boxes:o,boxInd:u},h={method:a,extrapolationValue:i,cropSize:r};return ck.runKernel(iy,c,h)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gT=xk({flipLeftRight_:function(e){const t=yk(e,"image","flipLeftRight","float32");Og(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ck.runKernel(Ny,n,{})}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT=xk({grayscaleToRGB_:function(e){const t=yk(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Og(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Og(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,oS(t,a)}});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT=xk({rgbToGrayscale_:function(e){const t=yk(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];Og(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),Og(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,i=sI(t,"float32"),s=KN([.2989,.587,.114]);let o;switch(t.rank){case 2:o=LC("ij,j->i",i,s);break;case 3:o=LC("ijk,k->ij",i,s);break;case 4:o=LC("ijkl,l->ijk",i,s);break;case 5:o=LC("ijklm,m->ijkl",i,s);break;case 6:o=LC("ijklmn,n->ijklm",i,s);break;default:throw new Error("Not a valid tensor rank.")}return o=iS(o,-1),sI(o,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bT=xk({rotateWithOffset_:function(e,t,n=0,r=.5){const a=yk(e,"image","rotateWithOffset","float32");Og(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const i={image:a},s={radians:t,fillValue:n,center:r};return ck.runKernel(Sx,i,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(e,t,n,r,a,i){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);const s=e.shape[0];return n=Math.min(n,s),Og(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Og(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Og(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Og(1===t.rank,(()=>"scores must be a 1D tensor")),Og(t.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`)),Og(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wT=xk({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=yk(e,"boxes","nonMaxSuppression","float32"),s=yk(t,"scores","nonMaxSuppression","float32"),o=xT(i,s,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ck.runKernel(pb,{boxes:i,scores:s},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,i=0,s=!1;for(;r<a;){i=r+(a-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(a=i,s=!o)}return s?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||IT)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function IT(e,t){return e>t?1:e<t?-1:0}function CT(e,t,n,r,a){return TT(e,t,n,r,a,0)}function ST(e,t,n,r,a,i){return TT(e,t,n,r,a,0,!1,i,!0)}function NT(e,t,n,r,a,i){return TT(e,t,n,r,a,i,!0)}function TT(e,t,n,r,a,i,s=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(AT);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=s;--n){const s=ET(e,i,h[n]);if(s>=r){o=!0;break}if(t.score=t.score*RT(r,c,s),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>a&&kT(l,t,AT))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return s&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function ET(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),p=(o-i)*(u-s),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(s,c),v=Math.min(o,h),y=Math.min(u,d),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(p+f-b)}function RT(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function AT(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DT=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const i=yk(e,"boxes","nonMaxSuppressionAsync"),s=yk(t,"scores","nonMaxSuppressionAsync"),o=xT(i,s,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([i.data(),s.data()]),l=u[0],c=u[1],{selectedIndices:h}=CT(l,c,n,r,a);return i!==e&&i.dispose(),s!==t&&s.dispose(),KN(h,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $T=xk({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=yk(e,"boxes","nonMaxSuppression"),o=yk(t,"scores","nonMaxSuppression"),u=xT(s,o,n,r,a,i),l={boxes:s,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},h=ck.runKernel(mb,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FT=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=0){const s=yk(e,"boxes","nonMaxSuppressionAsync"),o=yk(t,"scores","nonMaxSuppressionAsync"),u=xT(s,o,n,r,a,i);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([s.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=NT(c,h,n,r,a,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:KN(d,"int32"),selectedScores:KN(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _T=xk({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=yk(e,"boxes","nonMaxSuppression"),o=yk(t,"scores","nonMaxSuppression"),u=xT(s,o,n,r,a,null),l={boxes:s,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},h=ck.runKernel(fb,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OT=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,i=!1){const s=yk(e,"boxes","nonMaxSuppressionAsync"),o=yk(t,"scores","nonMaxSuppressionAsync"),u=xT(s,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ST(d,p,l,c,h,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:KN(f,"int32"),validOutputs:QC(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT=xk({resizeBilinear_:function(e,t,n=!1,r=!1){const a=yk(e,"images","resizeBilinear");Og(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Og(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Og(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=jI(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=ck.runKernel(Fb,o,u);return s?jI(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LT=xk({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=yk(e,"images","resizeNearestNeighbor");Og(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Og(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Og("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Og(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=a,s=!1;3===a.rank&&(s=!0,i=jI(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=ck.runKernel(Db,o,u);return s?jI(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PT=xk({threshold_:function(e,t="binary",n=!1,r=.5){const a=yk(e,"image","threshold"),i=a.shape[0]*a.shape[1];let s,o,u,l,c=yI(KN([r]),255);if(Og(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),Og(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),Og("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),Og("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[s,o,u]=zN(a,[1,1,1],-1);const e=yI(s,.2989),t=yI(o,.587),n=yI(u,.114);l=mI(mI(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,a,i,s,o,u=KN([-1]),l=KN([0]),c=KN([0]);for(let h=0;h<e.size-1;h++){n=JI(e,0,h+1),r=JI(e,h+1),s=vI(eS(n),t),o=vI(eS(r),t);const d=eS(yI(n,bN(0,n.size)));a=vI(d,eS(n));const p=uC(r.shape,n.size),f=mI(bN(0,r.size),p),m=yI(r,f);i=vI(eS(m),eS(r));const g=TS(a,i),v=TS(a,i),y=yI(s,o);c=yI(yI(y,g),v);const b=hS(c,l);l=FC(b,c,l),u=FC(b,KN([h]),u)}return u}(iC(sI(SN(l),"int32"),Ik([]),256),i)}const h=n?bS(l,c):hS(l,c);return sI(yI(h,255),"int32")}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BT=xk({transform_:function(e,t,n="nearest",r="constant",a=0,i){const s=yk(e,"image","transform","float32"),o=yk(t,"transforms","transform","float32");Og(4===s.rank,(()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`)),Og(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Og(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:s,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:i};return ck.runKernel(yx,u,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zT=xk({bandPart_:function(e,t,n){const r=yk(e,"a","bandPart");Og(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[i,s]=r.shape.slice(-2);let o,u;"number"==typeof t?(Og(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Og(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=yk(t<0?i:t,"numLower","bandPart")):(Og("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=FC(yS(t,0),i,zS(t,i))),"number"==typeof n?(Og(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),Og(n<=s,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`)),u=yk(n<0?s:n,"numUpper","bandPart")):(Og("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=FC(yS(n,0),s,zS(n,s)));const l=jI(bN(0,i,1,"int32"),[-1,1]),c=bN(0,s,1,"int32"),h=TS(l,c),d=AS(bS(h,o),dS(h,CS(u))),p=PS([i,s],r.dtype);return jI(GN(nT(jI(r,[-1,i,s])).map((e=>FC(d,e,p)))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WT=xk({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Og(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Og(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=zN(e,e.shape[0],0).map((e=>UN(e,[0])));Og(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ck.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=yI(eS(yI(n[r],e)),n[r]);e=TS(e,t)}return vI(e,nS(e,"euclidean"))})));return t?GN(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(e,t=!1){return ck.tidy((()=>{Og(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=uS(n),i=oI(e);const s=XN([[1]],[1,1]);let o=oI(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=o,l=a;[o,i,a]=ck.tidy((()=>{const t=JI(i,[e,e],[n-e,1]),u=nS(t),l=JI(i,[e,e],[1,1]),c=FC(hS(l,0),XN([[-1]]),XN([[1]])),h=TS(l,yI(c,u)),d=vI(t,h);o=1===d.shape[0]?oI(s):XI([s,JI(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=CS(vI(YI(c,h),u)),f=JI(i,[e,0],[n-e,r]),m=yI(p,o),g=aT(o);if(0===e)i=TS(f,YI(m,YI(g,f)));else{const t=TS(f,YI(m,YI(g,f)));i=XI([JI(i,[0,0],[e,r]),t],0)}const v=aT(m),y=JI(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=TS(y,YI(YI(y,o),v));else{const t=TS(y,YI(YI(y,o),v));a=XI([JI(a,[0,0],[n,e]),t],1)}return[o,i,a]})),dI([t,u,l])}return!t&&n>r&&(a=JI(a,[0,0],[n,r]),i=JI(i,[0,0],[r,r])),[a,i]}))}const UT=xk({qr_:function(e,t=!1){if(Og(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return VT(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=nT(jI(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];r.forEach((e=>{const[n,r]=VT(e,t);a.push(n),i.push(r)}));return[jI(GN(a,0),e.shape),jI(GN(i,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var GT;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(GT||(GT={}));const HT={flipLeftRight:gT,grayscaleToRGB:vT,resizeNearestNeighbor:LT,resizeBilinear:MT,rgbToGrayscale:yT,rotateWithOffset:bT,cropAndResize:mT,nonMaxSuppression:wT,nonMaxSuppressionAsync:DT,nonMaxSuppressionWithScore:$T,nonMaxSuppressionWithScoreAsync:FT,nonMaxSuppressionPadded:_T,nonMaxSuppressionPaddedAsync:OT,threshold:PT,transform:BT},jT={bandPart:zT,gramSchmidt:WT,qr:UT},qT=new Map,KT=new Map;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XT{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class YT{constructor(){this.classNameMap={}}static getMap(){return null==YT.instance&&(YT.instance=new YT),YT.instance}static register(e){YT.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function QT(e,t,n){Og(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Og("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Og(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return YT.register(e),qT.set(r,e),KT.set(e,r),e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JT extends XT{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return dI(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){Og(ev(e),(()=>"The f passed in variableGrads(f) must be a function")),Og(null==t||Array.isArray(t)&&t.every((e=>e instanceof jw)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ck.registeredVariables)t.push(ck.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),Og(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:i,grads:s}=ck.gradients(e,t,null,!0);Og(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Og(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=s[t]&&(o[e.name]=s[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&dI(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:QC(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(JT,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZT extends JT{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ck.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ck.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:hI((()=>_C(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:hI((()=>_C(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;hI((()=>{const e=mI(yI(i,this.rho),yI(ZC(a),1-this.rho)),t=yI(vI(JC(mI(s,this.epsilon)),JC(mI(i,this.epsilon))),a),n=mI(yI(s,this.rho),yI(ZC(t),1-this.rho));i.assign(e),s.assign(n);const o=mI(yI(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(dI(this.accumulatedGrads.map((e=>e.variable))),dI(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eE extends JT{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ck.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:hI((()=>uC(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable;hI((()=>{const e=mI(i,ZC(a));i.assign(e);const t=mI(yI(vI(a,JC(mI(e,ck.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&dI(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tE extends JT{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],hI((()=>{this.accBeta1=QC(t).variable(),this.accBeta2=QC(n).variable()})),null==r&&(this.epsilon=ck.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hI((()=>{const n=TS(1,this.accBeta1),r=TS(1,this.accBeta2);t.forEach(((t,a)=>{const i=ck.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:hI((()=>_C(i).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:hI((()=>_C(i).variable(false)))});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=mI(yI(o,this.beta1),yI(s,1-this.beta1)),c=mI(yI(u,this.beta2),yI(ZC(s),1-this.beta2)),h=vI(l,n),d=vI(c,r);o.assign(l),u.assign(c);const p=mI(yI(vI(h,mI(JC(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(yI(this.accBeta1,this.beta1)),this.accBeta2.assign(yI(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&dI(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&dI(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),hI((()=>{this.accBeta1.assign(YC(this.beta1,this.iterations_+1)),this.accBeta2.assign(YC(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nE extends JT{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],hI((()=>{this.iteration=QC(0).variable(),this.accBeta1=QC(t).variable()})),null==r&&(this.epsilon=ck.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hI((()=>{const n=TS(1,this.accBeta1),r=vI(-this.learningRate,mI(yI(this.iteration,this.decay),1));t.forEach(((t,a)=>{const i=ck.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:_C(i).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:_C(i).variable(false)});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=mI(yI(o,this.beta1),yI(s,1-this.beta1)),c=yI(u,this.beta2),h=bI(s),d=MS(c,h);o.assign(l),u.assign(d);const p=mI(yI(vI(r,n),vI(l,mI(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(mI(this.iteration,1)),this.accBeta1.assign(yI(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&dI(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&dI(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rE extends JT{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=ck.registeredVariables[t];hI((()=>{const e=mI(yI(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=pI(QC(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aE extends rE{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=QC(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ck.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:hI((()=>_C(r).variable(e)))}}const a=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&hI((()=>{let e;const t=mI(yI(this.m,a),i);e=this.useNesterov?mI(yI(this.c,mI(i,yI(t,this.m))),r):mI(yI(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&dI(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iE extends JT{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=ck.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ck.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:hI((()=>_C(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:hI((()=>_C(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:hI((()=>_C(r).variable(a)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;hI((()=>{const e=mI(yI(s,this.decay),yI(ZC(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=mI(yI(t,this.decay),yI(i,1-this.decay)),u=vI(yI(i,this.learningRate),JC(TS(e,mI(ZC(a),this.epsilon)))),l=mI(yI(o,this.momentum),u);s.assign(e),t.assign(a),o.assign(l);const c=TS(r,l);r.assign(c)}else{const e=mI(yI(s,this.decay),yI(ZC(i),1-this.decay)),t=mI(yI(o,this.momentum),vI(yI(i,this.learningRate),JC(mI(e,this.epsilon))));s.assign(e),o.assign(t);const n=TS(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&dI(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&dI(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&dI(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE=[ZT,eE,tE,nE,aE,iE,rE];function oE(e){return new Promise((e=>setTimeout(e))).then(e)}class uE{constructor(e){if(!mv().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(uE.URL_SCHEME)&&(e=e.slice(uE.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ck.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Rk(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await oE((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await oE((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Dk(e)}}}}uE.URL_SCHEME="downloads://";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lE(e,t,n,r){!function(e){Og(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Og(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Og(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Og(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((i=>(i.then((i=>{const s=n+ ++a/e.length*(r-n);return t(s),i})),i))))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$k.registerSaveRouter((e=>mv().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(uE.URL_SCHEME)?function(e="model"){return new uE(e)}(e.slice(uE.URL_SCHEME.length)):null));class cE{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Og("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=mv().platform.fetch,Og(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Og(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Rk(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ck.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Dk(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ak(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,i=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),s=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);this.weightUrlConverter&&s.push(...await Promise.all(o));const u=await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?mv().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await lE(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await lE(a,t.onProgress,.5,1)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,u]}}function hE(e){return null!=e.match(cE.URL_SCHEME_REGEX)}cE.URL_SCHEME_REGEX=/^https?:\/\//;const dE=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>hE(e))):hE(e),n)return function(e,t){return new cE(e,t)}(e,t)}return null};function pE(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Pg(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,i=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=i;e<n;++e)l*=o[e],u.push(o[e]);const c=[...nv(e.shape).map((e=>e/l)),1].slice(0,i);return[u,s,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$k.registerSaveRouter(dE),$k.registerLoadRouter(dE);const fE=-2,mE=-1;function gE(e,t,n){const r=e.shape.length;Og(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Og(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Og(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function vE(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function yE(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function bE(e,t,n){return n<=e?n:n-(t-1)}function xE(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function wE(e,t,n,r,a){const i=[...a],s=xE(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{const s=bE(t,n,a);let o=r[s];e&1<<s&&(o=0),i[a]=o}return i}function kE(e,t,n,r,a){const i=[...a],s=xE(n,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const s=bE(t,n,a);let o=r[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[a]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=$g(0,i[e],a[e])}return i}function IE(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function CE(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=$g(0,s,u-1),s}function SE(e,t,n,r,a,i){let s=t[a];const o=n[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=o>0?$g(0,s,u):$g(-1,s,u-1),s}function NE(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function TE(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function EE(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{Og(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(Og(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function RE(e,t,n,r,a,i,s,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=s&&0!=(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&s&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(fE),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(mE),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],v=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const s=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=AE(d.begin[t],0,d.strides[t],r,a,i),d.end[t]=AE(d.end[t],1,d.strides[t],r,a,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&s,f=f&&(0===t&&1===d.strides[t]||s);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):s&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?v.push(g[t]):t===fE&&v.push(1)}const y=v.filter(((e,t)=>d.finalShapeGatherIndices[t]!==fE));return{finalShapeSparse:y,finalShape:v,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function AE(e,t,n,r,a,i){if(a[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}var DE=Object.freeze({__proto__:null,assertParamsValid:gE,maskToAxes:function(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t},computeOutShape:vE,stridesWithElidedDims:yE,getNormalizedAxes:function(e,t,n,r,a,i,s,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=wE(s,u,l,r,e),h=kE(o,u,l,a,e),d=yE(i,u,l,e)}else for(let t=0;t<l;t++)c[t]=CE(s,r,i,e,t,u),h[t]=SE(o,a,i,e,t,u),d[t]=IE(i,t,u);return{begin:c,end:h,strides:d}},startIndicesWithElidedDims:wE,stopIndicesWithElidedDims:kE,stridesForAxis:IE,startForAxis:CE,stopForAxis:SE,isSliceContinous:NE,computeFlatOffset:TE,parseSliceParams:EE,sliceInfo:RE});/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const $E=
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class{static sgd(e){return new rE(e)}static momentum(e,t,n=!1){return new aE(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new iE(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new tE(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new ZT(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new nE(e,t,n,r,a)}static adagrad(e,t=.1){return new eE(e,t)}},FE="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(){return new Promise((e=>FE((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(e,t){const n=e[0].length;e.forEach(((e,t)=>{Og(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Og(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let i=0;i<n;i++)Og(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function ME(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var LE;function PE(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const i=n[a],s=r[r.length-n.length+a],o=r[s];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${i} but shape[${a+e}] = ${o}`)}else r[s]=i}return r}function BE(e){const t={FIRST_DIM_SIZE:LE.FIRST_DIM_SIZE,VALUE_ROWIDS:LE.VALUE_ROWIDS,ROW_LENGTHS:LE.ROW_LENGTHS,ROW_SPLITS:LE.ROW_SPLITS,ROW_LIMITS:LE.ROW_LIMITS,ROW_STARTS:LE.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function zE(e){return 0===e.length?0:e[0]===LE.FIRST_DIM_SIZE?e.length-1:e.length}function WE(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(LE||(LE={}));const VE=30;function UE(e){return e<=VE?e:tv(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function jE(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function qE(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function KE(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function XE(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=1.7580993408473768,QE=1.0507009873554805,JE=.3275911,ZE=.254829592,eR=-.284496736,tR=1.421413741,nR=-1.453152027,rR=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aR(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function iR(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function sR(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function oR(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function uR(e,t){return{real:e[2*t],imag:e[2*t+1]}}function lR(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function cR(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const i=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(i),r[a]=Math.sin(i)}return{real:n,imag:r}}function hR(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR="->",pR=/->/g,fR=",",mR="...";function gR(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(pR,"").length)/dR.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${dR}").`);const[r,a]=e.split(dR);Og(-1===r.indexOf(mR),(()=>`The ellipsis notation ("${mR}") is not supported yet.`));const i=r.split(fR),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==fR&&o.push(t)}const u=new Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(o.indexOf(i[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function vR(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function yR(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Og(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function bR(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const a=wR(t,n[e]);for(const t of a)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function xR(e){return e.every(((e,t)=>e===t))}function wR(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function kR(e,t,n=0){let r=[];if("number"==typeof t)Og(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Og(a<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}Og(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function CR(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function SR(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function TR(e,t){return`size ${e} must be non-negative, not ${t}`}function ER(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function RR(e,t){return`Input to reshape is a SparseTensor with ${Pg(e)}\n  dense values, but the requested shape requires a multiple of ${Pg(t)}. inputShape=${e} outputShape= ${t}`}function AR(e,t){return`Input to reshape is a tensor with ${Pg(e)} dense values, but the requested shape has ${Pg(t)}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(){return"segment ids must be >= 0"}function $R(){return"segment ids are not increasing"}function FR(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function _R(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(e,t){let n,r=!1;for(e<=VE?(n=e,r=!0):n=tv(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=tv(e,n+1);return n}function MR(e,t,n){const r=[],a=e.length;for(let i=0;i<a;i++)i!==t?r.push(e[i]):r.push(n);return r}function LR(e,t,n,r){const a=t.shape.length,i=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:s,outputShape:o}}var PR=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:OR,computeOutShape:MR,collectGatherOpShapeInfo:LR});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(e){try{return e.map((e=>Tw(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function zR(e){return e.map((e=>Nw(e)))}var WR=Object.freeze({__proto__:null,slice_util:DE,segment_util:PR,fromUint8ToStringArray:BR,fromStringArrayToUint8:zR,upcastType:Zw,axesAreInnerMostDims:zC,combineLocations:WC,computeOutAndReduceShapes:VC,expandShapeToKeepDim:UC,assertAxesAreInnerMostDims:GC,getAxesPermutation:HC,getUndoAxesPermutation:jC,getInnerMostAxes:qC,getBroadcastDims:RC,getReductionAxes:AC,assertAndGetBroadcastShape:DC,assertParamsConsistent:OE,computeOutShape:ME,computeDilation2DInfo:DI,computePool2DInfo:$I,computePool3DInfo:FI,computeConv2DInfo:_I,computeConv3DInfo:OI,computeDefaultPad:MI,tupleValuesAreOne:WI,eitherStridesOrDilationsAreOne:VI,stridesOrDilationsArePositive:UI,convertConv2DDataFormat:GI,checkPadOnDimRoundingMode:HI,getFusedDyActivation:oT,getFusedBiasGradient:uT,applyActivation:lT,shouldFuse:cT,get RowPartitionType(){return LE},combineRaggedTensorToTensorShapes:PE,getRowPartitionTypesHelper:BE,getRaggedRank:zE,validateDefaultValueShape:WE,PARALLELIZE_THRESHOLD:VE,computeOptimalWindowSize:UE,getImageCenter:GE,getReshaped:HE,getPermuted:jE,getReshapedPermuted:qE,getSliceBeginCoords:KE,getSliceSize:XE,prepareAndValidate:pE,validateUpdateShape:YN,validateInput:function(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}YN(n,t,e)},calculateShapes:QN,SELU_SCALEALPHA:YE,SELU_SCALE:QE,ERF_P:JE,ERF_A1:ZE,ERF_A2:eR,ERF_A3:tR,ERF_A4:nR,ERF_A5:rR,warn:Rx,log:function(...e){mv().getBool("IS_TEST")||mv().getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:aR,splitRealAndImagArrays:iR,complexWithEvenIndex:sR,complexWithOddIndex:oR,getComplexWithIndex:uR,assignToTypedArray:lR,exponents:cR,exponent:hR,decodeEinsumEquation:gR,getEinsumPermutation:vR,checkEinsumDimSizes:yR,getEinsumComputePath:bR,isIdentityPermutation:xR,prepareSplitSize:kR,getSparseFillEmptyRowsIndicesDenseShapeMismatch:IR,getSparseFillEmptyRowsNegativeIndexErrorMessage:CR,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:SR,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:NR,getSparseReshapeNegativeOutputDimErrorMessage:TR,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:ER,getSparseReshapeInputOutputMultipleErrorMessage:RR,getSparseReshapeInputOutputMismatchErrorMessage:AR,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:DR,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:$R,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:FR,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:_R});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */!function(){for(const e of sE)QT(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const VR={kernelName:xv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,HN(sI(n,"float32"),-1))}}},UR={kernelName:wv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ZC(sI(n,"float32")),r=JC(TS(QC(1),t));return CS(vI(e,r))}}}},GR={kernelName:kv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=JC(TS(ZC(sI(n,"float32")),1));return vI(e,t)}}}},HR={kernelName:Iv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{let t=e;const r=AC(n.shape,a);return r.length>0&&(t=eS(t,r)),jI(t,n.shape)},b:()=>{let t=e;const n=AC(r.shape,a);return n.length>0&&(t=eS(t,n)),jI(t,r.shape)}}}},jR={kernelName:Cv,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},qR={kernelName:Tv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_C(n)}}},KR={kernelName:Ev,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_C(n)}}},XR={kernelName:Rv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,JC(TS(QC(1),ZC(sI(n,"float32")))))}}},YR={kernelName:Av,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=JC(mI(QC(1),ZC(sI(n,"float32"))));return vI(e,t)}}}},QR={kernelName:Fv,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{const t=mI(ZC(n),ZC(r));let i=yI(e,vI(r,t));const s=AC(n.shape,a);return s.length>0&&(i=eS(i,s)),jI(i,n.shape)},b:()=>{const t=mI(ZC(n),ZC(r));let i=CS(yI(e,vI(n,t)));const s=AC(r.shape,a);return s.length>0&&(i=eS(i,s)),jI(i,r.shape)}}}},JR={kernelName:Dv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,mI(ZC(sI(n,"float32")),1))}}},ZR={kernelName:$v,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,TS(QC(1),ZC(sI(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=xk({avgPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i){const s=yk(e,"dy","avgPool3dGrad"),o=yk(t,"input","avgPool3dGrad");let u=s,l=o,c=!1;4===o.rank&&(c=!0,u=jI(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),l=jI(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Og(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),Og(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),HI("avgPool3dGrad",a,i);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:a,dimRoundingMode:i},p=ck.runKernel(Lv,h,d);return c?jI(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),tA={kernelName:Mv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s,dimRoundingMode:o}=n;return{x:()=>eA(e,r,a,i,s,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nA=xk({avgPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a){const i=yk(e,"dy","avgPoolGrad"),s=yk(t,"input","avgPoolGrad");Og(s.rank===i.rank,(()=>`Rank of input (${s.rank}) does not match rank of dy (${i.rank})`));let o=s,u=i,l=!1;3===s.rank&&(l=!0,o=jI(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=jI(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Og(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),Og(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},d=ck.runKernel(Ov,c,h);return l?jI(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),rA={kernelName:_v,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:i,pad:s}=n;return{x:()=>nA(e,r,a,i,s)}}},aA={kernelName:Pv,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:i,transposeB:s}=n;return i||s?!i&&s?{a:()=>YI(e,a,!1,!1),b:()=>YI(e,r,!0,!1)}:i&&!s?{a:()=>YI(a,e,!1,!0),b:()=>YI(r,e,!1,!1)}:{a:()=>YI(a,e,!0,!0),b:()=>YI(e,r,!0,!0)}:{a:()=>YI(e,a,!1,!0),b:()=>YI(r,e,!0,!1)}}},iA={kernelName:Bv,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>KS(e,r,a)}}},sA={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,i=r.shape,s=Array.from(i);for(let e=a.length-1;e>=0;e--)if(a[e]===i[e])s[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<s.length;e++)s[e]>1&&o.push(e);return{x:()=>eS(e,o,!0)}}},oA={kernelName:Uv,gradFunc:e=>({x:()=>e.clone()})},uA={kernelName:Gv,gradFunc:e=>({x:()=>_C(e)})},lA={kernelName:Hv,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:i}=n;return{x:()=>FC(AS(dS(r,a),bS(r,i)),e,_C(e))}}},cA={kernelName:qv,inputsToSave:["x"],gradFunc:VR.gradFunc},hA={kernelName:Kv,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,i=Hg(a,t[0].shape)[0],s=r.map((e=>e[i]));return zN(e,s,i).map((e=>()=>e))}},dA={kernelName:Xv,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:i,strides:s,pad:o,dataFormat:u}=n;return Og(WI(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>gC(r.shape,e,a,s,o,u),filter:()=>sT(r,e,a.shape,s,o,u)}}},pA={kernelName:Qv,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:i,pad:s,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>fC(e,a,i,s,o,1,u),filter:()=>sT(e,r,a.shape,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA=xk({conv3DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a){let i=e;4===e.rank&&(i=jI(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=jI(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Og(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),Og(5===s.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`)),Og(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Og(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),Og(s.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:s},u={strides:r,pad:a,filterShape:n};return ck.runKernel(Zv,o,u)}}),mA={kernelName:Jv,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i}=n;Og(WI(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[s,o]=t;return{x:()=>bC(s.shape,e,o,a,i),filter:()=>fA(s,e,o.shape,a,i)}}},gA={kernelName:ty,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(CS(AN(sI(n,"float32"))),e)}}},vA={kernelName:ny,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(DN(sI(n,"float32")),e)}}},yA={kernelName:ay,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:i,reverse:s}=n;return{x:()=>{const t=HC([a],r.rank);let n=CC(e,a,i,!s);return null!=t&&(n=aT(n,t)),n}}}},bA={kernelName:uy,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:i,dimRoundingMode:s}=n,o=null==r?[1,1]:r;Og(WI(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return Og(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),Og(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),Og(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Og(VI(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),HI("depthwiseConv2d",i,s),{x:()=>pT(u.shape,e,l,a,i,o,s),filter:()=>dT(u,e,l.shape,a,i,o,s)}}},xA={kernelName:dy,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,i={x:r,filter:a,dy:e},s={x:r,filter:a,dy:e};return{x:()=>ck.runKernel(py,i,n),filter:()=>ck.runKernel(fy,s,n)}}},wA={kernelName:vy,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ck.runKernel(yy,r)}}},kA={kernelName:by,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=yI(aS(CS(ZC(n))),2/Math.sqrt(Math.PI));return{x:()=>yI(e,r)}}},IA={kernelName:wy,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,n)}}},CA={kernelName:ky,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>jI(e,n.shape)}}},SA={kernelName:Iy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,aS(n))}}},NA={kernelName:Ty,gradFunc:e=>({x:()=>_C(e)})},TA={kernelName:Ey,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{const t=vI(e,sI(r,"float32")),i=AC(n.shape,a);return i.length>0?jI(eS(t,i),n.shape):t},b:()=>{let t=yI(e,sI(n,"float32"));const i=AC(r.shape,a);i.length>0&&(t=jI(eS(t,i),r.shape));const s=ZC(r);return CS(vI(t,sI(s,"float32")))}}}},EA={kernelName:Ry,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,i,s,o]=t,u=null==o?QC(1):o,l=AC(i.shape,a.shape),c=[];if(1===i.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=TS(a,i),d=yI(e,u),p=NN(mI(s,QC(r))),f=yI(yI(yI(p,p),p),QC(-.5));return{x:()=>1===i.rank?jI(yI(yI(e,oS(jI(p,[1,1,1,i.shape[0]]),c)),u),a.shape):jI(yI(yI(e,p),u),a.shape),mean:()=>{let e=yI(yI(p,QC(-1)),d);return 1===i.rank&&(e=eS(e,l)),jI(e,i.shape)},variance:()=>{let e=yI(yI(f,h),d);return 1===i.rank&&(e=eS(e,l)),jI(e,i.shape)},scale:()=>{const t=yI(h,p);let n=yI(e,t);return 1===i.rank&&(n=eS(n,l)),jI(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=eS(t,l)),jI(t,i.shape)}}}},RA={kernelName:Ay,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:i,batchDims:s}=n,o=Hg(i,r.shape)[0],u=(e,t,n)=>()=>{const r=e.shape,a=t.size,s=r.slice(0,o),u=s.length,l=r.slice(i,r.length).slice(1),c=l.length,h=AA(0,u),d=AA(u+1,u+1+c),p=DA([s,[a],l]),f=jI(n,p),m=jI(t,[a]),g=DA([[u],h,d]),v=aT(f,g);let y=tT(v,m,e.shape[o]);const b=jC(g);return y=aT(y,b),y};if(1===s){const t=r.shape[0],n=r.split(t,0),i=()=>{const t=GN(n.map(((t,n)=>u(t,a.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)};return{x:i,indices:()=>a}}return{x:u(r,a,e),indices:()=>a}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function DA(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $A={kernelName:Fy,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>_C(n),b:()=>_C(r)}}},FA={kernelName:_y,gradFunc:e=>({x:()=>sI(e,"float32")})},_A={kernelName:Ly,gradFunc:e=>({x:()=>_C(e)})},OA={kernelName:Py,gradFunc:e=>({x:()=>_C(e)})},MA={kernelName:By,gradFunc:e=>({x:()=>_C(e)})},LA={kernelName:zy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,i=hS(r,0);return{x:()=>FC(i,e,yI(e,a))}}},PA={kernelName:Hy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,mI(n,1))}}},BA={kernelName:Gy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,sI(n,"float32"))}}},zA={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=aS(r);return TS(e,yI(eS(e,a,!0),t))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA=xk({localResponseNormalizationBackprop_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=5,a=1,i=1,s=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:i,beta:s};return ck.runKernel(Yy,o,u)}}),VA={kernelName:Xy,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:i,bias:s,alpha:o,beta:u}=n;return{x:()=>WA(r,a,e,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UA(e,t,n,r){return t.rank<n.rank&&(t=jI(t,UC(t.shape,r))),e.rank<n.rank&&(e=jI(e,UC(e.shape,r))),{x:()=>yI(e,sI($C(n,t),e.dtype))}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:Qy,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,i=t[0],s=UA(e,t[1],i,Hg(a,i.shape));return{x:()=>s.x()}}},HA={kernelName:Jy,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>yI(e,sI(dS(n,r),"float32")),b:()=>yI(e,sI(yS(n,r),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA=xk({maxPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i,s){const o=yk(e,"dy","maxPool3dGrad"),u=yk(t,"input","maxPool3dGrad"),l=yk(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=jI(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=jI(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=jI(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),Og(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Og(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Og(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),HI("maxPool3dGrad",i,s);const f={dy:c,input:h,output:d},m={filterSize:r,strides:a,pad:i,dimRoundingMode:s},g=ck.runKernel(nb,f,m);return p?jI(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),qA={kernelName:tb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n;return{x:()=>jA(e,r,a,i,s,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA=xk({maxPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,i,s){const o=yk(e,"dy","maxPoolGrad"),u=yk(t,"input","maxPoolGrad"),l=yk(n,"output","maxPoolGrad");Og(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),Og(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Og(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),HI("maxPoolGrad",i,s);const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:i,dimRoundingMode:s};return ck.runKernel(eb,c,h)}}),XA={kernelName:Zy,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:i,strides:s,pad:o}=n;return{x:()=>KA(e,r,a,i,s,o)}}},YA={kernelName:ab,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,i=Hg(a,r.shape),s=Pg(VC(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=jI(e,t);return vI(yI(n,BS(r.shape,"float32")),s)}}}},QA={kernelName:ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[i,s]=t,o=UA(e,s,i,Hg(a,i.shape));return{x:()=>o.x()}}},JA={kernelName:sb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>yI(e,sI(bS(n,r),"float32")),b:()=>yI(e,sI(hS(n,r),"float32"))}}},ZA={kernelName:ob,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>JI(e,i,r.shape)}}},eD={kernelName:ub,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{const t=AC(n.shape,a);return t.length>0?jI(eS(e,t),n.shape):e},b:()=>{const t=yI(e,CS(lS(vI(n,r)))),i=AC(r.shape,a);return i.length>0?jI(eS(t,i),r.shape):t}}}},tD={kernelName:cb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{const t=yI(e,sI(r,"float32")),i=AC(n.shape,a);return i.length>0?jI(eS(t,i),n.shape):t},b:()=>{const t=yI(e,sI(n,"float32")),i=AC(r.shape,a);return i.length>0?jI(eS(t,i),r.shape):t}}}},nD={kernelName:vb,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>PS(n.shape,"float32")}}},rD={kernelName:yb,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return nT(e,r).map((e=>()=>e))}},aD={kernelName:bb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,i=a.map((e=>e[0]));return{x:()=>JI(e,i,r.shape)}}},iD={kernelName:xb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,i=n,s=r,o=DC(i.shape,s.shape);return{a:()=>{const t=sI(s,"float32");let n=yI(e,yI(t,YC(i,TS(t,QC(1)))));const r=AC(i.shape,o);return r.length>0&&(n=eS(n,r)),jI(n,i.shape)},b:()=>{const t=hS(i,0),n=FC(t,wS(i),_C(i));let r=yI(e,yI(a,n));const u=AC(s.shape,o);return u.length>0&&(r=eS(r,u)),jI(r,s.shape)}}}},sD={kernelName:wb,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=hS(n,0);return{x:()=>FC(a,e,yI(e,r)),alpha:()=>{let t=FC(a,_C(e),yI(e,n));const i=AC(r.shape,e.shape);return i.length>0&&(t=eS(t,i)),jI(t,r.shape)}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(e,t,n){const r=e.shape.length,a=r-n.length,i=HC(n,r);let s=e;null!=i&&(s=aT(e,i));const o=s.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n){const r=e.shape.slice();r[n]=1;const a=jI(t,r),i=IC(e,n,!0,!1),s=IC(e,n,!0,!0),o=yI(i,s);return yI(a,o)}(s.reshape(o),t,a);if(l=l.reshape(s.shape),null!=i){const e=jC(i);l=aT(l,e)}return l}const uD={kernelName:kb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let i=[];return i=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>oD(r,e,i)}}},lD={kernelName:my,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{const t=vI(e,sI(r,"float32")),i=AC(n.shape,a);return i.length>0?jI(eS(t,i),n.shape):t},b:()=>{let t=yI(e,sI(n,"float32"));const i=AC(r.shape,a);i.length>0&&(t=jI(eS(t,i),r.shape));const s=ZC(r);return CS(vI(t,sI(s,"float32")))}}}},cD={kernelName:Eb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,CS(ZC(n)))}}},hD={kernelName:Ob,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=yI(bS(n,6),HN(n));return{x:()=>yI(e,sI(r,"float32"))}}},dD={kernelName:Rb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,sI(HN(n),"float32"))}}},pD={kernelName:Ab,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>jI(e,n.shape)}}},fD={kernelName:Fb,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ck.runKernel(_b,a,n)}}},mD={kernelName:Db,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>ck.runKernel($b,a,n)}}},gD={kernelName:Pb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>CS(vI(e,yI(YC(n,1.5),2)))}}},vD={kernelName:Vb,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>sI(_C(n),"float32"),t:()=>yI(e,sI(n,e.dtype)),e:()=>yI(e,sI(DS(n),e.dtype))}}},yD={kernelName:Ub,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=hS(n,QC(0)),r=QC(YE),a=QC(QE),i=yI(e,a),s=yI(yI(e,r),aS(sI(n,"float32")));return FC(t,i,s)}}}},bD={kernelName:Kb,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,yI(n,TS(QC(1),n)))}}},xD={kernelName:Hb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(wC(sI(n,"float32")),e)}}},wD={kernelName:jb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(kC(sI(n,"float32")),e)}}},kD={kernelName:Gb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:i}=n,s=r.shape,[o,u]=EE(r,a,i),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],s[t]-o[t]-u[t]]);return{x:()=>qS(e,l)}}},ID={kernelName:ex,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,i=yI(e,r);return{logits:()=>TS(i,yI(eS(i,[a],true),r))}}},CD={kernelName:Xb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,QI(n))}}},SD={kernelName:Jb,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>eC(e,r,a)}}},ND={kernelName:Zb,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>XI(e,r)}}},TD={kernelName:Yb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,yI(JC(sI(n,"float32")),2))}}},ED={kernelName:ox,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(e,yI(sI(n,"float32"),2))}}},RD={kernelName:sx,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=QC(2);return{a:()=>yI(e,yI(a,TS(n,r))),b:()=>yI(e,yI(a,TS(r,n)))}}},AD={kernelName:px,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=DC(n.shape,r.shape);return{a:()=>{let t=e;const r=AC(n.shape,a);return r.length>0&&(t=eS(t,r)),jI(t,n.shape)},b:()=>{let t=e;const n=AC(r.shape,a);return n.length>0&&(t=eS(t,n)),jI(CS(t),r.shape)}}}},DD={kernelName:Qb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:i}=n;Hg(i,r.shape).forEach((e=>{a[e]=1}));const s=jI(e,a),o=yI(s,BS(r.shape,"float32"));return{x:()=>o}}},$D={kernelName:fx,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>vI(e,ZC(wC(n)))}}},FD={kernelName:mx,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yI(TS(QC(1),ZC(n)),e)}}},_D={kernelName:gx,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=_C(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=mI(t,JI(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)t=mI(t,JI(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)t=mI(t,JI(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let i=0;i<a[1];++i)for(let s=0;s<a[2];++s)for(let o=0;o<a[3];++o)t=mI(t,JI(e,[n*r.shape[0],i*r.shape[1],s*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},OD={kernelName:kx,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=MS(t,_C(t)),r=cS(e,n);let a=dS(t,QC(0,"int32"));const i=r.rank-a.rank;for(let e=0;e<i;++e)a=iS(a,e+1);a=AS(a,BS(r.shape,"bool"));const s=_C(r);return FC(a,r,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,n)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MD=[VR,UR,GR,HR,jR,qR,KR,XR,YR,QR,JR,ZR,tA,rA,aA,iA,sA,oA,uA,lA,cA,hA,pA,dA,mA,gA,vA,yA,bA,xA,lD,wA,kA,IA,CA,SA,TA,NA,EA,RA,$A,FA,_A,OA,MA,LA,PA,BA,zA,VA,GA,GA,HA,qA,XA,YA,QA,JA,ZA,eD,tD,{kernelName:hb,gradFunc:e=>({x:()=>CS(e)})},nD,{kernelName:gb,gradFunc:e=>({x:()=>_C(e)})},rD,aD,aD,iD,sD,uD,cD,hD,dD,pD,fD,mD,{kernelName:Mb,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Hg(r,e.shape);return{x:()=>CN(e,a)}}},{kernelName:Lb,gradFunc:e=>({x:()=>_C(e)})},gD,vD,yD,bD,{kernelName:qb,gradFunc:e=>({x:()=>_C(e)})},xD,wD,kD,ID,CD,SD,SD,ND,ND,TD,RD,ED,{kernelName:Cx,gradFunc:e=>({x:()=>_C(e)})},AD,DD,$D,FD,_D,{kernelName:bx,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,i=jC(a);return{x:()=>aT(e,i)}}},{kernelName:wx,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>GN(e,a)}}},OD,{kernelName:Ix,gradFunc:e=>({x:()=>_C(e)})}];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of MD)Mx(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Hw().prototype.abs=function(){return this.throwIfDisposed(),bI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.acos=function(){return this.throwIfDisposed(),xI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.acosh=function(){return this.throwIfDisposed(),wI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.add=function(e){return this.throwIfDisposed(),mI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.all=function(e,t){return this.throwIfDisposed(),kI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.any=function(e,t){return this.throwIfDisposed(),II(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.argMax=function(e){return this.throwIfDisposed(),CI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.argMin=function(e){return this.throwIfDisposed(),SI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.asScalar=function(){return this.throwIfDisposed(),Og(1===this.size,(()=>"The array must have only 1 element.")),jI(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.asType=function(e){return this.throwIfDisposed(),sI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.as1D=function(){return this.throwIfDisposed(),jI(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.as2D=function(e,t){return this.throwIfDisposed(),jI(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),jI(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),jI(this,[e,t,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),jI(this,[e,t,n,r,a])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.asin=function(){return this.throwIfDisposed(),NI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.asinh=function(){return this.throwIfDisposed(),TI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.atan=function(){return this.throwIfDisposed(),EI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.atan2=function(e){return this.throwIfDisposed(),RI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.atanh=function(){return this.throwIfDisposed(),AI(this)},Hw().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),qI(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),eC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),tC(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.broadcastTo=function(e){return this.throwIfDisposed(),sC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.cast=function(e){return this.throwIfDisposed(),sI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.ceil=function(){return this.throwIfDisposed(),oC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),lC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Gw&&(e=[e]),XI([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.conv1d=function(e,t,n,r,a,i){return this.throwIfDisposed(),mC(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),vC(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.conv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),fC(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.cos=function(){return this.throwIfDisposed(),wC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.cosh=function(){return this.throwIfDisposed(),kC(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),IC(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),CC(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),NC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.depthwiseConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),TC(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),EC(this,e,t,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.divNoNan=function(e){return this.throwIfDisposed(),OC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.div=function(e){return this.throwIfDisposed(),vI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.dot=function(e){return this.throwIfDisposed(),MC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.elu=function(){return this.throwIfDisposed(),PC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.equal=function(e){return this.throwIfDisposed(),$C(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.erf=function(){return this.throwIfDisposed(),BC(this)},
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),rS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.exp=function(){return this.throwIfDisposed(),aS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.expandDims=function(e){return this.throwIfDisposed(),iS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.expm1=function(){return this.throwIfDisposed(),sS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.fft=function(){return this.throwIfDisposed(),LN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.flatten=function(){return this.throwIfDisposed(),jI(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.floor=function(){return this.throwIfDisposed(),lS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.floorDiv=function(e){return this.throwIfDisposed(),gI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.gather=function(e,t,n){return this.throwIfDisposed(),cS(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.greaterEqual=function(e){return this.throwIfDisposed(),dS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.greater=function(e){return this.throwIfDisposed(),hS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.ifft=function(){return this.throwIfDisposed(),PN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.irfft=function(){return this.throwIfDisposed(),BN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.isFinite=function(){return this.throwIfDisposed(),fS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.isInf=function(){return this.throwIfDisposed(),mS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.isNaN=function(){return this.throwIfDisposed(),gS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.leakyRelu=function(e){return this.throwIfDisposed(),vS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.lessEqual=function(e){return this.throwIfDisposed(),bS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.less=function(e){return this.throwIfDisposed(),yS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),xS(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logSigmoid=function(){return this.throwIfDisposed(),NS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ES(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),RS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.log=function(){return this.throwIfDisposed(),wS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.log1p=function(){return this.throwIfDisposed(),kS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logicalAnd=function(e){return this.throwIfDisposed(),AS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logicalNot=function(){return this.throwIfDisposed(),DS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logicalOr=function(e){return this.throwIfDisposed(),$S(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.logicalXor=function(e){return this.throwIfDisposed(),FS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),YI(this,e,t,n)},Hw().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),_S(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.max=function(e,t){return this.throwIfDisposed(),KC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.maximum=function(e){return this.throwIfDisposed(),MS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.mean=function(e,t){return this.throwIfDisposed(),LS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.min=function(e,t){return this.throwIfDisposed(),XC(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.minimum=function(e){return this.throwIfDisposed(),zS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),WS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.mod=function(e){return this.throwIfDisposed(),VS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.mul=function(e){return this.throwIfDisposed(),yI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.neg=function(){return this.throwIfDisposed(),CS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.norm=function(e,t,n){return this.throwIfDisposed(),nS(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.notEqual=function(e){return this.throwIfDisposed(),GS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),HS(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.onesLike=function(){return this.throwIfDisposed(),jS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.pad=function(e,t){return this.throwIfDisposed(),qS(this,e,t)},Hw().prototype.pool=function(e,t,n,r,a,i){return this.throwIfDisposed(),XS(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.pow=function(e){return this.throwIfDisposed(),YC(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.prelu=function(e){return this.throwIfDisposed(),YS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.prod=function(e,t){return this.throwIfDisposed(),QS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.reciprocal=function(){return this.throwIfDisposed(),wN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.relu=function(){return this.throwIfDisposed(),kN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.relu6=function(){return this.throwIfDisposed(),IN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.reshapeAs=function(e){return this.throwIfDisposed(),jI(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.reshape=function(e){return this.throwIfDisposed(),jI(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),MT(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),LT(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.reverse=function(e){return this.throwIfDisposed(),CN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.rfft=function(){return this.throwIfDisposed(),WN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.round=function(){return this.throwIfDisposed(),SN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.rsqrt=function(){return this.throwIfDisposed(),NN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.selu=function(){return this.throwIfDisposed(),TN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.separableConv2d=function(e,t,n,r,a,i){return this.throwIfDisposed(),EN(this,e,t,n,r,a,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sigmoid=function(){return this.throwIfDisposed(),QI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sign=function(){return this.throwIfDisposed(),RN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sin=function(){return this.throwIfDisposed(),AN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sinh=function(){return this.throwIfDisposed(),DN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.slice=function(e,t){return this.throwIfDisposed(),JI(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.softmax=function(e){return this.throwIfDisposed(),MN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.softplus=function(){return this.throwIfDisposed(),SS(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),KS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.split=function(e,t){return this.throwIfDisposed(),zN(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sqrt=function(){return this.throwIfDisposed(),JC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.square=function(){return this.throwIfDisposed(),ZC(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.squaredDifference=function(e){return this.throwIfDisposed(),VN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.squeeze=function(e){return this.throwIfDisposed(),UN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Gw?[this,e]:[this,...e];return GN(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.step=function(e){return this.throwIfDisposed(),HN(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.stridedSlice=function(e,t,n,r,a,i,s,o){return this.throwIfDisposed(),jN(this,e,t,n,r,a,i,s,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sub=function(e){return this.throwIfDisposed(),TS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.sum=function(e,t){return this.throwIfDisposed(),eS(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.tan=function(){return this.throwIfDisposed(),qN(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.tanh=function(){return this.throwIfDisposed(),ZI(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.tile=function(e){return this.throwIfDisposed(),oS(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.toBool=function(){return this.throwIfDisposed(),sI(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.toFloat=function(){return this.throwIfDisposed(),sI(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.toInt=function(){return this.throwIfDisposed(),sI(this,"int32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.topk=function(e,t){return this.throwIfDisposed(),JN(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.transpose=function(e){return this.throwIfDisposed(),aT(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.unique=function(e){return this.throwIfDisposed(),eT(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),tT(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.unstack=function(e){return this.throwIfDisposed(),nT(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.where=function(e,t){return this.throwIfDisposed(),FC(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Hw().prototype.zerosLike=function(){return this.throwIfDisposed(),_C(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class LD extends Error{constructor(e){super(e),Object.setPrototypeOf(this,LD.prototype)}}class PD extends Error{constructor(e){super(e),Object.setPrototypeOf(this,PD.prototype)}}class BD extends Error{constructor(e){super(e),Object.setPrototypeOf(this,BD.prototype)}}class zD extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zD.prototype)}}class WD extends Error{constructor(e){super(e),Object.setPrototypeOf(this,WD.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class VD{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UD(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function GD(e,t){if(!e)throw new WD(t)}function HD(e,t){let n=0;for(const r of e)r===t&&n++;return n}function jD(e){return 1===e.length?e[0]:e}function qD(e){return Array.isArray(e)?e:[e]}function KD(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function XD(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let YD={};function QD(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function JD(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>JD(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?JD(t):e[n]=t.value)}}}function ZD(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let i;if(a in n)i=n[a];else if(a in YD)i=YD[a];else if(i=t[a],null==i)throw new BD(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new BD(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const s=i.className;let o,u;if(s in n?[o,u]=n[s]:s in YD?[o,u]=YD.className:s in t&&([o,u]=t[s]),null==o)throw new BD(`Unknown ${r}: ${s}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(YD))e[t]=YD[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},YD);for(const e of Object.keys(n))YD[e]=n[e];JD(i.config);const r=u(o,i.config,n,a);return YD=Object.assign({},t),r}{const e=Object.assign({},YD);for(const e of Object.keys(n))YD[e]=n[e];const t=new o(i.config);return YD=Object.assign({},e),t}}}function e$(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function t$(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function n$(e){if(null==e)throw new BD(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function r$(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new BD(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function a$(e,t,n=0,r=1/0){return GD(n>=0),GD(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function i$(e,t){Array.isArray(e)?(Og(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>i$(e,`element ${n+1} of ${t}`)))):Og(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${s$(e)}.`))}function s$(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>s$(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function o$(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let u$=0;function l$(){return u$++}const c$={};function h$(e=""){return e in c$||(c$[e]=0),c$[e]+=1,e+c$[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const d$=["channelsFirst","channelsLast"],p$=["nearest","bilinear"],f$=["valid","same","causal"],m$=["max","avg"],g$=["sum","mul","concat","ave"],v$=new Map;function y$(e){r$(d$,"DataFormat",e)}function b$(e){r$(f$,"PaddingMode",e)}function x$(e){r$(m$,"PoolMode",e)}const w$=[],k$="/";function I$(e,t){w$.push(e);try{const e=t();return w$.pop(),e}catch(e){throw w$.pop(),e}}function C$(e){if(!T$(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===w$.length?"":w$.join(k$)+k$)+e}function S$(e){if(!T$(e))throw new Error("Not a valid tensor name: '"+e+"'");v$.has(e)||v$.set(e,0);const t=v$.get(e);if(v$.set(e,v$.get(e)+1),t>0){const n=`${e}_${t}`;return v$.set(n,1),n}return e}const N$=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function T$(e){return!!e.match(N$)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function E$(e){return e===parseInt(e.toString(),10)}function R$(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function A$(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function D$(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function $$(e,t){if(t<e)throw new BD(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let F$;function _$(){return null==F$&&(F$=ck.backend.epsilon()),F$}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function O$(e,t){return sI(e,t)}function M$(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),jI(e,n)}function L$(e,t,n){return hI((()=>{switch(e.rank){case 1:return $N(e,t,n);case 2:return FN(e,[t,0],[n,e.shape[1]]);case 3:return _N(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ON(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return JI(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return JI(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new BD(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function P$(e,t,n){return hI((()=>{switch(e.rank){case 1:return $N(e,t,n);case 2:return FN(e,[0,t],[e.shape[0],n]);case 3:return _N(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ON(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new BD(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function B$(e,t,n,r){return hI((()=>{switch(e.rank){case 1:return $N(e,t,n);case 2:switch(r){case 1:return L$(e,t,n);case 2:return P$(e,t,n);default:throw new BD(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return L$(e,t,n);case 2:return _N(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return P$(e,t,n);default:throw new BD(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return L$(e,t,n);case 2:return ON(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ON(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return P$(e,t,n);default:throw new BD(`The axis is not within the rank of the tensor ${r}`)}default:throw new BD(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function z$(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),XI(e,t)}function W$(e,t){switch(e.rank){case 1:return cC([e,t]);case 2:return hC([e,t],0);case 3:return dC([e,t],0);case 4:return pC([e,t],0);default:throw new BD(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function V$(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new BD(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return oS(e,t)}function U$(e,t=0,n=1,r,a){return vN(e,t,n,r,a)}function G$(e,t,n,r){if(e.rank<2||t.rank<2)throw new zD(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new zD(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return fT({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?q$(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=jI(e,[-1,i]);const s=t.shape.slice(),o=s.pop(),u=s.pop(),l=[...s,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=jI(aT(t,c),[u,-1]);const h=[...a,...l];return jI(fT({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?q$(e.rank,r,"channelsLast"):null,activation:n}),h)}}function H$(e,t,n){return hI((()=>(t=Array.isArray(t)?KN(t,"int32"):sI(t,"int32"),cS(e,t,n))))}function j$(e){return yI(e,e)}function q$(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new BD(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?jI(t,[1,r[0],1,1,1]):jI(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?jI(t,[1,1,1,1,r[0]]):jI(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?jI(t,[1,r[0],1,1]):jI(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?jI(t,[1,1,1,r[0]]):jI(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?jI(t,[1,r[0],1]):jI(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?jI(t,[1,1,r[0]]):jI(t,[1].concat(r))}else if(e<3)return t;throw new BD(`Unsupported input rank by biasAdd: ${t.rank}`)}function K$(e,t,n){return hI((()=>(null==n&&(n="channelsLast"),y$(n),mI(e,q$(e.rank,t,n)))))}function X$(e,t,n,r){return hI((()=>iT(e,t,n,r)))}function Y$(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Q$=["fanIn","fanOut","fanAvg"],J$=["normal","uniform","truncatedNormal"];class Z$ extends XT{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class eF extends Z${apply(e,t){return PS(e,t)}}eF.className="Zeros",QT(eF);class tF extends Z${apply(e,t){return BS(e,t)}}tF.className="Ones",QT(tF);class nF extends Z${constructor(e){if(super(),"object"!=typeof e)throw new BD(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new BD(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return hI((()=>yI(QC(this.value),BS(e,t))))}getConfig(){return{value:this.value}}}nF.className="Constant",QT(nF);class rF extends Z${constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return yN(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}rF.className="RandomUniform",QT(rF);class aF extends Z${constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zD(`randomNormal does not support dType ${t}.`);return U$(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}aF.className="RandomNormal",QT(aF);class iF extends Z${constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zD(`truncatedNormal does not support dType ${t}.`);return ZN(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}iF.className="TruncatedNormal",QT(iF);class sF extends Z${constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return hI((()=>{if(2!==e.length||e[0]!==e[1])throw new BD("Identity matrix initializer can only be used for 2D square matrices.");return yI(this.gain,uS(e[0]))}))}getConfig(){return{gain:this.gain}}}sF.className="Identity",QT(sF);class oF extends Z${constructor(e){if(super(),e.scale<0)throw new BD(`scale must be a positive float. Got: ${e.scale}`);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,r$(Q$,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){r$(J$,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(y$(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=R$(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=R$(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=R$(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zD(`${this.getClassName()} does not support dType ${t}.`);return ZN(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return yN(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}oF.className="VarianceScaling",QT(oF);class uF extends oF{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oF.className}}uF.className="GlorotUniform",QT(uF);class lF extends oF{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oF.className}}lF.className="GlorotNormal",QT(lF);class cF extends oF{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oF.className}}cF.className="HeNormal",QT(cF);class hF extends oF{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oF.className}}hF.className="HeUniform",QT(hF);class dF extends oF{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oF.className}}dF.className="LeCunNormal",QT(dF);class pF extends oF{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oF.className}}pF.className="LeCunUniform",QT(pF);class fF extends Z${constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return hI((()=>{if(e.length<2)throw new zD("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=Pg(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);const i=U$([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),s=jT.qr(i,!1);let o=s[0];const u=s[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=yI(o,u.sign()),n<r&&(o=o.transpose()),yI(QC(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}fF.className="Orthogonal",QT(fF);const mF={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gF(e,t={}){return ZD(e,YT.getMap().classNameMap,t,"initializer")}function vF(e){return QD(e)}function yF(e){if("string"==typeof e){const t=e in mF?mF[e]:e;if("GlorotNormal"===t)return new lF;if("GlorotUniform"===t)return new uF;if("HeNormal"===t)return new cF;if("HeUniform"===t)return new hF;if("LeCunNormal"===t)return new dF;if("LeCunUniform"===t)return new pF;{const e={};return e.className=t,e.config={},gF(e)}}return e instanceof Z$?e:gF(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bF(e){return Array.isArray(e)&&Array.isArray(e[0])}function xF(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function wF(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new BD(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function kF(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new BD(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function IF(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const CF="Variable";class SF{constructor(e,t="float32",n=CF,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=l$(),n=null==n?CF:n,this.originalName=C$(n),this.name=S$(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return ck.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function NF(e){return e.map((e=>e.read()))}function TF(e){e.forEach((e=>{e[0].write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EF{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class RF{constructor(e,t,n,r,a,i,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=s,this.id=l$(),null!=i&&(this.originalName=C$(i),this.name=S$(this.originalName)),this.rank=t.length}}let AF=0;class DF{constructor(e,t){this.callArgs=t,this.id=AF++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let $F=0;class FF extends XT{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$F++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=KD(e)+"_"+h$(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new PD(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new BD(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return jD(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return jD(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new LD(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new LD(`Layer ${this.name} is not connected, no input to return.`);return jD(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new LD(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new LD(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return jD(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=qD(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=qD(this.inputSpec);if(t.length!==n.length)throw new BD(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],a=n[e];if(null==a)continue;const i=r.rank;if(null!=a.ndim&&i!==a.ndim)throw new BD(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(null!=a.maxNDim&&i>a.maxNDim)throw new BD(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(null!=a.minNDim&&i<a.minNDim)throw new BD(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new BD(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const n in a.axes){const r=Number(n),i=a.axes[n],s=r>=0?t[r]:t[t.length+r];if(null!=i&&-1===[i,null].indexOf(s))throw new BD(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const n=a.shape[t],i=r.shape[t];if(null!=n&&null!=i&&n!==i)throw new BD(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=qD(e),r=function(e){let t=!0;for(const n of qD(e))if(!(n instanceof RF)){t=!1;break}return t}(e),a=function(e){let t=!0;for(const n of qD(e))if(n instanceof RF){t=!1;break}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(e);if(r===a)throw new BD("Arguments to apply() must be all SymbolicTensors or all Tensors");return I$(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of qD(e))t.push(n.shape);this.build(jD(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const a=qD(r),i=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=jD(i),null!=this.activityRegularizer)throw new zD("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=qD(e);const t=[];for(const n of e)t.push(n.shape);return jD(t)}(e),r=this.computeOutputShape(n);let a;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new RF(i,n,this,qD(e),t,this.name,r))):new RF(i,r,this,qD(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new zD("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new LD(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new LD(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new PD(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return IF(this.weights)}build(e){this.built=!0}getWeights(e=!1){return NF(e?this.trainableWeights:this.weights)}setWeights(e){hI((()=>{const t=this.weights;if(t.length!==e.length)throw new BD(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=NF(t);for(let a=0;a<r.length;++a){const i=r[a],s=t[a],o=e[a];if(!Bg(i.shape,o.shape))throw new BD(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([s,o])}TF(n)}))}addWeight(e,t,n,r,a,i,s,o){if(-1!==this._addedWeightNames.indexOf(e))throw new BD(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():yF("zeros"));const u=r.apply(t,n),l=new SF(u,n,e,i,s);return u.dispose(),null!=a&&this.addLoss((()=>a.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=qD(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),a=qD(t),i=qD(r);if(a.length!==i.length)throw new Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=i[e]}addInboundNode(e,t,n,r,a,i,s=null){const o=qD(e);t=qD(t),n=qD(n),r=qD(r),a=xF(a),i=xF(i);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new DF({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:i},s);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function _F(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=_F(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class OF extends FF{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:h$("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new BD("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new BD("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new BD("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new RF(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new DF({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new BD(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}OF.className="InputLayer",QT(OF);class MF{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof MF)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new BD(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return sI(t,e.dtype)}catch(n){throw new BD(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof RF){if(null==this.id2Value[e.id])throw new BD(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new BD(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof RF){if(null==this.id2Value[e.id])throw new BD(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new BD(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&dI(this.id2Mask)}}const LF=new VD,PF=new VD;function BF(e,t,n,r){const a=null!=n&&n.training,i=Array.isArray(e),s=i?e:[e],o=s.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=LF.get(c);if(null==d){const e=function(e,t){Og(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=WF(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const i of e){const{sorted:e,recipientMap:s}=WF(i,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in s)null==r[e]&&(r[e]=new Set),s[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:zF(r)}}(s,t);d=e.sorted,h=e.recipientCounts,LF.put(c,d),PF.put(c,h)}h={},a||Object.assign(h,PF.get(c));const p=new MF(t);for(let e=0;e<d.length;++e){if(null!=r){const e=cI().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=d[e],s=i.sourceLayer;if(s instanceof OF)continue;const l=[],c=[],f=[];let m=!1;for(const e of i.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=qD(s.apply(l,n));let v=null;s.supportsMasking&&(v=s.computeMask(l,c));const y=VF(i),b=Array.isArray(y)?y:[y];for(let e=0;e<b.length;++e){p.hasKey(b[e])||p.add(b[e],g[e],Array.isArray(v)?v[0]:v);const t=o.indexOf(b[e].name);-1!==t&&(u[t]=g[e])}a||dI(f)}return p.disposeMasks(),i?u:u[0]}function zF(e){const t={};for(const n in e)t[n]=e[n].size;return t}function WF(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const i=[],s=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=s[s.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&s.pop();else{s.push(i.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:a}}function VF(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function UF(e,t){return hI((()=>JC(eS(yI(e,e),t,!0))))}mv().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=LF&&LF.setMaxEntries(e),null!=PF&&PF.setMaxEntries(e)}));class GF extends XT{getConfig(){return{}}}class HF extends GF{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hI((()=>{const t=UF(e,this.axis),n=lC(t,0,this.maxValue);return yI(e,vI(n,mI(_$(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}HF.className="MaxNorm",QT(HF);class jF extends GF{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hI((()=>vI(e,mI(_$(),UF(e,this.axis)))))}getConfig(){return{axis:this.axis}}}jF.className="UnitNorm",QT(jF);class qF extends GF{apply(e){return kN(e)}}qF.className="NonNeg",QT(qF);class KF extends GF{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hI((()=>{const t=UF(e,this.axis),n=mI(yI(this.rate,lC(t,this.minValue,this.maxValue)),yI(1-this.rate,t));return yI(e,vI(n,mI(_$(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}KF.className="MinMaxNorm",QT(KF);const XF={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function YF(e){return QD(e)}function QF(e,t={}){return ZD(e,YT.getMap().classNameMap,t,"constraint")}function JF(e){if(null==e)return null;if("string"==typeof e){return QF({className:e in XF?XF[e]:e,config:{}})}return e instanceof GF?e:QF(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ZF(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const i=e[a];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];dI(r)}}function e_(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var t_;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(t_||(t_={}));class n_{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class r_{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class a_ extends n_{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=hI((()=>mI(this.totals[e],yI(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:hI((()=>{const n=yI(vI(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),pI(t[e])})))}}class i_ extends n_{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let i=0;i<a.length;++i)if("number"!=typeof a[i]){const s=a[i];e.push(s.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class s_ extends n_{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_E,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Jg(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Sw();return(...i)=>{const s=null!=n?n():Sw();return s-a<t||(a=s,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await ZF(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ZF(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await ZF(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ZF(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await ZF(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Jg(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ZF(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ZF(e),await this.trainEnd(e))}}function o_(e,t){if(null==e&&(e={}),e instanceof n_)return[e];if(Array.isArray(e)&&e[0]instanceof n_)return e;return qD(e).map((e=>new s_(e,t)))}class u_{constructor(){}static registerCallbackConstructor(e,t){Og(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),u_.checkForDuplicate(t),null==u_.constructors[e]&&(u_.constructors[e]=[]),u_.constructors[e].push(t)}static checkForDuplicate(e){for(const t in u_.constructors){u_.constructors[+t].forEach((t=>{if(t===e)throw new BD("Duplicate callback constructor.")}))}}static clear(){u_.constructors={}}static createCallbacks(e){const t=[];for(const n in u_.constructors){const r=+n;e>=r&&t.push(...u_.constructors[r])}return t.map((e=>new e))}}function l_(e,t,n,r,a,i,s,o,u){const l=new i_,c=[new a_,...u_.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new r_(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:i,batchSize:s,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function c_(e,t={},n=!1){return ZD(e,YT.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h_(e,t){return hI((()=>{"float32"!==e.dtype&&(e=sI(e,"float32"));const n=eS(j$(e),t,!0),r=uC(n.shape,_$()),a=JC(MS(n,r));return vI(e,a)}))}function d_(e,t){return hI((()=>LS(j$(TS(t,e)),-1)))}function p_(e,t){return hI((()=>LS(bI(TS(t,e)),-1)))}function f_(e,t){return hI((()=>{const n=TS(e,t),r=lC(bI(e),_$(),Number.MAX_VALUE),a=bI(vI(n,r));return yI(100,LS(a,-1))}))}function m_(e,t,n=!1){return hI((()=>{if(n)t=MN(t);else{const e=eS(t,t.shape.length-1,!0);t=vI(t,e)}return t=lC(t,_$(),1-_$()),CS(eS(yI(sI(e,"float32"),wS(t)),t.shape.length-1))}))}function g_(e,t,n=!1){return hI((()=>{const r=sI(lS(function(e){const t=[R$(e.shape)];return jI(e,t)}(e)),"int32"),a=(t=lC(t,_$(),1-_$())).shape;return m_(jI(HS(r,a[a.length-1]),a),t,n)}))}function v_(e,t){return hI((()=>{let n;return n=lC(t,_$(),1-_$()),n=wS(vI(n,TS(1,n))),LS(function(e,t){if(!Bg(e.shape,t.shape))throw new BD(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return hI((()=>{const n=kN(t),r=CS(bI(t));return mI(TS(n,yI(t,e)),kS(aS(r)))}))}(e,n),-1)}))}function y_(e,t){return hI((()=>{const n=h_(e,-1),r=h_(t,-1),a=yI(n,r);return CS(eS(a,-1))}))}u_.constructors={};const b_={meanSquaredError:d_,meanAbsoluteError:p_,meanAbsolutePercentageError:f_,meanSquaredLogarithmicError:function(e,t){return hI((()=>{const n=lC(t,_$(),Number.MAX_VALUE),r=wS(mI(1,n)),a=lC(e,_$(),Number.MAX_VALUE),i=wS(mI(1,a));return LS(j$(TS(r,i)),-1)}))},squaredHinge:function(e,t){return hI((()=>{const n=MS(0,TS(1,yI(e,t)));return LS(j$(n),-1)}))},hinge:function(e,t){return hI((()=>{const n=MS(0,TS(1,yI(e,t)));return LS(n,-1)}))},categoricalHinge:function(e,t){return hI((()=>{const n=eS(yI(e,t),-1),r=KC(yI(TS(1,e),t),-1);return MS(0,mI(1,TS(r,n)))}))},logcosh:function(e,t){return hI((()=>{const n=Math.log(2),r=TS(t,e),a=TS(mI(r,SS(yI(-2,r))),n);return LS(a,-1)}))},categoricalCrossentropy:m_,sparseCategoricalCrossentropy:g_,binaryCrossentropy:v_,kullbackLeiblerDivergence:function(e,t){return hI((()=>{const n=lC(e,_$(),1),r=lC(t,_$(),1);return eS(yI(e,wS(vI(n,r))),-1)}))},poisson:function(e,t){return hI((()=>{const n=wS(mI(_$(),t));return LS(TS(t,yI(e,n)),-1)}))},cosineProximity:y_};function x_(e){if("string"==typeof e){if(e in b_)return b_[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new BD(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w_(e,t){return hI((()=>{const n=yI(.5,jS(t)),r=O$(hS(t,n),e.dtype);return LS($C(e,r),-1)}))}function k_(e,t){return hI((()=>O$($C(CI(e,-1),CI(t,-1)),"float32")))}function I_(e,t){return v_(e,t)}function C_(e,t){return e.rank===t.rank&&(e=UN(e,[e.rank-1])),(t=CI(t,-1)).dtype!==e.dtype&&(t=sI(t,e.dtype)),sI($C(e,t),"float32")}const S_=m_,N_=g_,T_={binaryAccuracy:w_,categoricalAccuracy:k_,precision:function(e,t){return hI((()=>{const n=function(e,t){return hI((()=>sI(eS(AS($C(e,1),$C(t,1))),"float32")))}(e,t),r=function(e,t){return hI((()=>sI(eS(AS($C(e,0),$C(t,1))),"float32")))}(e,t),a=mI(n,r);return sI(FC(hS(a,0),vI(n,a),0),"float32")}))},categoricalCrossentropy:S_,sparseCategoricalCrossentropy:N_,mse:d_,MSE:d_,mae:p_,MAE:p_,mape:f_,MAPE:f_,cosine:y_};function E_(e){if("string"==typeof e&&e in T_)return T_[e];if("string"!=typeof e&&null!=e)return e;throw new BD(`Unknown metric ${e}`)}function R_(e){if(GD(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(b_))if(b_[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(T_))if(T_[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const A_=1048576;function D_(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!$_(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>A_&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function $_(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!$_(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!$_(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function F_(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let s;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){i.push("Receives inputs"),s=[];for(const t in e.nodesByDepth)s.push(...e.nodesByDepth[t])}r("_".repeat(t)),__(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?O_(o[e],n,r):M_(o[e],n,s,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?IF(e.collectedTrainableWeights):IF(e.trainableWeights);return t}(e),l=IF(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function __(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function O_(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}__([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function M_(e,t,n,r){let a,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){i="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const o=e.name,u=e.getClassName(),l=0===s.length?"":s[0];__([`${o} (${u})`,i,a,e.countParams().toString(),l],t,r);for(let e=1;e<s.length;++e)__(["","","","",s[e]],t,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function L_(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function P_(e,t){if(null===e)return null;if("string"==typeof e)return XD(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];L_(t,a,r)?n.push(r):n.push(P_(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=XD(n);t[e]=P_(r,e)}}return t}}function B_(e,t){if(null==e)return null;if("string"==typeof e)return KD(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];L_(t,a,r)?n.push(r):n.push(B_(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=KD(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?B_(r,n):r}return t}}/** @license See the LICENSE file. */const z_="4.13.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class W_ extends FF{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=h$(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],t$(this.inputs).length!==this.inputs.length)throw new BD(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);t$(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;GD(0===n,"input layer has >1 nodes"),GD(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof OF))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},i={},s=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new PD(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(W_.nodeKey(r,a)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],i=l.nodeIndices[e],s=l.tensorIndices[e];o(r,t,n,a,i,s)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=s.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const s=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,s),r[e.outboundLayer.id]=i,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],s=e.nodeIndices[r],o=a.inboundNodes[s],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(a[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(e$);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof W_&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(e$);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new PD(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new PD(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new DF({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new BD("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const a=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);a&&this.parseWeights(e);for(const e of this.layers)for(const[t,i]of e.weights.entries()){const e=a?`${i.name.split("/").slice(0,-1).join("/")+"/"}${t}`:i.originalName;if(null!=n[e])throw new BD(`Duplicate weight name: ${e}`);n[e]=i,r++}const i=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])i.push([n[a],e[r]]);else if(t)throw new BD(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new BD(`${e.length} of ${r} weights are not set: ${e}`)}TF(i)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],a=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");a!==t&&(e[a]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${z_}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=B_(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return hI((()=>{e=qD(e);const n=new MF;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return BF(this.outputs,n,t)}))}computeMask(e,t){return hI((()=>{let n;return e=qD(e),n=null==t?UD(null,e.length):qD(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=xF(e);if(t.length!==this.inputLayers.length)throw new BD(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(e$);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],i=e.nodeIndices[t],s=e.tensorIndices[t],o=n[`${a.name}_${i}_${s}`];r.push(o)}const a=xF(t.computeOutputShape(jD(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${i}_${e}`]=a[e]}}}const a=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;i.push(a)}for(let e=0;e<i.length;e++){const t=i[e];GD(t in n),a.push(n[t])}return jD(a)}runInternalGraph(e,t){null==t&&(t=UD(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],i=e[r],s=t[r];n[a.id]=[i,s]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(e$);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,s,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===i.length){const[e,n]=i[0];null==l.mask&&(l.mask=n),o=qD(t.call(e,l)),u=qD(t.computeMask(e,n)),r=[e],s=[n]}else r=i.map((e=>e[0])),s=i.map((e=>e[1])),null==l.mask&&(l.mask=s),o=qD(t.call(r,l)),u=qD(t.computeMask(r,s));if(t.activityRegularizer)throw new zD("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],i=u[e];n[t.id]=[r,i]}}}}const a=[],i=[],s=[];for(const e of this.outputs){GD(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];s.push(t.shape),a.push(t),i.push(r)}return[a,i,s]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof W_?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=W_.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new BD("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new BD(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new BD(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return hI((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=W_.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=W_.nodeKey(e,n);let s={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),s=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),s={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[W_.nodeKey(a,i)];null==u&&(u=0),e.push([a.name,u,o,s])}i.push(e)}}}const s={};s.name=e.name,s.className=r,s.config=a,s.inboundNodes=i,n.push(s)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],i=W_.nodeKey(n,a);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,s,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=W_.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let s=t[i];null==s&&(s=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,s,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},i={};function s(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in a))return void s(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void s(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(jD(n),r)}function u(e){const n=e.name,i=c_(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),a[n]=i;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new BD(`Corrupted configuration, expected array for nodeData: ${e}`);s(i,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!n$(i);)for(const e of c){const t=a[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];GD(t in a);const i=a[t].inboundNodes[n].outputTensors;h.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];GD(t in a);const i=a[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new BD("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){hI((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function V_(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function U_(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=hI((()=>{if(1===e.shape.length)return oI(e);if(2===e.shape.length){if(e.shape[1]>1){return CI(e,1)}if(1===e.shape[1])return jI(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());dI(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),KN(a,"float32")}return null}function G_(e,t){return yI(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function H_(e,t){let n,r;const a=t;n=a.xs,r=a.ys,Og(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=j_("input",e.inputNames,n),s=j_("output",e.outputNames,r),o=i[0].shape[0];Og(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Og(s.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)Og(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<s.length;t++)Og(s[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:s}}function j_(e,t,n){if(n instanceof Gw)return[n];if(Array.isArray(n))return Og(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new BD(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function q_(e,t,n){const r=null!=n.batchesPerEpoch;if(Og(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Og(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Og(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Og(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Og(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,s;if(a)if(K_(n.validationData))Og(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new zD("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,s=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=o_(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=l_(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=H_(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const s=[];if(null!=n.classWeight){const t=V_(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await U_(a[e],null,t[e]))}const l=r.concat(a).concat(s),p=o(l);dI(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];i[t]=n,pI(n)}await d.onBatchEnd(h,i),e_(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=K_(n.validationData)?qD(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):qD(e.evaluate(i,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function K_(e){return"function"==typeof e.iterator}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function X_(e){Og(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Y_(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>L$(e,t,n-t))):L$(e,t,n-t)}function Q_(e,t){return hI((()=>null==e?null:Array.isArray(e)?e.map((e=>Q_(e,t))):H$(e,"int32"===t.dtype?t:sI(t,"int32"))))}function J_(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Z_(e){const t=[];e instanceof Gw&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(M$(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function eO(e,t){if(null==e)return;const n=[];if(t instanceof Gw)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Gw)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tO(e){return Array.isArray(e)}function nO(e){return!function(e){return e instanceof Gw}(e)&&!tO(e)}function rO(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(tO(e)&&e.length>0)t=!0;else if(nO(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new BD(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(nO(e)){i=[];for(const n of t){if(null==e[n])throw new BD(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(tO(e)){if(e.length!==t.length)throw new BD(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new BD(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=Z_(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new BD(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${s.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const i=s.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new BD(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${s.shape[0]} examples, each with shape [${s.shape.slice(1,s.shape.length)}] (tensor shape [${s.shape}])`)}}return i}function aO(e,t,n,r=!0,a=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new BD(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new BD(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const s=i[e];if(s.shape.length!==n[e].length)throw new BD(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(s.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=s.shape[i],u=n[e][i];if(null!=u&&u!==o)throw new BD(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(s.shape)}.`)}}}class iO extends W_{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new BD("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");F_(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>$E.adagrad(.01),Adadelta:()=>$E.adadelta(1,.95,_$()),Adam:()=>$E.adam(.001,.9,.999,_$()),Adamax:()=>$E.adamax(.002,.9,.999,_$(),0),RMSProp:()=>$E.rmsprop(.001,.9,0,_$()),SGD:()=>$E.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new BD(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof JT))throw new BD("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new BD(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>x_(e)))}else{const n=x_(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new BD(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(x_(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],I$("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};I$("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,i;for(const s of t){if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===v_?-1!==["accuracy","acc"].indexOf(s)?r=w_:-1!==["crossentropy","ce"].indexOf(s)&&(r=I_):this.lossFunctions[e]===g_?-1!==["accuracy","acc"].indexOf(s)?r=C_:-1!==["crossentropy","ce"].indexOf(s)&&(r=N_):-1!==["accuracy","acc"].indexOf(s)?r=k_:-1!==["crossentropy","ce"].indexOf(s)&&(r=S_),-1!==["accuracy","acc"].indexOf(s)?a="acc":-1!==["crossentropy","ce"].indexOf(s)&&(a="ce"),i=r,n=""+a}else{const e=E_(s);i=e,n=""+R_(s)}let t;I$(n,(()=>{t=i})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;X_(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return jD(this.testLoop(t,e,r,n.verbose,n.steps))}finally{eO(a[0],e),eO(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new zD("Verbose mode is not implemented yet.");Og(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const s="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await s.next();if(i=hI((()=>{if(t.value){const{xs:n,ys:r}=H_(e,t.value),s=n.concat(r),l=hI((()=>a(s)));if(dI(s),0===u)for(let e=0;e<l.length;++e)i.push(QC(0));const c=s[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=i[e];i[e]=hI((()=>mI(i[e],yI(c,t)))),u>0&&dI(n)}dI(l),o+=c,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=vI(i[e],o),dI(t)}return jD(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new BD(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new BD(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new BD("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),i=new MF;if(e instanceof Gw&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new BD(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new BD(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const s=BF(a,i);return n?s:s[0]}retrieveSymbolicTensors(e){const t=UD(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],i=a.map((e=>e.name));for(let r=0;r<e.length;++r){const s=i.indexOf(e[r]);if(-1!==s&&(t[r]=a[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new BD(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return hI((()=>{const r=this.checkNumSamples(e);if(n)throw new zD("Verbose predictLoop() is not implemented yet.");const a=J_(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){const n=hI((()=>{const n=a[t][0],r=a[t][1],i=Y_(e,n,r),s=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)s.push({key:this.inputs[e],value:i[e]});else s.push({key:this.inputs[0],value:i});const o=new MF(s);return BF(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return jD(i.map((e=>XI(e,0))))}))}predict(e,t={}){const n=Z_(e);aO(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return X_(e),this.predictLoop(n,e)}finally{eO(n,e)}}predictOnBatch(e){aO(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new PD("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===g_?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=t$(e.map((e=>e.shape[0])));r.sort();const a=t$(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new BD(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new BD(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!Bg(r,a))throw new BD(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=rO(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=rO(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[d_,v_,m_];for(let a=0;a<e.length;++a){const i=e[a],s=t[a],o=n[a];if(null!=s){if(s===m_&&1===i.shape[i.shape.length-1])throw new BD(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(s)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new BD(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new BD(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,i){const[s,o]=this.standardizeUserDataXY(e,t,a,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=V_(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await U_(o[t],null,e[t]))}return[s,o,u]}testLoop(e,t,n,r=0,a){return hI((()=>{const i=this.checkNumSamples(t,n,a,"steps"),s=[];if(r>0)throw new zD("Verbose mode is not implemented yet.");if(null!=a)throw new zD("steps mode in testLoop() is not implemented yet");{const r=J_(i,n),a=KN($$(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],u=L$(a,i,o-i),l=Q_(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)s.push(QC(0));for(let e=0;e<c.length;++e){const t=c[e];s[e]=mI(s[e],yI(o-i,t))}}for(let e=0;e<s.length;++e)s[e]=vI(s[e],i)}return s}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(HD(e,r)>1){a+=`_${HD(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],s=this.collectedTrainableWeights.map((e=>e.read())),o=this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const s=new MF(e),o=BF(this.outputs,s,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=G_(n,a[e]));const i=LS(n);t.push(i),u=0===e?n:mI(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=LS(t(r[a],o[a]))}pI(n),i.push(n)}return u=LS(u),this.calculateLosses().forEach((e=>{u=mI(u,e)})),u}),!0,s);return[o].concat(i)}}makeTestFunction(){this.testFunction=e=>hI((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const s=new MF(i),o=BF(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=LS(r(a[e],o[e]));n=0===e?i:mI(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=LS(n(a[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,s,o,u,l,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;X_(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],a=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new zD("validationData including sample weights is not supported yet."):new BD(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,d);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=Y_(r,e,t),i=r,r=Y_(r,0,e),c=Y_(a,e,t),s=a,a=Y_(a,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const v=r.concat(a).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,m=[],w=b.slice());const k=o_(n.callbacks,n.yieldEvery);return await this.fitLoop(y,v,b,d,n.epochs,n.verbose,k,x,m,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,eO(r,e),eO(a,t),eO(i,e),eO(s,t),eO(l,o),eO(c,u),null!=h&&dI(h)}}async fitLoop(e,t,n,r,a,i,s,o,u,l,c,h,d,p){null==r&&(r=32),null==a&&(a=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=p&&(f=!0,null==d))throw new BD("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=m&&(g=$$(0,m)),null==i&&(i=1);const{callbackList:v,history:y}=l_(s,i,a,h,m,d,r,f,c);v.setModel(this),this.history=y,await v.onTrainBegin(),this.stopTraining_=!1;for(let i=h;i<a;++i){await v.onEpochBegin(i);const a={};if(null!=d)throw new zD("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new zD("batch shuffling is not implemneted yet");l&&Dg(g);const i=KN(g),s=J_(m,r);for(let l=0;l<s.length;++l){const c={};if(await v.onBatchBegin(l,c),hI((()=>{const h=s[l][0],d=s[l][1],p=L$(i,h,d-h);c.batch=l,c.size=d-h;const m=Q_(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,pI(r)}if(l===s.length-1&&f){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],i=e[t];pI(i),a["val_"+r]=i}}})),await v.onBatchEnd(l,c),e_(c),this.stopTraining_)break}i.dispose()}if(await v.onEpochEnd(i,a),this.stopTraining_)break}return await v.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return q_(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],i=this.makeTrainFunction()(r.concat(a)),s=[];for(const e of i){const t=await e.data();s.push(t[0])}return dI(i),eO(n[0],e),eO(n[1],t),jD(s)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=cI().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-cI().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=KD(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>KD(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=KD(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[KD(R_(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>KD(R_(e))));{const e={};for(const t in this.metrics)e[t]=KD(R_(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=c_(P_(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=XD(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>XD(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=XD(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>XD(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=XD(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,$k.getSaveHandlers(n));if(0===t.length)throw new BD(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new BD(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new BD("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Sk(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${z_}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Sk(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=(i=[r.data,t],Ck.join(i))}var i;if(null!=this.userDefinedMetadata){const e=!0;D_(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=r.data,a.weightSpecs=r.specs,e.save(a)}setUserDefinedMetadata(e){D_(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}iO.className="Model",QT(iO);class sO extends iO{}sO.className="Functional",QT(sO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class oO extends iO{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:h$("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new BD(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof oO||e instanceof iO;let n;if(t){if(n=e,1!==n.outputs.length)throw new BD("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new BD("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new BD("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new BD("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new OF({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new BD(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new BD("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=_F(this.outputs[0])}this.inboundNodes=[],new DF({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:UD(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(kF(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new iO({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new PD("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new PD("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new PD("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new PD("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new BD("Legacy serialization format not supported yet.");a=t}else Og(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const s=new e(i);if(!(s instanceof oO))throw new zD(`Sequential.fromConfig called on non-Sequential input: ${s}`);for(const e of a){const t=c_(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(e){if(null==this.model)throw new BD("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new BD("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}oO.className="Sequential",QT(oO);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class uO extends XT{getConfig(){return{}}}class lO extends uO{apply(e,t=1){return function(e,t=1){if(1!==t)throw new zD(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return PC(e)}(e,t)}}lO.className="elu",QT(lO);class cO extends uO{apply(e){return TN(e)}}cO.className="selu",QT(cO);class hO extends uO{apply(e){return kN(e)}}hO.className="relu",QT(hO);class dO extends uO{apply(e){return hI((()=>zS(6,kN(e))))}}dO.className="relu6",QT(dO);class pO extends uO{apply(e){return e}}pO.className="linear",QT(pO);class fO extends uO{apply(e){return QI(e)}}fO.className="sigmoid",QT(fO);class mO extends uO{apply(e){return function(e){return hI((()=>{const t=mI(.5,yI(.2,e));return lC(t,0,1)}))}(e)}}mO.className="hardSigmoid",QT(mO);class gO extends uO{apply(e){return SS(e)}}gO.className="softplus",QT(gO);class vO extends uO{apply(e){return function(e){return hI((()=>vI(e,mI(bI(e),1))))}(e)}}vO.className="softsign",QT(vO);class yO extends uO{apply(e){return ZI(e)}}yO.className="tanh",QT(yO);class bO extends uO{apply(e,t=-1){return MN(e,t)}}bO.className="softmax",QT(bO);class xO extends uO{apply(e,t=-1){return ES(e,t)}}xO.className="logSoftmax",QT(xO);class wO extends uO{apply(e,t=1){return hI((()=>yI(QI(yI(e,t)),e)))}}wO.className="swish",QT(wO);class kO extends uO{apply(e){return hI((()=>yI(e,ZI(SS(e)))))}}function IO(e){return e.getClassName()}function CO(e,t={}){return ZD(e,YT.getMap().classNameMap,t,"activation")}function SO(e){if(null==e){const e={className:"linear",config:{}};return CO(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},CO(t)}return e instanceof uO?e:CO(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */kO.className="mish",QT(kO);class NO extends XT{}class TO extends NO{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return hI((()=>{let t=PS([1]);return this.hasL1&&(t=mI(t,eS(yI(this.l1,bI(e))))),this.hasL2&&(t=mI(t,eS(yI(this.l2,j$(e))))),jI(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}TO.className="L1L2",QT(TO);const EO={l1l2:"L1L2"};function RO(e){return QD(e)}function AO(e,t={}){return ZD(e,YT.getMap().classNameMap,t,"regularizer")}function DO(e){if(null==e)return null;if("string"==typeof e){return AO({className:e in EO?EO[e]:e,config:{}})}return e instanceof NO?e:AO(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $O extends FF{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=wF(e);let n=kN(e);return null!=this.maxValue&&(n=lC(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}$O.className="ReLU",QT($O);class FO extends FF{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=wF(e);return vS(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}FO.className="LeakyReLU",QT(FO);class _O extends FF{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=yF(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=DO(e.alphaRegularizer),this.alphaConstraint=JF(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new BD(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=kF(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new EF({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=wF(e),YS(e,this.alpha.read())}getConfig(){const e={alphaInitializer:vF(this.alphaInitializer),alphaRegularizer:RO(this.alphaRegularizer),alphaConstraint:YF(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}_O.className="PReLU",QT(_O);class OO extends FF{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new zD(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=wF(e);return PC(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}OO.className="ELU",QT(OO);class MO extends FF{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=wF(e);return yI(n,sI(hS(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}MO.className="ThresholdedReLU",QT(MO);class LO extends FF{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new bO).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return hI((()=>{let n=wF(e);const r=t.mask;if(null!=r){const e=yI(TS(BS(n.shape),sI(r,n.dtype)),QC(-1e9));n=mI(n,e)}return this.axis instanceof Array?this.axis.length>1?aS(TS(n,RS(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function PO(e,t,n){if("number"==typeof e)return UD(e,t);if(e.length!==t)throw new BD(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if(!E$(a))throw new BD(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function BO(e,t,n,r,a=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((i+r-1)/r)}function zO(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+D$([n-t,0]);else{if("same"!==r)throw new BD(`Unsupport padding mode: ${r}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WO(e,t){return hI((()=>(y$(t),"channelsFirst"===t?aT(e,[0,2,3,1]):e)))}function VO(e,t){return hI((()=>(y$(t),"channelsFirst"===t?aT(e,[0,2,3,4,1]):e)))}function UO(e,t,n,r=[1,1],a="valid",i,s,o=null){return hI((()=>{if(null==i&&(i="channelsLast"),y$(i),3!==e.rank&&4!==e.rank)throw new BD(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new BD(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=WO(e,i);if("causal"===a)throw new zD("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=hT({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(u=aT(u,[0,3,1,2])),u}))}LO.className="Softmax",QT(LO);class GO extends FF{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",GO.verifyArgs(t),this.rank=e,i$(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new zD(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=PO(t.kernelSize,e,"kernelSize"),this.strides=PO(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,b$(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,y$(this.dataFormat),this.activation=SO(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=yF(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=JF(t.biasConstraint),this.biasRegularizer=DO(t.biasRegularizer),this.activityRegularizer=DO(t.activityRegularizer),this.dilationRate=PO(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new BD(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new BD(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new BD(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(GD("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!a$(e.kernelSize,"number",1,3))throw new BD(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:IO(this.activation),useBias:this.useBias,biasInitializer:vF(this.biasInitializer),biasRegularizer:RO(this.biasRegularizer),activityRegularizer:RO(this.activityRegularizer),biasConstraint:YF(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class HO extends GO{constructor(e,t){super(e,t),this.kernel=null,HO.verifyArgs(t),this.filters=t.filters,i$(this.filters,"filters"),this.kernelInitializer=yF(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=JF(t.kernelConstraint),this.kernelRegularizer=DO(t.kernelRegularizer)}build(e){e=kF(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new BD(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return hI((()=>{let t;e=wF(e);const n=null==this.bias?null:this.bias.read(),r=o$(this.activation.getClassName());if(null!=r&&2===this.rank)t=UO(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",i,s=1){return hI((()=>{if(null==i&&(i="channelsLast"),y$(i),3!==e.shape.length)throw new BD(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new BD(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new BD(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=aT(e,[0,2,1])),"causal"===a)throw new zD("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=mC(e,t,r,"same"===a?"same":"valid","NWC",s);return null!=n&&(o=K$(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=UO(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new zD("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",i,s){return hI((()=>{if(null==i&&(i="channelsLast"),y$(i),4!==e.rank&&5!==e.rank)throw new BD(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new BD(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=VO(e,i);if("causal"===a)throw new zD("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=yC(o,t,r,"same"===a?"same":"valid","NDHWC",s),null!=n&&(o=K$(o,n)),"channelsFirst"===i&&(o=aT(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=kF(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=BO(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:vF(this.kernelInitializer),kernelRegularizer:RO(this.kernelRegularizer),kernelConstraint:YF(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new BD(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class jO extends HO{constructor(e){super(2,e),jO.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!a$(e.kernelSize,"number",1,2))throw new BD(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}jO.className="Conv2D",QT(jO);class qO extends HO{constructor(e){super(3,e),qO.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new BD(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}qO.className="Conv3D",QT(qO);class KO extends jO{constructor(e){if(super(e),this.inputSpec=[new EF({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new BD(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=kF(e)).length)throw new BD("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new BD("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new EF({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return hI((()=>{let t=wF(e);if(4!==t.shape.length)throw new BD(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const s=n[a],o=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,zO(s,c,u,this.padding),zO(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=aT(t,[0,2,3,1]));let p=vC(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=aT(p,[0,3,1,2])),null!=this.bias&&(p=K$(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=kF(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const i=this.kernelSize[0],s=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=zO(t[r],o,i,this.padding),t[a]=zO(t[a],u,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}KO.className="Conv2DTranspose",QT(KO);class XO extends qO{constructor(e){if(super(e),this.inputSpec=[new EF({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new BD(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=kF(e)).length)throw new BD("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new BD("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new EF({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return hI((()=>{let t=wF(e);if(5!==t.shape.length)throw new BD(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,i,s;"channelsFirst"===this.dataFormat?(s=2,a=3,i=4):(s=1,a=2,i=3);const o=n[s],u=n[a],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,zO(o,p,c,this.padding),zO(u,f,h,this.padding),zO(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=aT(t,[0,2,3,4,1]));let v=xC(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=aT(v,[0,4,1,2,3])),null!==this.bias&&(v=K$(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){const t=(e=kF(e)).slice();let n,r,a,i;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,i=4):(n=4,r=1,a=2,i=3);const s=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=zO(t[r],l,s,this.padding),t[a]=zO(t[a],c,o,this.padding),t[i]=zO(t[i],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}XO.className="Conv3DTranspose",QT(XO);class YO extends HO{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new BD("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new BD("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new BD(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=yF(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=DO(t.depthwiseRegularizer),this.depthwiseConstraint=JF(t.depthwiseConstraint),this.pointwiseInitializer=yF(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=DO(t.pointwiseRegularizer),this.pointwiseConstraint=JF(t.pointwiseConstraint)}build(e){if((e=kF(e)).length<this.rank+2)throw new BD(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new BD(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new EF({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return hI((()=>{let t;if(e=wF(e),1===this.rank)throw new zD("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=aT(e,[0,2,3,1])),t=EN(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=K$(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=aT(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=vF(this.depthwiseInitializer),e.pointwiseInitializer=vF(this.pointwiseInitializer),e.depthwiseRegularizer=RO(this.depthwiseRegularizer),e.pointwiseRegularizer=RO(this.pointwiseRegularizer),e.depthwiseConstraint=YF(this.depthwiseConstraint),e.pointwiseConstraint=YF(this.pointwiseConstraint),e}}YO.className="SeparableConv";class QO extends YO{constructor(e){super(2,e)}}QO.className="SeparableConv2D",QT(QO);class JO extends HO{constructor(e){super(1,e),JO.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!a$(e.kernelSize,"number",1,1))throw new BD(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}JO.className="Conv1D",QT(JO);class ZO extends FF{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return hI((()=>{if(e=wF(e),"channelsLast"===this.dataFormat){const t=B$(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return B$(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=B$(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return B$(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ZO.className="Cropping2D",QT(ZO);class eM extends FF{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,y$(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,r$(p$,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return hI((()=>{let t=wF(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=aT(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?HT.resizeNearestNeighbor(t,[e,r]):HT.resizeBilinear(t,[e,r]);return aT(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?HT.resizeNearestNeighbor(t,[e,r]):HT.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}eM.className="UpSampling2D",QT(eM);class tM extends GO{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=yF(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=JF(e.depthwiseConstraint),this.depthwiseRegularizer=DO(e.depthwiseRegularizer)}build(e){if((e=kF(e)).length<4)throw new BD(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new BD(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hI((()=>{let t=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t,n=[1,1],r="valid",a,i){return hI((()=>{null==a&&(a="channelsLast"),y$(a);let s=WO(e,a);if(4!==e.rank)throw new BD(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new BD(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=TC(s,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===a&&(s=aT(s,[0,3,1,2])),s}))}(e=wF(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=K$(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=kF(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=BO(t,this.kernelSize[0],this.padding,this.strides[0]),i=BO(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,i]:[e[0],a,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=vF(this.depthwiseInitializer),e.depthwiseRegularizer=RO(this.depthwiseRegularizer),e.depthwiseConstraint=YF(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function nM(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new BD("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function rM(e,t,n,r=!1,a,i,s=!1,o=!1){return hI((()=>{const u=t.shape.length;if(u<3)throw new BD(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat($$(2,u));if(t=aT(t,l),null!=i)throw new zD("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=sI(sI(a,"bool"),"float32")).rank===u-1&&(a=iS(a,-1)),a=aT(a,l)),r&&(t=CN(t,0),null!=a&&(a=CN(a,0)));const c=[];let h,d=n;const p=t.shape[0],f=nT(t);let m,g;null!=a&&(m=nT(a));for(let t=0;t<p;++t){const n=f[t],r=hI((()=>e(n,d)));if(null==a)h=r[0],d=r[1];else{const e=hI((()=>{const e=m[t],n=TS(jS(e),e),a=mI(yI(r[0],e),yI(d[0],n)),i=d.map(((t,a)=>mI(yI(r[1][a],e),yI(t,n))));return{output:a,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){g=GN(c,1)}return[h,g,d]}))}tM.className="DepthwiseConv2D",QT(tM);class aM extends FF{constructor(e){let t;if(super(e),null==e.cell)throw new BD("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new dM({cells:e.cell}):e.cell,null==t.stateSize)throw new BD("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new EF({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return $$(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){bF(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return hI((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new zD("Constants support is not implemented in RNN yet.");bF(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new EF({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Bg(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new BD(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new EF({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){hI((()=>{if(!this.stateful)throw new LD("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new BD("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>PS([n,e]))):this.states_=[PS([n,this.cell.stateSize])];else if(null==e)dI(this.states_),null!=this.keptStates&&(dI(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>PS([n,e]))):this.states_[0]=PS([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new BD(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):dI(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!Bg(r.shape,i))throw new BD(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>pI(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=nM(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let i=[],s=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new EF({shape:e.shape}));s=s.concat(this.stateSpec)}null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length);if(i[0]instanceof RF){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return hI((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=wF(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new BD(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:r},o=rM(((e,t)=>{const n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return hI((()=>{let t=PS(e.shape);return t=eS(t,[1,2]),t=M$(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?V$(t,[1,e]):t)):this.cell.stateSize>1?[V$(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===aM.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=c_(t.cell,n);return new e(Object.assign(t,{cell:r}))}}aM.className="RNN",QT(aM);class iM extends FF{}class sM extends iM{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,i$(this.units,"units"),this.activation=SO(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=yF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yF(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=DO(e.kernelRegularizer),this.recurrentRegularizer=DO(e.recurrentRegularizer),this.biasRegularizer=DO(e.biasRegularizer),this.kernelConstraint=JF(e.kernelConstraint),this.recurrentConstraint=JF(e.recurrentConstraint),this.biasConstraint=JF(e.biasConstraint),this.dropout=A$([1,D$([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=A$([1,D$([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=kF(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hI((()=>{if(2!==e.length)throw new BD(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pM({ones:()=>jS(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pM({ones:()=>jS(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;a=G$(null!=i?yI(e,i):e,this.kernel.read()),null!=this.bias&&(a=K$(a,this.bias.read())),null!=s&&(n=yI(n,s));let o=mI(a,G$(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:IO(this.activation),useBias:this.useBias,kernelInitializer:vF(this.kernelInitializer),recurrentInitializer:vF(this.recurrentInitializer),biasInitializer:vF(this.biasInitializer),kernelRegularizer:RO(this.kernelRegularizer),recurrentRegularizer:RO(this.recurrentRegularizer),biasRegularizer:RO(this.biasRegularizer),activityRegularizer:RO(this.activityRegularizer),kernelConstraint:YF(this.kernelConstraint),recurrentConstraint:YF(this.recurrentConstraint),biasConstraint:YF(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}sM.className="SimpleRNNCell",QT(sM);class oM extends aM{constructor(e){e.cell=new sM(e),super(e)}call(e,t){return hI((()=>{null!=this.cell.dropoutMask&&(dI(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dI(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}oM.className="SimpleRNN",QT(oM);class uM extends iM{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new BD("GRUCell does not support reset_after parameter set to true.");this.units=e.units,i$(this.units,"units"),this.activation=SO(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=SO(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=yF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yF(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=DO(e.kernelRegularizer),this.recurrentRegularizer=DO(e.recurrentRegularizer),this.biasRegularizer=DO(e.biasRegularizer),this.kernelConstraint=JF(e.kernelConstraint),this.recurrentConstraint=JF(e.recurrentConstraint),this.biasConstraint=JF(e.biasConstraint),this.dropout=A$([1,D$([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=A$([1,D$([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=kF(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hI((()=>{if(2!==e.length)throw new BD(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pM({ones:()=>jS(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pM({ones:()=>jS(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let s,o,u;0<this.dropout&&this.dropout<1&&(e=yI(e,a[0]));let l=G$(e,this.kernel.read());this.useBias&&(l=K$(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yI(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=zN(c,[2*this.units,this.units],c.rank-1),p=G$(r,h),[f,m,g]=zN(l,3,l.rank-1),[v,y]=zN(p,2,p.rank-1);s=this.recurrentActivation.apply(mI(f,v)),o=this.recurrentActivation.apply(mI(m,y));const b=G$(yI(o,r),d);u=this.activation.apply(mI(g,b));const x=mI(yI(s,r),yI(mI(1,CS(s)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:IO(this.activation),recurrentActivation:IO(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vF(this.kernelInitializer),recurrentInitializer:vF(this.recurrentInitializer),biasInitializer:vF(this.biasInitializer),kernelRegularizer:RO(this.kernelRegularizer),recurrentRegularizer:RO(this.recurrentRegularizer),biasRegularizer:RO(this.biasRegularizer),activityRegularizer:RO(this.activityRegularizer),kernelConstraint:YF(this.kernelConstraint),recurrentConstraint:YF(this.recurrentConstraint),biasConstraint:YF(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}uM.className="GRUCell",QT(uM);class lM extends aM{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new uM(e),super(e)}call(e,t){return hI((()=>{null!=this.cell.dropoutMask&&(dI(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dI(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}lM.className="GRU",QT(lM);class cM extends iM{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,i$(this.units,"units"),this.activation=SO(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=SO(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=yF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yF(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=DO(e.kernelRegularizer),this.recurrentRegularizer=DO(e.recurrentRegularizer),this.biasRegularizer=DO(e.biasRegularizer),this.kernelConstraint=JF(e.kernelConstraint),this.recurrentConstraint=JF(e.recurrentConstraint),this.biasConstraint=JF(e.biasConstraint),this.dropout=A$([1,D$([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=A$([1,D$([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=kF(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Z${apply(t,r){const a=e.apply([n]),i=(new tF).apply([n]),s=e.apply([2*n]);return W$(W$(a,i),s)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return hI((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new BD(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pM({ones:()=>jS(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pM({ones:()=>jS(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,s=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=yI(e,i[0]));let h=G$(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yI(r,s[0])),h=mI(h,G$(r,this.recurrentKernel.read())),this.useBias&&(h=K$(h,this.bias.read()));const[d,p,f,m]=zN(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=mI(yI(u,a),yI(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=yI(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:IO(this.activation),recurrentActivation:IO(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vF(this.kernelInitializer),recurrentInitializer:vF(this.recurrentInitializer),biasInitializer:vF(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:RO(this.kernelRegularizer),recurrentRegularizer:RO(this.recurrentRegularizer),biasRegularizer:RO(this.biasRegularizer),activityRegularizer:RO(this.activityRegularizer),kernelConstraint:YF(this.kernelConstraint),recurrentConstraint:YF(this.recurrentConstraint),biasConstraint:YF(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}cM.className="LSTMCell",QT(cM);class hM extends aM{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cM(e),super(e)}call(e,t){return hI((()=>{null!=this.cell.dropoutMask&&(dI(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dI(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}hM.className="LSTM",QT(hM);class dM extends iM{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return hI((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let i;for(let s=0;s<this.cells.length;++s){const o=this.cells[s];n=r[s],i=0===s?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),a.push(i.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;bF(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{I$(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(c_(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return NF(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}TF(t)}}function pM(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:i}=e,s=()=>null!=i?i(t(),n):X$(t(),n),o=()=>Y$(s,t,r);if(!a||a<=1)return pI(o().clone());return Array(a).fill(void 0).map(o).map((e=>pI(e.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */dM.className="StackedRNNCells",QT(dM);var fM=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class mM extends aM{constructor(e){if(e.unroll)throw new zD("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new zD("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new EF({ndim:5})]}call(e,t){return hI((()=>{if(null!=this.cell.dropoutMask&&(dI(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dI(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new BD("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return hI((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=PS([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){hI((()=>{if(!this.stateful)throw new LD("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new BD("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>PS(a))):this.states_=[PS(a)];else if(null==e)dI(this.states_),null!=this.keptStates&&(dI(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>PS(a))):this.states_[0]=PS(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new BD(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):dI(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!Bg(n.shape,r))throw new BD(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>pI(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:i,dilationRate:s}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=BO(u,r[0],a,i[0],s[0]),h=BO(l,r[1],a,i[1],s[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}mM.className="ConvRNN2D";class gM extends cM{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:i,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,i$(this.filters,"filters"),this.kernelSize=PO(n,2,"kernelSize"),this.kernelSize.forEach((e=>i$(e,"kernelSize"))),this.strides=PO(r||1,2,"strides"),this.strides.forEach((e=>i$(e,"strides"))),this.padding=a||"valid",b$(this.padding),this.dataFormat=i||"channelsLast",y$(this.dataFormat),this.dilationRate=PO(s||1,2,"dilationRate"),this.dilationRate.forEach((e=>i$(e,"dilationRate")))}build(e){var t;e=kF(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new BD(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Z${apply(e,t){return z$([n.apply([r]),BS([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return hI((()=>{if(3!==e.length)throw new BD(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pM({ones:()=>jS(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=(e,t,n)=>t&&t[n]?yI(t[n],e):e;let u=o(r,s,0),l=o(r,s,1),c=o(r,s,2),h=o(r,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pM({ones:()=>jS(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(a,d,0),f=o(a,d,1),m=o(a,d,2),g=o(a,d,3);const[v,y,b,x]=zN(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?zN(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,v,w,this.padding),l=this.inputConv(l,y,k,this.padding),c=this.inputConv(c,b,I,this.padding),h=this.inputConv(h,x,C,this.padding);const[S,N,T,E]=zN(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,E);const R=this.recurrentActivation.apply(mI(u,p)),A=this.recurrentActivation.apply(mI(l,f)),D=mI(yI(A,i),yI(R,this.activation.apply(mI(c,m)))),$=yI(this.recurrentActivation.apply(mI(h,g)),this.activation.apply(D));return[$,$,D]}))}getConfig(){const e=super.getConfig(),t=fM(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){const a=fC(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?K$(a,n,this.dataFormat):a}recurrentConv(e,t){return fC(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}gM.className="ConvLSTM2DCell",QT(gM);class vM extends mM{constructor(e){const t=new gM(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}vM.className="ConvLSTM2D",QT(vM);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class yM extends FF{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Y$((()=>X$(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}yM.className="Dropout",QT(yM);class bM extends yM{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}bM.className="SpatialDropout1D",QT(bM);class xM extends FF{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,i$(this.units,"units"),this.activation=SO(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=yF(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=yF(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=JF(e.kernelConstraint),this.biasConstraint=JF(e.biasConstraint),this.kernelRegularizer=DO(e.kernelRegularizer),this.biasRegularizer=DO(e.biasRegularizer),this.activityRegularizer=DO(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=kF(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=kF(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e),r=o$(this.activation.getClassName());let a;return null!=r?a=G$(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=G$(n,this.kernel.read()),null!=this.bias&&(a=K$(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:IO(this.activation),useBias:this.useBias,kernelInitializer:vF(this.kernelInitializer),biasInitializer:vF(this.biasInitializer),kernelRegularizer:RO(this.kernelRegularizer),biasRegularizer:RO(this.biasRegularizer),activityRegularizer:RO(this.activityRegularizer),kernelConstraint:YF(this.kernelConstraint),biasConstraint:YF(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}xM.className="Dense",QT(xM);class wM extends FF{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=kF(e);for(const t of e.slice(1))if(null==t)throw new BD(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],R$(e,1)]}call(e,t){return hI((()=>{this.invokeCallHook(e,t);let n=wF(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=aT(n,e)}return function(e){if(e.rank<=1)throw new BD(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],R$(e.shape,1)];return jI(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}wM.className="Flatten",QT(wM);class kM extends FF{constructor(e){super(e),this.supportsMasking=!0,this.activation=SO(e.activation)}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e);return this.activation.apply(n)}))}getConfig(){const e={activation:IO(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}kM.className="Activation",QT(kM);class IM extends FF{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return hI((()=>function(e,t){return hI((()=>{if(2!==e.shape.length)throw new BD(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return V$(M$(e,1),[1,t,1])}))}(e=wF(e),this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}IM.className="RepeatVector",QT(IM);class CM extends FF{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new BD("Can only specifiy one unknown dimension.");i=e}else a*=t}const s=R$(e);if(null!==i){if(0===a||s%a!=0)throw new BD(n);r[i]=s/a}else if(s!==a)throw new BD(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return jI(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}CM.className="Reshape",QT(CM);class SM extends FF{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=$$(1,e.dims.length+1);if(!Bg(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new EF({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=kF(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return aT(wF(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}SM.className="Permute",QT(SM);class NM extends FF{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=wF(e);return II(GS(n,this.maskValue),-1)}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e),r=II(GS(n,this.maskValue),-1,!0);return yI(n,sI(r,n.dtype))}))}}NM.className="Masking",QT(NM);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class TM extends FF{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(qD(e.inputLength))}this.inputDim=e.inputDim,i$(this.inputDim,"inputDim"),this.outputDim=e.outputDim,i$(this.outputDim,"outputDim"),this.embeddingsInitializer=yF(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=DO(e.embeddingsRegularizer),this.activityRegularizer=DO(e.activityRegularizer),this.embeddingsConstraint=JF(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return hI((()=>this.maskZero?(e=wF(e),GS(e,_C(e))):null))}computeOutputShape(e){if(e=kF(e),null==this.inputLength)return[...e,this.outputDim];const t=qD(this.inputLength);if(t.length!==e.length-1)throw new BD(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],i=e[r+1];if(null!=a&&null!=i&&a!==i)throw new BD(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return hI((()=>{this.invokeCallHook(e,t);let n=wF(e);"int32"!==n.dtype&&(n=O$(n,"int32"));const r=H$(this.embeddings.read(),jI(n,[n.size]));return jI(r,kF(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vF(this.embeddingsInitializer),embeddingsRegularizer:RO(this.embeddingsRegularizer),activityRegularizer:RO(this.activityRegularizer),embeddingsConstraint:YF(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}TM.className="Embedding",QT(TM);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class EM extends FF{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new zD}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],i=t[r];if(null==a||null==i||a<0||i<0)n.push(null);else if(1===a)n.push(i);else if(1===i)n.push(a);else{if(a!==i)throw new BD("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[kF(e)]),e.length<2)throw new BD(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=t$(t),t.length>1)throw new BD(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===t$(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return hI((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=D$(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=M$(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],i=e.slice(1).concat([a]);let s=jI(r,[a].concat(R$(e.slice(1))));s=aT(s,[1,0]),s=jI(s,i),t.push(s),n=!0}else if(e>1){const a=$$(1,e).concat([0]);t.push(aT(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=jI(aT(jI(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat($$(0,a-1));r=aT(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=t$(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return hI((()=>{if(null==t)return null;if(!Array.isArray(t))throw new BD("`mask` should be an Array");if(!Array.isArray(e))throw new BD("`inputs` should be an Array");if(t.length!==e.length)throw new BD(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:iS(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=AS(n,t[e]);return n}))}}class RM extends EM{constructor(e){super(e)}mergeFunction(e){return hI((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=mI(t,e[n]);return t}))}}RM.className="Add",QT(RM);class AM extends EM{constructor(e){super(e)}mergeFunction(e){return hI((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yI(t,e[n]);return t}))}}AM.className="Multiply",QT(AM);class DM extends EM{constructor(e){super(e)}mergeFunction(e){return hI((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=mI(t,e[n]);return yI(1/e.length,t)}))}}DM.className="Average",QT(DM);class $M extends EM{constructor(e){super(e)}mergeFunction(e){return hI((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=MS(t,e[n]);return t}))}}$M.className="Maximum",QT($M);class FM extends EM{constructor(e){super(e)}mergeFunction(e){return hI((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=zS(t,e[n]);return t}))}}FM.className="Minimum",QT(FM);class _M extends EM{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new BD("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(Bg(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new BD("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return hI((()=>z$(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new BD("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new BD("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new BD("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new BD(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return hI((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(sI(jS(e[n]),"bool")):t[n].rank<e[n].rank?r.push(iS(t[n],-1)):r.push(t[n]);const a=XI(r,this.axis);return kI(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function OM(e,t){for(;e<0;)e+=t;return e}_M.className="Concatenate",QT(_M);class MM extends EM{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Og(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new zD("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new BD(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new BD(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>OM(t,e[n].shape.length))):[OM(this.axes,n.shape.length),OM(this.axes,r.shape.length)],this.normalize&&(n=h_(n,t[0]),r=h_(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new zD("batchDot is not implemented for tensors of 4D or higher rank yet");if(Og(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Og(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new zD("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const i=n;return hI((()=>{let n,s;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=jI(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=jI(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=i[0]===i[1]?eS(yI(e,t),i[0]):eS(yI(aT(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;s=YI(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);s=UN(s,t)}return 1===s.shape.length&&(s=iS(s,1)),s}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[OM(this.axes,e.length),OM(this.axes,t.length)],n}computeOutputShape(e){Og(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new zD("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}MM.className="Dot",QT(MM);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class LM extends FF{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e);return Y$((()=>mI(U$(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}LM.className="GaussianNoise",QT(LM);class PM extends FF{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hI((()=>{this.invokeCallHook(e,t);const n=wF(e);if(this.rate>0&&this.rate<1){return Y$((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return yI(n,U$(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}PM.className="GaussianDropout",QT(PM);class BM extends FF{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||wF(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hI((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=wF(e),r=-1.7580993408473766;let a=dS(yN(n),this.rate);a=O$(a,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,s=-i*r*this.rate,o=mI(yI(t,a),yI(mI(a,-1),r));return mI(yI(o,i),s)};return Y$(r,(()=>wF(e)),t.training||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function zM(e,t,n,r,a,i=.001){let s;if(2===e.rank)s=nC(e,t,n,r,a,i);else if(3===e.rank)s=rC(e,t,n,r,a,i);else{if(4!==e.rank)throw new zD(`batchNormalization is not implemented for array of rank ${e.rank} yet`);s=aC(e,t,n,r,a,i)}return s}function WM(e,t,n,r,a=.001){return Bg(r.slice().sort(),$$(0,e.rank-1))?function(e,t,n,r,a=.001){return hI((()=>{const i=US(e,r),s=i.mean,o=i.variance;return[zM(e,s,o,n,t,a),s,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return hI((()=>{const i=US(e,r),s=i.mean,o=i.variance,u=[];for(const t of $$(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=jI(s,u),c=jI(o,u),h=null==t?null:jI(t,u),d=null==n?null:jI(n,u);return[zM(e,l,c,d,h,a),s,o]}))}(e,t,n,r,a)}BM.className="AlphaDropout",QT(BM);class VM extends FF{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=yF(e.betaInitializer||"zeros"),this.gammaInitializer=yF(e.gammaInitializer||"ones"),this.movingMeanInitializer=yF(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=yF(e.movingVarianceInitializer||"ones"),this.betaConstraint=JF(e.betaConstraint),this.gammaConstraint=JF(e.gammaConstraint),this.betaRegularizer=DO(e.betaRegularizer),this.gammaRegularizer=DO(e.gammaRegularizer)}build(e){e=kF(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new BD(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new EF({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return hI((()=>{const n=null!=t.training&&t.training,r=wF(e),a=r.shape,i=a.length,s=$$(0,i),o=this.axis>=0?this.axis:this.axis+i;s.splice(o,1);const u=UD(1,i);u[o]=a[o];const l=s.slice();l.sort();const c=!Bg(l,$$(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=jI(this.movingMean.read(),u),t=jI(this.movingVariance.read(),u),n=this.center?jI(this.beta.read(),u):null,a=this.scale?jI(this.gamma.read(),u):null;return zM(r,e,t,n,a,this.epsilon)}return zM(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=WM(r,this.gamma.read(),this.beta.read(),s,this.epsilon),f=(e,t,n)=>{hI((()=>{const r=1-n,a=e.read(),i=yI(TS(a,t),r);e.write(TS(a,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vF(this.betaInitializer),gammaInitializer:vF(this.gammaInitializer),movingMeanInitializer:vF(this.movingMeanInitializer),movingVarianceInitializer:vF(this.movingVarianceInitializer),betaRegularizer:RO(this.betaRegularizer),gammaRegularizer:RO(this.gammaRegularizer),betaConstraint:YF(this.betaConstraint),gammaConstraint:YF(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}VM.className="BatchNormalization",QT(VM);class UM extends FF{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=yF(e.betaInitializer||"zeros"),this.gammaInitializer=yF(e.gammaInitializer||"ones"),this.betaRegularizer=DO(e.betaRegularizer),this.gammaRegularizer=DO(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=kF(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==t$(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=wF(e),r=n.shape,a=r.length;return hI((()=>{let{mean:e,variance:t}=US(n,this.axis,!0);const i=UD(1,a);for(const e of this.axis)i[e]=r[e];const s=e=>null!=e&&e.shape.length!==a?jI(e,i):e;let o=this.scale?s(this.gamma.read()):null,u=this.center?s(this.beta.read()):null;const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=oS(e,l),t=oS(t,l),null!=o&&(o=oS(o,c)),null!=u&&(u=oS(u,c)),zM(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vF(this.betaInitializer),gammaInitializer:vF(this.gammaInitializer),betaRegularizer:RO(this.betaRegularizer),gammaRegularizer:RO(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}UM.className="LayerNormalization",QT(UM);class GM extends FF{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new BD(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new BD(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new BD(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new EF({ndim:4})]}computeOutputShape(e){let t,n;return e=kF(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return hI((()=>
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(e,t,n){return hI((()=>{if(4!==e.rank)throw new BD(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new BD("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new BD(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],qS(e,r)}))}(wF(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function HM(e,t,n,r,a,i){return hI((()=>{let s;y$(a),x$(i),b$(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=WO(e,a);const o="same"===r?"same":"valid";return s="max"===i?_S(e,t,n,o):qI(e,t,n,o),"channelsFirst"===a&&(s=aT(s,[0,3,1,2])),s}))}function jM(e,t,n,r,a,i){return hI((()=>{let s;y$(a),x$(i),b$(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=VO(e,a);const o="same"===r?"same":"valid";return s="max"===i?OS(e,t,n,o):KI(e,t,n,o),"channelsFirst"===a&&(s=aT(s,[0,4,1,2,3])),s}))}GM.className="ZeroPadding2D",QT(GM);class qM extends FF{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new BD(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(i$(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new BD(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}i$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,b$(this.padding),this.inputSpec=[new EF({ndim:3})]}computeOutputShape(e){const t=BO((e=kF(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return hI((()=>{this.invokeCallHook(e,t),e=M$(wF(e),2);const n=this.poolingFunction(wF(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return UN(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class KM extends qM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return y$(a),b$(r),HM(e,t,n,r,a,"max")}}KM.className="MaxPooling1D",QT(KM);class XM extends qM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return y$(a),b$(r),HM(e,t,n,r,a,"avg")}}XM.className="AveragePooling1D",QT(XM);class YM extends FF{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new BD(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];i$(this.poolSize,"poolSize"),i$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,y$(this.dataFormat),b$(this.padding),this.inputSpec=[new EF({ndim:4})]}computeOutputShape(e){e=kF(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=BO(t,this.poolSize[0],this.padding,this.strides[0]),n=BO(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return hI((()=>(this.invokeCallHook(e,t),this.poolingFunction(wF(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class QM extends YM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return y$(a),b$(r),HM(e,t,n,r,a,"max")}}QM.className="MaxPooling2D",QT(QM);class JM extends YM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return y$(a),b$(r),HM(e,t,n,r,a,"avg")}}JM.className="AveragePooling2D",QT(JM);class ZM extends FF{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new BD(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];i$(this.poolSize,"poolSize"),i$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,y$(this.dataFormat),b$(this.padding),this.inputSpec=[new EF({ndim:5})]}computeOutputShape(e){e=kF(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=BO(t,this.poolSize[0],this.padding,this.strides[0]),n=BO(n,this.poolSize[1],this.padding,this.strides[1]),r=BO(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return hI((()=>(this.invokeCallHook(e,t),this.poolingFunction(wF(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class eL extends ZM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return y$(a),b$(r),jM(e,t,n,r,a,"max")}}eL.className="MaxPooling3D",QT(eL);class tL extends ZM{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return y$(a),b$(r),jM(e,t,n,r,a,"avg")}}tL.className="AveragePooling3D",QT(tL);class nL extends FF{constructor(e){super(e),this.inputSpec=[new EF({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new zD}}class rL extends nL{constructor(e){super(e||{})}call(e,t){return hI((()=>{const t=wF(e);return LS(t,1)}))}}rL.className="GlobalAveragePooling1D",QT(rL);class aL extends nL{constructor(e){super(e||{})}call(e,t){return hI((()=>{const t=wF(e);return KC(t,1)}))}}aL.className="GlobalMaxPooling1D",QT(aL);class iL extends FF{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,y$(this.dataFormat),this.inputSpec=[new EF({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new zD}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class sL extends iL{call(e,t){return hI((()=>{const t=wF(e);return"channelsLast"===this.dataFormat?LS(t,[1,2]):LS(t,[2,3])}))}}sL.className="GlobalAveragePooling2D",QT(sL);class oL extends iL{call(e,t){return hI((()=>{const t=wF(e);return"channelsLast"===this.dataFormat?KC(t,[1,2]):KC(t,[2,3])}))}}oL.className="GlobalMaxPooling2D",QT(oL);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class uL extends FF{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=c_(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class lL extends uL{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=kF(e)).length<3)throw new BD(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=kF(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return hI((()=>rM(((e,n)=>[wF(this.layer.call(e,t)),[]]),e=wF(e),[],!1,null,null,!1,!0)[1]))}}lL.className="TimeDistributed",QT(lL);class cL extends uL{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=c_(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=c_(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,r$(g$,"BidirectionalMergeMode",a),e.weights)throw new zD("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):jD(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=nM(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],s=[];if(null!=n){const e=n.length;if(e%2>0)throw new BD("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new EF({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),s.push(...r)}if(null!=r)throw new zD("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof RF;for(const e of i)if(e instanceof RF!==o)throw new BD("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return hI((()=>{const n=t.initialState;let r,a,i,s;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),s=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=CN(a,1)),"concat"===this.mergeMode?s=z$([r,a]):"sum"===this.mergeMode?s=mI(r,a):"ave"===this.mergeMode?s=yI(.5,mI(r,a)):"mul"===this.mergeMode?s=yI(r,a):null==this.mergeMode&&(s=[r,a]),this.returnState?null==this.mergeMode?s.concat(i):[s].concat(i):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){I$(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),I$(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=c_(t.layer);if(delete t.layer,null!=t.numConstants)throw new zD("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}cL.className="Bidirectional",QT(cL);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class hL extends FF{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return hI((()=>("float32"!==(e=wF(e)).dtype&&(e=O$(e,"float32")),mI(yI(e,this.scale),this.offset))))}}hL.className="Rescaling",QT(hL);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:dL,cropAndResize:pL}=HT;class fL extends FF{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,i,s,o){return hI((()=>{let u,l=!1;const c=[t/i,n/s,(r+t)/i,(a+n)/s],h=[];3===e.rank?(l=!0,u=GN([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const d=Ik(h,[h.length,4]),p=bN(0,h.length,1,"int32"),f=pL(u,d,p,[r,a],"nearest");return O$(l?wF(nT(f)):f,o)}))}upsize(e,t,n,r){return hI((()=>O$(dL(e,[t,n]),r)))}call(e,t){return hI((()=>{const t=wF(e),n=t.dtype,r=t.shape,a=r[r.length-3],i=r[r.length-2];let s=0;a!==this.height&&(s=Math.floor((a-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),s>=0&&o>=0?this.centerCrop(t,s,o,this.height,this.width,a,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=kF(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}fL.className="CenterCrop",QT(fL);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class mL extends FF{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=kF(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return hI((()=>{let n;if("int32"!==(e=wF(e)).dtype&&(e=O$(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new BD(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=wF(t.countWeights)}const r=KC(e),a=XC(e),i=hS(this.numTokens,r).bufferSync().get(0),s=dS(a,0).bufferSync().get(0);if(!i||!s)throw new BD(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
return function(e,t,n,r){let a=wF(e);if("int32"!==a.dtype&&(a=O$(a,"int32")),"int"===t)return a;const i=a.shape;if(0===a.rank&&(a=iS(a,-1)),"oneHot"===t&&1!==a.shape[a.shape.length-1]&&(a=iS(a,-1)),a.rank>2)throw new BD(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${a.rank}.`);const s=["multiHot","oneHot"].includes(t);let o;if(o=SC(a,void 0!==r&&"count"===t?r:[],n,s),"tfIdf"!==t)return o;if(r)return yI(o,r);throw new BD("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}mL.className="CategoryEncoding",QT(mL);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const gL=new Set(["bilinear","nearest"]);class vL extends FF{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!gL.has(e.interpolation))throw new BD(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=kF(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return hI((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return HT.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return HT.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...gL]} are supported`)}))}}vL.className="Resizing",QT(vL);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class yL{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}yL.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class bL extends FF{constructor(e){super(e),this.randomGenerator=new yL(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}bL.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const xL=new Set(["bilinear","nearest"]);class wL extends bL{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new BD(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new BD(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new BD(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!xL.has(n))throw new BD(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=kF(e))[2];return[this.imgHeight,-1,t]}call(e,t){return hI((()=>{const t=wF(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=yN([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return HT.resizeBilinear(e,a);case"nearest":return HT.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...xL]} are supported`)}}))}}wL.className="RandomWidth",QT(wL);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class kL extends n_{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof iO))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function IL(e,t){return e<t}function CL(e,t){return e>t}class SL extends kL{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new zD("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=IL:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=CL:this.monitorFunc=IL,this.monitorFunc===IL&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===IL?1/0:-1/0}async onEpochEnd(e,t){await ZF(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const NL={earlyStopping:function(e){return new SL(e)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var TL,EL;mv().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(TL||(TL={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(EL||(EL={}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var RL;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(RL||(RL={}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AL(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Og("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DL=rT;class $L extends Rg{nextDataId(){return $L.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Eg(this,lI())}write(e,t,n){this.firstUse&&(this.firstUse=!1,mv().get("IS_NODE")&&Rx("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Qg(n[0])){const a=n.map((e=>Nw(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return aR(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Tw(e)));return iI(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return iI(e.shape,e.dtype,t)}makeOutput(e,t,n){return lI().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Sw();e();return{kernelMs:Sw()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){AL([e],"where");const t=this.readSync(e.dataId);return DL(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FL(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}$L.nextDataId=0;const _L={kernelName:xv,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;AL(t,"abs");let r=new Float32Array(Pg(t.shape));return r=FL(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OL(e){return(t,n,r,a,i)=>{const s=DC(t,n),o=s.length,u=nv(s),l=qg(i,Pg(s)),c=t.length,h=n.length,d=nv(t),p=nv(n),f=RC(t,s),m=RC(n,s);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=cv(t,o,u),i=n.slice(-c);f.forEach((e=>i[e]=0));const s=lv(i,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const v=lv(g,h,p);l[t]=e(r[s],a[v])}return[l,s]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(a.shape,"float32",s)},o}const LL={kernelName:jv,backendName:"cpu",kernelFunc:ML};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(e,t,n="float32"){if("complex64"===n){return ML({inputs:{real:PL(e,t,"float32"),imag:PL(e,t,"float32")},backend:e})}const r=sv(Pg(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const zL={kernelName:_y,backendName:"cpu",kernelFunc:BL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const VL={kernelName:Tb,backendName:"cpu",kernelFunc:WL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=Cw([0],n),[a,i]=OL(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function GL(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return BL({inputs:{x:a},backend:n});const e=PL(n,a.shape,a.dtype),t=GL({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=ML({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=WL({inputs:{input:a},backend:n}),t=GL({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!Xg(a.dtype,i)){const e=BL({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const s=n.data.get(a.dataId).values,[o,u,l]=UL(s,a.shape,a.dtype,i);return n.makeTensorInfo(o,u,l)}const HL={kernelName:Uv,backendName:"cpu",kernelFunc:GL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:i,b:s}=n,o=a;AL([i,s],e);const u=o.data.get(i.dataId).values,l=o.data.get(s.dataId).values,c="string"===i.dtype?BR(u):u,h="string"===i.dtype?BR(l):l,d=r||i.dtype,[p,f]=t(i.shape,s.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:a})=>{const{a:i,b:s}=e,o=a;if("complex64"===i.dtype||"complex64"===s.dtype){const e=GL({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=GL({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,v,y]=n(i.shape,s.shape,u,l,f,m),b=o.makeTensorInfo(y,"float32",g),x=o.makeTensorInfo(y,"float32",v),w=ML({inputs:{real:b,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(x),w}{const e=o.data.get(i.dataId).values,n=o.data.get(s.dataId).values,a=r||i.dtype,[u,l]=t(i.shape,s.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function qL(e){return(t,n,r,a,i,s)=>{const o=DC(t,n),u=Pg(o),l=o.length,c=nv(o),h=qg("float32",u),d=qg("float32",u),p=RC(t,o),f=RC(n,o),m=aR(r,a),g=aR(i,s),v=t.length,y=nv(t),b=n.length,x=nv(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=cv(t,l,c),r=n.slice(-v);p.forEach((e=>r[e]=0));const a=lv(r,v,y),i=n.slice(-b);f.forEach((e=>i[e]=0));const s=lv(i,b,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KL=OL(((e,t)=>e+t)),XL=qL(((e,t,n,r)=>({real:e+n,imag:t+r}))),YL=jL(Iv,KL,XL),QL={kernelName:Iv,backendName:"cpu",kernelFunc:YL};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JL(e,t,n,r,a){const i=Pg(r),s=sv(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(s[r]+=i>0?t[n]:1)}return s}function ZL(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],s=iI([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<i;a++){const i=e.get(o,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,a),o,i):s.set(s.get(o,i)+1,o,i))}return s}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eP=OL(((e,t)=>e&t)),tP={kernelName:Wv,backendName:"cpu",kernelFunc:jL(Wv,eP)};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nP(e){return(t,n,r)=>{const a=Kg(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(e,t,n){return aP(e,nP(t),n)}function aP(e,t,n){return({inputs:r,attrs:a,backend:i})=>{const{x:s}=r;AL(s,e);const o=i,u=o.data.get(s.dataId).values;let l;if("string"===s.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=BR(u)}else l=u;const c=n||s.dtype,h=t(l,c,a);return o.makeTensorInfo(s.shape,c,h)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iP=nP((e=>Math.ceil(e))),sP=aP(Gv,iP),oP={kernelName:Gv,backendName:"cpu",kernelFunc:sP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uP(e,t,n,r){const a=Kg(n,Pg(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Pg(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?BR(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=i[s++]}r+=e.shape[1]}))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP=OL(((e,t)=>e===t?1:0)),cP=jL(xy,lP,null,"bool"),hP={kernelName:xy,backendName:"cpu",kernelFunc:cP},dP=nP((e=>Math.exp(e))),pP=aP(wy,dP,"float32"),fP={kernelName:wy,backendName:"cpu",kernelFunc:pP},mP=nP((e=>Math.expm1(e))),gP=aP(Iy,mP),vP={kernelName:Iy,backendName:"cpu",kernelFunc:gP},yP=nP((e=>Math.floor(e))),bP=aP(Ty,yP),xP={kernelName:Ty,backendName:"cpu",kernelFunc:bP},wP=OL(((e,t)=>Math.floor(e/t))),kP=jL(Ey,wP,null,"int32"),IP={kernelName:Ey,backendName:"cpu",kernelFunc:kP};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CP(e,t,n,r,a,i,s,o,u){const l=iI([r,i],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const i=e[n*a+t];c+=i*s[t],r.push(i)}if(c<0||c>=u/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<i;e++)l.values[n*i+e]=t.get(...t.indexToLoc(c*i+e))}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(e,t,n){const r=iI(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),i=a[0],s=a[2],o=t.locToIndex([i,s]);a[2]=t.values[o];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NP=OL(((e,t)=>e>t?1:0)),TP=jL($y,NP,null,"bool"),EP={kernelName:$y,backendName:"cpu",kernelFunc:TP},RP=OL(((e,t)=>e>=t?1:0)),AP=jL(Fy,RP,null,"bool"),DP={kernelName:Fy,backendName:"cpu",kernelFunc:AP},$P=OL(((e,t)=>e<t?1:0)),FP=jL(Wy,$P,null,"bool"),_P={kernelName:Wy,backendName:"cpu",kernelFunc:FP},OP=OL(((e,t)=>e<=t?1:0)),MP=jL(Vy,OP,null,"bool"),LP={kernelName:Vy,backendName:"cpu",kernelFunc:MP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PP(e,t,n){const r=(t-e)/(n-1),a=sv(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=nP((e=>Math.log(e))),zP=aP(Gy,BP),WP={kernelName:Gy,backendName:"cpu",kernelFunc:zP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VP(e,t,n,r){const a=qg(r,Pg(n));for(let n=0;n<a.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>i)&&(i=t)}a[n]=i}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UP=OL(((e,t)=>Math.max(e,t))),GP=jL(Jy,UP),HP={kernelName:Jy,backendName:"cpu",kernelFunc:GP},jP=OL(((e,t)=>Math.min(e,t))),qP=jL(sb,jP),KP={kernelName:sb,backendName:"cpu",kernelFunc:qP},XP=OL(((e,t)=>e*t)),YP=qL(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),QP=jL(cb,XP,YP),JP={kernelName:cb,backendName:"cpu",kernelFunc:QP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZP(e,t,n){const r=Iw(-1,n);return XP([],t,r,e,n)}const eB={kernelName:hb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;AL(r,"neg");const a=n.data.get(r.dataId).values,[i,s]=ZP(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,i)}},tB=OL(((e,t)=>e!==t?1:0)),nB=jL(db,tB,null,"bool"),rB={kernelName:db,backendName:"cpu",kernelFunc:nB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aB(e,t,n,r,a){const i=t.length,s=Pg(t),o=nv(t),u=nv(a),l=qg(n,Pg(a));for(let t=0;t<s;++t){const n=cv(t,i,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[lv(a,i,u)]=e[t]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:i}=n;AL(a,"transpose");const s=a.shape.length,o=new Array(s);for(let e=0;e<o.length;e++)o[e]=a.shape[i[e]];const u=aB(r.data.get(a.dataId).values,a.shape,a.dtype,i,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const sB={kernelName:bx,backendName:"cpu",kernelFunc:iB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(e,t,n,r){const[a,i]=VC(e,r),s=Zw(t,"int32"),o=sv(Pg(a),s),u=Pg(i);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:s}}const uB={kernelName:kb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;AL(a,"prod");const o=a.shape.length,u=Hg(i,a.shape),l=HC(u,o);let c=u,h=a;const d=[];null!=l&&(h=iB({inputs:{x:a},backend:n,attrs:{perm:l}}),d.push(h),c=qC(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=oB(h.shape,h.dtype,p,c);let v=m;return s&&(v=UC(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,g,f)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(e,t,n,r){const a=[];let i=0;const s=t.length-1+n.length,o=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let s=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=o[a],t=e[e.length-1]-r[s];for(let e=s;e<u;++e)o[a].push(r[e+1]+t)}s=r[s],u=r[u]}u!==s&&(a.push([s,u]),i+=u-s)}return{outSplits:o,valueSlices:a,numValues:i}}function cB(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function hB(e,t,n,r,a){const i=t.slice();i[0]=a;const s=Kg(n,Pg(i)),o=e.length;return function(e,t,n,r,a,i){const s=cB(t,2)[1],o=cB(i,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[u*o+t]=e[n*s+t];++u}}(e,t,r,0===o?0:o/t[0],s,i),[s,i]}function dB(e,t,n,r,a,i,s,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const a=cv(r,t.length,nv(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(i,s,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=lB(i,s,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=Kg("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=hB(n,r,a,c,h);return[d,p[0],p[1]]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pB=2147483647;function fB(e,t,n,r,a,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===a.length,l=0===s.length,c=[];o||c.push(t[0]),u||c.push(a[0]),l||c.push(s[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=Kg("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],a=u?r[0]:r[t],s=l?i[0]:i[t];if(0===s)throw new Error("Requires delta != 0");let c;if(s>0&&a<n||s<0&&a>n)c=0;else if(c=Math.ceil(Math.abs((a-n)/s)),c>pB)throw new Error(`Requires ((limit - start) / delta) <= ${pB}`);d[t+1]=d[t]+c}const p=Kg(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const a=l?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=r,r+=a}return[d,p]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mB=LE;class gB{constructor(e,t,n,r,a,i,s,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=BE(l),this.raggedRank=zE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===mB.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===mB.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case mB.VALUE_ROWIDS:return gB.getMaxWidthValueRowID(t);case mB.ROW_SPLITS:return gB.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${mB[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,a=Math.max(i-n,a),n=i)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return yB(e,n)}calculateOutputSize(e){const t=this.valuesShape;WE(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=PE(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),a=[];let i=0;for(let e=0;e<r;++e,i+=t)a.push(i);for(let t=r;t<e;++t)a.push(-1);return Og(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,i=[];for(let s=0;s<a-1;++s){const a=e[s+1]-e[s];let o=Math.min(r,a),u=t[s];-1===u&&(o=0);for(let e=0;e<o;++e)i.push(u),u+=n;for(let e=0;e<a-o;++e)i.push(-1)}if(a>0&&i.length!==e[a-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,i=[];if(0===a)return[];let s=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];i.push(u);for(let l=1;l<a;++l){const a=e[l];if(a===o)u>=0&&(++s,s<r?u+=n:u=-1);else{if(s=0,o=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case mB.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case mB.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${mB[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case mB.FIRST_DIM_SIZE:return e[0];case mB.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case mB.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${mB[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=yB(t,!1),a=Kg(this.valuesDType,Pg(r));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){i=this.calculateOutputIndex(e-1,i,n[e],t[e])}this.setOutput(this.raggedRank,i,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;const a=this.values,i=n;let s=r.slice();s=s.slice(e+1);const o=Pg(s),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;hI((()=>{const t=jI(l,e),n=sC(t,s);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=a.subarray(c*o);vB(i.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)i.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;){vB(i.slice(d*o),l,o),++d}r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function vB(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function yB(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function bB(e,t,n,r,a,i,s,o,u,l){return new gB(e,t,n,r,a,i,s,o,u,l).compute()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return sv(0,r);const a=sv(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wB=nP((e=>1/Math.sqrt(e))),kB=aP(Pb,wB),IB={kernelName:Pb,backendName:"cpu",kernelFunc:kB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CB(e,t,n,r,a,i,s,o,u,l){const c=[r/a,a],h=e.values,d=t.values;if(0===r)return iI(n,t.dtype);const p=u instanceof Ww?u:iI(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<i;e++){const i=[];let u=0;for(let t=0;t<s;t++){const n=h[e*s+t];i.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=d[e*a+n]:p.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB=nP((e=>1/(1+Math.exp(-e)))),NB=rP(Kb,(e=>1/(1+Math.exp(-e)))),TB={kernelName:Kb,backendName:"cpu",kernelFunc:NB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EB(e,t,n,r,a){const i=NE(r,t,n),s=Pg(n),o=nv(r);if(i){const n=TE(t,o);return"string"===a?e.slice(n,n+s):e.subarray(n,n+s)}const u=iI(r,a,"string"===a?BR(e):e),l=iI(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?zR(l.values):l.values}function RB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r;AL(a,"slice");const[o,u]=EE(a,i,s);gE(a,o,u);const l=EB(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const AB={kernelName:Gb,backendName:"cpu",kernelFunc:RB};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(e,t,n,r,a,i,s){const o=t[0],u=i[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(IR(o));return[Kg(n,0),[0,h],Kg(a,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(CR(t,n));if(n>=u)throw new Error(SR(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],i=Kg(n,t*h),d=Kg(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=p[n],s=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<h;++n)i[s*h+n]=e[t*h+n];d[s]=r[t],c[t]=s}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=s}}return[i,[t,h],d,l,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(e,t,n,r,a){const i=Pg(r),s=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(NR(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(TR(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/l);if(l*e!==i)throw new Error(RR(r,u));u[c]=e}if(Pg(u)!==i)throw new Error(AR(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=Kg(n,s*o);for(let t=0;t<s;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[s,o],u]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(e,t,n,r,a,i=!1,s=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=Kg(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(s),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=a[p];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(FR(g,c));g>m&&d.fill(s,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(_R(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(i)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(s,m*l,c*l),[d,h]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=nP((e=>Math.sqrt(e))),OB=rP(Yb,(e=>Math.sqrt(e))),MB={kernelName:Yb,backendName:"cpu",kernelFunc:OB},LB=OL(((e,t)=>{const n=e-t;return n*n})),PB=jL(sx,LB),BB={kernelName:sx,backendName:"cpu",kernelFunc:PB},zB=nP(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),WB=aP(ux,zB),VB={kernelName:ux,backendName:"cpu",kernelFunc:WB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UB(e,t,n,r){const a=iI(e,t.dtype);for(let e=0;e<a.size;e++){const i=a.indexToLoc(e),s=new Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*n[e]+r[e];a.set(t.get(...s),...i)}return a}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GB{constructor(e,t,n,r,a,i){this.separator=Nw(e),this.nGramWidths=t,this.leftPad=Nw(n),this.rightPad=Nw(r),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,i){for(let s=0;s<a;++s){const o=this.getPadWidth(i),u=Math.max(0,o-s),l=Math.max(0,o-(a-(s+1))),c=i-(u+l),h=t+(u>0?0:s-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(u+l+c-1)*this.separator.length,n[r+s]=new Uint8Array(d);const p=n[r+s];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,i=Kg("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const s=new Array(i[a]);for(let n=0;n<a;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,i);this.createNGrams(e,r,s,a,u,i),a+=u})),this.preserveShort&&a===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,u=1;this.createNGrams(e,r,s,a,u,o)}}return[s,i]}}function HB(e,t,n,r,a,i,s,o){return new GB(n,r,a,i,s,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let i=e.indexOf(a);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(a,i);n&&0===t.length||r.push(t),a=i+1}}function qB(e,t,n){const r=e.length,a=[];let i=0,s=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;jB(e[u],t,n,a);const l=a.length-r;o[u]=l,i+=l,s=Math.max(s,l)}const u=Kg("int32",2*i),l=new Array(i),c=[r,s];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(e,t){const n=Kg("int32",e.length);for(let r=0;r<e.length;++r)n[r]=kw(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XB=OL(((e,t)=>e-t)),YB=qL(((e,t,n,r)=>({real:e-n,imag:t-r}))),QB=jL(px,XB,YB),JB={kernelName:px,backendName:"cpu",kernelFunc:QB};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZB(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=iI(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const i=e.locToIndex(a);r.values[t]=e.values[i]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ez=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function tz(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,i=t-n+1,s=Math.log(a),o=.5*Math.exp(2*s/3),u=.5*Math.sqrt(s*o*(a-o)/a)*Math.sign(i-a/2);tz(e,t,Math.max(n,Math.floor(t-i*o/a+u)),Math.min(r,Math.floor(t+(a-i)*o/a+u)))}const a=e[t];let i=n,s=r;for(_g(e,n,t),ez(e[r],a)>0&&_g(e,n,r);i<s;){for(_g(e,i,s),i++,s--;ez(e[i],a)<0;)i+=1;for(;ez(e[s],a)>0;)s-=1}0===ez(e[n],a)?_g(e,n,s):(s+=1,_g(e,s,r)),s<=t&&(n=s+1),t<=s&&(r=s-1)}}function nz(e,t,n,r,a){const i=t[t.length-1],[s,o]=[e.length/i,i],u=qg(n,s*r),l=qg("int32",s*r);for(let t=0;t<s;t++){const n=t*o,i=e.subarray(n,n+o);let s=new Array(i.length);i.forEach(((e,t)=>s[t]={value:e,index:t})),r<s.length&&(tz(s,r),s=s.slice(0,r)),a&&s.sort(ez);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=s[e].value,d[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[iI(c,n,u),iI(c,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(e,t,n,r){const a=Hg(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const s=new Map,o=new Int32Array(n[a]),u=new Ww(i,r,e),l=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=s.get(n);if(null!=r)o[t]=r;else{const e=s.size;s.set(n,e),o[t]=e,l.push(t)}}const h=i.slice();h[1]=s.size;const d=new Ww(h,r);l.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var az=Object.freeze({__proto__:null,simpleAbsImpl:FL,addImpl:KL,bincountImpl:JL,bincountReduceImpl:ZL,bitwiseAndImpl:eP,castImpl:UL,ceilImpl:iP,concatImpl:uP,equalImpl:lP,expImpl:dP,expm1Impl:mP,floorImpl:yP,floorDivImpl:wP,gatherNdImpl:CP,gatherV2Impl:SP,greaterImpl:NP,greaterEqualImpl:RP,lessImpl:$P,lessEqualImpl:OP,linSpaceImpl:PP,logImpl:BP,maxImpl:VP,maximumImpl:UP,minimumImpl:jP,multiplyImpl:XP,negImpl:ZP,notEqualImpl:tB,prodImpl:oB,raggedGatherImpl:dB,raggedRangeImpl:fB,raggedTensorToTensorImpl:bB,rangeImpl:xB,rsqrtImpl:wB,scatterImpl:CB,sigmoidImpl:SB,sliceImpl:EB,sparseFillEmptyRowsImpl:DB,sparseReshapeImpl:$B,sparseSegmentReductionImpl:FB,sqrtImpl:_B,squaredDifferenceImpl:LB,staticRegexReplaceImpl:zB,stridedSliceImpl:UB,stringNGramsImpl:HB,stringSplitImpl:qB,stringToHashBucketFastImpl:KB,subImpl:XB,tileImpl:ZB,topKImpl:nz,transposeImpl:aB,uniqueImpl:rz});/** @license See the LICENSE file. */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
fI("cpu",(()=>new $L),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const iz=rP(vy,(e=>e>=0?e:Math.exp(e)-1)),sz={kernelName:vy,backendName:"cpu",kernelFunc:iz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r;AL([a],"leakyRelu");const s=Pg(a.shape),o=n.data.get(a.dataId).values,u=qg("float32",s);for(let e=0;e<o.length;e++)u[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const uz={kernelName:zy,backendName:"cpu",kernelFunc:oz},lz=OL(((e,t)=>e<0?t*e:e));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;AL([r,a],"prelu");const i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,[o,u]=lz(r.shape,a.shape,i,s,"float32");return n.makeTensorInfo(u,"float32",o)}const hz={kernelName:wb,backendName:"cpu",kernelFunc:cz},dz=rP(Rb,(e=>Math.max(0,e))),pz={kernelName:Rb,backendName:"cpu",kernelFunc:dz},fz=rP(Ob,(e=>Math.min(Math.max(0,e),6))),mz={kernelName:Ob,backendName:"cpu",kernelFunc:fz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gz(e,t,n,r,a){if("linear"===n)return BL({inputs:{x:t},backend:e});if("relu"===n)return dz({inputs:{x:t},backend:e});if("elu"===n)return iz({inputs:{x:t},backend:e});if("relu6"===n)return fz({inputs:{x:t},backend:e});if("prelu"===n)return cz({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return oz({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return NB({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=Pg(a.shape),o=Gg(i,s),u=Pg(o);Og(s===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const yz={kernelName:Ab,backendName:"cpu",kernelFunc:vz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=r;AL([a,i],"matMul");const u=a.shape.length,l=i.shape.length,c=s?a.shape[u-2]:a.shape[u-1],h=o?i.shape[l-1]:i.shape[l-2],d=s?a.shape[u-1]:a.shape[u-2],p=o?i.shape[l-2]:i.shape[l-1],f=a.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Pg(f),v=Pg(m),y=DC(a.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);Og(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`));const b=o?[v,p,h]:[v,h,p],x=vz({inputs:{x:a},backend:n,attrs:{shape:s?[g,c,d]:[g,d,c]}}),w=vz({inputs:{x:i},backend:n,attrs:{shape:b}}),k=s?x.shape[1]:x.shape[2],I=s?x.shape[2]:x.shape[1],C=o?w.shape[1]:w.shape[2],S=Math.max(g,v),N=n.data.get(x.dataId).values,T=n.data.get(w.dataId).values,E=nv(x.shape),R=nv(w.shape),[A,D,$]=s?[E[0],1,E[1]]:[E[0],E[1],1],[F,_,O]=o?[1,R[1],R[0]]:[R[1],1,R[0]],M=I*C,L=iI([S,I,C],x.dtype),P=L.values,B=n.blockSize;for(let e=0;e<S;e++){const t=e%g,n=e%v;for(let r=0;r<I;r+=B){const a=Math.min(r+B,I);for(let i=0;i<C;i+=B){const s=Math.min(i+B,C);for(let o=0;o<k;o+=B){const u=Math.min(o+B,k);for(let l=r;l<a;l++)for(let r=i;r<s;r++){let a=0;for(let e=o;e<u;e++){a+=N[t*A+l*D+e*$]*T[e*F+r*_+n*O]}P[e*M+(l*C+r)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,L.dtype,L.values)}const xz={kernelName:Pv,backendName:"cpu",kernelFunc:bz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wz={kernelName:Nx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=bz({inputs:{a:a,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),s&&(p=YL({inputs:{a:d,b:s},backend:n}),m.push(d),d=p),c&&(f=gz(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}},kz=rP(wv,(e=>Math.acos(e))),Iz={kernelName:wv,backendName:"cpu",kernelFunc:kz},Cz=rP(kv,(e=>Math.acosh(e))),Sz={kernelName:kv,backendName:"cpu",kernelFunc:Cz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz={kernelName:Cv,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,r=t;AL(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),i=iI(r[0].shape,r[0].dtype),s=i.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz={kernelName:Sv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;AL(a,"all");const o=Hg(i,a.shape);let u=o;const l=HC(u,a.shape.length);let c=a;null!=l&&(c=iB({inputs:{x:a},backend:n,attrs:{perm:l}}),u=qC(u.length,a.shape.length)),GC("all",u,c.shape.length);const[h,d]=VC(c.shape,u),p=Pg(d),f=sv(Pg(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=vz({inputs:{x:g},backend:n,attrs:{shape:UC(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez={kernelName:Nv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;AL(a,"any");const o=Hg(i,a.shape);let u=o;const l=HC(u,a.shape.length);let c=a;null!=l&&(c=iB({inputs:{x:a},backend:n,attrs:{perm:l}}),u=qC(u.length,a.shape.length)),GC("any",u,c.shape.length);const[h,d]=VC(c.shape,u),p=Pg(d),f=sv(Pg(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=vz({inputs:{x:g},backend:n,attrs:{shape:UC(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz={kernelName:Tv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;AL(a,"argMax");let s=Hg(i,a.shape);const o=HC(s,a.shape.length);let u=a;const l=[];null!=o&&(u=iB({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=qC(s.length,u.shape.length)),s=[s[0]],GC("argMax",s,u.shape.length);const[c,h]=VC(u.shape,s),d=sv(Pg(c),"int32"),p=Pg(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a>n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az={kernelName:Ev,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;AL(a,"argMin");let s=Hg(i,a.shape);const o=HC(s,a.shape.length);let u=a;const l=[];null!=o&&(u=iB({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=qC(s.length,u.shape.length)),s=[s[0]],GC("argMin",s,u.shape.length);const[c,h]=VC(u.shape,s),d=sv(Pg(c),"int32"),p=Pg(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a<n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Dz=rP(Rv,(e=>Math.asin(e))),$z={kernelName:Rv,backendName:"cpu",kernelFunc:Dz},Fz=rP(Av,(e=>Math.asinh(e))),_z={kernelName:Av,backendName:"cpu",kernelFunc:Fz},Oz=rP(Dv,(e=>Math.atan(e))),Mz={kernelName:Dv,backendName:"cpu",kernelFunc:Oz},Lz=OL(((e,t)=>Math.atan2(e,t))),Pz=jL(Fv,Lz),Bz={kernelName:Fv,backendName:"cpu",kernelFunc:Pz},zz=rP($v,(e=>Math.atanh(e))),Wz={kernelName:$v,backendName:"cpu",kernelFunc:zz};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vz(e,t,n,r,a,i){const s=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,d=a.padInfo.top,p=a.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=iI(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*v,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outHeight;++v){const x=v*s-d,w=Math.max(0,x),k=Math.min(a.inHeight,c+x),I=n+v*y;for(let n=0;n<a.outWidth;++n){const s=n*o-p,c=Math.max(0,s),d=Math.min(a.inWidth,h+s);let v=f,y=0,x=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<d;n+=l){const s=e[a+n*r[2]+t];"max"===i&&s>v?v=s:"avg"===i&&(y+=s,x++)}if(isNaN(v))break}g[I+n*b+t]="avg"===i?y/x:v}}}return m}function Uz(e,t,n,r,a=!1,i=!1){const s=iI(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=iI(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let v=g;for(;v<0;)v+=l;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const b=Math.min(r.inWidth,d+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let n=v;n<y;n+=l){const s=n-g;for(let o=p;o<b;o+=c){const u=o-h,l=m.get(e,n,o,t);l>x&&(x=l,w=a?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:s*d+u)}}s.set(w,e,n,o,t)}}return s}function Gz(e,t,n,r,a,i){const s=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,d=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,v=a.padInfo.left,y="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=iI(a.outShape,n),x=b.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],C=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*s-m;let N=S;for(;N<0;)N+=l;const T=Math.min(a.inDepth,d+S),E=n+w*k;for(let n=0;n<a.outHeight;++n){const s=n*o-g;let d=s;for(;d<0;)d+=c;const m=Math.min(a.inHeight,p+s),w=E+n*I;for(let n=0;n<a.outWidth;++n){const s=n*u-v;let o=s;for(;o<0;)o+=h;const p=Math.min(a.inWidth,f+s),g=w+n*C;let k=y,I=0,S=0;for(let n=N;n<T;n+=l){const a=b+n*r[1];for(let n=d;n<m;n+=c){const s=a+n*r[2];for(let n=o;n<p;n+=h){const a=e[s+n*r[3]+t];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===i?I/Math.max(S,1):k}}}}return b}const Hz={kernelName:_v,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;AL(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;Og(VI(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=$I(a.shape,i,s,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Bg(l.inShape,l.outShape))c=BL({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=nv(a.shape),r=Vz(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jz={kernelName:Mv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r;AL(a,"avgPool3d");const c=FI(a.shape,i,s,1,o,u,l),h=Gz(n.data.get(a.dataId).values,a.shape,a.dtype,nv(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qz={kernelName:Lv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;AL([a,i],"avgPool3DGrad");const c=FI(i.shape,s,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,v=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=x-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,N=iI(i.shape,"float32"),T=1/(f*m*g),E=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const i=n-I,s=r-S,o=a-C;let u=0;for(let n=0;n<x;n+=v){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const a=(s+n)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=b){const i=(o+n)/p;if(i<0||i>=c.outWidth||Math.floor(i)!==i)continue;u+=E.get(e,r,a,i,t)}}}N.set(u*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kz={kernelName:Ov,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;AL([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=$I(s.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,v=c.effectiveFilterHeight,y=c.effectiveFilterWidth,b=y-1-c.padInfo.left,x=v-1-c.padInfo.top,w=iI(s.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,C=iI(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-x,i=r-b;let s=0;for(let n=0;n<v;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const a=(i+n)/d;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;s+=C.get(e,r,a,t)}}w.set(s*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xz={kernelName:Ry,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:i,offset:s,mean:o,variance:u}=t;Og(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Og(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Og(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),AL([a,o,u,i,s],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,v=p.length,y=d.length,b=h.length;let x=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+l),x>=g&&(x=0),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yz={kernelName:Bv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;AL([a],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),u=HE(a.shape,i,o),l=jE(u.length,i.length),c=qE(a.shape,i,o),h=KE(s,i.length),d=XE(c,s,i.length),p=vz({inputs:{x:a},backend:n,attrs:{shape:u}}),f=iB({inputs:{x:p},backend:n,attrs:{perm:l}}),m=vz({inputs:{x:f},backend:n,attrs:{shape:c}}),g=RB({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz={kernelName:zv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=JL(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz={kernelName:Vv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,o=DC(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Zz=rP(Hv,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),eW={kernelName:Hv,backendName:"cpu",kernelFunc:Zz},tW={kernelName:qv,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Pg(t.shape)),a=n.data.get(t.dataId),i=a.complexTensorInfos.real,s=a.complexTensorInfos.imag,o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nW(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,i)}const rW={kernelName:My,backendName:"cpu",kernelFunc:nW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aW(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=Hg(a,t[0].shape)[0],s=t.map((e=>e.shape));OE(s,i);let o=ME(t.map((e=>e.shape)),i);if(0===Pg(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>Pg(e.shape)>0));if(1===u.length)return BL({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>WL({inputs:{input:e},backend:n}))),t=u.map((e=>nW({inputs:{input:e},backend:n}))),r=aW({inputs:e,backend:n,attrs:{axis:i}}),a=aW({inputs:t,backend:n,attrs:{axis:i}}),s=ML({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map((e=>{const t=Pg(e.shape.slice(i));return vz({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=ME(l.map((e=>e.shape)),1);const h=1===l[0].shape[0],d=uP(c,o,t[0].dtype,h),p=ME(u.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const iW={kernelName:Kv,backendName:"cpu",kernelFunc:aW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sW(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;AL([a,i],"conv2d");const h=GI(u),d=_I(a.shape,i.shape,s,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,v=d.padInfo.left,y=d.padInfo.top,b="channelsLast"===d.dataFormat,x=new Ww(d.outShape,a.dtype),w=nv(a.shape),k=nv(i.shape),I=w[0],C=b?w[1]:w[2],S=b?w[2]:1,N=b?1:w[1],T=x.strides[0],E=b?x.strides[1]:x.strides[2],R=b?x.strides[2]:1,A=b?1:x.strides[1],D=n.data.get(a.dataId).values,$=n.data.get(i.dataId).values,F=x.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*T;for(let e=0;e<d.outHeight;++e){const r=n+e*E,a=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=d.inHeight)continue;const i=e*k[0],s=t+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*R,n=e*d.strideWidth-v;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const a=s+r*S;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=D[a+e*N];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*$[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,F)}const oW={kernelName:Xv,backendName:"cpu",kernelFunc:sW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW={kernelName:Yv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;AL([a,i],"conv2dBackpropFilter");const h=GI(u),d=_I(a.shape,c,s,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,v="channelsLast"===d.dataFormat,y=new Ww(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=new Ww(a.shape,a.dtype,w),C=new Ww(i.shape,i.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/p)),n=Math.min(d.outHeight,(d.inHeight+x-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),i=Math.min(d.outWidth,(d.inWidth+b-r)/f);for(let s=0;s<d.inChannels;++s)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-x;for(let e=a;e<i;++e){const n=r+e*f-b;u+=v?I.get(l,t,n,s)*C.get(l,c,e,o):I.get(l,s,t,n)*C.get(l,o,c,e)}}y.set(u,e,r,s,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lW={kernelName:Qv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;AL([a,i],"conv2dBackpropInput");const h=nv(i.shape),d=nv(a.shape);let p=GI(l);const f=_I(s,i.shape,o,1,u,c,!1,p),m=new Ww(f.inShape,"float32"),g=m.values,v=n.data.get(a.dataId).values,y=n.data.get(i.dataId).values,[b,x,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:N,inWidth:T,outChannels:E,outHeight:R,outWidth:A,strideHeight:D,strideWidth:$}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,_=C-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,B=O?1:m.strides[1],z=d[0],W=O?d[1]:d[2],V=O?d[2]:1,U=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){const r=n-F,a=Math.max(0,Math.ceil(r/D)),i=Math.min(R,(I+r)/D);for(let s=0;s<T;++s){const o=s-_,u=Math.max(0,Math.ceil(o/$)),l=Math.min(A,(C+o)/$);let c=0;for(let n=a;n<i;++n){const a=n*D-r;for(let r=u;r<l;++r){const i=z*e+W*n+V*r,s=b*(I-1-a)+x*(C-1-(r*$-o))+w*t;for(let e=0;e<E;++e){c+=v[i+U*e]*y[s+e]}}}g[M*e+L*n+P*s+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW={kernelName:Jv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r;AL([a,i],"conv3d");const l=OI(a.shape,i.shape,s,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,v=g.front,y=g.left,b=g.top,x=new Ww(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(i.dataId).values,I=x.values,C=nv(a.shape),S=nv(i.shape);for(let e=0;e<l.batchSize;++e){const t=e*C[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],a=e*l.strideDepth-v;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const i=e*S[0],s=t+n*C[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-b;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=i+e*S[1],o=s+r*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const i=a+e*S[2],s=o+t*l.inChannels;let u=i;for(let e=0;e<l.inChannels;++e){const t=w[s+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW={kernelName:Zv,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r;AL([a,i],"conv3dBackpropFilterV2");const l=nv(a.shape),c=nv(i.shape),h=OI(a.shape,u,s,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,v=h.filterWidth,y=new Ww(h.filterShape,"float32"),b=y.values,[x,w,k,I]=y.strides,C=n.data.get(i.dataId).values,[S,N,T,E]=c,R=n.data.get(a.dataId).values,[A,D,$,F]=l,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/d)),n=Math.min(h.outDepth,(h.inDepth+_-e)/d),r=e*x;for(let a=0;a<g;++a){const i=Math.max(0,Math.ceil((M-a)/p)),s=Math.min(h.outHeight,(h.inHeight+M-a)/p),o=a*w+r;for(let r=0;r<v;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,v=m*S;for(let m=t;m<n;++m){const t=(e+m*d-_)*D+h,n=m*N+v;for(let e=i;e<s;++e){const i=(a+e*p-M)*$+t,s=e*T+n;for(let e=u;e<l;++e){const t=e*E+s;g+=R[(r+e*f-O)*F+i+o]*C[t+c]}}}}b[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW={kernelName:ey,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r;AL([a],"conv3dBackpropInputV2");const l=nv(a.shape),c=nv(i.shape),h=OI(u,i.shape,o,1,s),d=new Ww(h.inShape,"float32"),p=d.values,[f,m,g,v]=d.strides,y=n.data.get(a.dataId).values,[b,x,w,k]=l,I=n.data.get(i.dataId).values,[C,S,N,T]=c,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:D,inChannels:$,inDepth:F,inHeight:_,inWidth:O,outChannels:M,outDepth:L,outHeight:P,outWidth:B,strideDepth:z,strideHeight:W,strideWidth:V}=h,U=R-1-h.padInfo.front,G=A-1-h.padInfo.top,H=D-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<$;++t)for(let n=0;n<F;++n){const r=n-U,a=Math.max(0,Math.ceil(r/z)),i=Math.min(L,(R+r)/z);for(let s=0;s<_;++s){const o=s-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(P,(A+o)/W);for(let c=0;c<O;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(D+h)/V);let $=0;for(let n=a;n<i;++n){const a=n*z-r;for(let r=u;r<l;++r){const i=r*W-o;for(let s=d;s<E;++s){const o=b*e+x*n+w*r+k*s,u=C*(R-1-a)+S*(A-1-i)+N*(D-1-(s*V-h))+T*t;for(let e=0;e<M;++e){$+=y[o+e]*I[u+e]}}}}p[f*e+m*n+g*s+v*c+t]=$}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},pW=rP(ty,(e=>Math.cos(e))),fW={kernelName:ty,backendName:"cpu",kernelFunc:pW},mW=rP(ny,(e=>Math.cosh(e))),gW={kernelName:ny,backendName:"cpu",kernelFunc:mW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:iy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=a.shape,f=i.shape[0],[m,g]=o,v=iI([f,m,g,p],"float32"),y=n.data.get(i.dataId).values,b=n.data.get(s.dataId).values,x=n.data.get(a.dataId).values,w=nv(a.shape),k=nv(v.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],i=y[t+3],s=b[e];if(s>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];v.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let i=r+h*w[2]+n*w[1]+s*w[0];const l=x[i];i=r+m*w[2]+n*w[1]+s*w[0];const c=x[i];i=r+h*w[2]+a*w[1]+s*w[0];const d=x[i];i=r+m*w[2]+a*w[1]+s*w[0];const p=l+(c-l)*y,f=d+(x[i]-d)*y;i=r+u*k[2]+t*k[1]+e*k[0],v.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(a<0||a>d-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*w[2]+u*w[1]+s*w[0],i=r+n*k[2]+t*k[1]+e*k[0];v.values[i]=x[a]}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:ry,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;AL(a,"cumprod");const u=HC([i],a.shape.length);let l=a;null!=u&&(l=iB({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=qC(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Zw(l.dtype,"int32"),d=iv(Pg(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?1:p[n];else{const r=m(e,t-1);d[n]=s?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=iB({inputs:{x:g},backend:n,attrs:{perm:jC(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW={kernelName:ay,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;AL(a,"cumsum");const u=HC([i],a.shape.length);let l=a;null!=u&&(l=iB({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=qC(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Zw(l.dtype,"int32"),d=sv(Pg(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=s?0:p[n];else{const r=m(e,t-1);d[n]=s?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=iB({inputs:{x:g},backend:n,attrs:{perm:jC(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW={kernelName:sy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=JL(n.data.get(a.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===a.shape.length){const e=ZL(n.bufferSync(a),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:oy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r;Og("NHWC"===s,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*i,d=l*i,p=c/(i*i),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const a=Math.floor(t/i),s=(r*i+t%i)*p;for(let t=0;t<p;++t){const r=t+s+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kW(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:l}=r;AL([a,i],"depthwiseConv2DNative");const c=nv(a.shape),h=nv(i.shape);let d=u;null==d&&(d=[1,1]),Og(VI(s,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`));const p=_I(a.shape,i.shape,s,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:v,padInfo:y}=p,b=y.left,x=y.top,w=p.outChannels/p.inChannels,k=new Ww(p.outShape,a.dtype),I=n.data.get(a.dataId).values,C=n.data.get(i.dataId).values,S=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const i=e*h[0],s=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*v;if(r<0||r>=p.inWidth)continue;const a=i+e*h[1],o=s+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)S[u+e]+=t*C[l+e];u+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const IW={kernelName:uy,backendName:"cpu",kernelFunc:kW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW={kernelName:ly,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;AL([a,i],"depthwiseConv2dNativeBackpropFilter");const h=_I(a.shape,c,s,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ww(h.filterShape,"float32"),v=h.padInfo.left,y=h.padInfo.top,b=h.outChannels/h.inChannels,x=n.data.get(a.dataId).values,w=new Ww(a.shape,a.dtype,x),k=n.data.get(i.dataId).values,I=new Ww(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((v-r)/p)),i=Math.min(h.outWidth,(h.inWidth+v-r)/p);for(let s=0;s<h.outChannels;++s){const o=Math.trunc(s/b),u=s%b;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=a;e<i;++e){const n=r+e*p-v;l+=w.get(u,t,n,o)*I.get(u,c,e,s)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW={kernelName:cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;AL([a,i],"depthwiseConv2DNativeBackpropInput");const h=nv(a.shape),d=nv(i.shape),p=_I(c,i.shape,s,o,u,l,!0),f=new Ww(p.inShape,"float32"),m=f.values,[g,v,y]=f.strides,b=n.data.get(a.dataId).values,[x,w,k]=h,I=n.data.get(i.dataId).values,[C,S,N]=d,{batchSize:T,filterHeight:E,filterWidth:R,inChannels:A,inHeight:D,inWidth:$,outChannels:F,outHeight:_,outWidth:O,strideHeight:M,strideWidth:L}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,z=F/A;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<D;++n){const r=n-P,a=Math.max(0,Math.ceil(r/M)),i=Math.min(_,(E+r)/M);for(let s=0;s<$;++s){const o=s-B,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(R+o)/L);let c=0;for(let n=a;n<i;++n){const a=n*M-r;for(let r=u;r<l;++r){const i=x*e+w*n+k*r,s=C*(E-1-a)+S*(R-1-(r*L-o))+N*t;for(let e=0;e<z;++e){c+=b[i+(t*z+e)]*I[s+e]}}}m[g*e+v*n+y*s+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW={kernelName:hy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=Pg(r.shape),i=n.data.get(r.dataId).values,s=iI([a,a],r.dtype),o=s.values;for(let e=0;e<i.length;e++)o[e*a+e]=i[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,s.dtype,s.values)}},TW={kernelName:dy,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:i,pad:s,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:v,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:N}=DI(r.shape,a.shape,i,s,"NHWC",o),T=Pg(N),E=N.length,R=Kg(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<v;++t){const n=t*x-b.top;for(let i=0;i<y;++i){const s=i*w-b.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const i=n+t*C;if(i>=0&&i<f)for(let n=0;n<I;++n){const p=s+n*S;if(p>=0&&p<m){const s=lv([e,i,p,o],c,nv(r.shape)),f=lv([t,n,o],d,nv(a.shape)),m=l[s]+h[f];m>u&&(u=m)}}}R[lv([e,t,i,o],E,nv(N))]=u}}}return{dataId:u.write(Cw(R,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},EW={kernelName:fy,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,l=t,c=av(r.shape,l.data.get(r.dataId).values),h=av(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:v,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:S}=DI(r.shape,a.shape,s,o,"NHWC",u);Og(i.rank===S.length,(()=>`Error in ${fy}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=av(S,l.data.get(i.dataId).values),T=ov(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-y.top;for(let r=0;r<v;++r){const a=r*x-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*C;if(l>=0&&l<f){const a=c[e][r][l][i]+h[t][n][i];a>s&&(s=a,o=t,u=n)}}}T[o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(Cw(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},RW={kernelName:py,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:i}=e,{strides:s,pad:o,dilations:u}=n,l=t,c=av(r.shape,l.data.get(r.dataId).values),h=av(a.shape,l.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:v,padInfo:y,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:C,outShape:S}=DI(r.shape,a.shape,s,o,"NHWC",u);Og(i.rank===S.length,(()=>`Error in ${py}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=av(S,l.data.get(i.dataId).values),T=ov(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*b-y.top;for(let r=0;r<v;++r){const a=r*x-y.left;for(let i=0;i<m;++i){let s=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*C;if(l>=0&&l<f){const a=c[e][r][l][i]+h[t][n][i];a>s&&(s=a,o=r,u=l)}}}T[e][o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(Cw(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AW={kernelName:"Draw",backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:i,options:s}=r,{contextOptions:o,imageOptions:u}=s||{},l=(null==u?void 0:u.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,v=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*l];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===a.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===a.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;v[n+0]=Math.round(t[0]),v[n+1]=Math.round(t[1]),v[n+2]=Math.round(t[2]),v[n+3]=Math.round(t[3])}i.width=p,i.height=d;const y=new ImageData(v,p,d);return h.putImageData(y,0,0),a}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DW(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;let o;AL(a,"sum"),o="bool"===a.dtype?GL({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):BL({inputs:{x:a},backend:n});const u=o.shape.length,l=Hg(i,o.shape),c=HC(l,u);let h=l,d=o;null!=c&&(d=iB({inputs:{x:o},backend:n,attrs:{perm:c}}),h=qC(h.length,u)),GC("sum",h,d.shape.length);const[p,f]=VC(d.shape,h);let m=PL(n,p,Zw(d.dtype,"int32"));const g=Pg(f),v=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<v.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];v[e]=n}if(s){const e=m;m=vz({inputs:{x:m},backend:n,attrs:{shape:UC(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const $W={kernelName:Qb,backendName:"cpu",kernelFunc:DW};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW={kernelName:gy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=gR(a,i.length);yR(s.length,u,i);const{path:l,steps:c}=bR(o,u),h=c.length;let d=null,p=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=vR(p,u[t]);let a;xR(e)?a=i[t]:(a=iB({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Bg(a.shape,s)||(a=vz({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=QP({inputs:{a:a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=DW({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W={kernelName:yy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;AL([r,a],"eluGrad");const i=new Float32Array(Pg(a.shape)),s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<s.length;++e){const t=s[e];i[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",i)}},OW=rP(by,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+.3275911*n);return t*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-n*n))})),MW={kernelName:by,backendName:"cpu",kernelFunc:OW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LW(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:i}=r,s=a.shape.length,o=a.shape.slice();let u=i;return i<0&&(Og(-(s+1)<=i,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+i+1),o.splice(u,0,1),vz({inputs:{x:a},backend:n,attrs:{shape:o}})}const PW={kernelName:ky,backendName:"cpu",kernelFunc:LW},BW=OL(((e,t)=>e/t)),zW=jL(my,BW),WW={kernelName:my,backendName:"cpu",kernelFunc:zW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VW(e,t,n){const r=e.shape,a=r[0],i=r[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,u=s.complexTensorInfos.imag,l=[a,i],c=Pg(l),h=qg("float32",c),d=qg("float32",c);for(let e=0;e<a;e++){const r=RB({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=RB({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=ML({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=UW(s,t,n),p=aR(l,c);for(let t=0;t<i;t++){const n=uR(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=ML({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function UW(e,t,n){const r=Pg(e.shape),a=n.data.get(e.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,s=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=GW(i,s,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),i=n.makeTensorInfo([],"float32",Iw(r,"float32")),s=BL({inputs:{x:i},backend:n}),u=WW.kernelFunc({inputs:{a:e,b:i},backend:n}),l=WW.kernelFunc({inputs:{a:t,b:s},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let i=0,s=0;for(let r=0;r<t;r++){const o=hR(a*r,t,n),u=uR(e,r);i+=u.real*o.real-u.imag*o.imag,s+=u.real*o.imag+u.imag*o.real}n&&(i/=t,s/=t),lR(r,i,s,a)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(aR(i,s),r,t);return iR(e)}var o}function GW(e,t,n,r,a){if(1===n)return{real:e,imag:t};const i=aR(e,t),s=n/2,o=sR(i),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),d=a.makeTensorInfo(c,"float32",l),p=ML({inputs:{real:h,imag:d},backend:a}),f=oR(i),m=f.real,g=f.imag,v=[m.length],y=a.makeTensorInfo(v,"float32",m),b=a.makeTensorInfo(v,"float32",g),x=ML({inputs:{real:y,imag:b},backend:a}),w=GW(u,l,s,r,a),k=w.real,I=w.imag,C=[k.length],S=a.makeTensorInfo(C,"float32",k),N=a.makeTensorInfo(C,"float32",I),T=ML({inputs:{real:S,imag:N},backend:a}),E=GW(m,g,s,r,a),R=E.real,A=E.imag,D=[R.length],$=a.makeTensorInfo(D,"float32",R),F=a.makeTensorInfo(D,"float32",A),_=ML({inputs:{real:$,imag:F},backend:a}),O=cR(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),P=a.makeTensorInfo(M,"float32",O.imag),B=ML({inputs:{real:L,imag:P},backend:a}),z=QP({inputs:{a:B,b:_},backend:a}),W=YL({inputs:{a:T,b:z},backend:a}),V=QB({inputs:{a:T,b:z},backend:a}),U=WL({inputs:{input:W},backend:a}),G=WL({inputs:{input:V},backend:a}),H=nW({inputs:{input:W},backend:a}),j=nW({inputs:{input:V},backend:a}),q=aW({inputs:[U,G],backend:a,attrs:{axis:0}}),K=aW({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const HW={kernelName:Cy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=Pg(r.shape),i=r.shape[r.shape.length-1],s=vz({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=VW(s,!1,n),u=vz({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jW(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:i}=n,s=i||Zg(a),o=Kg(s,Pg(r));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(o,a),t.makeTensorInfo(r,s,o)}const qW={kernelName:Sy,backendName:"cpu",kernelFunc:jW};const KW={kernelName:Ny,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,i=qg(r.dtype,Pg(r.shape)),[s,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<s;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const s=Math.round(u-e-1),o=t+n+r+a;let h=c[o];if(s>=0&&s<u){h=c[t+n+s*l+a]}i[o]=h}}}}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW={kernelName:Tx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=sW({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(s){const e=m;if("NCHW"===c&&1===s.shape.length&&1!==s.shape[0]){const e=vz({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=YL({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=YL({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=vz({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=gz(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=gz(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YW={kernelName:Ex,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=kW({inputs:{x:a,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(s){const e=m;m=YL({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=gz(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW={kernelName:Dy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=Pg(r.shape),s=a.shape,o=s[s.length-1],[u,l,c,h]=pE(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=CP(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,d.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW={kernelName:Ay,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r;AL([a,i],"gatherV2");const u=Hg(s,a.shape)[0],l=n.data.get(i.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];Og(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=Pg(i.shape),p=LR(a,i,u,h),f=vz({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=vz({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],v=n.bufferSync(m),y=SP(n.bufferSync(f),v,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZW={kernelName:Oy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=Pg(r.shape),i=r.shape[r.shape.length-1],s=vz({inputs:{x:r},backend:n,attrs:{shape:[a/i,i]}}),o=VW(s,!0,n),u=vz({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}},eV=rP(Ly,(e=>Number.isFinite(e)?1:0),"bool"),tV={kernelName:Ly,backendName:"cpu",kernelFunc:eV},nV=rP(Py,(e=>Math.abs(e)===1/0?1:0),"bool"),rV={kernelName:Py,backendName:"cpu",kernelFunc:nV},aV=rP(By,(e=>Number.isNaN(e)?1:0),"bool"),iV={kernelName:By,backendName:"cpu",kernelFunc:aV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV={kernelName:Uy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=PP(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},oV=rP(Hy,(e=>Math.log1p(e))),uV={kernelName:Hy,backendName:"cpu",kernelFunc:oV},lV=OL(((e,t)=>e&&t)),cV=jL(jy,lV,null,"bool"),hV={kernelName:jy,backendName:"cpu",kernelFunc:cV},dV=rP(qy,(e=>e?0:1),"bool"),pV={kernelName:qy,backendName:"cpu",kernelFunc:dV},fV=OL(((e,t)=>e||t)),mV=jL(Ky,fV,null,"bool"),gV={kernelName:Ky,backendName:"cpu",kernelFunc:mV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV={kernelName:Xy,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r;AL(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,d=Pg(a.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(s+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV={kernelName:Yy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;AL(s,"LRNGrad");const h=Pg(s.shape),d=s.shape[3],p=n.data.get(s.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),v=h;for(let e=0;e<v;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(s.shape,a.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=n;let u=a.shape;const l=u.length,c=Hg(i,u);let h=c;const d=HC(h,l);let p=o.data.get(a.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=aB(p,u,a.dtype,d,e),h=qC(h.length,l),u=e}AL(a,"max"),GC("max",h,l);const[f,m]=VC(u,h),g=VP(p,Pg(m),f,a.dtype),v=o.write(g,f,a.dtype);let y=f;if(s){y=UC(f,c)}return{dataId:v,shape:y,dtype:a.dtype}}const xV={kernelName:Qy,backendName:"cpu",kernelFunc:bV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV={kernelName:Zy,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;AL(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;Og(VI(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=$I(a.shape,i,s,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&Bg(l.inShape,l.outShape))c=BL({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=nv(a.shape),r=Vz(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV={kernelName:tb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r;AL(a,"maxPool3d");const c=FI(a.shape,i,s,1,o,u,l),h=Gz(n.data.get(a.dataId).values,a.shape,a.dtype,nv(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV={kernelName:nb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;AL([a,i],"maxPool3DGrad");const c=FI(i.shape,s,o,1,u,l),h=function(e,t){const n=iI(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let v=0;v<t.outDepth;++v){const y=v*r-d;let b=y;for(;b<0;)b+=s;const x=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let d=l;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*i-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<x;t+=s){const n=t-y;for(let r=d;r<w;r+=o){const a=r-l;for(let i=k;i<I;i+=u){const s=i-p,o=e.get(m,t,r,i,g);o>=C&&(C=o,S=n*c*h+a*c+s)}}}n.set(S,m,v,r,a,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,v=c.dilationWidth,y=c.effectiveFilterDepth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=x-1-c.padInfo.left,I=b-1-c.padInfo.top,C=iI(i.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const i=n-w,s=r-I,o=a-k;let u=0;for(let n=0;n<y;n+=m){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){const i=(s+a)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let s=0;s<x;s+=v){const l=(o+s)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=y*b*x-1-h.get(e,r,i,l,t)===n*b*x+a*x+s?1:0;if(0===d)continue;u+=S.get(e,r,i,l,t)*d}}}C.set(u,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CV={kernelName:eb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;AL([i,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=$I(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=iI(d.outShape,o.dtype,Uz(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,v=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=x-1-d.padInfo.left,k=b-1-d.padInfo.top,I=iI(o.shape,"float32"),C=n.data.get(a.dataId).values,S=iI(a.shape,"float32",C);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-k,i=r-w;let s=0;for(let n=0;n<b;n+=v){const r=(a+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=y){const o=(i+a)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;if(0===u)continue;s+=S.get(e,r,o,t)*u}}I.set(s,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SV={kernelName:rb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;AL(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=$I(r.shape,a,i,[1,1],s),[h,d]=function(e,t,n,r,a){const i=Vz(e,0,n,nv(t),a,"max"),s=Uz(e,t,n,a,!0,r);return[i.values,s.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV={kernelName:ab,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=Hg(i,a.shape),u=Pg(VC(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=GL({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=zW({inputs:{a:h,b:c},backend:n});l.push(d);const p=DW({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV={kernelName:ib,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;AL(a,"min");const o=Hg(i,a.shape);let u=o;const l=HC(u,a.shape.length);let c=a;null!=l&&(c=iB({inputs:{x:a},backend:n,attrs:{perm:l}}),u=qC(u.length,a.shape.length)),GC("min",u,c.shape.length);const[h,d]=VC(c.shape,u),p=Pg(d),f=sv(Pg(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(s){const e=vz({inputs:{x:g},backend:n,attrs:{shape:UC(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV={kernelName:ob,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,mode:s}=r;AL(a,"mirrorPad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),l=i.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===s?0:1,h=n.data.get(a.dataId).values,d=a.shape.length,p=nv(a.shape),f=Pg(o),m=o.length,g=nv(o),v=qg(a.dtype,f);for(let e=0;e<f;e++){let t=cv(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=lv(t,d,p);v[e]=h[n]}return{dataId:n.write(v,o,a.dtype),shape:o,dtype:a.dtype}}},RV=OL(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),AV=jL(ub,RV),DV={kernelName:ub,backendName:"cpu",kernelFunc:AV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $V(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=a.shape.length;let o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);const u=Hg([o],a.shape),l=bV({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=UC(l.shape,u),h=vz({inputs:{x:l},backend:n,attrs:{shape:c}}),d=QB({inputs:{a:a,b:h},backend:n}),p=pP({inputs:{x:d},backend:n}),f=DW({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=vz({inputs:{x:f},backend:n,attrs:{shape:c}}),g=zW({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const FV={kernelName:ex,backendName:"cpu",kernelFunc:$V};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V={kernelName:lb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r;AL(a,"multinomial");const u=o?a:$V({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=sv(Pg(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=fN.alea(s.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}},OV=CT;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV={kernelName:pb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r;AL(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=OV(l,c,s,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},LV=ST;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV={kernelName:fb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;AL(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=LV(c,h,s,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},BV=NT;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV={kernelName:mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;AL(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=s,p=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=BV(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV={kernelName:vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=r;AL(a,"oneHot");const l=Pg(a.shape),c=new Float32Array(l*s);c.fill(u);const h=n.data.get(a.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<s&&(c[e*s+h[e]]=o);return n.makeTensorInfo([...a.shape,s],i,c)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=WL({inputs:{input:r},backend:n}),t=VV({inputs:{x:e},backend:n}),a=nW({inputs:{input:r},backend:n}),i=VV({inputs:{x:a},backend:n}),s=ML({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return jW({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const UV={kernelName:Ix,backendName:"cpu",kernelFunc:VV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:gb,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=WL({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=nW({inputs:{input:a},backend:r}),s=VV({inputs:{x:i},backend:r}),o=ML({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return jW({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return LW({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{Mg(i,e.shape,"All tensors passed to stack must have matching shapes"),Og(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=LW({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),l=aW({inputs:u,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const jV={kernelName:yb,backendName:"cpu",kernelFunc:HV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV={kernelName:bb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;AL(a,"pad");const o=i.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=i.map((e=>e[0])),l=n.data.get(a.dataId).values,c=Pg(a.shape),h=a.shape.length,d=nv(a.shape),p=Pg(o),f=o.length,m=nv(o),g=qg(a.dtype,p);0!==s&&g.fill(s);for(let e=0;e<c;e++){const t=cv(e,h,d).map(((e,t)=>e+u[t]));g[lv(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},KV=OL(((e,t)=>Math.pow(e,t))),XV=jL(xb,KV),YV={kernelName:xb,backendName:"cpu",kernelFunc:XV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV={kernelName:Ib,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,o=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),l=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values,[h,d,p]=dB(o,u,l,i.shape,i.dtype,c,s.shape),f=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(p,i.dtype,d);return f.concat([m])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV={kernelName:Cb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:i}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=fB(s,r.shape,r.dtype,o,a.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV={kernelName:Sb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(s.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=bB(l,a.shape,c,i.shape,i.dtype,h,s.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eU={kernelName:Nb,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:i,step:s}=n,o=xB(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},tU=rP(Eb,(e=>1/e)),nU={kernelName:Eb,backendName:"cpu",kernelFunc:tU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU={kernelName:Fb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;AL(a,"resizeBilinear");const u=nv(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Pg([h,l,c,f])),v=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c];let b=0;const x=v[0]/y[0],w=v[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=s?x*(t+.5)-.5:x*t;const r=Math.max(0,Math.floor(n)),a=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+i*u[1];for(let e=0;e<c;e++){let t;t=s?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+i*u[2],v=l+i*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],i=t+(m[d+e]-t)*r,s=i+(n+(m[v+e]-n)*r-i)*a;g[b++]=s}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aU={kernelName:_b,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;AL([i,a],"resizeBilinearGrad");const o=nv(a.shape),[u,l,c,h]=a.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),m=[s&&d>1?l-1:l,s&&p>1?c-1:c],g=[s&&d>1?d-1:d,s&&p>1?p-1:p],v=m[0]/g[0],y=m[1]/g[1],b=n.data.get(i.dataId).values;let x=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),i=t+r*o[1],s=t+a*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=i+n*o[2],m=i+r*o[2],g=s+n*o[2],v=s+r*o[2],w=d*l,k=d*a,I=u*l,C=u*a;for(let e=0;e<h;e++){const t=b[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[v+e]+=t*C}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iU={kernelName:Db,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r;AL(a,"resizeNearestNeighbor");const u=nv(a.shape),[l,c]=o,[h,d,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),v=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c],b=v[0]/y[0],x=v[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=s?b*(e+.5):b*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));s&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=s?x*(e+.5):x*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sU={kernelName:$b,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r;AL([i,a],"resizeNearestNeighborGrad");const o=nv(a.shape),u=nv(i.shape),[l,c,h,d]=a.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=n.data.get(i.dataId).values,v=[s&&p>1?c-1:c,s&&f>1?h-1:h],y=[s&&p>1?p-1:p,s&&f>1?f-1:f],b=v[0]/y[0],x=v[1]/y[1],w=1/b,k=1/x,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],l=Math.floor(r*k),v=Math.floor(l-C/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const l=i+a;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*b;if(e===Math.min(c-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+v;if(t<0||t>=f)continue;const a=d+t*u[2],i=t*x;r===Math.min(h-1,s?Math.round(i):Math.floor(i))&&(o+=g[a+n])}}m[i+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU={kernelName:Mb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r;AL(a,"reverse");const s=a.shape.length,o=Hg(i,a.shape);if(0===s)return BL({inputs:{x:a},backend:n});const u=new Ww(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},uU={kernelName:Sx,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=qg(r.dtype,Pg(r.shape)),[l,c,h,d]=r.shape,[p,f]=GE(s,c,h),m=Math.sin(a),g=Math.cos(a),v=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const a=r*d;for(let s=0;s<d;s++){const o=[l,e,r,s],y=o[2],b=o[1];let x=(y-p)*g-(b-f)*m,w=(y-p)*m+(b-f)*g;x=Math.round(x+p),w=Math.round(w+f);let k=i;if("number"!=typeof i&&(k=3===s?255:i[s]),x>=0&&x<h&&w>=0&&w<c){k=v[t+w*(h*d)+x*d+s]}u[t+n+a+s]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},lU=rP(Lb,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),cU={kernelName:Lb,backendName:"cpu",kernelFunc:lU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hU={kernelName:Bb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=QN(0,a,s),d=CB(n.bufferSync(a),n.bufferSync(i),s,h,l,u,o,c,0,!0);return n.makeTensorInfo(s,d.dtype,d.values)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dU(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function pU(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const fU={kernelName:Wb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:s}=r,o=function(e,t,n,r,a,i){const s=Kg("int32",n*a);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*a;for(let e=0;e<a;++e)s[u+e]="left"===i?dU(n,t[e+u]):pU(n,t[e+u])}return s}(n.data.get(a.dataId).values,n.data.get(i.dataId).values,a.shape[0],a.shape[1],i.shape[1],s);return n.makeTensorInfo(i.shape,"int32",o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU={kernelName:Vb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t;AL([r,a,i],"select");const s=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,c=Zw(a.dtype,i.dtype),h=sv(Pg(a.shape),c);let d=0;const p=0===s||s>1||1===a.shape.length?1:Pg(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},gU=rP(Ub,(e=>e>=0?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1))),vU={kernelName:Ub,backendName:"cpu",kernelFunc:gU},yU=rP(qb,(e=>e<0?-1:e>0?1:0)),bU={kernelName:qb,backendName:"cpu",kernelFunc:yU},xU=rP(Hb,(e=>Math.sin(e))),wU={kernelName:Hb,backendName:"cpu",kernelFunc:xU},kU=rP(jb,(e=>Math.sinh(e))),IU={kernelName:jb,backendName:"cpu",kernelFunc:kU},CU=Math.log(1.1920928955078125e-7)+2,SU=rP(Xb,(e=>{const t=e>-CU,n=e<CU,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),NU={kernelName:Xb,backendName:"cpu",kernelFunc:SU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU={kernelName:Jb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;AL([a],"spaceToBatchND");const o=Pg(i),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const l=qV.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=HE(l.shape,i,o,!1),h=jE(c.length,i.length,!1),d=qE(l.shape,i,o,!1),p=vz({inputs:{x:l},backend:n,attrs:{shape:c}}),f=iB({inputs:{x:p},backend:n,attrs:{perm:h}}),m=vz({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU={kernelName:tx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(s.dataId).values[0],[h,d,p,f,m]=DB(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU={kernelName:nx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=$B(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU={kernelName:rx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=FB(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU={kernelName:ax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(a.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values,[l,c]=FB(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U={kernelName:ix,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=QN(0,a,o),p=!1,f=n.bufferSync(a);let m;switch(i.dtype){case"bool":m=CB(f,n.bufferSync(i),o,d,c,l,u,h,Boolean(n.data.get(s.dataId).values[0]),p);break;case"float32":m=CB(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(s.dataId).values[0],p);break;case"int32":m=CB(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(s.dataId).values[0],p);break;case"string":m=CB(f,n.bufferSync(i),o,d,c,l,u,h,Tw(n.data.get(s.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FU={kernelName:Zb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=Hg(s,a.shape)[0],u=kR(a,i,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=RB({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},_U={kernelName:ox,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;AL(n,"square");const a=r.data.get(n.dataId).values,i=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},OU=rP(Cx,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),MU={kernelName:Cx,backendName:"cpu",kernelFunc:OU};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LU={kernelName:lx,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;AL(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:v,begin:y,end:b,strides:x}=RE(a.shape,i,s,o,u,l,c,h,d);let w;if(m)w=vz({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||v){Og(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=vE(y,b,x),t=RB({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=vz({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=UB(p,n.bufferSync(a),x,y);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:cx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=HB(d,p,a,i,s,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU={kernelName:hx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.data.get(i.dataId).values,u=n.data.get(s.dataId).values[0],[l,c,h]=qB(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU={kernelName:dx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=KB(n.data.get(i.dataId).values,a);return n.makeTensorInfo(i.shape,"int32",s)}},WU=rP(fx,(e=>Math.tan(e))),VU={kernelName:fx,backendName:"cpu",kernelFunc:WU},UU=rP(mx,(e=>Math.tanh(e)));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU={kernelName:zb,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:i}=t,{sliceRank:s,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=QN(0,a,r.shape),h=n.bufferSync(a),d=n.bufferSync(i),p=n.bufferSync(r),f=CB(h,d,r.shape,c,u,o,s,l,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU={kernelName:gx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;AL(a,"tile");const s=ZB(n.bufferSync(a),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU={kernelName:vx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r;AL(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=nz(o,a.shape,a.dtype,i,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qU={kernelName:yx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],v=nv(a.shape),y=v[0],b=v[1],x=v[2],w=nv(g),k=w[0],I=w[1],C=w[2],S=qg(a.dtype,Pg(g));S.fill(u);const N=r.data.get(a.dataId).values,T=r.data.get(i.dataId).values;for(let e=0;e<c;++e){const t=1===i.shape[0]?T:T.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let i;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=KU(c,d,o),m=KU(p,h,o);switch(s){case"nearest":i=YU(N,h,d,y,b,x,e,m,f,a,u);break;case"bilinear":i=QU(N,h,d,y,b,x,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}S[e*k+n*I+r*C+a]=i}return r.makeTensorInfo(g,a.dtype,S)}return{dataId:r.write(S,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function KU(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return $g(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return $g(0,n,t-1)}(e,t);case"nearest":return function(e,t){return $g(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function XU(e,t,n,r,a,i,s,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[s*r+o*a+u*i+l]:c}function YU(e,t,n,r,a,i,s,o,u,l,c){return XU(e,t,n,r,a,i,s,Math.round(o),Math.round(u),l,c)}function QU(e,t,n,r,a,i,s,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*XU(e,t,n,r,a,i,s,h,d,l,c)+(u-d)*XU(e,t,n,r,a,i,s,h,f,l,c))+(o-h)*((f-u)*XU(e,t,n,r,a,i,s,p,d,l,c)+(u-d)*XU(e,t,n,r,a,i,s,p,f,l,c))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JU={kernelName:xx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;AL(i,"unique");const s=r.data.get(i.dataId).values,{outputValues:o,outputShape:u,indices:l}=rz(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU={kernelName:wx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a.shape.length,o=a.shape[i],u=new Array(s-1);let l=0;for(let e=0;e<s;e++)e!==i&&(u[l++]=a.shape[e]);const c=new Array(s).fill(0),h=a.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=RB({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});d[e]=vz({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG={kernelName:kx,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r;AL(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-i.shape.length;let c=i;for(let e=0;e<l;++e){const t=LW({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<s;++e){const t=Iw(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=cP({inputs:{a:r,b:c},backend:n}),s=GL({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),l=QP({inputs:{a:s,b:a},backend:n}),h=DW({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(i),u.push(s),u.push(l),u.push(h)}const h=HV({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},tG=[wz,_L,Iz,Sz,QL,Nz,Tz,Ez,Rz,Az,$z,_z,Mz,Bz,Wz,Hz,jz,qz,Kz,xz,Xz,Yz,Qz,tP,Jz,HL,oP,eW,LL,tW,iW,oW,uW,lW,cW,hW,dW,fW,gW,vW,yW,bW,xW,wW,IW,CW,SW,NW,TW,EW,RW,AW,FW,sz,_W,hP,MW,fP,PW,vP,HW,qW,KW,xP,IP,XW,YW,QW,JW,EP,DP,zL,ZW,rW,tV,rV,iV,uz,_P,LP,sV,WP,uV,hV,pV,gV,vV,yV,xV,HP,wV,kV,IV,CV,SV,NV,TV,KP,EV,DV,_V,JP,eB,MV,PV,zV,rB,WV,GV,jV,qV,YV,hz,uB,QV,JV,ZV,eU,VL,WW,nU,pz,mz,yz,rU,aU,iU,sU,oU,uU,cU,IB,hU,fU,mU,vU,TB,bU,wU,IU,AB,FV,NU,TU,EU,RU,AU,DU,$U,FU,MB,_U,BB,VB,MU,LU,PU,BU,zU,JB,$W,VU,{kernelName:mx,backendName:"cpu",kernelFunc:UU},GU,HU,jU,qU,sB,JU,ZU,eG,UV];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of tG)Ox(e);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG={},rG={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function aG(e,t){if(!(e in nG)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(mv().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete nG[e]}),!1),mv().getBool("SOFTWARE_WEBGL_ENABLED")&&(rG.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",rG)||n.getContext("experimental-webgl",rG);return n.getContext("webgl2",rG)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;nG[e]=n}const n=nG[e];return null==n||n.isContextLost()?(delete nG[e],aG(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),nG[e])}var iG,sG,oG;function uG(e,t){return[t,e]}function lG(e){const t=Pg(e);return Wg(Math.ceil(t/4))}function cG(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function hG(e,t){const n=e;let r,a,i,s,o,u,l,c,h,d;return 2===mv().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,s=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,i=e.RGBA,s=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:s,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(e,t){const n=t();return mv().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(iG||(iG={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(sG||(sG={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(oG||(oG={}));function pG(e){return!!(mv().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function fG(e,t){return IG(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const mG=/ERROR: [0-9]+:([0-9]+):/g;function gG(e,t){const n=mG.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map(((e,t)=>Vg((t+1).toString(),i)+e));let o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);const u=s.slice(0,r-1),l=s.slice(r-1,r),c=s.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Vg(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function vG(e,t){if(dG(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yG(e,t,n,r,a,i,s){const o=e.getAttribLocation(t,n);return-1!==o&&(dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),dG(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,i,s))),dG(e,(()=>e.enableVertexAttribArray(o))),!0)}function bG(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(e,n),dG(e,(()=>e.activeTexture(e.TEXTURE0+n))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function xG(e,t,n){dG(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),dG(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function wG(e,t){dG(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),dG(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function kG(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function IG(e,t,n){const r=dG(e,(()=>t()));if(null==r)throw new Error(n);return r}function CG(e,t=2){return Pg(e.slice(0,e.length-t))}function SG(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function NG(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[CG(e),...SG(e)]),t}function TG(e){return e%2==0}function EG(e,t){if(Bg(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(TG(n)&&TG(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&TG(e[0])&&TG(t[0])}let RG,AG;function DG(e,t){return null!=e.getExtension(t)}function $G(e){try{if(null!=aG(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function FG(e){if(0===e)return!1;const t=aG(e);if(1!==e){if(DG(t,"EXT_color_buffer_float"))return _G(t);const e="EXT_color_buffer_half_float";if(DG(t,e)){const n=t.getExtension(e);return function(e,t){const n=hG(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),o}(t,n)}return!1}if(!DG(t,"OES_texture_float"))return!1;if(!DG(t,"WEBGL_color_buffer_float"))return!1;return _G(t)}function _G(e){const t=hG(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function OG(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Og("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MG=mv();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LG(){let e,t,n,r,a,i,s,o,u,l;return 2===mv().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",s="out vec4 outputColor;",o=mv().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(e,t,n="index"){const r=nv(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function BG(e,t,n="index"){const r=nv(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function zG(e,t,n="index"){const r=e.map(((e,t)=>t)),a=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(r,t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${a[r]}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}function WG(e){const t=nv(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}MG.registerFlag("HAS_WEBGL",(()=>MG.getNumber("WEBGL_VERSION")>0)),MG.registerFlag("WEBGL_VERSION",(()=>$G(2)?2:$G(1)?1:0)),MG.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),MG.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===MG.get("WEBGL_VERSION"))),MG.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),MG.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),MG.registerFlag("WEBGL_PACK",(()=>MG.getBool("HAS_WEBGL"))),MG.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_CLIP",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_REDUCE",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_LAZILY_UNPACK",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_CONV_IM2COL",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>MG.getBool("WEBGL_PACK"))),MG.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==RG){const t=aG(e);RG=t.getParameter(t.MAX_TEXTURE_SIZE)}return RG}(MG.getNumber("WEBGL_VERSION")))),MG.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==AG){const t=aG(e);AG=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,AG)}(MG.getNumber("WEBGL_VERSION")))),MG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=MG.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=aG(e);return t=DG(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:DG(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),MG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>MG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!dk())),MG.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=aG(e);if(1===e){if(!DG(t,"OES_texture_float"))return!1}else if(!DG(t,"EXT_color_buffer_float"))return!1;return _G(t)}(MG.getNumber("WEBGL_VERSION")))),MG.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!MG.getBool("WEBGL_FORCE_F16_TEXTURES")&&MG.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),MG.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>FG(MG.getNumber("WEBGL_VERSION")))),MG.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=MG.getNumber("WEBGL_VERSION"))&&null!=aG(e).fenceSync;var e})),MG.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>MG.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),MG.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),MG.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>dk()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),MG.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),MG.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),MG.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),MG.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),MG.registerFlag("WEBGL_EXP_CONV",(()=>!1)),MG.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>MG.getBool("IS_TEST"))),MG.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),MG.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),MG.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),MG.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const VG="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:UG}=WR;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(e,t,n){const r=[];if(e.forEach((e=>{const t=Pg(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=tH(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?jG(e,r):HG(e,r);const i=e.shapeInfo.logicalShape,s=t.logicalShape;i.length<=s.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=UG(e.shapeInfo.logicalShape,t.logicalShape),u=eH(s),l=s-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":s<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===Pg(e.shapeInfo.logicalShape),m=Pg(t.logicalShape),g=1===m;if(1!==i||f||g){if(f&&!g)p=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&Bg(s,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=eH(u),c=UG(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,o=LG(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${qG}\n    ${KG}\n    ${XG}\n  `;return t}(o);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return QG();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Bg(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),i=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),i=a*Math.ceil(e[e.length-2]/2);let s=i,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return QG();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(Bg(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${BG(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=PG(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${BG(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=PG(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=PG(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=PG(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,s,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=YG);return[h,u,c,a,l,i,n.userCode].join("\n")}function HG(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,i]=e.shapeInfo.texShape;if(1===a&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const s=JG(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ZG(e)}\n      }\n    `;const a=e.shapeInfo.texShape,i=a[0],s=a[1];if(1===s&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=JG(n);if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&Bg(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:s,keptDims:o}=jg(n),u=s;if(u.length<n.length){const n=["row","col"];return`\n      ${HG(nH(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${rH(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ZG(e)}\n      }\n    `;const l=i[0],c=i[1],h=JG(r);if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],s=n[2],{newShape:o,keptDims:u}=jg(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${HG(nH(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${rH(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${ZG(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=JG(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],s=n[2]*i,o=n[1]*s,{newShape:u,keptDims:l}=jg(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${HG(nH(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${rH(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${i}, 1)));\n        ${ZG(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const v=JG(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,s=t[2]*i,o=t[1]*s,{newShape:u,keptDims:l}=jg(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${HG(nH(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${rH(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${i}, ${a})) +\n          depth3;\n        ${ZG(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=JG(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=jg(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${HG(nH(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${rH(t,i)});\n      }\n    `}const s=t[5],o=t[4]*s,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${ZG(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=JG(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function jG(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=LG();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=LG();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],u=LG();if(null!=i&&Bg(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${jG(nH(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${rH(i,r)});\n        }\n      `}const o=LG();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=s[0],l=s[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=LG();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[s-1]/2);let d=h*Math.ceil(i[s-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<s-1;e++)p=`int b${e}, `+p,d*=i[s-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const qG="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",KG="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",XG="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YG="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function QG(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function JG(e){return`offset${e}`}function ZG(e){const t=e.name,n=Pg(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function eH(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function tH(e,t,n){const{newShape:r,keptDims:a}=jg(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):r,u=!e&&i>1&&!Bg(t,n)&&r.length<i||s;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function nH(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function rH(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=GG(a,s,t),u=function(e,t){const n=IG(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dG(e,(()=>e.shaderSource(n,t))),dG(e,(()=>e.compileShader(n))),mv().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw gG(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return mv().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s},iH(e,t,l)))}function iH(e,t,n){const r=[],a=[];let i,s,o,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===mv().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const a of t.variableNames){const i={name:a,uniform:e.getUniformLocation(n,a,c),offset:e.getUniformLocation(n,`offset${a}`,c)};t.enableShapeUniforms&&(i.shape=e.getUniformLocation(n,`${a}Shape`,c),i.texShape=e.getUniformLocation(n,`${a}TexShape`,c)),r.push(i)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),s=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:l,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:s}}function sH(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],i=a.shape;if(!Bg(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Bg(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)}))}function oH(e){return mv().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=iG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=LG();this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?BG(["r","c","d"],e):PG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=iG.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=LG();this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?BG(["r","c","d"],e):PG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cH{constructor(e){this.variableNames=["A"],this.outTexUsage=sG.DOWNLOAD;const t=LG();this.outputShape=e,this.userCode=`\n      ${VG}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=sG.DOWNLOAD;const t=LG();this.outputShape=e,this.userCode=`\n      ${VG}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH={R:0,G:1,B:2,A:3};class pH{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=LG();this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${dH[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WG(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fH{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=LG();this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const i=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WG(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(e){const t=LG();return function(e,t){const n=IG(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dG(e,(()=>e.shaderSource(n,t))),dG(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function gH(e){return function(e,t){const n=IG(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dG(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function vH(e){return function(e,t){const n=IG(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dG(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),dG(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function yH(e,t,n,r,a,i){!function(e,t){const n=mv().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const s=function(e){return IG(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return dG(e,(()=>e.bindTexture(o,s))),dG(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),dG(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),dG(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),dG(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===mv().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texImage2D(o,0,r,t,n,0,a,i,null))):dG(e,(()=>e.texStorage2D(o,1,r,t,n))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function bH(e){return e.internalFormatFloat}function xH(e){return e.internalFormatHalfFloat}function wH(e){return e.downloadTextureFormat}function kH(e){return e.internalFormatPackedFloat}function IH(e){return e.internalFormatPackedHalfFloat}function CH(e,t,n,r,a,i,s,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=cG(e,t);return n*r*4}(i,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SH{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=mv().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){nG[e]=t}(t,e)):this.gl=aG(t),e=this.gl,2===mv().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>dG(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>dG(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>dG(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>dG(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>dG(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>dG(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>dG(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>dG(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===mv().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=fG(this.gl,e),DG(this.gl,t))this.textureHalfFloatExtension=fG(this.gl,t);else if(mv().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),DG(this.gl,r))this.colorBufferHalfFloatExtension=fG(this.gl,r);else if(mv().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",DG(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!DG(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=gH(this.gl),this.indexBuffer=vH(this.gl),this.framebuffer=function(e){return IG(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=hG(this.gl,this.textureHalfFloatExtension)}get debug(){return mv().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;dG(e,(()=>e.finish())),dG(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),dG(e,(()=>e.deleteFramebuffer(this.framebuffer))),dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),dG(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),dG(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=uG(t,n);return yH(e,a,i,bH(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=uG(t,n);return yH(e,a,i,xH(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=uG(t,n);return yH(e,a,i,wH(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){dG(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===mv().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):dG(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===mv().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):dG(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,i){let s,o,u;dG(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),o=e.FLOAT,u=i.internalFormatPackedFloat),s.set(a),2===mv().getNumber("WEBGL_VERSION")?dG(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,s))):dG(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,s))),dG(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=cG(t,n);return yH(e,a,i,IH(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,i]=cG(t,n);return yH(e,a,i,kH(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(wG(this.gl,this.framebuffer),this.outputTexture=null),dG(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,i]=uG(t,n),s=new Uint8Array(t*n*4);return dG(e,(()=>e.readPixels(0,0,a,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,i){return CH(this.gl,e,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();dG(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const i=16*t*n;return dG(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),dG(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),dG(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(mv().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return dG(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=mH(t));const n=function(e){return IG(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);dG(t,(()=>t.attachShader(n,this.vertexShader))),dG(t,(()=>t.attachShader(n,e))),function(e,t){if(dG(e,(()=>e.linkProgram(t))),!mv().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&vG(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;dG(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){dG(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),yG(e,t,"clipSpacePos",n,3,20,0)&&yG(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(dG(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&vG(this.gl,this.program),dG(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return IG(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),dG(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){dG(e,(()=>bG(e,t,r))),dG(e,(()=>e.uniform1i(n,r)))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=cG(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&vG(this.gl,this.program),kG(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}dG(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dG(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fG(this.gl,2===mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Ug((()=>this.disposed||this.isQueryAvailable(e,mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in mv().platform&&(n=mv().platform.setTimeoutCustom.bind(mv().platform)),Ug((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),xG(this.gl,e,this.framebuffer),this.debug&&kG(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(xG(this.gl,this.outputTexture,this.framebuffer),this.debug&&kG(this.gl)):wG(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;xG(r,e,this.framebuffer),this.debug&&kG(r),this.outputTexture=e,dG(r,(()=>r.viewport(0,0,t,n))),dG(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),dG(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:NH,bincountImpl:TH,bincountReduceImpl:EH,bitwiseAndImpl:RH,castImpl:AH,ceilImpl:DH,concatImpl:$H,equalImpl:FH,expImpl:_H,expm1Impl:OH,floorImpl:MH,gatherNdImpl:LH,gatherV2Impl:PH,greaterImpl:BH,greaterEqualImpl:zH,lessImpl:WH,lessEqualImpl:VH,linSpaceImpl:UH,logImpl:GH,maxImpl:HH,maximumImpl:jH,minimumImpl:qH,multiplyImpl:KH,negImpl:XH,notEqualImpl:YH,prodImpl:QH,raggedGatherImpl:JH,raggedRangeImpl:ZH,raggedTensorToTensorImpl:ej,rangeImpl:tj,rsqrtImpl:nj,scatterImpl:rj,sigmoidImpl:aj,simpleAbsImpl:ij,sliceImpl:sj,sparseFillEmptyRowsImpl:oj,sparseReshapeImpl:uj,sparseSegmentReductionImpl:lj,sqrtImpl:cj,staticRegexReplaceImpl:hj,stridedSliceImpl:dj,stringNGramsImpl:pj,stringSplitImpl:fj,stringToHashBucketFastImpl:mj,subImpl:gj,tileImpl:vj,topKImpl:yj,transposeImpl:bj,uniqueImpl:xj}=az;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wj(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function kj(e,t){return 1===t?[e]:wj(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ij{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=oH(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=kj("rc",this.rank),t=eH(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cj{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?zG(["r","c","d"],"inputShape"):PG(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":WG(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Sj{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=Tj(t,n),a=Ej(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=Nj(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let s;return r===oG.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===oG.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===oG.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===oG.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===oG.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Tj(n,r),i=Ej(t,a,r);i in this.freeTextures||(this.freeTextures[i]=[]);const s=Nj(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=mv().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const u=this.usedTextures[i],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Nj(e,t,n,r,a){const i=function(e,t){switch(e){case oG.PACKED_2X2_FLOAT32:return kH(t);case oG.PACKED_2X2_FLOAT16:return IH(t);case oG.UNPACKED_FLOAT32:return bH(t);case oG.UNPACKED_FLOAT16:return xH(t);case oG.PACKED_4X1_UNSIGNED_BYTE:return wH(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let s;if(a){const[t,n]=cG(e[0],e[1]);s=t*n}else{const[t,n]=uG(e[0],e[1]);s=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function Tj(e,t){if(e===sG.UPLOAD)return oG.PACKED_2X2_FLOAT32;if(e===sG.RENDER||null==e)return function(e){return mv().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?oG.PACKED_2X2_FLOAT32:oG.UNPACKED_FLOAT32:e?oG.PACKED_2X2_FLOAT16:oG.UNPACKED_FLOAT16}(t);if(e===sG.DOWNLOAD||e===sG.PIXELS)return oG.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Ej(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rj{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Aj="if (isnan(x)) return x;",Dj="return x;",$j="return abs(x);",Fj="return (x >= 0.0) ? x : (exp(x) - 1.0);",_j=Aj+"\n  return (x < 0.0) ? 0.0 : x;\n",Oj=Aj+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Mj="return x;",Lj="return 1.0 / (1.0 + exp(-1.0 * x));",Pj="return x;",Bj="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",zj="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Wj="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Vj="return 1.0 / (1.0 + exp(-1.0 * x));";class Uj{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gj{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length);const t=e.length,n=kj("rc",t),r=eH(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj=rT,jj={};const qj=mv().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Kj extends Rg{nextDataId(){return Kj.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!mv().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof SH)t=e;else{const n=aG(mv().getNumber("WEBGL_VERSION"),e);t=new SH(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=aG(mv().getNumber("WEBGL_VERSION"));t=new SH(e),this.binaryCache=((n=mv().getNumber("WEBGL_VERSION"))in jj||(jj[n]={}),jj[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Sj(this.gpgpu),this.numMBBeforeWarning=null==mv().global.screen?1024:mv().global.screen.height*mv().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Eg(this,lI())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,i){const s=this.makeTensorInfo(t,n),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];const u=NG(t),l=new pH(u,!1,i),c=this.runWebGLProgram(l,[s],n,[[r,a]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),c.dataId}write(e,t,n){if((mv().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||mv().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:sG.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(mv().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:sG.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:i,shape:s,isPacked:o}=t;if(null!=i){let t;t=o?new Uj(s,Mj):new Rj(s,Mj);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=Sw()),"complex64"===r){c=aR(this.readSync(a.real.dataId),this.readSync(a.imag.dataId))}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Sw()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:i,complexTensorInfos:s,isPacked:o}=t;if(null!=a){let t;t=o?new Uj(r,Mj):new Rj(r,Mj);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(mv().getBool("DEBUG")&&!mv().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===mv().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&mv().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...lG(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);l=aR(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=Pg(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;dG(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&lI().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:i,dtype:s,isPacked:o,texture:u}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new Uj(a,Mj):new Rj(a,Mj);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:s}],s),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=lI().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Tw(e)));return iI(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return iI(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!pG(n)){if(mv().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Pg(t);if(mv().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...lG(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),i}const i=mv().getBool("WEBGL_PACK")&&!0===r,s=i?NG(t):t,o=i?new hH(s):new cH(s),u=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=Rw(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=Rw(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);s.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Sw(),endMs:null}}endTimer(e){return mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Sw(),e)}async getQueryTime(e){if(mv().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,i)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=qj){return mv().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Pg(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Rx("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Hj(e.shape,t)}packedUnaryOp(e,t,n){const r=new Uj(e.shape,t),a=this.compileAndRun(r,[e],n);return lI().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=ij(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(mv().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$j,e.dtype);const t=new Rj(e.shape,$j),n=this.compileAndRun(t,[e]);return lI().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Qg(n[0])){const a=n.map((e=>Nw(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return lI().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Gj(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ij(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[CG(e.shape),...SG(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[CG(t),...SG(t)],i=new Cj(a,n),s=[n],o=this.runWebGLProgram(i,[r],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:i}=n;if(null!=t){Og(Pg(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=NG(a);let o;o=r?new lH(s):new uH(s);const u=[null!=t?t:lG(s)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(o,[{shape:s,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,i){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===iG.DENSE){const t=null!=i?i:lG(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Pg(s.shape))return o.values=qg(s.dtype,0),s;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Pg(t.shape)<=mv().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!EG(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:u}=tH(e.packedInputs,t.shape,i);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=nv(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&Bg(t.shape,i),f=1===Pg(t.shape),m=RC(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&Bg(i,n.texData.texShape),v=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${s?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${v}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+a+`${mv().getNumber("WEBGL_VERSION")}`,i}(e,l,c),d=this.getAndSaveBinary(h,(()=>aH(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),mv().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(sH(t.inShapeInfos,n),sH([t.outShapeInfo],[r]));const i=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===mv().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const a=n[r],{uniform:i,offset:s,shape:o,texShape:u}=t.variablesLocations[r];if(o){const{uniformShape:n}=tH(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,a.texData.texShape[0],a.texData.texShape[1]),null!=i)if(a.isUniform)if(Pg(a.shape)<2)e.gl.uniform1f(i,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,i,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=nv(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],i=t.customUniformLocations[n],s=a[n];if("float"===r.type)e.gl.uniform1fv(i,s);else if("vec2"===r.type)e.gl.uniform2fv(i,s);else if("vec3"===r.type)e.gl.uniform3fv(i,s);else if("vec4"===r.type)e.gl.uniform4fv(i,s);else if("int"===r.type)e.gl.uniform1iv(i,s);else if("ivec2"===r.type)e.gl.uniform2iv(i,s);else if("ivec3"===r.type)e.gl.uniform3iv(i,s);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(i,s)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=mv().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Sw();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!mv().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!mv().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=hI((()=>{if(!mv().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=mv().getBool("DEBUG");mv().set("DEBUG",!1);const t=this.abs(QC(1e-8)).dataSync()[0];if(mv().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:i,usage:s,isPacked:o}=t;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=Sw());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=mv().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=mv().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&mv().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?Fg(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=jg(e);e=t.newShape}let a=Pg(e),i=null;e.length<=1&&a<=n?i=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const s=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s)if(t){const t=CG(e);let n=2,r=2;e.length&&([n,r]=SG(e)),a=t*(n/2)*(r/2),i=Wg(a).map((e=>2*e))}else i=Wg(a);return i}(n,o),t.texShape=c),null!=a){const e=NG(n);let i,s=c[1],h=c[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&d||([s,h]=cG(c[0],c[1])),i=o?new fH(e,d):new pH(e,d);const p=d?[h,s]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?sG.PIXELS:sG.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,h,a);const g=[[h,s]],v=!0,y=this.runWebGLProgram(i,[f],r,g,v),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,mv().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Sw()-l)}else{const e=this.acquireTexture(c,s,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. */(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Yg(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await _E(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw gG(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=iH(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:i,channels:s}=e,o=lI().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,a,i,s);return lI().makeTensorFromDataId(u,t,n,o)}}Kj.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
pk()&&fI("webgl",(()=>new Kj),2)
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;const Xj="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Yj{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=DC(t,n),this.enableShapeUniforms=oH(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Jj{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=DC(t,n);const a=this.outputShape.length;this.enableShapeUniforms=oH(a);let i="";if(r)if(0===a||1===Pg(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${eH(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=kj("coords",a);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zj(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const eq={kernelName:_y,backendName:"webgl",kernelFunc:Zj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tq(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,i=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(i.dataId),o=Zj({inputs:{x:r},backend:n}),u=Zj({inputs:{x:a},backend:n});return s.complexTensorInfos={real:o,imag:u},i}const nq={kernelName:jv,backendName:"webgl",kernelFunc:tq},rq="return (a < 0.) ? b * a : a;",aq="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq={kernelName:zy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,s=n.makeTensorInfo([],"float32",Iw(i,"float32")),o=mv().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jj(aq,a.shape,s.shape):new Yj(rq,a.shape,s.shape),u=n.runWebGLProgram(o,[a,s],"float32");return n.disposeIntermediateTensorInfo(s),u}},sq="return (a < 0.) ? b * a : a;",oq="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq={kernelName:wb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=mv().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jj(oq,r.shape,a.shape):new Yj(sq,r.shape,a.shape);return n.runWebGLProgram(i,[r,a],"float32")}},lq="if (isnan(x)) return x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:i})=>{const{x:s}=a,o=i,u=r||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){const e=o.texData.get(s.dataId),t=n(e.values,u);return o.makeTensorInfo(s.shape,u,t)}let l;return l=mv().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Uj(s.shape,t):new Rj(s.shape,e),o.runWebGLProgram(l,[s],u)}}function hq({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:i}){return({inputs:s,backend:o})=>{const{a:u,b:l}=s,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},s=new Yj(e,u.shape,l.shape);return c.runWebGLProgram(s,[a,i],Zw(n.dtype,r.dtype))})),i=tq({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),i}const h=i||Zw(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?BR(e):e,r="string"===u.dtype?BR(t):t,[i,s]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(s,h);return c.texData.get(o.dataId).values=i,o}let d;return d=mv().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Jj(t,u.shape,l.shape,n):new Yj(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function dq(e,t=!1){if("linear"===e)return t?Pj:Dj;if("relu"===e)return t?zj:_j;if("elu"===e)return t?Bj:Fj;if("relu6"===e)return t?Wj:Oj;if("prelu"===e)return t?oq:sq;if("leakyrelu"===e)return t?aq:rq;if("sigmoid"===e)return t?Vj:Lj;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pq{constructor(e,t,n,r=!1,a=!1,i=!1,s=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=oH(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");const v=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${b};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${v}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fq={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class mq{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=DC(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq="return a * b;";function vq(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=Zw(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),i=new mq(fq.REAL,r.shape,a.shape),s=new mq(fq.IMAG,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(i,o,"float32"),l=n.runWebGLProgram(s,o,"float32"),c=tq({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,o]=KH(r.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=s,u}let s;return s=mv().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jj(gq,r.shape,a.shape):new Yj(gq,r.shape,a.shape),n.runWebGLProgram(s,[r,a],i)}const yq={kernelName:cb,backendName:"webgl",kernelFunc:vq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bq(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,s=n,o=Pg(a.shape),u=Gg(i,o),l=Pg(u);Og(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=s.texData.get(a.dataId);return!c.isPacked||EG(a.shape,u)||null!==c.texture&&EG(c.shape,u)?(s.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[CG(e.shape),...SG(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},i=[CG(t),...SG(t)],s=new Cj(i,r),o=[r],u=n.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,s)}const xq={kernelName:Ab,backendName:"webgl",kernelFunc:bq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wq{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];const s=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${zg(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kq{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=UE(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let s=0;s<a.length;s++){const{inSize:o,windowSize:u,outSize:l}=a[s];let c,h;c="mean"===n?0===s?new wq({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new wq({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new kq({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cq{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=eH(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Sq{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=eH(this.rank),a=wj("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=a[e];const s=`vec2(${i.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(e,t,n){const r=mv().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Sq(e.shape,t):new Cq(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tq(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r;return function(e,t,n,r){const a=t,i=e.shape.length,s=Hg(a,e.shape);let o=s;const u=HC(o,i),l=null!=u;let c=e;l&&(c=Nq(e,u,r),o=qC(o.length,i)),GC("sum",o,i);const[h,d]=VC(c.shape,o);let p=h;n&&(p=UC(h,s));const f=Pg(d),m=bq({inputs:{x:c},attrs:{shape:[Pg(e.shape)/f,f]},backend:r}),g=Iq(m,ek(e.dtype),"sum",r),v=bq({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),v}(a,i,s,n)}const Eq={kernelName:Qb,backendName:"webgl",kernelFunc:Tq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rq(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:i}=r,s=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[i[e]];let l;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,t=bj(e,a.shape,a.dtype,i,u);l=s.makeTensorInfo(u,a.dtype);s.texData.get(l.dataId).values=t}else l=Nq(a,i,s);return l}const Aq={kernelName:bx,backendName:"webgl",kernelFunc:Rq},Dq=1e3;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),v=Pg(m),y=Pg(g),b=DC(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);Og(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=n?[v,h,p]:[v,p,h],w=r?[y,f,d]:[y,d,f],k=bq({inputs:{x:e},backend:a,attrs:{shape:x}}),I=bq({inputs:{x:t},backend:a,attrs:{shape:w}}),C=[k,I],S=Math.max(v,y),N=n?k.shape[1]:k.shape[2],T=null!=i,E=null!=s,R="leakyrelu"===u,A=null!=u?dq(u,!0):null;let D;if((1===p||1===f)&&N>Dq&&!1===(T||E||R||null!=A)){let e=k,t=I;n&&(e=Rq({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=Rq({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),C.push(t));const i=1===f;let s=e;1!==f&&(s=bq({inputs:{x:e},backend:a,attrs:{shape:[S,N,1]}}),C.push(s));const o=1===f?2:1;let u=t;i&&(u=bq({inputs:{x:t},backend:a,attrs:{shape:[S,1,N]}}),C.push(u));const l=vq({inputs:{a:s,b:u},backend:a});D=Tq({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const u=Zw(e.dtype,t.dtype),l=new pq(x,w,[S,p,f],n,r,T,A,E,R),c=[k,I];if(null!=i&&c.push(i),E&&c.push(s),R){const e=a.makeTensorInfo([],"float32",Iw(o,"float32"));c.push(e),C.push(e)}D=a.runWebGLProgram(l,c,u)}const $=bq({inputs:{x:D},backend:a,attrs:{shape:b}});C.push(D);for(const e of C)a.disposeIntermediateTensorInfo(e);return $}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq={kernelName:Nx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return $q({a:a,b:i,transposeA:u,transposeB:l,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},_q="return abs(x);";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq={kernelName:xv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=ij(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=mv().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Uj(r.shape,_q):new Rj(r.shape,_q),n.runWebGLProgram(a,[r],r.dtype)}},Mq=cq({opSnippet:Aj+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Lq={kernelName:wv,backendName:"webgl",kernelFunc:Mq},Pq=cq({opSnippet:Aj+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Bq={kernelName:kv,backendName:"webgl",kernelFunc:Pq},zq="return a + b;",Wq=hq({opSnippet:zq,packedOpSnippet:zq,supportsComplex:!0,cpuKernelImpl:NH}),Vq={kernelName:Iv,backendName:"webgl",kernelFunc:Wq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Uq{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gq{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq={kernelName:Cv,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return Zj({inputs:{x:a[0]},backend:r});if(a.length>mv().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),i=e({inputs:a.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>Zw(e,t))),s=a.map((e=>e.shape)),o=mv().getBool("WEBGL_PACK")?new Gq(a[0].shape,s):new Uq(a[0].shape,s);return r.runWebGLProgram(o,a,i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq={kernelName:Sv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=Hg(i,a.shape);let l=u;const c=HC(l,o);let h=a;null!=c&&(h=Rq({inputs:{x:a},backend:n,attrs:{perm:c}}),l=qC(l.length,o)),GC("all",l,o);const[d,p]=VC(h.shape,l),f=bq({inputs:{x:h},backend:n,attrs:{shape:[-1,Pg(p)]}}),m=Iq(f,f.dtype,"all",n);let g;if(s){g=bq({inputs:{x:m},backend:n,attrs:{shape:UC(d,u)}})}else g=bq({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq={kernelName:Nv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=Hg(i,a.shape);let l=u;const c=HC(l,o);let h=a;null!=c&&(h=Rq({inputs:{x:a},backend:n,attrs:{perm:c}}),l=qC(l.length,o)),GC("any",l,o);const[d,p]=VC(h.shape,l),f=bq({inputs:{x:h},backend:n,attrs:{shape:[-1,Pg(p)]}}),m=Iq(f,f.dtype,"any",n);let g;if(s){g=bq({inputs:{x:m},backend:n,attrs:{shape:UC(d,u)}})}else g=bq({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kq{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];const s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xq{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Og(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const s=this.outputShape,o=s.length,u=eH(o),l=kj("coords",o);let c,h;if(1===i){h=o+1;const e=eH(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=kj("sourceLocR",h-1).concat("inIdx.r"),g=kj("sourceLocG",h-1).concat("inIdx.g"),v=kj("sourceLocB",h-1).concat("inIdx.b"),y=kj("sourceLocA",h-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${v.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${s[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${s[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(e,t,n,r=null){let a=t.shape[0],i=t.shape[1];null!=r&&(a=r.shape[0],i=r.shape[1]);const s=UE(i),o={windowSize:s,inSize:i,batchSize:a,outSize:Math.ceil(i/s)},u=new Kq(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=Yq(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function Qq(e,t,n,r=null){const a=null!=r?r.shape:t.shape,i=UE(a[a.length-1]),s=new Xq(a,i,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(s,o,"int32");if(u.shape.length===t.shape.length){const r=Qq(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Jq(e,t,n,r){const a=[n];if(GC("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!mv().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let s=t;null!==i&&i.isPacked&&(s=e.unpackTensor(t),n.push(s));const[o,u]=VC(s.shape,a),l=Pg(u),c=bq({inputs:{x:s},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=Yq(e,c,r);n.push(h);const d=bq({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return Qq(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zq={kernelName:Tv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=Hg(i,a.shape);const o=HC(s,a.shape.length);let u=a;const l=[];null!=o&&(u=Rq({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=qC(s.length,u.shape.length)),GC("argMax",[s[0]],u.shape.length);const c=Jq(n,u,s[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK={kernelName:Ev,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let s=Hg(i,a.shape);const o=HC(s,a.shape.length);let u=a;const l=[];null!=o&&(u=Rq({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),s=qC(s.length,u.shape.length)),GC("argMin",[s[0]],u.shape.length);const c=Jq(n,u,s[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},tK=cq({opSnippet:Aj+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),nK={kernelName:Rv,backendName:"webgl",kernelFunc:tK},rK=cq({opSnippet:Aj+"return log(x + sqrt(x * x + 1.0));"}),aK={kernelName:Av,backendName:"webgl",kernelFunc:rK},iK=cq({opSnippet:Aj+"\n  return atan(x);\n"}),sK={kernelName:Dv,backendName:"webgl",kernelFunc:iK},oK=hq({opSnippet:Xj+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qj+"\n  return result;\n"}),uK={kernelName:Fv,backendName:"webgl",kernelFunc:oK},lK=cq({opSnippet:Aj+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),cK={kernelName:$v,backendName:"webgl",kernelFunc:lK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hK{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(f||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const b=4*Math.floor(i/4),x=i%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class dK{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${v});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(i/4),k=i%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${v});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pK={kernelName:_v,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;OG(a,"avgPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;Og(VI(s,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=$I(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Bg(l.inShape,l.outShape))return Zj({inputs:{x:a},backend:n});const c=new hK(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK={kernelName:Mv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=FI(a.shape,i,s,[1,1,1],o,u,l),h=new dK(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mK{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gK{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK={kernelName:Lv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=FI(s.shape,o,u,[1,1,1],l,c),d=new gK(h);return n.runWebGLProgram(d,[a],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK={kernelName:Ov,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i;OG([a,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=$I(s.shape,o,u,1,l),h=new mK(c);return n.runWebGLProgram(h,[a],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK={kernelName:Pv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=r;return $q({a:a,b:i,transposeA:s,transposeB:o,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xK{constructor(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],DC(e,t),DC(e,n);let s="0.0";null!=r&&(DC(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=a&&(DC(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wK{constructor(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],DC(e,t),DC(e,n);let s="vec4(0.0)";null!=r&&(DC(e,r),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(DC(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK={kernelName:Ry,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:i,offset:s,scale:o}=e;Og(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Og(null==s||a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Og(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,i];let c=null;null!=s&&(c=s.shape,l.push(s));let h=null;null!=o&&(h=o.shape,l.push(o));const d=mv().getBool("WEBGL_PACK_NORMALIZATION")?new wK(r.shape,a.shape,i.shape,c,h,u):new xK(r.shape,a.shape,i.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IK{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=eH(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return CK.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let r;const a=e.map(((e,t)=>`sourceLoc.${CK[t]} = start[${t}] + coords.${CK[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${a.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const CK=["x","y","z","w","u","v"];class SK{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=eH(this.rank),n=kj("coords",this.rank),r=kj("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:s}=r,[o,u]=EE(a,i,s);if(gE(a,o,u),0===Pg(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=sj(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=NE(a.shape,o,u);if(l||!c){const e=mv().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SK(u):new IK(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),s=r.texData.get(i.dataId);Object.assign(s,a),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=TE(t,nv(e.shape));a.slice&&(o+=a.slice.flatOffset),s.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(s.slice.origDataId)||1;return r.dataRefCount.set(s.slice.origDataId,u+1),i}(a,o,u,n)}const TK={kernelName:Gb,backendName:"webgl",kernelFunc:NK},EK={kernelName:Bv,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:s}=r;Og(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=HE(a.shape,i,o),l=jE(u.length,i.length),c=qE(a.shape,i,o),h=KE(s,i.length),d=XE(c,s,i.length),p=[],f=bq({inputs:{x:a},backend:n,attrs:{shape:u}}),m=Rq({inputs:{x:f},backend:n,attrs:{perm:l}}),g=bq({inputs:{x:m},backend:n,attrs:{shape:c}}),v=NK({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK={kernelName:zv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s}=r,o=n.readSync(a.dataId),u=n.readSync(i.dataId),l=TH(o,u,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,l)}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK={kernelName:Wv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=mv().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=mv().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===s){const e=n.texData.get(r.dataId).values,t=n.texData.get(a.dataId).values,[i,s]=RH(r.shape,a.shape,e,t,r.dtype),o=n.makeTensorInfo(s,r.dtype);return n.texData.get(o.dataId).values=i,o}let o;return o=i?new Jj("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new Yj("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DK={kernelName:Vv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,i=n.readSync(r.dataId),s=n.readSync(a.dataId),o=DC(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},$K=hq({opSnippet:"return float(a != b);",cpuKernelImpl:YH,dtype:"bool"}),FK={kernelName:db,backendName:"webgl",kernelFunc:$K};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _K(e){const{inputs:t,backend:n}=e,{input:r}=t;return Zj({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const OK={kernelName:Tb,backendName:"webgl",kernelFunc:_K},MK="return float(int(x));";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LK={kernelName:Uv,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:i}=n,{dtype:s}=a;if("complex64"===s){if("complex64"===i.dtype)return Zj({inputs:{x:i},backend:r});const t=PS(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),a=tq({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=_K({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(t),n}if(!Xg(i.dtype,s)){const e=Zj({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,a]=AH(e,i.shape,i.dtype,s);return r.makeTensorInfo(t,n,a)}if("int32"===s)return function(e,t){const n=new Rj(e.shape,MK),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===s){const e=r.makeTensorInfo([],"bool",qg("bool",1)),t=$K({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},PK="return ceil(x);",BK=cq({opSnippet:PK,packedOpSnippet:PK,cpuKernelImpl:DH}),zK={kernelName:Gv,backendName:"webgl",kernelFunc:BK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class WK{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VK{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK={kernelName:Hv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:i,clipValueMax:s}=r;let o;o=mv().getBool("WEBGL_PACK_CLIP")?new VK(a.shape):new WK(a.shape);const u=[[i],[s]];return n.runWebGLProgram(o,[a],a.dtype,u)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GK{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const jK={kernelName:qv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),i=new GK(r.shape),s=[HK(r,a.complexTensorInfos.real),HK(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qK{constructor(e){this.outputShape=[],this.outputShape=ME(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KK{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ME(e,t);const n=this.outputShape,r=n.length,a=eH(r),i=kj("coords",r),s=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=s[t],l=s.slice(-2),c=s.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${XK(s,u,t)}),\n            vec2(${XK(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${XK(s,u,p)}),\n          vec2(${XK(l,u,p)}));`,this.userCode=`\n      float getValue(${s.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function XK(e,t,n){const r=e.indexOf(t),a=e.map(((e,t)=>t===r?`${e} - ${n}`:e));return a.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(e){const{inputs:t,backend:n}=e,{input:r}=t;return Zj({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const QK={kernelName:My,backendName:"webgl",kernelFunc:YK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>_K({inputs:{input:e},backend:n}))),a=e.map((e=>YK({inputs:{input:e},backend:n}))),i=JK(r,t,n),s=JK(a,t,n),o=tq({inputs:{real:i,imag:s},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=Pg(e.shape.slice(t));return bq({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=ME(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=$H(i,s,r,o),l=ME(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>Pg(e.shape)>0)),s=mv().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=s?new Rj(e[0].shape,Mj):new Uj(e[0].shape,Mj);return n.runWebGLProgram(t,e,r)}const o=mv().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let r=0;r<i.length;r+=o){const a=i.slice(r,r+o);e.push(JK(a,t,n))}const r=JK(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(s){const e=new KK(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=ME(e.map((e=>e.shape)),t),a=e.map((e=>bq({inputs:{x:e},attrs:{shape:[-1,Pg(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(i,t,n),c=new qK(u.map((e=>e.shape))),h=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=bq({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function ZK(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=Hg(a,t[0].shape)[0],s=t.map((e=>e.shape));OE(s,i);const o=ME(t.map((e=>e.shape)),i);if(0===Pg(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>Pg(e.shape)>0));return 1===u.length?Zj({inputs:{x:u[0]},backend:n}):JK(u,i,n)}const eX={kernelName:Kv,backendName:"webgl",kernelFunc:ZK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tX{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,v=m?2:3,y=m?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${v}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class nX{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rX{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oH(this.outputShape.length);const i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===s){if(n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=i%2==0?Fg(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aX{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=oH(this.outputShape.length);const{dataFormat:n}=t,r=LG(),a="channelsLast"===n,i=a?1:2,s=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function sX({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[];if(null!=i){const e=iX(i.shape,p);null!=e&&(i=bq({inputs:{x:i},backend:r,attrs:{shape:e}}),m.push(i))}if(null!=a){const e=iX(a.shape,p);null!=e&&(a=bq({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(!((1===h||1===d)&&c>Dq)&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&Bg(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,Og(EG(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=bq({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(p);const g=$q({a:h,b:p,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),v=r.texData.get(g.dataId);Og(v.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,v.shape=n.outShape,f=Zj({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=bq({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=bq({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=$q({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s});f=bq({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function oX({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,v=[n.batchSize,m,g],y=[];if(null!=i){const e=iX(i.shape,f);null!=e&&(i=bq({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=a){const e=iX(a.shape,f);null!=e&&(a=bq({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}const b=bq({inputs:{x:t},backend:r,attrs:{shape:[1,m,Pg(t.shape)/m]}});y.push(b);const x=new aX(v,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(x,[e],"float32",w),I=bq({inputs:{x:k},backend:r,attrs:{shape:v}});y.push(k),y.push(I);const C=null!=a,S=null!=i,N="leakyrelu"===o,T=o?dq(o,!0):null,E=new pq(f?I.shape:b.shape,f?b.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,C,T,S,N),R=f?[I,b]:[b,I];if(a&&R.push(a),S&&R.push(i),N){const e=r.makeTensorInfo([],"float32",Iw(s,"float32"));R.push(e),y.push(e)}const A=r.runWebGLProgram(E,R,"float32"),D=bq({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX={kernelName:Xv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=GI(u),d=_I(a.shape,i.shape,s,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&mv().getBool("WEBGL_EXP_CONV")){const e=new rX(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[a,i],"float32",t)}else if(mv().getBool("WEBGL_CONV_IM2COL"))p=oX({x:a,filter:i,convInfo:d,backend:n});else{const e=new tX(d);p=n.runWebGLProgram(e,[a,i],"float32")}else p=sX({x:a,filter:i,convInfo:d,backend:n});const f=bq({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lX{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cX{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hX{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dX{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pX={kernelName:Yv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=GI(u),d=_I(a.shape,c,s,1,o,l,!1,h),p=new lX(d);return n.runWebGLProgram(p,[a,i],"float32")}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fX{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=oH(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX={kernelName:Qv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=GI(l),d=_I(s,i.shape,o,1,u,c,!1,h);if(mv().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new fX(d);return n.runWebGLProgram(t,[a,i],"float32",e)}{const e=new cX(d);return n.runWebGLProgram(e,[a,i],"float32")}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX={kernelName:Jv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,l=OI(a.shape,i.shape,s,u,o),c=new nX(l);return n.runWebGLProgram(c,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX={kernelName:Zv,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=r,l=OI(a.shape,u,s,1,o),c=new hX(l);return n.runWebGLProgram(c,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX={kernelName:ey,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=r,l=OI(u,i.shape,o,1,s),c=new dX(l);return n.runWebGLProgram(c,[a,i],"float32")}},bX=cq({opSnippet:lq+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Qj}\n  return result;\n`}),xX={kernelName:ty,backendName:"webgl",kernelFunc:bX},wX=cq({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),kX={kernelName:ny,backendName:"webgl",kernelFunc:wX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IX{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,s,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[s-1+".0",o-1+".0"],[m,g,v]=c>1?[""+(s-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${v};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX={kernelName:iy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new IX(a.shape,i.shape,o,u,l);return n.runWebGLProgram(c,[a,i,s],"float32")}};var SX;!function(e){e.Prod="*",e.Sum="+"}(SX||(SX={}));class NX{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,i=this.op===SX.Prod?"1.0":"0.0",s=n?i:`getX(${TX(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${eH(a)} coords = getOutputCoords();\n        int end = ${EX(a,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${EX(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${TX(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function TX(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function EX(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(e,t,n,r,a,i){const s=t.shape.length,o=HC([r],s);let u=t;null!=o&&(u=Rq({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=qC(1,s)[0];if(l!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=Zj({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new NX(e,u.shape,!1,i),a=[[t]],s=h;h=n.runWebGLProgram(r,[h],h.dtype,a),n.disposeIntermediateTensorInfo(s)}if(a){const t=new NX(e,u.shape,a,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=Rq({inputs:{x:h},backend:n,attrs:{perm:jC(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AX={kernelName:ry,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;return RX(SX.Prod,a,n,i,s,o)}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX={kernelName:ay,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=r;return RX(SX.Sum,a,n,i,s,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X={kernelName:sy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(i.dataId),r=TH(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(i),r=EH(e,t,s,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FX{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _X={kernelName:oy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:s}=r,o=a.shape[0],u=("NHWC"===s?a.shape[1]:a.shape[2])*i,l=("NHWC"===s?a.shape[2]:a.shape[3])*i,c=("NHWC"===s?a.shape[3]:a.shape[1])/(i*i),h=new FX("NHWC"===s?[o,u,l,c]:[o,c,u,l],i,s);return n.runWebGLProgram(h,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OX{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oH(this.outputShape.length);const i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MX{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=oH(this.outputShape.length);const i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(s%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=s%2==0?Fg(u):u;u%2==0&&s%2==1||u%2!=0&&s%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(s%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LX={kernelName:uy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),Og(VI(s,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const h=_I(a.shape,i.shape,s,c,o,l,!0);let d;d=mv().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new MX(h):new OX(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[a,i],"float32",p)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PX{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BX{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX={kernelName:ly,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=_I(a.shape,c,s,o,u,l,!0),d=new PX(h);return n.runWebGLProgram(d,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX={kernelName:cy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=_I(c,i.shape,s,o,u,l,!0),d=new BX(h);return n.runWebGLProgram(d,[a,i],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VX{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX={kernelName:hy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],i=Pg(r.shape),s=bq({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new VX(i),u=n.runWebGLProgram(o,[s],s.dtype),l=bq({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GX{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HX={kernelName:dy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=r,l=DI(a.shape,i.shape,s,o,"NHWC",u);let c;const h=new GX(l);c=n.runWebGLProgram(h,[a,i],"float32");const d=bq({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX={kernelName:gy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:s,summedDims:o,idDims:u}=gR(a,i.length);yR(s.length,u,i);const{path:l,steps:c}=bR(o,u),h=c.length;let d=null,p=s.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=vR(p,u[t]);let a;xR(e)?a=i[t]:(a=Rq({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(a));const s=a.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Bg(a.shape,s)||(a=bq({inputs:{x:a},backend:n,attrs:{shape:s}}),f.push(a)),null===d?d=a:(d=vq({inputs:{a:a,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=Tq({inputs:{x:d},backend:n,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},qX=cq({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),KX={kernelName:vy,backendName:"webgl",kernelFunc:qX},XX={kernelName:yy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,i=mv().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Jj("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Yj("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}},YX=hq({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:FH}),QX={kernelName:xy,backendName:"webgl",kernelFunc:YX},JX=cq({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${JE};\n  float a1 = ${ZE};\n  float a2 = ${eR};\n  float a3 = ${tR};\n  float a4 = ${nR};\n  float a5 = ${rR};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ZX={kernelName:by,backendName:"webgl",kernelFunc:JX},eY=cq({opSnippet:lq+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:_H,dtype:"float32"}),tY={kernelName:wy,backendName:"webgl",kernelFunc:eY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nY(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice();let u=a;return a<0&&(Og(-(s+1)<=a,(()=>`Axis must be in the interval [${-(s+1)}, ${s}]`)),u=s+a+1),o.splice(u,0,1),bq({inputs:{x:i},backend:r,attrs:{shape:o}})}const rY={kernelName:ky,backendName:"webgl",kernelFunc:nY},aY="return exp(x) - 1.0;",iY=cq({opSnippet:aY,packedOpSnippet:aY,cpuKernelImpl:OH}),sY={kernelName:Iy,backendName:"webgl",kernelFunc:iY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oY{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(e,t,n){const r=n.texData.get(e.dataId),a=Pg(e.shape),i=e.shape[e.shape.length-1],s=bq({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),o=s.shape,u=new oY("real",o,t),l=new oY("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=tq({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=bq({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(p),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY={kernelName:Cy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return uY(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cY{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:i}=n;if(i=i||Zg(a),"string"===i){const e=Kg(i,Pg(r));return e.fill(a),t.makeTensorInfo(r,i,e)}{const e=new cY(r,a),n=[[a]];return t.runWebGLProgram(e,[],i,n)}}const dY={kernelName:Sy,backendName:"webgl",kernelFunc:hY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pY{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fY={kernelName:Ny,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new pY(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},mY="return floor(x);",gY=cq({opSnippet:mY,packedOpSnippet:mY,cpuKernelImpl:MH}),vY={kernelName:Ty,backendName:"webgl",kernelFunc:gY},yY=hq({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),bY={kernelName:Ey,backendName:"webgl",kernelFunc:yY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xY{constructor(e){this.variableNames=["A"];const t=LG(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=LG(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:i}=r,s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,i];if(o||s){const e=mv().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=IY&&e===CY||(CY=e,IY=document.createElement("canvas").getContext("2d",{willReadFrequently:CY})),IY.canvas.width=u,IY.canvas.height=l,IY.drawImage(a,0,0,u,l),a=IY.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=sG.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const p=mv().getBool("WEBGL_PACK")?new wY(h):new xY(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let IY,CY=mv().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const SY={kernelName:Tx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=GI(c),g=_I(a.shape,i.shape,u,h,l,d,!1,m);let v;const y=[],b=null!=s,x=null!=o,w="leakyrelu"===p,k=()=>{const e=[a,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=bq({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(b&&e.push(t(s,c)),x&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Iw(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&mv().getBool("WEBGL_EXP_CONV")){const e=p?dq(p,!0):null,t=new rX(g,b,e,x,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],a=k();v=n.runWebGLProgram(t,a,"float32",r)}else if(mv().getBool("WEBGL_CONV_IM2COL"))v=oX({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?dq(p,!1):null,t=new tX(g,b,e,x,w),r=k();v=n.runWebGLProgram(t,r,"float32")}else v=sX({x:a,filter:i,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=bq({inputs:{x:v},backend:n,attrs:{shape:g.outShape}});return y.push(v),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NY={kernelName:Ex,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),Og(VI(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=_I(a.shape,i.shape,u,m,l,h,!0),v=mv().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?dq(d,v):null,b=[a,i],x=null!=s,w=null!=o,k="leakyrelu"===d;if(x&&b.push(s),w&&b.push(o),k){const e=n.makeTensorInfo([],"float32",Iw(p,"float32"));b.push(e),f.push(e)}let I;I=v?new MX(g,x,y,w,k):new OX(g,x,y,w,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,b,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class TY{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=eH(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY={kernelName:Dy,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=a.shape,s=i[i.length-1],o=Pg(r.shape),[u,l,c,h]=pE(r,a),d=bq({inputs:{x:a},backend:n,attrs:{shape:[l,s]}}),p=bq({inputs:{x:r},backend:n,attrs:{shape:[Pg(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),i=LH(e,t,r.dtype,l,s,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,i.values)}const f=new TY(s,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=bq({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RY{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=eH(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function AY(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=r,u=Hg(s,a.shape)[0];if(mv().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];Og(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=LR(a,i,u,o),c=Pg(i.shape),h=[],d=bq({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=bq({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=PH(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new RY(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const v=bq({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}const DY={kernelName:Ay,backendName:"webgl",kernelFunc:AY},$Y=hq({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:BH,dtype:"bool"}),FY={kernelName:$y,backendName:"webgl",kernelFunc:$Y},_Y=hq({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:zH}),OY={kernelName:Fy,backendName:"webgl",kernelFunc:_Y};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY={kernelName:Oy,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:r}=t;return uY(r,!0,n)}},LY=cq({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),PY={kernelName:Ly,backendName:"webgl",kernelFunc:LY},BY=cq({opSnippet:"return float(isinf(x));",dtype:"bool"}),zY={kernelName:Py,backendName:"webgl",kernelFunc:BY},WY=cq({opSnippet:"return float(isnan(x));",dtype:"bool"}),VY={kernelName:By,backendName:"webgl",kernelFunc:WY},UY=hq({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:WH,dtype:"bool"}),GY={kernelName:Wy,backendName:"webgl",kernelFunc:UY},HY=hq({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:VH,dtype:"bool"}),jY={kernelName:Vy,backendName:"webgl",kernelFunc:HY};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qY={kernelName:Uy,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:i}=n,s=UH(r,a,i);return t.makeTensorInfo([s.length],"float32",s)}},KY=cq({opSnippet:lq+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:GH}),XY={kernelName:Gy,backendName:"webgl",kernelFunc:KY},YY=cq({opSnippet:lq+"\n  return log(1.0 + x);\n"}),QY={kernelName:Hy,backendName:"webgl",kernelFunc:YY},JY=hq({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ZY={kernelName:jy,backendName:"webgl",kernelFunc:JY},eQ=cq({opSnippet:"return float(!(x >= 1.0));"}),tQ={kernelName:qy,backendName:"webgl",kernelFunc:eQ},nQ=hq({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),rQ={kernelName:Ky,backendName:"webgl",kernelFunc:nQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aQ{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iQ{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,s=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sQ={kernelName:Xy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=r,l=mv().getBool("WEBGL_PACK_NORMALIZATION")?new iQ(a.shape,i,s,o,u):new aQ(a.shape,i,s,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oQ{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ={kernelName:Yy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new oQ(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,i,s],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lQ(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=r,o=a.shape.length,u=Hg(i,a.shape);let l=u;const c=HC(l,o),h=null!=c,d=n.shouldExecuteOnCPU([a]);let p=a;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=bj(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype);n.texData.get(p.dataId).values=r}else p=Nq(a,c,n);l=qC(l.length,o)}GC("max",l,o);const[f,m]=VC(p.shape,l);let g,v=f;if(s&&(v=UC(f,u)),d){const e=n.texData.get(p.dataId).values,t=HH(e,Pg(m),v,a.dtype);g=n.makeTensorInfo(v,a.dtype);n.texData.get(g.dataId).values=t}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Pg(t),i=bq({inputs:{x:e},attrs:{shape:[Pg(e.shape)/a,a]},backend:r}),s=Iq(i,e.dtype,"max",r),o=bq({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(p,m,v,n);return h&&n.disposeIntermediateTensorInfo(p),g}const cQ={kernelName:Qy,backendName:"webgl",kernelFunc:lQ},hQ=hq({opSnippet:Xj+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qj+"\n  return result;\n",cpuKernelImpl:jH}),dQ={kernelName:Jy,backendName:"webgl",kernelFunc:hQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pQ={kernelName:Zy,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;OG(a,"maxPool");const{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=r;Og(VI(s,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`));const l=$I(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&Bg(l.inShape,l.outShape))return Zj({inputs:{x:a},backend:n});const c=new hK(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fQ={kernelName:tb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=FI(a.shape,i,s,[1,1,1],o,l,u),h=new dK(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mQ{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left,u=a*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gQ{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vQ={kernelName:nb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,s=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=FI(s.shape,o,u,[1,1,1],l,c),d=new dK(h,"max",!0),p=n.runWebGLProgram(d,[s],s.dtype),f=new gQ(h),m=n.runWebGLProgram(f,[a,p],s.dtype);return n.disposeIntermediateTensorInfo(p),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yQ={kernelName:eb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:s}=t,o=i;OG([i,s],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=$I(o.shape,u,l,1,c,h),p=new hK(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new mQ(d),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const bQ={kernelName:rb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t,u=n;Og(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];Og(VI(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const c=$I(r.shape,a,i,l,s),[h,d]=function(e,t,n,r){let a=new hK(n,"max",!1);const i=r.runWebGLProgram(a,[e],"float32");return a=new hK(n,"max",!0,!0,t),[i,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xQ={kernelName:ab,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:i}=t,s=n,o=r.shape.length,u=Hg(i,r.shape);let l=u;const c=HC(l,o),h=null!=c,d=s.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=s.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=bj(e,r.shape,r.dtype,c,t);f=s.makeTensorInfo(t,r.dtype);s.texData.get(f.dataId).values=n}else f=Nq(r,c,s);p.push(f),l=qC(l.length,o)}GC("sum",l,o);const[m,g]=VC(f.shape,l);let v=m;a&&(v=UC(m,u));const y=function(e,t,n,r){const a=Pg(t),i=bq({inputs:{x:e},attrs:{shape:[Pg(e.shape)/a,a]},backend:r}),s=Iq(i,"float32","mean",r),o=bq({inputs:{x:s},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}(f,g,v,s);for(const e of p)s.disposeIntermediateTensorInfo(e);return y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wQ={kernelName:ib,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=Hg(i,a.shape);let l=u;const c=HC(l,o);let h=a;null!=c&&(h=Rq({inputs:{x:a},backend:n,attrs:{perm:c}}),l=qC(l.length,a.shape.length)),GC("min",l,o);const[d,p]=VC(h.shape,l),f=bq({inputs:{x:h},backend:n,attrs:{shape:[-1,Pg(p)]}}),m=Iq(f,f.dtype,"min",n);let g;if(s){g=bq({inputs:{x:m},backend:n,attrs:{shape:UC(d,u)}})}else g=bq({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},kQ=hq({opSnippet:Xj+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qj+"\n  return result;\n",cpuKernelImpl:qH}),IQ={kernelName:sb,backendName:"webgl",kernelFunc:kQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class CQ{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=eH(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SQ{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=eH(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=kj("rc",r),u=kj("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NQ={kernelName:ob,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:i}=n,s=mv().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SQ(r.shape,a,i):new CQ(r.shape,a,i);return t.runWebGLProgram(s,[r],r.dtype)}},TQ=hq({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Qj+"\n  return result;\n"}),EQ={kernelName:ub,backendName:"webgl",kernelFunc:TQ};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RQ{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AQ=hq({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),DQ={kernelName:my,backendName:"webgl",kernelFunc:AQ},$Q="return a - b;",FQ=hq({opSnippet:$Q,packedOpSnippet:$Q,supportsComplex:!0,cpuKernelImpl:gj}),_Q={kernelName:px,backendName:"webgl",kernelFunc:FQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OQ(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,s=Hg([i],a.shape),o=lQ({inputs:{x:a},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),u=UC(o.shape,s),l=bq({inputs:{x:o},backend:n,attrs:{shape:u}}),c=FQ({inputs:{a:a,b:l},backend:n}),h=eY({inputs:{x:c},backend:n}),d=Tq({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:!1}}),p=bq({inputs:{x:d},backend:n,attrs:{shape:u}}),f=AQ({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const MQ={kernelName:ex,backendName:"webgl",kernelFunc:OQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ={kernelName:lb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=r,u=o?a:OQ({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new RQ(l,c,i),d=[[s]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},PQ=Aj+"\n  return -x;\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BQ={kernelName:hb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=XH(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=mv().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Uj(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Rj(r.shape,PQ),n.runWebGLProgram(a,[r],r.dtype)}},zQ=CT;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WQ={kernelName:pb,backendName:"webgl",kernelFunc:function(e){Rx("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=zQ(l,c,s,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},VQ=ST;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UQ={kernelName:fb,backendName:"webgl",kernelFunc:function(e){Rx("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=VQ(c,h,s,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},GQ=NT;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HQ={kernelName:mb,backendName:"webgl",kernelFunc:function(e){Rx("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=s,p=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=GQ(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jQ{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qQ={kernelName:vb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=r,l=Pg(a.shape),c=new jQ(l,s,o,u),h=bq({inputs:{x:a},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=bq({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KQ(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=_K({inputs:{input:r},backend:n}),t=KQ({inputs:{x:e},backend:n}),a=YK({inputs:{input:r},backend:n}),i=KQ({inputs:{x:a},backend:n}),s=tq({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),s}return hY({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const XQ={kernelName:Ix,backendName:"webgl",kernelFunc:KQ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YQ={kernelName:gb,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=_K({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),i=YK({inputs:{input:a},backend:r}),s=KQ({inputs:{x:i},backend:r}),o=tq({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(s),o}return hY({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ={kernelName:yb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return nY({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,s=t[0].dtype;t.forEach((e=>{Mg(i,e.shape,"All tensors passed to stack must have matching shapes"),Og(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=t.map((e=>{const t=nY({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),l=ZK({inputs:u,backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JQ{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=eH(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZQ{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=eH(r),i=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),o=kj("rc",r),u=kj("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:s}=r;if(0===Pg(a.shape)){const e=i.map(((e,t)=>e[0]+a.shape[t]+e[1]));return hY({backend:n,attrs:{shape:e,value:s,dtype:a.dtype}})}const o=mv().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZQ(a.shape,i,s):new JQ(a.shape,i,s),u=[[s]];return n.runWebGLProgram(o,[a],a.dtype,u)},tJ={kernelName:bb,backendName:"webgl",kernelFunc:eJ},nJ=hq({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Qj+"\n  return result;\n"}),rJ={kernelName:xb,backendName:"webgl",kernelFunc:nJ};const aJ={kernelName:kb,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:s}=r,o=a.shape.length,u=[],l=Hg(i,a.shape);let c=l;const h=HC(c,o);let d,p=a;if(null!=h&&(p=Rq({inputs:{x:a},backend:n,attrs:{perm:h}}),c=qC(c.length,o),u.push(p)),GC("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=QH(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=VC(p.shape,c),r=Pg(t),i=bq({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),s=Iq(i,ek(a.dtype),"prod",n);d=bq({inputs:{x:s},backend:n,attrs:{shape:e}}),u.push(i),u.push(s)}if(s){u.push(d);const e=UC(d.shape,l);d=bq({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iJ={kernelName:Ib,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=r,u=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(s.dataId),[d,p,f]=JH(u,l,c,i.shape,i.dtype,h,s.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sJ={kernelName:Cb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:i}=t,s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=ZH(s,r.shape,r.dtype,o,a.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ={kernelName:Sb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(a.dataId),c=n.readSync(i.dataId),h=n.readSync(s.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=ej(l,a.shape,c,i.shape,i.dtype,h,s.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}},uJ=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:i,dtype:s}=n,o=tj(r,a,i,s);return t.makeTensorInfo([o.length],s,o)},lJ={kernelName:Nb,backendName:"webgl",kernelFunc:uJ},cJ=cq({opSnippet:"return 1.0 / x;"}),hJ={kernelName:Eb,backendName:"webgl",kernelFunc:cJ},dJ=cq({opSnippet:Aj+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),pJ={kernelName:Rb,backendName:"webgl",kernelFunc:dJ},fJ=cq({opSnippet:Aj+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mJ={kernelName:Ob,backendName:"webgl",kernelFunc:fJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gJ{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vJ{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ={kernelName:Fb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,l]=o,c=mv().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vJ(a.shape,u,l,i,s):new gJ(a.shape,u,l,i,s);return n.runWebGLProgram(c,[a],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bJ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ={kernelName:_b,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new bJ(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wJ{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kJ{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,s,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?s-1:s,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ={kernelName:Db,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=r,[u,l]=o,c=mv().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kJ(a.shape,u,l,i,s):new wJ(a.shape,u,l,i,s);return n.runWebGLProgram(c,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CJ{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,i,s]=e,o=[n&&i>1?r-1:r,n&&s>1?a-1:a],u=[n&&i>1?i-1:i,n&&s>1?s-1:s],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ={kernelName:$b,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:i}=t,{alignCorners:s}=r,o=new CJ(i.shape,a.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NJ{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=eH(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TJ{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=kj("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=eH(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ={kernelName:Mb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,s=a.shape.length,o=Hg(i,a.shape);if(0===s)return Zj({inputs:{x:a},backend:n});const u=mv().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TJ(a.shape,o):new NJ(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RJ{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ={kernelName:Sx,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:s}=t,o=n,u=new RJ(r.shape,i),[l,c]=GE(s,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},DJ=cq({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),$J={kernelName:Lb,backendName:"webgl",kernelFunc:DJ},FJ=cq({opSnippet:"return inversesqrt(x);",cpuKernelImpl:nj}),_J={kernelName:Pb,backendName:"webgl",kernelFunc:FJ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class OJ{constructor(e,t,n,r,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=eH(a.length),l=eH(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MJ{constructor(e,t,n,r,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const u=eH(a.length),l=eH(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",v=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${v};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ={kernelName:Bb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:s}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=QN(0,a,s),d=[h/l,l];if(0===h)return n.makeTensorInfo(s,a.dtype);const p=bq({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=bq({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=mv().getBool("WEBGL_PACK")?new MJ(u,o,p.shape.length,f.shape.length,c,d):new OJ(u,o,p.shape.length,f.shape.length,c,d);const v=n.runWebGLProgram(g,[f,p,m],f.dtype),y=bq({inputs:{x:v},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(m),y}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PJ{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===mv().getNumber("WEBGL_VERSION")?"while (left < right) {":a,s="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${s} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ={kernelName:Wb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:i}=t,{side:s}=r,o=new PJ(a.shape[0],a.shape[1],i.shape[1],s),u=[[a.shape[1]]];return n.runWebGLProgram(o,[a,i],"int32",u)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zJ{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let r=0;r<t.length;r++)s.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),a=s.join()}const i=eH(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WJ={kernelName:Vb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,s=new zJ(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(s,[r,a,i],Zw(a.dtype,i.dtype))}},VJ=cq({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${QE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),UJ={kernelName:Ub,backendName:"webgl",kernelFunc:VJ},GJ=cq({opSnippet:lq+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:aj}),HJ={kernelName:Kb,backendName:"webgl",kernelFunc:GJ},jJ=cq({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),qJ={kernelName:qb,backendName:"webgl",kernelFunc:jJ},KJ=cq({opSnippet:lq+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Qj}\n  return result;\n`}),XJ={kernelName:Hb,backendName:"webgl",kernelFunc:KJ},YJ=cq({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),QJ={kernelName:jb,backendName:"webgl",kernelFunc:YJ},JJ=cq({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),ZJ={kernelName:Xb,backendName:"webgl",kernelFunc:JJ},eZ={kernelName:Jb,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:s}=r;Og(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=eJ({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=HE(c.shape,i,o,!1),d=jE(h.length,i.length,!1),p=qE(c.shape,i,o,!1),f=bq({inputs:{x:c},backend:n,attrs:{shape:h}}),m=Rq({inputs:{x:f},backend:n,attrs:{perm:d}}),g=bq({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tZ={kernelName:tx,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(i.dataId),c=n.readSync(s.dataId)[0],[h,d,p,f,m]=oj(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nZ={kernelName:nx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const s=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=uj(o,r.shape,r.dtype,s,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rZ={kernelName:rx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=lj(s,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aZ={kernelName:ax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const s=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(i.dataId),[l,c]=lj(s,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ={kernelName:ix,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=QN(0,a,o);if("string"===i.dtype){const e=n.bufferSync(a),t=n.bufferSync(i),r=Tw(n.readSync(s.dataId)[0]),p=rj(e,t,o,d,c,l,u,h,r,false);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new OJ(l,u,a.shape.length,i.shape.length,h,[d,1],false),f=n.runWebGLProgram(p,[i,a,s],i.dtype),m=bq({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sZ={kernelName:Zb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=r,o=Hg(s,a.shape)[0],u=kR(a,i,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=NK({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},oZ="return sqrt(x);",uZ=cq({opSnippet:oZ,packedOpSnippet:oZ,cpuKernelImpl:cj}),lZ={kernelName:Yb,backendName:"webgl",kernelFunc:uZ},cZ={kernelName:ox,backendName:"webgl",kernelFunc:cq({opSnippet:"return x * x;"})},hZ="return (a - b) * (a - b);",dZ=hq({opSnippet:hZ,packedOpSnippet:hZ}),pZ={kernelName:sx,backendName:"webgl",kernelFunc:dZ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fZ={kernelName:ux,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const i=BR(n.readSync(a.dataId)),s=hj(i,"string",r);return n.makeTensorInfo(a.shape,"string",s)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mZ={kernelName:Cx,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=Aj+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new Rj(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gZ{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=eH(n.length),i=eH(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vZ={kernelName:lx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:s,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:v,begin:y,end:b,strides:x}=RE(a.shape,i,s,o,u,l,c,h,d);let w;if(m)w=bq({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||v){Og(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=vE(y,b,x),t=NK({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});w=bq({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=iI(a.shape,a.dtype,e),r=dj(p,t,x,y);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new gZ(y,x,p);w=n.runWebGLProgram(e,[a],a.dtype)}}const k=bq({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yZ={kernelName:cx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=pj(d,p,a,i,s,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bZ={kernelName:hx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);const o=n.readSync(i.dataId),u=n.readSync(s.dataId)[0],[l,c,h]=fj(o,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xZ={kernelName:dx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(i.dataId),o=mj(s,a);return n.makeTensorInfo(i.shape,"int32",o)}},wZ=cq({opSnippet:"return tan(x);"}),kZ={kernelName:fx,backendName:"webgl",kernelFunc:wZ},IZ=cq({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),CZ={kernelName:mx,backendName:"webgl",kernelFunc:IZ};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ={kernelName:zb,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:i,updates:s}=t,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=QN(0,i,a.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(a.shape,i.dtype);const p=bq({inputs:{x:i},backend:n,attrs:{shape:[u,o]}}),f=bq({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=bq({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new OJ(u,o,p.shape.length,f.shape.length,c,d,!1,!0),v=n.runWebGLProgram(g,[f,p,m],m.dtype),y=bq({inputs:{x:v},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(v),y}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NZ{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=eH(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function TZ(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Tw(e))):e,r=iI(a.shape,a.dtype,t),s=vj(r,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new NZ(a.shape,i);return n.runWebGLProgram(s,[a],a.dtype)}const EZ={kernelName:gx,backendName:"webgl",kernelFunc:TZ};class RZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class AZ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DZ(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function $Z(e){let t=1;for(;t<e;)t*=2;return t}const FZ={kernelName:vx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:i,sorted:s}=r,o=mv().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=mv().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||i>u){const e=n.readSync(a.dataId),[t,r]=yj(e,l,a.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,hY({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(a):a,f=Pg(l)/c,m=bq({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&DZ(n,p);const g=$Z(i),v=$Z(c);let y=null;const b=()=>null===y?[m,m]:[m,y],x=(e,t,r)=>{const a=b(),i=new RZ(r),s=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(i,a,"int32",s),DZ(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,v])}for(let e=v;e>g;e/=2){const t=b(),r=new AZ([f,e/2]),a=[[c],[null===y?1:0],[g]],i=y;y=n.runWebGLProgram(r,t,"int32",a),DZ(n,i);const s=g/2,o=2*s;for(let e=s;e>=1;e/=2)x(o,e,y.shape)}let w=y;y=NK({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),DZ(n,w);let k=AY({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});DZ(n,m);const I=l.slice(0,-1);I.push(i),w=y,y=bq({inputs:{x:y},attrs:{shape:I},backend:n}),DZ(n,w);const C=k;return k=bq({inputs:{x:k},attrs:{shape:I},backend:n}),DZ(n,C),[k,y]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Z{constructor(e,t,n,r,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const s="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ={kernelName:yx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=a.shape,[f,m]=null!=l?l:[h,d],g=new _Z(h,d,s,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[a,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ={kernelName:xx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:i}=t;OG(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(i.dataId),{outputValues:o,outputShape:u,indices:l}=xj(s,a,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LZ={kernelName:wx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:i}=r;i<0&&(i+=a.shape.length);const s=a,o=s.shape.length,u=a.shape[i],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(l[c++]=s.shape[e]);const h=[],d=new Array(o).fill(0),p=s.shape.slice();p[i]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[i]=e;const t=NK({inputs:{x:s},backend:n,attrs:{begin:d,size:p}}),r=bq({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PZ{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/n);this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZ={kernelName:kx,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:s}=r,o=a.shape.length,u=[];let l=0;const c=HC([l],o);let h=a;null!=c&&(h=Rq({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=qC(1,o)[0]);const d=MR(h.shape,l,s),p=Pg([h.shape[l]]),f=bq({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=ek(a.dtype),g=(e,t,r,a,i)=>{const s=e.shape[0],o=e.shape[1],l=OR(o,i),c=new PZ({windowSize:l,inSize:o,batchSize:s,numSegments:i},t),h=n.compileAndRun(c,[e,r],a);if(u.push(h),h.shape[1]===i)return h;const d=uJ({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=TZ({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});u.push(d),u.push(p);return g(h,t,p,a,i)},v=bq({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:d}});let y=v;if(null!=c){u.push(v);const e=jC(c);y=Rq({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},zZ=[Fq,Oq,Lq,Bq,Vq,Hq,jq,qq,Zq,eK,nK,aK,sK,uK,cK,pK,fK,vK,yK,bK,kK,EK,RK,AK,DK,LK,zK,UK,nq,jK,eX,uX,pX,mX,gX,vX,yX,xX,kX,CX,AX,DX,$X,_X,LX,zX,WX,UX,HX,jX,KX,XX,QX,ZX,tY,rY,sY,lY,dY,fY,vY,bY,kY,SY,NY,EY,DY,FY,OY,eq,MY,QK,PY,zY,VY,iq,GY,jY,qY,XY,QY,ZY,tQ,rQ,sQ,uQ,cQ,dQ,pQ,fQ,vQ,yQ,bQ,xQ,wQ,IQ,NQ,EQ,LQ,yq,BQ,WQ,UQ,HQ,FK,qQ,YQ,QQ,tJ,rJ,uq,aJ,iJ,sJ,oJ,lJ,OK,DQ,hJ,pJ,mJ,xq,yJ,xJ,IJ,SJ,EJ,AJ,$J,_J,LJ,BJ,WJ,UJ,HJ,qJ,XJ,QJ,TK,MQ,ZJ,eZ,tZ,nZ,rZ,aZ,iZ,sZ,lZ,cZ,pZ,fZ,mZ,vZ,yZ,bZ,xZ,_Q,Eq,kZ,CZ,SZ,EZ,FZ,OZ,Aq,MZ,LZ,BZ,XQ];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of zZ)Ox(e);/** @license See the LICENSE file. */const WZ=new Map,VZ=new URL("https://translate-service.scratch.mit.edu/translate"),UZ=e=>Xe(void 0,void 0,void 0,(function*(){if(WZ.has(e))return WZ.get(e);const n=(e=>{for(const t in e)VZ.searchParams.set(t,e[t]);return VZ.href})({language:"en",text:encodeURIComponent(e)});try{const r=(yield(yield t.fetchWithTimeout(n,{timeout:30})).json()).result;return WZ.set(e,r),r}catch(e){return console.warn(`error fetching translate result! ${e}`),""}})),{legacyBlock:GZ}=Qe.for(),{toxicitylabels:{items:HZ},voices:{items:jZ}}=Ye.menus,qZ={name:"Text Classification",tags:["Made by PRG"],insetIconURL:"icon.svg",iconURL:"menu.png",description:"Create a text classification model for use in a Scratch project!"};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let KZ=(()=>{var e;let n,r,a,i,s,o,u,l,c,h,d,p=t.extension(qZ,"legacySupport","ui"),f=[];return e=class extends p{constructor(){super(...arguments),this.labels=(function(e,t,n){for(var r=arguments.length>2,a=0;a<t.length;a++)n=r?t[a].call(e,n):t[a].call(e)}(this,f),[]),this.loudnessTimer={startTime:(new Date).getTime(),start(){this.startTime=(new Date).getTime()},elapsed(){return(new Date).getTime()-this.startTime}},this.soundPlayers=new Map,this.sentiment=new Mt,this.prediction={label:0,class:"",score:0},this.modelData=new Map}init(e){return Xe(this,void 0,void 0,(function*(){const{soundPlayers:n}=this;e.runtime.on(t.RuntimeEvent.ProjectStopAll,(function(){n.forEach((e=>e.stop()))})),e.runtime.on(t.RuntimeEvent.TargetWasCreated,et);try{console.log("loaded Toxicity model")}catch(e){console.log("Failed to load toxicity model",e)}}))}getLegacyInfo(){return Ye}editButton(){this.openUI("Editor","Edit Text Model")}ifTextMatchesClass(e,t){return Xe(this,void 0,void 0,(function*(){const n=yield this.getEmbeddings(e);return n&&n===t}))}getModelPrediction(e){return Xe(this,void 0,void 0,(function*(){return yield this.getEmbeddings(e)}))}getModelConfidence(e){return Xe(this,void 0,void 0,(function*(){return yield this.getConfidence(e)}))}confidenceTrue(e,t){return this.classifyText(e,t,!0)}sentimentScore(e){return this.currentSentiment=this.sentiment.analyze(e),this.currentSentiment.comparative}speakText(e,{target:n}){return Xe(this,void 0,void 0,(function*(){const{audioEngine:r}=this.runtime,{currentVoice:a}=Ze(n),{gender:i,playbackRate:s}=Nt[a],o=(e=>{for(const t in e)tt.searchParams.set(t,e[t]);return tt.href})({gender:i,locale:"en-US",text:encodeURIComponent(JSON.stringify(e).substring(0,128))});yield new Promise((e=>Xe(this,void 0,void 0,(function*(){try{const n=yield t.fetchWithTimeout(o,{timeout:40});if(!n.ok)return console.warn(n.statusText);const a={data:n.body},i=yield r.decodeSoundPlayer(a);this.soundPlayers.set(i.id,i),i.setPlaybackRate(s);const u=r.createEffectChain();u.set("volume",250),i.connect(u),i.play(),i.on("stop",(()=>{this.soundPlayers.delete(i.id),e()}))}catch(e){console.warn(e)}}))))}))}askSpeechRecognition(e,t){return Xe(this,void 0,void 0,(function*(){yield this.speakText(e,t),this.recognizeSpeech()}))}getRecognizedSpeech(){return this.lastRecognizedSpeech}setVoice(e,{target:t}){const n=Ze(t);n.currentVoice=null!=e?e:n.currentVoice}onHeardSound(e){return this.getLoudness()>e}addLabel(e){this.labels.push(e),this.modelData.set(e,new Array)}deleteLabel(e,t){this.labels.splice(t,1),this.modelData.delete(e)}renameLabel(e,t,n){if(this.modelData.has(t))return alert(`Could not rename ${e} to ${t}, as that label already exists`);this.labels[n]=t,this.modelData.set(t,this.modelData.get(e)),this.modelData.delete(e)}clearLabels(){this.labels=[],this.modelData.clear()}getLoudness(){const{audioEngine:e,currentStepTime:t}=this.runtime;return e&&t?(this.loudnessTimer.elapsed()>this.runtime.currentStepTime&&(this.currentLoudness=e.getLoudness(),this.loudnessTimer.start()),this.currentLoudness):-1}recognizeSpeech(){return Xe(this,void 0,void 0,(function*(){const e=new webkitSpeechRecognition,t=yield new Promise((t=>{e.start(),e.onresult=function(e){0===e.results.length&&t(null),t(e.results[0][0].transcript)}}));return this.lastRecognizedSpeech=null!=t?t:this.lastRecognizedSpeech,t}))}classifyText(e,t,n){return Xe(this,void 0,void 0,(function*(){const{toxicityModel:r}=this;if(this.toxicityModel&&e&&t)try{const a=(yield r.classify([e])).filter((e=>{var n;return e.label===t&&(null===(n=e.results)||void 0===n?void 0:n.length)>0}));return 1===(null==a?void 0:a.length)?Math.round(100*a[0].results[0].probabilities[n?1:0]):0}catch(e){console.log("Failed to classify text",e)}}))}getConfidence(e){return Xe(this,void 0,void 0,(function*(){const t=yield UZ(e);return yield this.predictScore(t),this.prediction.score}))}predictScore(e){return Xe(this,void 0,void 0,(function*(){const{prediction:t,currentClassificationInput:n,labels:r}=this;if(n===e)return this.logPrediction();this.currentClassificationInput=e;const a=yield Sg(),i=yield a.embed(e),s=yield this.customLanguageModel.predict(i),o=Array.isArray(s)?s[0]:s,u=yield o.data();t.label=yield o.as1D().argMax().dataSync()[0],t.class=r[t.label],t.score=u[t.label],this.logPrediction()}))}logPrediction(){const{label:e,class:t,score:n}=this.prediction;console.log("Classification done"),console.log("Predicted Label",e),console.log("Predicted Class",t),console.log("Predicted Score",n)}buildCustomDeepModel(){return Xe(this,void 0,void 0,(function*(){const{labels:e,modelData:n}=this,{length:r}=e;if(r<2)return"No classes inputted";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var a;this.runtime.emit(t.RuntimeEvent.Say,this.runtime.executableTargets[1],"think","wait .. loading model"),this.customLanguageModel=new oO(a);const i={sentences:new Array,labels:new Array};for(let t of e)for(let e of n[t])i.sentences.push(e),i.labels.push(t);const s=HS(KN(i.labels.map((t=>e.findIndex((e=>e===t)))),"int32"),r);let o;try{const e=yield Sg();o=yield e.embed(i.sentences)}catch(e){console.error("Fit Error:",e)}this.customLanguageModel.add(new xM({inputShape:[512],activation:"sigmoid",kernelInitializer:"ones",units:r})),this.customLanguageModel.compile({loss:"meanSquaredError",optimizer:$E.adam(.06)});const u=yield this.customLanguageModel.fit(o,s,{epochs:100,batchSize:4,shuffle:!0,validationSplit:.15,callbacks:[NL.earlyStopping({monitor:"val_loss",patience:50})]});console.log("Final accuracy",u),this.runtime.emit(t.RuntimeEvent.Say,this.runtime.executableTargets[1],"say","The model is ready")}))}getEmbeddings(e){return Xe(this,void 0,void 0,(function*(){const t=yield UZ(e);if(0!==this.labels.length&&this.labels[0])return yield this.predictScore(t),this.prediction.class}))}uiEventsTODO(){}},(()=>{var m;const g="function"==typeof Symbol&&Symbol.metadata?Object.create(null!==(m=p[Symbol.metadata])&&void 0!==m?m:null):void 0;n=[t.buttonBlock("Edit Model")],r=[GZ.ifTextMatchesClass((e=>({argumentMethods:{1:{getItems:()=>{const{labels:t}=e;return(null==t?void 0:t.length)>0?t:["No labels"]}}}})))],a=[GZ.getModelPrediction()],i=[GZ.getModelConfidence()],s=[GZ.confidenceTrue({argumentMethods:{1:{handler:e=>{var t,n;return null!==(n=null===(t=HZ.find((({value:t,text:n})=>t===e||n===e)))||void 0===t?void 0:t.value)&&void 0!==n?n:HZ[0].value}}}})],o=[GZ.sentimentScore()],u=[GZ.speakText()],l=[GZ.askSpeechRecognition()],c=[GZ.getRecognizedSpeech()],h=[GZ.setVoice({argumentMethods:{0:{handler:e=>{var n;const r=parseInt(JSON.stringify(e),10);if(!isNaN(r)){const e=t.wrapClamp(r-1,0,jZ.length-1);return jZ[e].value}return null===(n=jZ.find((({value:t,text:n})=>t===e||n===e)))||void 0===n?void 0:n.value}}}})],d=[GZ.onHeardSound()],Ke(e,null,n,{kind:"method",name:"editButton",static:!1,private:!1,access:{has:e=>"editButton"in e,get:e=>e.editButton},metadata:g},null,f),Ke(e,null,r,{kind:"method",name:"ifTextMatchesClass",static:!1,private:!1,access:{has:e=>"ifTextMatchesClass"in e,get:e=>e.ifTextMatchesClass},metadata:g},null,f),Ke(e,null,a,{kind:"method",name:"getModelPrediction",static:!1,private:!1,access:{has:e=>"getModelPrediction"in e,get:e=>e.getModelPrediction},metadata:g},null,f),Ke(e,null,i,{kind:"method",name:"getModelConfidence",static:!1,private:!1,access:{has:e=>"getModelConfidence"in e,get:e=>e.getModelConfidence},metadata:g},null,f),Ke(e,null,s,{kind:"method",name:"confidenceTrue",static:!1,private:!1,access:{has:e=>"confidenceTrue"in e,get:e=>e.confidenceTrue},metadata:g},null,f),Ke(e,null,o,{kind:"method",name:"sentimentScore",static:!1,private:!1,access:{has:e=>"sentimentScore"in e,get:e=>e.sentimentScore},metadata:g},null,f),Ke(e,null,u,{kind:"method",name:"speakText",static:!1,private:!1,access:{has:e=>"speakText"in e,get:e=>e.speakText},metadata:g},null,f),Ke(e,null,l,{kind:"method",name:"askSpeechRecognition",static:!1,private:!1,access:{has:e=>"askSpeechRecognition"in e,get:e=>e.askSpeechRecognition},metadata:g},null,f),Ke(e,null,c,{kind:"method",name:"getRecognizedSpeech",static:!1,private:!1,access:{has:e=>"getRecognizedSpeech"in e,get:e=>e.getRecognizedSpeech},metadata:g},null,f),Ke(e,null,h,{kind:"method",name:"setVoice",static:!1,private:!1,access:{has:e=>"setVoice"in e,get:e=>e.setVoice},metadata:g},null,f),Ke(e,null,d,{kind:"method",name:"onHeardSound",static:!1,private:!1,access:{has:e=>"onHeardSound"in e,get:e=>e.onHeardSound},metadata:g},null,f),g&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:g})})(),e})();return e.Class=Pe,e.Editor=class extends Y{constructor(e){super(),X(this,e,qe,je,u,{extension:0,close:1},Be)}},e.Example=ke,e.Extension=KZ,Object.defineProperty(e,"__esModule",{value:!0}),e}({},ExtensionFramework);//# sourceMappingURL=textClassification.js.map
