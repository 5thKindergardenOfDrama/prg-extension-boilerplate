{"version":3,"file":"doodlebot.js","sources":["../../../../extensions/scripts/node_modules/tslib/tslib.es6.js","../../../../extensions/src/doodlebot/enums.ts","../../../../extensions/src/doodlebot/communication/EventDispatcher.ts","../../../../extensions/src/doodlebot/communication/PromiseQueue.ts","../../../../extensions/src/doodlebot/communication/ServiceHelper.ts","../../../../extensions/src/doodlebot/communication/UartService.ts","../../../../extensions/src/doodlebot/Doodlebot.ts","../../../../extensions/src/doodlebot/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","const anim = {\n    angry: \"a\",\n    annoyed: \"y\",\n    confused: \"m\",\n    disgust: \"d\",\n    engaged: \"e\",\n    fear: \"f\",\n    happy: \"h\",\n    love: \"o\",\n    neutral: \"n\",\n    sad: \"s\",\n    sleeping: \"l\",\n    surprise: \"p\",\n    wink: \"i\",\n    worried: \"r\",\n    wrong: \"w\",\n} as const;\n\nexport type Anim = keyof typeof anim;\n\nexport const anims = Object.keys(anim) as Anim[];\n\nexport const command = {\n    enable: \"e\",\n    disable: \"x\",\n    motor: \"m\",\n    arc: \"t\",\n} as const;\n\nexport type CommandKey = keyof typeof command;\nexport type Command = typeof command[CommandKey];\n\nexport const sensor = {\n    battery: \"f\",\n    bumper: \"b\",\n    humidity: \"h\",\n    pressure: \"p\",\n    distance: \"d\",\n    altimeter: \"u\",\n    magnometer: \"o\",\n    temperature: \"t\",\n    accelerometer: \"a\",\n    gyroscope: \"g\",\n    light: \"l\",\n} as const;\n\nexport type SensorKey = keyof typeof sensor;\nexport type Sensor = typeof sensor[SensorKey];\nexport type SensorKeyByValue = { [K in SensorKey as typeof sensor[K]]: K };\n\nexport const keyBySensor = Object.fromEntries(Object.entries(sensor).map(([key, value]) => [value, key])) as SensorKeyByValue;\n\nexport const motorCommandReceived = \"ms\";\n\nexport type ReceivedCommand = Sensor | typeof motorCommandReceived;","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport EventEmitter from \"events\";\n\nexport default class EventDispatcher<T extends Record<string, any> = Record<string, unknown>> extends EventEmitter {\n    isEventListenerObject(listener): listener is EventListenerObject {\n        return listener.handleEvent !== undefined;\n    }\n\n    addEventListener<K extends keyof T & string>(type: K, listener: (event: CustomEvent<T[K]>) => void): void {\n        if (listener) {\n            const handler = this.isEventListenerObject(listener)\n                ? listener.handleEvent\n                : listener;\n            super.addListener(type, handler);\n        }\n    }\n\n    removeEventListener<K extends keyof T & string>(type: K, callback: (event: CustomEvent<T[K]>) => void): void {\n        if (callback) {\n            const handler = this.isEventListenerObject(callback)\n                ? callback.handleEvent\n                : callback;\n            super.removeListener(type, handler);\n        }\n    }\n\n    dispatchEvent<K extends keyof T | CustomEvent<T[keyof T]>>(eventOrType: K, detail: K extends string ? T[K] : K): boolean {\n        const event = typeof eventOrType === \"string\"\n            ? new CustomEvent(eventOrType, { detail, })\n            : eventOrType as CustomEvent;\n        return super.emit(event.type, event);\n    }\n}","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ntype QueuedPromise = {\n    fn: () => Promise<any>;\n    resolve: (value?: any | PromiseLike<any> | undefined) => void;\n    reject: (reason?: any) => void;\n}\n\nexport default class PromiseQueue {\n    private queue: QueuedPromise[] = [];\n    private running: number = 0;\n\n    constructor(private concurrent = 1) { }\n\n    async pump() {\n        if (this.running >= this.concurrent) return;\n\n        const promise = this.queue.shift();\n\n        if (!promise) return;\n\n        this.running++;\n\n        try {\n            const result = await promise.fn();\n            promise.resolve(result);\n        } catch (error) {\n            promise.reject(error);\n        }\n\n        this.running--;\n\n        return this.pump();\n    }\n\n    add(fn: QueuedPromise[\"fn\"]) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({\n                fn,\n                resolve,\n                reject,\n            });\n\n            return this.pump();\n        });\n    }\n}","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/// <reference types=\"@types/web-bluetooth\" />\n\nimport type EventEmitter from \"events\";\nimport PromiseQueue from \"./PromiseQueue\";\n\nexport interface Service {\n    uuid: BluetoothCharacteristicUUID;\n    create(service: BluetoothRemoteGATTService): Promise<any>;\n}\n\nexport default class ServiceHelper {\n    private queue = new PromiseQueue();\n    private characteristics: BluetoothRemoteGATTCharacteristic[];\n\n    constructor(private service: BluetoothRemoteGATTService, private emitter: EventEmitter) { }\n\n    async getCharacteristic(uuid: string) {\n        this.characteristics ??= await this.service.getCharacteristics();\n        return this.characteristics.find((characteristic) => characteristic.uuid === uuid);\n    }\n\n    async getCharacteristicValue(uuid: string) {\n        const characteristic = await this.getCharacteristic(uuid);\n        if (!characteristic) throw new Error(\"Unable to locate characteristic\");\n        return await this.queue.add(async () => characteristic.readValue());\n    }\n\n    async setCharacteristicValue(uuid, value) {\n        const characteristic = await this.getCharacteristic(uuid);\n        if (!characteristic) throw new Error(\"Unable to locate characteristic\");\n        await this.queue.add(async () => characteristic.writeValueWithoutResponse(value));\n    }\n\n    async handleListener(event, uuid, handler) {\n        const characteristic = await this.getCharacteristic(uuid);\n\n        if (!characteristic) return;\n\n        await this.queue.add(async () => characteristic.startNotifications());\n\n        this.emitter.on(\"newListener\", (emitterEvent) => {\n            if (emitterEvent !== event || this.emitter.listenerCount(event) > 0) return;\n            return this.queue.add(async () =>\n                characteristic.addEventListener(\"characteristicvaluechanged\", handler)\n            );\n        });\n\n        this.emitter.on(\"removeListener\", (emitterEvent) => {\n            if (emitterEvent !== event || this.emitter.listenerCount(event) > 0) return;\n            return this.queue.add(async () =>\n                characteristic.removeEventListener(\"characteristicvaluechanged\", handler)\n            );\n        });\n    }\n}","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport EventDispatcher from \"./EventDispatcher\";\nimport ServiceHelper, { Service } from \"./ServiceHelper\";\n\n/**\n * Events raised by the UART service\n * newListener: keyof UartEvents;\n * removeListener: keyof UartEvents;\n * receive: Uint8Array;\n * receiveText: string;\n */\n\n/**\n * Events raised by the UART service\n */\nexport interface UartEvents {\n    /**\n     * @hidden\n     */\n    newListener: keyof UartEvents;\n    /**\n     * @hidden\n     */\n    removeListener: keyof UartEvents;\n    /**\n     * Serial data received event\n     */\n    receive: Uint8Array;\n    /**\n     * Serial received text event\n     */\n    receiveText: string;\n}\n\nexport default class UartService extends EventDispatcher<UartEvents> {\n    static readonly uuid = \"6e400001-b5a3-f393-e0a9-e50e24dcca9e\";\n\n    static readonly rx_uuid = \"6e400002-b5a3-f393-e0a9-e50e24dcca9e\";\n\n    static readonly tx_uuid = \"6e400003-b5a3-f393-e0a9-e50e24dcca9e\";\n\n    static async create(service) {\n        const bluetoothService = new UartService(service);\n        await bluetoothService.init();\n        return bluetoothService;\n    }\n\n    private helper: ServiceHelper;\n\n    constructor(service) {\n        super();\n        this.helper = new ServiceHelper(service, this);\n    }\n\n    async init() {\n        const { tx_uuid } = UartService;\n        await this.helper.handleListener(\"receive\", tx_uuid, this.receiveHandler.bind(this));\n        await this.helper.handleListener(\"receiveText\", tx_uuid, this.receiveTextHandler.bind(this));\n    }\n\n    /**\n     * Send serial data\n     * @param value The buffer to send\n     */\n    async send(value) {\n        return this.helper.setCharacteristicValue(UartService.rx_uuid, value);\n    }\n\n    /**\n     * Send serial text\n     * @param value The text to send\n     */\n    async sendText(value) {\n        const arrayData = value.split(\"\").map((e) => e.charCodeAt(0));\n        return this.helper.setCharacteristicValue(\n            UartService.rx_uuid,\n            new Uint8Array(arrayData).buffer\n        );\n    }\n\n    receiveHandler(event) {\n        const view = event.target.value;\n        const value = new Uint8Array(view.buffer);\n        this.dispatchEvent(\"receive\", value);\n    }\n\n    receiveTextHandler(event) {\n        const view = event.target.value;\n        const numberArray = new Uint8Array(view.buffer).slice()\n        const value = String.fromCharCode.apply(null, numberArray);\n        this.dispatchEvent(\"receiveText\", value);\n    }\n}","/*\n * Doodlebot Web Bluetooth\n * Built on top of\n * - micro:bit Web Bluetooth\n * - Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport EventEmitter from \"events\";\nimport { Service } from \"./communication/ServiceHelper\";\nimport UartService, { UartEvents } from \"./communication/UartService\";\nimport { Command, ReceivedCommand, Sensor, SensorKey, command, keyBySensor, motorCommandReceived, sensor } from \"./enums\";\n\nexport type Services = Awaited<ReturnType<typeof Doodlebot.getServices>>;\nexport type MotorStepRequest = { steps: number, stepsPerSecond: number };\nexport type Bumper = { front: number, back: number };\nexport type Vector3D = { x: number, y: number, z: number };\nexport type Color = { red: number, green: number, blue: number, alpha: number };\nexport type SensorReading = number | Vector3D | Bumper | Color;\nexport type SensorData = Doodlebot[\"sensorData\"];\n\nexport default class Doodlebot {\n    static async createService<T extends Service & (new (...args: any) => any)>(\n        services: BluetoothRemoteGATTService[], serviceClass: T\n    ): Promise<InstanceType<T>> {\n        const found = services.find(\n            (service) => service.uuid === serviceClass.uuid\n        );\n\n        if (!found) return undefined;\n\n        return await serviceClass.create(found);\n    }\n\n    /**\n     * \n     * @param bluetooth \n     * @param devicePrefix @todo unused\n     * @returns \n     */\n    static async requestRobot(bluetooth: Bluetooth, devicePrefix: string) {\n        const device = await bluetooth.requestDevice({\n            filters: [\n                {\n                    services: [UartService.uuid]\n                },\n            ],\n        });\n\n        return device;\n    }\n\n    static async getServices(device: BluetoothDevice) {\n        if (!device || !device.gatt) return null;\n        if (!device.gatt.connected) await device.gatt.connect();\n\n        const services = await device.gatt.getPrimaryServices();\n        const uartService = await Doodlebot.createService(services, UartService);\n\n        return { uartService, };\n    }\n\n    static async create(ble: Bluetooth, deviceNamePrefix: string) {\n        const robot = await Doodlebot.requestRobot(ble, deviceNamePrefix);\n        const services = await Doodlebot.getServices(robot);\n        if (!services) throw new Error(\"Unable to connect to doodlebot's UART service\");\n        return new Doodlebot(robot, services);\n    }\n\n    private pendingMotorCommand: Promise<any>;\n    private onMotor = new EventEmitter();\n    private onSensor = new EventEmitter();\n    private listeners = new Map<keyof UartEvents, (...args: any[]) => void>();\n\n    private sensorData = ({\n        bumper: { front: 0, back: 0 },\n        altimeter: 0,\n        battery: 0,\n        distance: 0,\n        humidity: 0,\n        temperature: 0,\n        pressure: 0,\n        gyroscope: { x: 0, y: 0, z: 0 },\n        magnometer: { x: 0, y: 0, z: 0 },\n        accelerometer: { x: 0, y: 0, z: 0 },\n        light: { red: 0, green: 0, blue: 0, alpha: 0 }\n    } satisfies Record<SensorKey, SensorReading>);\n\n    private sensorState: Record<SensorKey, boolean> = {\n        bumper: false,\n        altimeter: false,\n        battery: false,\n        distance: false,\n        humidity: false,\n        temperature: false,\n        pressure: false,\n        gyroscope: false,\n        magnometer: false,\n        accelerometer: false,\n        light: false\n    };\n\n    constructor(private device: BluetoothDevice, private services: Services) {\n        const { listeners } = this;\n        listeners.set(\"receiveText\", this.receiveText.bind(this));\n        for (const [key, listener] of listeners) services.uartService.addEventListener(key, listener);\n    }\n\n    private formCommand(...args: (string | number)[]) {\n        return `(${args.join(\",\")})`;\n    }\n\n    private parseCommand(command: string) {\n        const lines = command.split(\"(\").map((line) => line.replace(\")\", \"\"));\n        return lines.map((line) => {\n            const [command, ...parameters] = line.split(\",\") as [ReceivedCommand, ...string[]];\n            return { command, parameters };\n        });\n    }\n\n    private sendBLECommand(command: Command, ...args: (string | number)[]) {\n        const { uartService } = this.services;\n        return uartService.sendText(this.formCommand(command, ...args));\n    }\n\n    private setSensor<T extends SensorKey>(type: T, value: SensorData[T]) {\n        this.onSensor.emit(type, value);\n        this.sensorData[type] = value;\n    }\n\n    private receiveText(event: CustomEvent<string>) {\n        for (const { command, parameters } of this.parseCommand(event.detail)) {\n            switch (command) {\n                case motorCommandReceived:\n                    this.onMotor.emit(\"stop\");\n                    break;\n                case sensor.bumper: {\n                    const [front, back] = parameters.map((parameter) => Number.parseFloat(parameter));\n                    this.setSensor(keyBySensor[command], { front, back });\n                    break;\n                }\n                case sensor.distance:\n                case sensor.battery:\n                case sensor.altimeter:\n                case sensor.humidity:\n                case sensor.temperature:\n                case sensor.pressure: {\n                    const value = Number.parseFloat(parameters[0]);\n                    this.setSensor(keyBySensor[command], value);\n                    break;\n                }\n                case sensor.gyroscope:\n                case sensor.magnometer:\n                case sensor.accelerometer: {\n                    const [x, y, z] = parameters.map((parameter) => Number.parseFloat(parameter));\n                    this.setSensor(keyBySensor[command], { x, y, z });\n                    break;\n                }\n                case sensor.light: {\n                    const [red, green, blue, alpha] = parameters.map((parameter) => Number.parseFloat(parameter));\n                    this.setSensor(keyBySensor[command], { red, green, blue, alpha });\n                    break;\n                }\n                default:\n                    throw new Error(`Not implemented: ${command}`);\n            }\n        }\n    }\n\n    /**\n     * \n     * @param type \n     * @returns \n     */\n    async enableSensor<T extends SensorKey>(type: T) {\n        if (this.sensorState[type]) return;\n        await this.sendBLECommand(command.enable, sensor[type]);\n        await new Promise((resolve) => this.onSensor.once(type, resolve));\n        this.sensorState[type] = true;\n    }\n\n    /**\n     * \n     */\n    async disableSensor<T extends SensorKey>(type: T) {\n        if (!this.sensorState[type]) return;\n        await this.sendBLECommand(command.disable, sensor[type]);\n        this.sensorState[type] = false;\n    }\n\n    /**\n     * \n     * @param type \n     * @returns \n     */\n    async getSensorReading<T extends SensorKey>(type: T): Promise<SensorData[T]> {\n        await this.enableSensor(type);\n        return this.sensorData[type];\n    }\n\n    /**\n     * \n     * @param type \n     * @param left \n     * @param rightSteps \n     */\n    async motorCommand(type: \"steps\", left: MotorStepRequest, rightSteps: MotorStepRequest);\n    /**\n     * \n     * @param type \n     * @param radius \n     * @param degrees \n     */\n    async motorCommand(type: \"arc\", radius: number, degrees: number);\n    /**\n     * \n     * @param type \n     */\n    async motorCommand(type: \"stop\");\n    async motorCommand(type: string, ...args: any[]): Promise<boolean> {\n        switch (type) {\n            case \"steps\": {\n                if (this.pendingMotorCommand) await this.pendingMotorCommand;\n                const [left, right] = args as MotorStepRequest[];\n                await this.sendBLECommand(command.motor, left.steps, right.steps, left.stepsPerSecond, right.stepsPerSecond);\n                this.pendingMotorCommand = new Promise((resolve) => this.onMotor.once(\"stop\", resolve));\n                await this.pendingMotorCommand;\n                return true;\n            }\n            case \"arc\": {\n                if (this.pendingMotorCommand) await this.pendingMotorCommand;\n                const [radius, degrees] = args as number[];\n                await this.sendBLECommand(command.motor, radius, degrees);\n                this.pendingMotorCommand = new Promise((resolve) => this.onMotor.once(\"stop\", resolve));\n                await this.pendingMotorCommand;\n                break;\n            }\n            case \"stop\":\n                await this.sendBLECommand(command.motor, \"s\");\n                this.pendingMotorCommand = new Promise((resolve) => this.onMotor.once(\"stop\", resolve));\n                await this.pendingMotorCommand;\n                break;\n        }\n    }\n}","import { ArgumentType, BlockType, Environment, ExtensionMenuDisplayDetails, extension, block, buttonBlock } from \"$common\";\nimport BlockUtility from \"$scratch-vm/engine/block-utility\";\nimport { Anim, anims } from \"./enums\";\nimport Doodlebot, { Services } from \"./Doodlebot\";\nimport UartService from \"./communication/UartService\";\nimport EventEmitter from \"events\";\n\nconst details: ExtensionMenuDisplayDetails = {\n  name: \"Doodlebot\",\n  description: \"Program a doodlebot robot\",\n  iconURL: \"Replace with the name of your icon image file (which should be placed in the same directory as this file)\",\n  insetIconURL: \"Replace with the name of your inset icon image file (which should be placed in the same directory as this file)\"\n};\n\nexport default class ExtensionNameGoesHere extends extension(details, \"indicators\") {\n\n  private robot: BluetoothDevice;\n  private uart: UartService;\n  private motorEvent = new EventEmitter();\n  private dataEvent = new EventEmitter();\n\n  init(env: Environment) {\n  }\n\n  async onDeviceConnected(robot: BluetoothDevice, { uartService }: Services) {\n    this.robot = robot;\n    this.uart = uartService;\n    console.log(\"Connected to bluetooth device: \", robot);\n\n    // update peripheral indicator\n    this._robotStatus = 2;\n\n    await this.indicateFor({ position: \"category\", msg: \"Connected to robot\" }, 1000);\n\n    // set listener for device disconnected\n    console.log(\"Listen for device disconnect\");\n    this.robot.addEventListener(\"gattserverdisconnected\", this.onDeviceDisconnected.bind(this));\n\n    this.uart.addEventListener(\"receiveText\", this.updateSensors.bind(this));\n\n    // set up the text\n    await this.sendCommandToRobot(\"(d,x,2,1,65535)\", command_pause);\n    // start with face neutral\n    this.playAnimation({ ANIM: \"neutral\" });\n  }\n\n  async onDeviceDisconnected() {\n    console.log(\"Lost connection to robot\");\n\n    // stop blinking\n    this.stopBlink();\n\n    // TODO stop pixel animation interval\n\n    await this.indicateFor({ position: \"category\", msg: \"Disconnecting from robot\" }, 1000);\n\n    // update peripheral indicator\n\n    this._robotStatus = 1;\n\n    // remove event listeners\n    if (this.uart && this.uart.removeEventListener)\n      this.uart.removeEventListener(\n        \"receiveText\",\n        this.updateSensors.bind(this)\n      );\n    this._robotDevice.removeEventListener(\n      \"gattserverdisconnected\",\n      this.onDeviceDisconnected.bind(this)\n    );\n\n    // reset robot variables\n    this._robotDevice = null;\n    this._robotUart = null;\n  }\n\n  async connectToBLE() {\n    console.log(\"Getting BLE device\");\n    const { bluetooth } = window.navigator;\n    if (bluetooth) {\n      try {\n        // for development\n        const deviceNamePrefix = \"Bluefruit52\"; // \"Saira\" \"BBC micro:bit\";\n        const robot = await Doodlebot.requestRobot(bluetooth, deviceNamePrefix);\n        const services = await Doodlebot.getServices(robot);\n        if (services.uartService) this.onDeviceConnected(robot, services);\n      } catch (err) {\n        console.error(err);\n        if (err.message == \"Bluetooth adapter not available.\") alert(\"Your device does not support BLE connections.\");\n        else if (err.message !== \"User cancelled the requestDevice() chooser.\")\n          alert(\"There was a problem connecting your device, please try again or request assistance.\");\n      }\n    }\n  }\n\n  updateSensors(event: CustomEvent<string>) {\n    const dataLine = event.detail.split(\"(\");\n    console.log(\"Received message: \", dataLine); // for debugging\n\n    for (let i = 0; i < dataLine.length; i++) {\n      let data = dataLine[i];\n      if (data) {\n        if (data == \"ms)\") {\n          console.log(\"Stop the motor\");\n          this.motorEvent.emit(\"stop\");\n        } else if (data != \"\") {\n          let ds = data.split(\",\");\n          const sensor = ds[0];\n          switch (sensor) {\n            case \"b\":\n              const front = Number.parseInt(ds[1]);\n              const back = Number.parseInt(ds[2]);\n              this.dataEvent.emit(\"bumper.front\", front);\n              this.dataEvent.emit(\"bumper.back\", back);\n              this.sensorValues[\"bumper.front\"] = front;\n              this.sensorValues[\"bumper.back\"] = back;\n              break;\n            case \"l\":\n              this.dataEvent.emit(\n                \"color.red\",\n                Number.parseFloat(ds[1])\n              );\n              this.dataEvent.emit(\n                \"color.green\",\n                Number.parseFloat(ds[2])\n              );\n              this.dataEvent.emit(\n                \"color.blue\",\n                Number.parseFloat(ds[3])\n              );\n              this.sensorValues[\"color.red\"] = Number.parseFloat(\n                ds[1]\n              );\n              this.sensorValues[\"color.green\"] =\n                Number.parseFloat(ds[2]);\n              this.sensorValues[\"color.blue\"] = Number.parseFloat(\n                ds[3]\n              );\n              break;\n            case \"d\":\n              this.dataEvent.emit(\n                \"distance\",\n                Number.parseInt(ds[1])\n              );\n              this.sensorValues[\"distance\"] = Number.parseInt(\n                ds[1]\n              );\n              break;\n            case \"h\":\n              this.dataEvent.emit(\n                \"humidity\",\n                Number.parseFloat(ds[1])\n              );\n              this.sensorValues[\"humidity\"] = Number.parseFloat(\n                ds[1]\n              );\n              break;\n            case \"t\":\n              this.dataEvent.emit(\n                \"temperature\",\n                Number.parseFloat(ds[1])\n              );\n              this.sensorValues[\"temperature\"] =\n                Number.parseFloat(ds[1]);\n              break;\n            case \"p\":\n              this.dataEvent.emit(\n                \"pressure\",\n                Number.parseFloat(ds[1])\n              );\n              this.sensorValues[\"pressure\"] = Number.parseFloat(\n                ds[1]\n              );\n              break;\n            case \"o\":\n              this.dataEvent.emit(\n                \"magnetometer.roll\",\n                Number.parseFloat(ds[1])\n              );\n              this.dataEvent.emit(\n                \"magnetometer.pitch\",\n                Number.parseFloat(ds[2])\n              );\n              this.dataEvent.emit(\n                \"magnetometer.yaw\",\n                Number.parseFloat(ds[3])\n              );\n              this.sensorValues[\"magnetometer.roll\"] =\n                Number.parseFloat(ds[1]);\n              this.sensorValues[\"magnetometer.pitch\"] =\n                Number.parseFloat(ds[2]);\n              this.sensorValues[\"magnetometer.yaw\"] =\n                Number.parseFloat(ds[3]);\n              break;\n            case \"g\":\n              this.dataEvent.emit(\n                \"gyroscope.x\",\n                Number.parseFloat(ds[1])\n              );\n              this.dataEvent.emit(\n                \"gyroscope.y\",\n                Number.parseFloat(ds[2])\n              );\n              this.dataEvent.emit(\n                \"gyroscope.z\",\n                Number.parseFloat(ds[3])\n              );\n              this.sensorValues[\"gyroscope.x\"] =\n                Number.parseFloat(ds[1]);\n              this.sensorValues[\"gyroscope.y\"] =\n                Number.parseFloat(ds[2]);\n              this.sensorValues[\"gyroscope.z\"] =\n                Number.parseFloat(ds[3]);\n              break;\n            case \"u\":\n              this.dataEvent.emit(\n                \"altitude\",\n                Number.parseFloat(ds[1])\n              );\n              this.sensorValues[\"altitude\"] = Number.parseFloat(\n                ds[1]\n              );\n              break;\n            case \"x\":\n              this.dataEvent.emit(\n                \"accelerometer.x\",\n                Number.parseFloat(ds[1])\n              );\n              this.dataEvent.emit(\n                \"accelerometer.y\",\n                Number.parseFloat(ds[2])\n              );\n              this.dataEvent.emit(\n                \"accelerometer.z\",\n                Number.parseFloat(ds[3])\n              );\n              this.sensorValues[\"accelerometer.x\"] =\n                Number.parseFloat(ds[1]);\n              this.sensorValues[\"accelerometer.y\"] =\n                Number.parseFloat(ds[2]);\n              this.sensorValues[\"accelerometer.z\"] =\n                Number.parseFloat(ds[3]);\n              break;\n            case \"f\":\n              this.dataEvent.emit(\n                \"battery\",\n                Number.parseFloat(ds[1])\n              );\n              this.sensorValues[\"battery\"] = Number.parseFloat(\n                ds[1]\n              ); // TODO constantly monitor battery\n              break;\n            case \"c\":\n              this.dataEvent.emit(\n                \"ipAddress\",\n                ds[1].substring(7).replace(\")\", \"\")\n              );\n              break;\n            default:\n              console.log(\"Received unrecognized data:\", data);\n          }\n        }\n      }\n    }\n  }\n\n\n\n  @buttonBlock(\"Test Robot\")\n  test() {\n\n  }\n\n  @buttonBlock(\"Connect Robot\")\n  connect() {\n\n  }\n\n  @block({\n    type: \"command\",\n    text: (anim) => `play ${anim} animation`,\n    arg: {\n      type: \"string\",\n      options: anims,\n      defaultValue: \"happy\"\n    }\n  })\n  playAnimation(anim: Anim) {\n\n  }\n\n  @block({\n    type: \"command\",\n    text: (text) => `display text ${text}`,\n    arg: {\n      type: \"string\",\n      defaultValue: \"Hello!\"\n    }\n  })\n  displayText(text: string) {\n\n  }\n\n  @block({\n    type: \"command\",\n    text: \"clear display\"\n  })\n  clearDisplay() {\n\n  }\n}"],"names":["doodlebot","exports","$common","__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","_","kind","key","target","prototype","descriptor","Object","getOwnPropertyDescriptor","name","done","i","length","context","p","access","addInitializer","push","result","get","set","init","unshift","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","then","apply","SuppressedError","anims","keys","angry","annoyed","confused","disgust","engaged","fear","happy","love","neutral","sad","sleeping","surprise","wink","worried","wrong","command","sensor","battery","bumper","humidity","pressure","distance","altimeter","magnometer","temperature","accelerometer","gyroscope","light","keyBySensor","fromEntries","entries","map","domain","EventDispatcher","EventEmitter","isEventListenerObject","listener","undefined","handleEvent","addEventListener","type","handler","this","super","addListener","removeEventListener","callback","removeListener","dispatchEvent","eventOrType","detail","event","CustomEvent","emit","PromiseQueue","constructor","concurrent","queue","running","pump","promise","shift","fn","error","add","ServiceHelper","service","emitter","getCharacteristic","uuid","_a","characteristics","getCharacteristics","find","characteristic","getCharacteristicValue","Error","readValue","setCharacteristicValue","writeValueWithoutResponse","handleListener","startNotifications","on","emitterEvent","listenerCount","UartService","create","bluetoothService","helper","tx_uuid","receiveHandler","bind","receiveTextHandler","send","rx_uuid","sendText","arrayData","split","charCodeAt","Uint8Array","buffer","view","numberArray","slice","String","fromCharCode","Doodlebot","createService","services","serviceClass","found","requestRobot","bluetooth","devicePrefix","requestDevice","filters","getServices","device","gatt","connected","connect","getPrimaryServices","uartService","ble","deviceNamePrefix","robot","onMotor","onSensor","listeners","Map","sensorData","front","back","x","y","z","red","green","blue","alpha","sensorState","receiveText","formCommand","args","join","parseCommand","line","replace","parameters","sendBLECommand","setSensor","parameter","Number","parseFloat","enableSensor","once","disableSensor","getSensorReading","motorCommand","pendingMotorCommand","left","right","steps","stepsPerSecond","radius","degrees","details","description","iconURL","insetIconURL","_classSuper","extension","useValue","arguments","call","__runInitializers","_instanceExtraInitializers","motorEvent","dataEvent","env","onDeviceConnected","uart","console","log","_robotStatus","indicateFor","position","msg","onDeviceDisconnected","updateSensors","sendCommandToRobot","command_pause","playAnimation","ANIM","stopBlink","_robotDevice","_robotUart","connectToBLE","window","navigator","err","message","alert","dataLine","data","ds","parseInt","sensorValues","substring","test","anim","displayText","text","clearDisplay","buttonBlock","_playAnimation_decorators","block","arg","options","defaultValue","_displayText_decorators","_clearDisplay_decorators","_test_decorators","static","private","has","obj","metadata","_metadata","_connect_decorators"],"mappings":"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"}