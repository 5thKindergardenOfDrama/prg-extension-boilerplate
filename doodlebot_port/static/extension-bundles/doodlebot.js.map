{"version":3,"file":"doodlebot.js","sources":["../../../../extensions/node_modules/svelte/src/runtime/internal/utils.js","../../../../extensions/node_modules/svelte/src/runtime/internal/dom.js","../../../../extensions/node_modules/svelte/src/runtime/internal/lifecycle.js","../../../../extensions/node_modules/svelte/src/runtime/internal/scheduler.js","../../../../extensions/node_modules/svelte/src/runtime/internal/transitions.js","../../../../extensions/node_modules/svelte/src/runtime/internal/Component.js","../../../../extensions/scripts/node_modules/tslib/tslib.es6.js","../../../../extensions/node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../../../extensions/node_modules/svelte/src/shared/version.js","../../../../extensions/src/doodlebot/communication/EventDispatcher.ts","../../../../extensions/src/doodlebot/communication/PromiseQueue.ts","../../../../extensions/src/doodlebot/communication/ServiceHelper.ts","../../../../extensions/src/doodlebot/communication/UartService.ts","../../../../extensions/src/doodlebot/enums.ts","../../../../extensions/src/doodlebot/Doodlebot.ts","../../../../extensions/src/doodlebot/Connect.svelte","../../../../extensions/src/doodlebot/index.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.7';\nexport const PUBLIC_VERSION = '4';\n","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport EventEmitter from \"events\";\n\nexport default class EventDispatcher<T extends Record<string, any> = Record<string, unknown>> extends EventEmitter {\n    isEventListenerObject(listener): listener is EventListenerObject {\n        return listener.handleEvent !== undefined;\n    }\n\n    addEventListener<K extends keyof T & string>(type: K, listener: (event: CustomEvent<T[K]>) => void): void {\n        if (listener) {\n            const handler = this.isEventListenerObject(listener)\n                ? listener.handleEvent\n                : listener;\n            super.addListener(type, handler);\n        }\n    }\n\n    removeEventListener<K extends keyof T & string>(type: K, callback: (event: CustomEvent<T[K]>) => void): void {\n        if (callback) {\n            const handler = this.isEventListenerObject(callback)\n                ? callback.handleEvent\n                : callback;\n            super.removeListener(type, handler);\n        }\n    }\n\n    dispatchEvent<K extends keyof T | CustomEvent<T[keyof T]>>(eventOrType: K, detail: K extends string ? T[K] : K): boolean {\n        const event = typeof eventOrType === \"string\"\n            ? new CustomEvent(eventOrType, { detail, })\n            : eventOrType as CustomEvent;\n        return super.emit(event.type, event);\n    }\n}","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ntype QueuedPromise = {\n    fn: () => Promise<any>;\n    resolve: (value?: any | PromiseLike<any> | undefined) => void;\n    reject: (reason?: any) => void;\n}\n\nexport default class PromiseQueue {\n    private queue: QueuedPromise[] = [];\n    private running: number = 0;\n\n    constructor(private concurrent = 1) { }\n\n    async pump() {\n        if (this.running >= this.concurrent) return;\n\n        const promise = this.queue.shift();\n\n        if (!promise) return;\n\n        this.running++;\n\n        try {\n            const result = await promise.fn();\n            promise.resolve(result);\n        } catch (error) {\n            promise.reject(error);\n        }\n\n        this.running--;\n\n        return this.pump();\n    }\n\n    add(fn: QueuedPromise[\"fn\"]) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({\n                fn,\n                resolve,\n                reject,\n            });\n\n            return this.pump();\n        });\n    }\n}","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/// <reference types=\"@types/web-bluetooth\" />\n\nimport type EventEmitter from \"events\";\nimport PromiseQueue from \"./PromiseQueue\";\n\nexport interface Service {\n    uuid: BluetoothCharacteristicUUID;\n    create(service: BluetoothRemoteGATTService): Promise<any>;\n}\n\nexport default class ServiceHelper {\n    private queue = new PromiseQueue();\n    private characteristics: BluetoothRemoteGATTCharacteristic[];\n\n    constructor(private service: BluetoothRemoteGATTService, private emitter: EventEmitter) { }\n\n    async getCharacteristic(uuid: string) {\n        this.characteristics ??= await this.service.getCharacteristics();\n        return this.characteristics.find((characteristic) => characteristic.uuid === uuid);\n    }\n\n    async getCharacteristicValue(uuid: string) {\n        const characteristic = await this.getCharacteristic(uuid);\n        if (!characteristic) throw new Error(\"Unable to locate characteristic\");\n        return await this.queue.add(async () => characteristic.readValue());\n    }\n\n    async setCharacteristicValue(uuid, value) {\n        const characteristic = await this.getCharacteristic(uuid);\n        if (!characteristic) throw new Error(\"Unable to locate characteristic\");\n        await this.queue.add(async () => characteristic.writeValueWithoutResponse(value));\n    }\n\n    async handleListener(event, uuid, handler) {\n        const characteristic = await this.getCharacteristic(uuid);\n\n        if (!characteristic) return;\n\n        await this.queue.add(async () => characteristic.startNotifications());\n\n        this.emitter.on(\"newListener\", (emitterEvent) => {\n            if (emitterEvent !== event || this.emitter.listenerCount(event) > 0) return;\n            return this.queue.add(async () =>\n                characteristic.addEventListener(\"characteristicvaluechanged\", handler)\n            );\n        });\n\n        this.emitter.on(\"removeListener\", (emitterEvent) => {\n            if (emitterEvent !== event || this.emitter.listenerCount(event) > 0) return;\n            return this.queue.add(async () =>\n                characteristic.removeEventListener(\"characteristicvaluechanged\", handler)\n            );\n        });\n    }\n}","/*\n * micro:bit Web Bluetooth\n * Copyright (c) 2019 Rob Moran\n *\n * The MIT License (MIT)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport EventDispatcher from \"./EventDispatcher\";\nimport ServiceHelper from \"./ServiceHelper\";\n\n/**\n * Events raised by the UART service\n */\nexport interface UartEvents {\n    /**\n     * @hidden\n     */\n    newListener: keyof UartEvents;\n    /**\n     * @hidden\n     */\n    removeListener: keyof UartEvents;\n    /**\n     * Serial data received event\n     */\n    receive: Uint8Array;\n    /**\n     * Serial received text event\n     */\n    receiveText: string;\n}\n\nexport default class UartService extends EventDispatcher<UartEvents> {\n    static readonly uuid = \"6e400001-b5a3-f393-e0a9-e50e24dcca9e\";\n\n    static readonly rx_uuid = \"6e400002-b5a3-f393-e0a9-e50e24dcca9e\";\n\n    static readonly tx_uuid = \"6e400003-b5a3-f393-e0a9-e50e24dcca9e\";\n\n    static async create(service) {\n        const bluetoothService = new UartService(service);\n        await bluetoothService.init();\n        return bluetoothService;\n    }\n\n    private helper: ServiceHelper;\n\n    constructor(service) {\n        super();\n        this.helper = new ServiceHelper(service, this);\n    }\n\n    async init() {\n        const { tx_uuid } = UartService;\n        await this.helper.handleListener(\"receive\", tx_uuid, this.receiveHandler.bind(this));\n        await this.helper.handleListener(\"receiveText\", tx_uuid, this.receiveTextHandler.bind(this));\n    }\n\n    /**\n     * Send serial data\n     * @param value The buffer to send\n     */\n    async send(value) {\n        return this.helper.setCharacteristicValue(UartService.rx_uuid, value);\n    }\n\n    /**\n     * Send serial text\n     * @param value The text to send\n     */\n    async sendText(value) {\n        console.log(\"sending text\", value);\n        const arrayData = value.split(\"\").map((e) => e.charCodeAt(0));\n        return this.helper.setCharacteristicValue(\n            UartService.rx_uuid,\n            new Uint8Array(arrayData).buffer\n        );\n    }\n\n    receiveHandler(event) {\n        const view = event.target.value;\n        const value = new Uint8Array(view.buffer);\n        this.dispatchEvent(\"receive\", value);\n    }\n\n    receiveTextHandler(event) {\n        const view = event.target.value;\n        const numberArray = new Uint8Array(view.buffer).slice()\n        const value = String.fromCharCode.apply(null, numberArray);\n        this.dispatchEvent(\"receiveText\", value);\n    }\n}","const anim = {\n    angry: \"a\",\n    annoyed: \"y\",\n    confused: \"m\",\n    disgust: \"d\",\n    engaged: \"e\",\n    fear: \"f\",\n    happy: \"h\",\n    love: \"o\",\n    neutral: \"n\",\n    sad: \"s\",\n    sleeping: \"l\",\n    surprise: \"p\",\n    wink: \"i\",\n    worried: \"r\",\n    wrong: \"w\",\n} as const;\n\nexport type Anim = keyof typeof anim;\n\nexport const anims = Object.keys(anim) as Anim[];\n\nexport const command = {\n    enable: \"e\",\n    disable: \"x\",\n    motor: \"m\",\n    arc: \"t\",\n    wifi: \"k\",\n    lowPower: \"q\",\n    display: \"w\"\n} as const;\n\nexport type CommandKey = keyof typeof command;\nexport type Command = typeof command[CommandKey];\n\nexport const sensor = {\n    battery: \"f\",\n    bumper: \"b\",\n    humidity: \"h\",\n    pressure: \"p\",\n    distance: \"d\",\n    altimeter: \"u\",\n    magnometer: \"o\",\n    temperature: \"t\",\n    accelerometer: \"a\",\n    gyroscope: \"g\",\n    light: \"l\",\n} as const;\n\nexport type SensorKey = keyof typeof sensor;\nexport type Sensor = typeof sensor[SensorKey];\nexport type SensorKeyByValue = { [K in SensorKey as typeof sensor[K]]: K };\n\nexport const display = {\n    clear: \"c\",\n    sad: \"s\",\n    happy: \"T\",\n    child: \"H\"\n} as const;\n\nexport type DisplayKey = keyof typeof display;\nexport type Display = typeof display[DisplayKey];\nexport const displayKeys = Object.keys(display) as DisplayKey[];\n\n\nexport const keyBySensor = Object.fromEntries(Object.entries(sensor).map(([key, value]) => [value, key])) as SensorKeyByValue;\n\nexport const motorCommandReceived = \"ms\";\n\nexport const networkStatus = {\n    ipPrefix: \"RPI ipaddr:\",\n    hostnamePrefix: \"hname:\",\n} as const;\n\nexport type NetworkStatusKey = keyof typeof networkStatus;\nexport type NetworkStatus = typeof networkStatus[NetworkStatusKey];\n\nexport type ReceivedCommand = Sensor | typeof motorCommandReceived;\n\nexport const port = {\n    websocket: \"8765\",\n    camera: \"8000\"\n}\n\nconst endpoint = {\n    camera: \"video_feed'\"\n}","import EventEmitter from \"events\";\nimport { Service } from \"./communication/ServiceHelper\";\nimport UartService from \"./communication/UartService\";\nimport { Command, DisplayKey, NetworkStatus, ReceivedCommand, SensorKey, command, display, keyBySensor, motorCommandReceived, networkStatus, port, sensor } from \"./enums\";\n\nexport type Services = Awaited<ReturnType<typeof Doodlebot.getServices>>;\nexport type MotorStepRequest = {\n    /** Number of steps for the stepper (+ == forward, - == reverse) */\n    steps: number,\n    /** Number of steps/second (rate) of stepper */\n    stepsPerSecond: number\n};\nexport type Bumper = { front: number, back: number };\nexport type Vector3D = { x: number, y: number, z: number };\nexport type Color = { red: number, green: number, blue: number, alpha: number };\nexport type SensorReading = number | Vector3D | Bumper | Color;\nexport type SensorData = Doodlebot[\"sensorData\"];\nexport type NetworkCredentials = { ssid: string, password: string };\nexport type NetworkConnection = { ip: string, hostname: string };\n\ntype Pending = Record<\"motor\" | \"wifi\" | \"websocket\", Promise<any> | undefined>;\n\ntype SubscriptionTarget = Pick<EventTarget, \"addEventListener\" | \"removeEventListener\">;\n\ntype Subscription<T extends SubscriptionTarget> = {\n    target: T,\n    event: Parameters<T[\"addEventListener\"]>[0],\n    listener: Parameters<T[\"addEventListener\"]>[1],\n}\n\ntype MotorCommand = \"steps\" | \"arc\" | \"stop\";\n\nconst trimNewtworkStatusMessage = (message: string, prefix: NetworkStatus) => message.replace(prefix, \"\").trim();\n\nconst localIp = \"127.0.0.1\";\n\nconst events = {\n    stop: \"motor\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n} as const;\n\nexport default class Doodlebot {\n    /**\n     * \n     * @param services \n     * @param serviceClass \n     * @returns \n     */\n    static async tryCreateService<T extends Service & (new (...args: any) => any)>(\n        services: BluetoothRemoteGATTService[], serviceClass: T\n    ): Promise<InstanceType<T>> {\n        const found = services.find((service) => service.uuid === serviceClass.uuid);\n        return found ? await serviceClass.create(found) : undefined;\n    }\n\n    /**\n     * \n     * @param bluetooth \n     * @param devicePrefix @todo unused\n     * @returns \n     */\n    static async requestRobot(bluetooth: Bluetooth, ...filters: BluetoothLEScanFilter[]) {\n        const device = await bluetooth.requestDevice({\n            filters: [\n                ...(filters ?? []),\n                {\n                    services: [UartService.uuid]\n                },\n            ],\n        });\n\n        return device;\n    }\n\n    /**\n     * Get\n     * @param device \n     * @returns \n     */\n    static async getServices(device: BluetoothDevice) {\n        if (!device || !device.gatt) return null;\n        if (!device.gatt.connected) await device.gatt.connect();\n\n        const services = await device.gatt.getPrimaryServices();\n        const uartService = await Doodlebot.tryCreateService(services, UartService);\n\n        return { uartService, };\n    }\n\n    /**\n     * \n     * @param ble \n     * @param filters \n     * @throws \n     * @returns \n     */\n    static async tryCreate(ssid: string, password: string, ble: Bluetooth, ...filters: BluetoothLEScanFilter[]) {\n        const robot = await Doodlebot.requestRobot(ble, ...filters);\n        const services = await Doodlebot.getServices(robot);\n        if (!services) throw new Error(\"Unable to connect to doodlebot's UART service\");\n        return new Doodlebot(robot, services, ssid, password);\n    }\n\n    private pending: Pending = { motor: undefined, wifi: undefined, websocket: undefined };\n    private onMotor = new EventEmitter();\n    private onSensor = new EventEmitter();\n    private onNetwork = new EventEmitter();\n    private disconnectCallbacks = new Set<() => void>();\n    private subscriptions = new Array<Subscription<any>>();\n    private connection: NetworkConnection;\n    private websocket: WebSocket;\n\n    private sensorData = ({\n        bumper: { front: 0, back: 0 },\n        altimeter: 0,\n        battery: 0,\n        distance: 0,\n        humidity: 0,\n        temperature: 0,\n        pressure: 0,\n        gyroscope: { x: 0, y: 0, z: 0 },\n        magnometer: { x: 0, y: 0, z: 0 },\n        accelerometer: { x: 0, y: 0, z: 0 },\n        light: { red: 0, green: 0, blue: 0, alpha: 0 }\n    } satisfies Record<SensorKey, SensorReading>);\n\n    private sensorState: Record<SensorKey, boolean> = {\n        bumper: false,\n        altimeter: false,\n        battery: false,\n        distance: false,\n        humidity: false,\n        temperature: false,\n        pressure: false,\n        gyroscope: false,\n        magnometer: false,\n        accelerometer: false,\n        light: false\n    };\n\n    constructor(private device: BluetoothDevice, private services: Services, private ssid: string, private wifiPassword: string) {\n        this.subscribe(services.uartService, \"receiveText\", this.receiveTextBLE.bind(this));\n        this.subscribe(device, \"gattserverdisconnected\", this.handleBleDisconnect.bind(this));\n        this.connectToWebsocket({ ssid, password: wifiPassword });\n    }\n\n    private subscribe<T extends SubscriptionTarget>(target: T, event: Subscription<T>[\"event\"], listener: Subscription<T>[\"listener\"]) {\n        target.addEventListener(event, listener);\n        this.subscriptions.push({ target, event, listener });\n    }\n\n    private formCommand(...args: (string | number)[]) {\n        return `(${args.join(\",\")})`;\n    }\n\n    private parseCommand(text: string) {\n        const lines = text.split(\"(\").map((line) => line.replace(\")\", \"\")).splice(1);\n        return lines.map((line) => {\n            const [command, ...parameters] = line.split(\",\").map(s => s.trim()) as [ReceivedCommand, ...string[]];\n            return { command, parameters };\n        });\n    }\n\n    private sendBLECommand(command: Command, ...args: (string | number)[]) {\n        const { uartService } = this.services;\n        return uartService.sendText(this.formCommand(command, ...args));\n    }\n\n    private async sendWebsocketCommand(command: Command, ...args: (string | number)[]) {\n        await this.connectToWebsocket();\n        this.websocket.send(this.formCommand(command, ...args));\n    }\n\n    private updateSensor<T extends SensorKey>(type: T, value: SensorData[T]) {\n        this.onSensor.emit(type, value);\n        this.sensorData[type] = value;\n    }\n\n    private updateNetworkStatus(ipComponent: string, hostnameComponent: string) {\n        const ip = trimNewtworkStatusMessage(ipComponent, networkStatus.ipPrefix);\n        const hostname = trimNewtworkStatusMessage(hostnameComponent, networkStatus.hostnamePrefix);\n        if (ip === localIp) return this.onNetwork.emit(events.disconnect);\n        this.connection = { ip, hostname };\n        this.onNetwork.emit(events.connect, this.connection);\n    }\n\n    private receiveTextBLE(event: CustomEvent<string>) {\n        console.log({ event });\n        for (const { command, parameters } of this.parseCommand(event.detail)) {\n            if (command.startsWith(networkStatus.ipPrefix)) {\n                this.updateNetworkStatus(command, parameters[0]);\n                continue;\n            }\n            console.log({ command, parameters });\n            switch (command) {\n                case motorCommandReceived:\n                    this.onMotor.emit(events.stop);\n                    break;\n                case sensor.bumper: {\n                    const [front, back] = parameters.map((parameter) => Number.parseFloat(parameter));\n                    this.updateSensor(keyBySensor[command], { front, back });\n                    break;\n                }\n                case sensor.distance:\n                case sensor.battery:\n                case sensor.altimeter:\n                case sensor.humidity:\n                case sensor.temperature:\n                case sensor.pressure: {\n                    const value = Number.parseFloat(parameters[0]);\n                    this.updateSensor(keyBySensor[command], value);\n                    break;\n                }\n                case sensor.gyroscope:\n                case sensor.magnometer:\n                case sensor.accelerometer: {\n                    const [x, y, z] = parameters.map((parameter) => Number.parseFloat(parameter));\n                    this.updateSensor(keyBySensor[command], { x, y, z });\n                    break;\n                }\n                case sensor.light: {\n                    const [red, green, blue, alpha] = parameters.map((parameter) => Number.parseFloat(parameter));\n                    this.updateSensor(keyBySensor[command], { red, green, blue, alpha });\n                    break;\n                }\n                default:\n                    throw new Error(`Not implemented: ${command}`);\n            }\n        }\n    }\n\n    private onWebsocketMessage(event: MessageEvent) {\n    }\n\n    private invalidateWifiConnection() {\n        this.connection = undefined;\n        this.pending.wifi = undefined;\n        this.pending.websocket = undefined;\n        this.websocket?.close();\n        this.websocket = undefined;\n    }\n\n    private handleBleDisconnect() {\n        for (const callback of this.disconnectCallbacks) callback();\n        for (const { target, event, listener } of this.subscriptions) target.removeEventListener(event, listener);\n    }\n\n    onDisconnect(...callbacks: (() => void)[]) {\n        for (const callback of callbacks) this.disconnectCallbacks.add(callback);\n    }\n\n    /**\n     * \n     * @param type \n     * @returns \n     */\n    async enableSensor<T extends SensorKey>(type: T) {\n        if (this.sensorState[type]) return;\n        await this.sendBLECommand(command.enable, sensor[type]);\n        await new Promise((resolve) => this.onSensor.once(type, resolve));\n        this.sensorState[type] = true;\n    }\n\n    /**\n     * \n     */\n    async disableSensor<T extends SensorKey>(type: T) {\n        if (!this.sensorState[type]) return;\n        await this.sendBLECommand(command.disable, sensor[type]);\n        this.sensorState[type] = false;\n    }\n\n    /**\n     * \n     * @param type \n     * @returns \n     */\n    async getSensorReading<T extends SensorKey>(type: T): Promise<SensorData[T]> {\n        await this.enableSensor(type);\n        return this.sensorData[type];\n    }\n\n    /**\n     * @typedef {Object} MotorStepRequest\n     * @property {number} steps - The number of steps the motor should move.\n     * @property {number} stepsPerSecond - The speed of the motor in steps per second.\n     */\n\n    /**\n     * \n     * @param type \n     * @param left {MotorStepRequest}\n     * @param right \n     */\n    async motorCommand(type: \"steps\", left: MotorStepRequest, right: MotorStepRequest);\n    /**\n     * \n     * @param type \n     * @param radius \n     * @param degrees \n     */\n    async motorCommand(type: \"arc\", radius: number, degrees: number);\n    /**\n     * \n     * @param type \n     */\n    async motorCommand(type: \"stop\");\n    async motorCommand(type: MotorCommand, ...args: any[]) {\n\n        const { pending: { motor: pending } } = this;\n        switch (type) {\n            case \"steps\": {\n                if (pending) await pending;\n                const [left, right] = args as MotorStepRequest[];\n                return await this.untilFinishedPending(\"motor\", new Promise(async (resolve) => {\n                    await this.sendBLECommand(command.motor, left.steps, right.steps, left.stepsPerSecond, right.stepsPerSecond);\n                    this.onMotor.once(events.stop, resolve);\n                }));\n            }\n            case \"arc\": {\n                if (pending) await pending;\n                const [radius, degrees] = args as number[];\n                return await this.untilFinishedPending(\"motor\", new Promise(async (resolve) => {\n                    await this.sendBLECommand(command.motor, radius, degrees);\n                    this.onMotor.once(events.stop, resolve);\n                }));\n            }\n            case \"stop\":\n                return await this.untilFinishedPending(\"motor\", new Promise(async (resolve) => {\n                    await this.sendBLECommand(command.motor, \"s\");\n                    this.onMotor.once(events.stop, resolve);\n                }));\n        }\n    }\n\n    /**\n     * \n     */\n    async lowPowerMode() {\n        await this.sendBLECommand(command.lowPower);\n    }\n\n    /**\n     * \n     * @param ssid \n     * @param password \n     */\n    async connectToWifi(credentials?: NetworkCredentials) {\n        const { ssid, pending: { wifi: pending } } = this;\n        const invalidate = credentials && credentials.ssid !== ssid;\n        if (invalidate) {\n            this.invalidateWifiConnection();\n            this.ssid = credentials.ssid;\n            this.wifiPassword = credentials.password;\n        }\n        else if (pending) await pending;\n\n        if (this.connection) return;\n\n        await this.untilFinishedPending(\"wifi\", new Promise(async (resolve) => {\n            await this.sendBLECommand(command.wifi, this.ssid, this.wifiPassword);\n            this.onNetwork.once(events.connect, resolve)\n        }));\n    }\n\n    async untilFinishedPending(type: keyof Pending, promise: Promise<any>) {\n        this.pending[type] = promise;\n        await promise;\n        this.pending[type] = undefined;\n    }\n\n    /**\n     * \n     * @param credentials \n     */\n    async connectToWebsocket(credentials?: NetworkCredentials) {\n        await this.connectToWifi(credentials);\n        const { pending: { websocket: pending } } = this;\n        if (pending) await pending;\n        if (this.websocket) return;\n        this.websocket = new WebSocket(`ws://${this.connection.ip}:${port.websocket}`);\n        await this.untilFinishedPending(\"websocket\", new Promise<void>((resolve) => {\n            const resolveAndRemove = () => {\n                this.websocket.removeEventListener(\"open\", resolveAndRemove);\n                resolve();\n            }\n            this.websocket.addEventListener(\"open\", resolveAndRemove);\n            this.websocket.addEventListener(\"message\", this.onWebsocketMessage.bind(this));\n        }));\n    }\n\n    async display(type: DisplayKey) {\n        const value = display[type];\n        await this.sendWebsocketCommand(command.display, value);\n    }\n\n    getNetworkCredentials(): NetworkCredentials {\n        return { ssid: this.ssid, password: this.wifiPassword };\n    }\n}","<script lang=\"ts\">\n  import type Extension from \".\";\n  import { ReactiveInvoke, reactiveInvoke, color } from \"$common\";\n  import { onMount } from \"svelte\";\n  import Doodlebot from \"./Doodlebot\";\n\n  export let extension: Extension;\n\n  export let close: () => void;\n\n  const { bluetooth } = window.navigator;\n\n  const invoke: ReactiveInvoke<Extension> = (functionName, ...args) =>\n    reactiveInvoke((extension = extension), functionName, args);\n\n  let error: string;\n  let ssid: string;\n  let password: string;\n\n  const inputs = {\n    ssid: null as HTMLInputElement,\n    password: null as HTMLInputElement,\n  };\n\n  const createConnection = async () => {\n    try {\n      const doodlebot = await Doodlebot.tryCreate(ssid, password, bluetooth);\n      invoke(\"setDoodlebot\", doodlebot);\n      close();\n    } catch (err) {\n      invoke(\"setIndicator\", \"disconnected\");\n      console.error(err);\n      error =\n        err.message === \"Bluetooth adapter not available.\"\n          ? \"Your device does not support BLE connections.\"\n          : err.message == \"User cancelled the requestDevice() chooser.\"\n            ? \"You must select a device to connect to. Please try again.\"\n            : err.message !== \"User cancelled the requestDevice() chooser.\"\n              ? \"There was a problem connecting your device, please try again or request assistance.\"\n              : err.message;\n    }\n  };\n\n  const updateNetworkCredentials = () =>\n    extension.doodlebot.connectToWebsocket({ ssid, password });\n</script>\n\n<div\n  class=\"container\"\n  style:width=\"100%\"\n  style:background-color={color.ui.white}\n  style:color={color.text.primary}\n>\n  {#if error}\n    <div class=\"error\">\n      {error}\n    </div>\n  {/if}\n  {#if bluetooth}\n    {#if !extension.doodlebot}\n      <h1>How to connect to doodlebot</h1>\n      <div>\n        <h3>1. Set network credentials:</h3>\n        <p>\n          SSID (Network Name):\n          <input\n            bind:this={inputs.ssid}\n            bind:value={ssid}\n            type=\"text\"\n            placeholder=\"e.g. my_wifi\"\n          />\n        </p>\n        <p>\n          Password:\n          <input\n            bind:this={inputs.password}\n            bind:value={password}\n            type=\"text\"\n            placeholder=\"e.g. 12345\"\n          />\n        </p>\n      </div>\n      <div>\n        <h3>2. Select bluetooth device</h3>\n\n        <button disabled={!password || !ssid} on:click={createConnection}>\n          Open Bluetooth Menu\n        </button>\n      </div>\n    {:else}\n      {@const credentials = extension.doodlebot.getNetworkCredentials()}\n      <h1>Connected to doodlebot</h1>\n      <div>\n        <h3>Update network credentials:</h3>\n        SSID (Network Name):\n        <input bind:this={inputs.ssid} type=\"text\" value={credentials.ssid} />\n        Password:\n        <input\n          bind:this={inputs.password}\n          type=\"text\"\n          value={credentials.password}\n        />\n        <button\n          disabled={credentials.ssid === ssid &&\n            credentials.password === password}\n          on:click={updateNetworkCredentials}\n        >\n          Update</button\n        >\n      </div>\n      <div>\n        <button>Disconnect</button>\n      </div>\n    {/if}\n  {:else}\n    Uh oh! Your browser does not support bluetooth. Here's how to fix that...\n    TBD\n  {/if}\n</div>\n\n<style>\n  .container {\n    text-align: center;\n    padding: 30px;\n  }\n\n  .error {\n    background-color: red;\n    color: white;\n    padding: 4px 8px;\n    text-align: center;\n    border-radius: 5px;\n  }\n</style>\n","import { Environment, ExtensionMenuDisplayDetails, extension, block, buttonBlock } from \"$common\";\nimport { DisplayKey, displayKeys } from \"./enums\";\nimport Doodlebot from \"./Doodlebot\";\n\nconst details: ExtensionMenuDisplayDetails = {\n  name: \"Doodlebot\",\n  description: \"Program a doodlebot robot\",\n  iconURL: \"Replace with the name of your icon image file (which should be placed in the same directory as this file)\",\n  insetIconURL: \"Replace with the name of your inset icon image file (which should be placed in the same directory as this file)\",\n  tags: [\"Made by PRG\"]\n};\n\nexport default class DoodlebotBlocks extends extension(details, \"ui\", \"indicators\") {\n  doodlebot: Doodlebot;\n  private indicator: Promise<{ close(): void; }>\n\n  init(env: Environment) {\n    this.openUI(\"Connect\");\n    this.setIndicator(\"disconnected\");\n  }\n\n  setDoodlebot(doodlebot: Doodlebot) {\n    this.doodlebot = doodlebot;\n    this.setIndicator(\"connected\");\n  }\n\n  async setIndicator(status: \"connected\" | \"disconnected\") {\n    if (this.indicator) (await this.indicator)?.close();\n    this.indicator = status == \"connected\"\n      ? this.indicate({ position: \"category\", msg: \"Connected to robot\", type: \"success\", retry: true })\n      : this.indicate({ position: \"category\", msg: \"Not connected to robot\", type: \"warning\", retry: true });\n  }\n\n  // #region Block Methods\n\n  @buttonBlock(\"Connect Robot\")\n  connect() {\n    this.openUI(\"Connect\");\n  }\n\n  // #region Websocket-based commands\n\n  @block({\n    type: \"command\",\n    text: \"clear display\"\n  })\n  async clearDisplay() {\n    await this.doodlebot?.display(\"clear\");\n  }\n\n  @block({\n    type: \"command\",\n    text: (type: DisplayKey) => `display ${type}`,\n    arg: { type: \"string\", options: displayKeys.filter(key => key !== \"clear\"), defaultValue: \"happy\" }\n  })\n  async setDisplay(display: DisplayKey) {\n    await this.doodlebot?.display(display);\n  }\n\n  // #endregion\n\n  // #region BLE-based commands\n\n  @block({\n    type: \"command\",\n    text: (direction, steps) => `drive ${direction} for ${steps} steps`,\n    args: [\n      { type: \"string\", options: [\"forward\", \"backward\", \"left\", \"right\"], defaultValue: \"forward\" },\n      { type: \"number\", defaultValue: 2000 }\n    ]\n  })\n  async drive(direction: \"left\" | \"right\" | \"forward\" | \"backward\", steps: number) {\n    const leftSteps = direction == \"left\" || direction == \"backward\" ? -steps : steps;\n    const rightSteps = direction == \"right\" || direction == \"backward\" ? -steps : steps;\n    const stepsPerSecond = 100;\n\n    await this.doodlebot?.motorCommand(\n      \"steps\",\n      { steps: leftSteps, stepsPerSecond },\n      { steps: rightSteps, stepsPerSecond }\n    );\n  }\n\n  // #endregion\n\n  // #endregion\n\n}"],"names":["doodlebot","exports","$common","noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","document","root","getRootNode","ownerDocument","host","get_root_for_style","getElementById","style","element","id","textContent","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","name","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","set_style","key","important","removeProperty","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","e","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","destroy_component","detaching","filtered","targets","c","indexOf","flush_render_callbacks","on_destroy","d","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_mount","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","SvelteComponent","undefined","$$set","$destroy","this","$on","type","index","splice","$set","obj","keys","__esDecorate","ctor","descriptorIn","decorators","contextIn","initializers","extraInitializers","accept","f","TypeError","_","kind","prototype","descriptor","getOwnPropertyDescriptor","done","access","addInitializer","result","get","set","unshift","defineProperty","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","apply","window","__svelte","v","SuppressedError","domain","EventDispatcher","EventEmitter","isEventListenerObject","listener","handleEvent","super","addListener","removeListener","dispatchEvent","eventOrType","detail","CustomEvent","emit","PromiseQueue","constructor","concurrent","queue","running","pump","promise","shift","error","ServiceHelper","service","emitter","getCharacteristic","uuid","_a","characteristics","getCharacteristics","find","characteristic","getCharacteristicValue","Error","readValue","setCharacteristicValue","writeValueWithoutResponse","handleListener","startNotifications","on","emitterEvent","listenerCount","UartService","bluetoothService","helper","tx_uuid","receiveHandler","bind","receiveTextHandler","send","rx_uuid","sendText","console","log","arrayData","split","charCodeAt","Uint8Array","buffer","view","numberArray","slice","String","fromCharCode","command","sensor","battery","bumper","humidity","pressure","distance","altimeter","magnometer","temperature","accelerometer","gyroscope","light","display","sad","happy","child","displayKeys","keyBySensor","fromEntries","entries","networkStatus","port","trimNewtworkStatusMessage","message","prefix","replace","trim","events","Doodlebot","tryCreateService","services","serviceClass","found","requestRobot","bluetooth","filters","requestDevice","getServices","device","gatt","connected","connect","getPrimaryServices","uartService","tryCreate","ssid","password","ble","robot","wifiPassword","pending","motor","wifi","websocket","onMotor","onSensor","onNetwork","disconnectCallbacks","subscriptions","sensorData","front","back","x","y","z","red","green","blue","alpha","sensorState","subscribe","receiveTextBLE","handleBleDisconnect","connectToWebsocket","formCommand","args","join","parseCommand","line","parameters","s","sendBLECommand","sendWebsocketCommand","updateSensor","updateNetworkStatus","ipComponent","hostnameComponent","ip","hostname","connection","startsWith","parameter","Number","parseFloat","onWebsocketMessage","invalidateWifiConnection","close","onDisconnect","enableSensor","once","disableSensor","getSensorReading","motorCommand","left","right","untilFinishedPending","steps","stepsPerSecond","radius","degrees","lowPowerMode","connectToWifi","credentials","WebSocket","resolveAndRemove","getNetworkCredentials","div","create_if_block_1","child_ctx","input0","input0_value_value","input1","input1_value_value","h1","div0","h3","button0","div1","button","disabled","button_disabled_value","h30","p0","p1","h31","create_if_block_2","create_if_block","color","ui","white","primary","inputs","$$value","details","description","iconURL","insetIconURL","tags","_classSuper","extension","useValue","arguments","call","__runInitializers","_instanceExtraInitializers","env","openUI","setIndicator","setDoodlebot","status","indicator","_b","indicate","position","msg","retry","clearDisplay","setDisplay","drive","direction","leftSteps","rightSteps","buttonBlock","_clearDisplay_decorators","_setDisplay_decorators","arg","defaultValue","_drive_decorators","_connect_decorators","static","private","metadata","_metadata"],"mappings":"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"}