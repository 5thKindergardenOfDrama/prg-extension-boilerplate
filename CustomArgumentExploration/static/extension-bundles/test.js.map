{"version":3,"file":"test.js","sources":["../../../../extensions/src/test/index.ts"],"sourcesContent":["import { Extension, Environment, BlockType, ArgumentType, VerboseArgument } from \"$common\";\n\ntype Details = {\n  name: \"ee\",\n  description: \"Ahoy\",\n  iconURL: \"\",\n  insetIconURL: \"\"\n};\n\nexport default class _ extends Extension<Details, {\n  test: (x: { t: string }) => { t: string },\n  extract: ({ t }: { t: string }) => string,\n}> {\n  init(env): void { }\n\n  defineBlocks(): _[\"BlockDefinitions\"] {\n    return {\n      test: {\n        text: (arg) => `Hi ${arg}`,\n        operation: (arg) => arg,\n        type: BlockType.Reporter,\n        arg: this.makeCustomArgument({\n          component: \"Dummy\",\n          initial: { text: \"hi\", value: { t: \"e\" } }\n        })\n      },\n      extract: {\n        text: (arg) => `Return ${arg}`,\n        operation: ({ t }) => {\n          console.log(t);\n          return t;\n        },\n        type: BlockType.Reporter,\n        arg: this.makeCustomArgument({\n          component: \"Dummy\",\n          initial: { text: \"hi\", value: { t: \"e\" } },\n          acceptReportersHandler: (x) => x\n        }),\n      }\n    }\n  }\n}"],"names":["_","Extension","internal_getCodeGenArgs","id","name","blockIconURI","init","env","defineBlocks","test","text","arg","operation","type","BlockType","Reporter","this","makeCustomArgument","component","initial","value","t","extract","console","log","acceptReportersHandler","x"],"mappings":"oCASA,MAAAA,UAAAC,EAAAA,UAIAC,0BAAA,MAAA,CAAAC,GAAA,OAAAC,KAAA,KAAAC,aAAA,ytCAAA,CAEAC,KAAAC,GAAA,CAEAC,eACA,MAAA,CACAC,KAAA,CACAC,KAAAC,GAAA,MAAAA,IACAC,UAAAD,GAAAA,EACAE,KAAAC,EAAAA,UAAAC,SACAJ,IAAAK,KAAAC,mBAAA,CACAC,UAAA,QACAC,QAAA,CAAAT,KAAA,KAAAU,MAAA,CAAAC,EAAA,SAGAC,QAAA,CACAZ,KAAAC,GAAA,UAAAA,IACAC,UAAA,EAAAS,QACAE,QAAAC,IAAAH,GACAA,GAEAR,KAAAC,EAAAA,UAAAC,SACAJ,IAAAK,KAAAC,mBAAA,CACAC,UAAA,QACAC,QAAA,CAAAT,KAAA,KAAAU,MAAA,CAAAC,EAAA,MACAI,uBAAAC,GAAAA"}